49a5fcb83addbdc3f1b240714a9b70fb
/* istanbul ignore next */
function cov_17xu18ao9e() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/app/api/feed/route.ts";
  var hash = "554795fca6f5ad0bf329bf934c10b2f58452d4c4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/app/api/feed/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 179,
          column: 3
        }
      },
      "1": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "2": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "3": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 76
        }
      },
      "4": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 17,
          column: 62
        }
      },
      "5": {
        start: {
          line: 18,
          column: 17
        },
        end: {
          line: 18,
          column: 60
        }
      },
      "6": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 68
        }
      },
      "7": {
        start: {
          line: 20,
          column: 19
        },
        end: {
          line: 20,
          column: 62
        }
      },
      "8": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 49
        }
      },
      "9": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 43
        }
      },
      "10": {
        start: {
          line: 25,
          column: 23
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "11": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "12": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 24
        }
      },
      "13": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "14": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 35,
          column: 32
        }
      },
      "15": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "16": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 39,
          column: 28
        }
      },
      "17": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "18": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 32
        }
      },
      "19": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "20": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 56,
          column: 8
        }
      },
      "21": {
        start: {
          line: 60,
          column: 22
        },
        end: {
          line: 98,
          column: 6
        }
      },
      "22": {
        start: {
          line: 101,
          column: 29
        },
        end: {
          line: 147,
          column: 7
        }
      },
      "23": {
        start: {
          line: 101,
          column: 54
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "24": {
        start: {
          line: 117,
          column: 25
        },
        end: {
          line: 117,
          column: 46
        }
      },
      "25": {
        start: {
          line: 118,
          column: 22
        },
        end: {
          line: 118,
          column: 32
        }
      },
      "26": {
        start: {
          line: 120,
          column: 25
        },
        end: {
          line: 120,
          column: 48
        }
      },
      "27": {
        start: {
          line: 121,
          column: 22
        },
        end: {
          line: 121,
          column: 32
        }
      },
      "28": {
        start: {
          line: 150,
          column: 23
        },
        end: {
          line: 152,
          column: 6
        }
      },
      "29": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 167,
          column: 7
        }
      },
      "30": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 169,
          column: 55
        }
      },
      "31": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 178,
          column: 6
        }
      },
      "32": {
        start: {
          line: 184,
          column: 2
        },
        end: {
          line: 233,
          column: 3
        }
      },
      "33": {
        start: {
          line: 185,
          column: 17
        },
        end: {
          line: 185,
          column: 37
        }
      },
      "34": {
        start: {
          line: 187,
          column: 69
        },
        end: {
          line: 187,
          column: 73
        }
      },
      "35": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 194,
          column: 5
        }
      },
      "36": {
        start: {
          line: 190,
          column: 6
        },
        end: {
          line: 193,
          column: 8
        }
      },
      "37": {
        start: {
          line: 197,
          column: 21
        },
        end: {
          line: 216,
          column: 6
        }
      },
      "38": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 222,
          column: 7
        }
      },
      "39": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 224,
          column: 56
        }
      },
      "40": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 232,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "GET",
        decl: {
          start: {
            line: 10,
            column: 22
          },
          end: {
            line: 10,
            column: 25
          }
        },
        loc: {
          start: {
            line: 10,
            column: 48
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 101,
            column: 43
          },
          end: {
            line: 101,
            column: 44
          }
        },
        loc: {
          start: {
            line: 101,
            column: 54
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 101
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 117,
            column: 18
          },
          end: {
            line: 117,
            column: 19
          }
        },
        loc: {
          start: {
            line: 117,
            column: 25
          },
          end: {
            line: 117,
            column: 46
          }
        },
        line: 117
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 118,
            column: 15
          },
          end: {
            line: 118,
            column: 16
          }
        },
        loc: {
          start: {
            line: 118,
            column: 22
          },
          end: {
            line: 118,
            column: 32
          }
        },
        line: 118
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 120,
            column: 18
          },
          end: {
            line: 120,
            column: 19
          }
        },
        loc: {
          start: {
            line: 120,
            column: 25
          },
          end: {
            line: 120,
            column: 48
          }
        },
        line: 120
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 121,
            column: 15
          },
          end: {
            line: 121,
            column: 16
          }
        },
        loc: {
          start: {
            line: 121,
            column: 22
          },
          end: {
            line: 121,
            column: 32
          }
        },
        line: 121
      },
      "6": {
        name: "POST",
        decl: {
          start: {
            line: 183,
            column: 22
          },
          end: {
            line: 183,
            column: 26
          }
        },
        loc: {
          start: {
            line: 183,
            column: 49
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 183
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 36
          },
          end: {
            line: 16,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 36
          },
          end: {
            line: 16,
            column: 61
          }
        }, {
          start: {
            line: 16,
            column: 65
          },
          end: {
            line: 16,
            column: 69
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 28
          },
          end: {
            line: 17,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 28
          },
          end: {
            line: 17,
            column: 54
          }
        }, {
          start: {
            line: 17,
            column: 58
          },
          end: {
            line: 17,
            column: 61
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "6": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "7": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 132,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        }, {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 132,
            column: 21
          }
        }],
        line: 125
      },
      "8": {
        loc: {
          start: {
            line: 175,
            column: 17
          },
          end: {
            line: 175,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 175,
            column: 42
          },
          end: {
            line: 175,
            column: 55
          }
        }, {
          start: {
            line: 175,
            column: 58
          },
          end: {
            line: 175,
            column: 73
          }
        }],
        line: 175
      },
      "9": {
        loc: {
          start: {
            line: 187,
            column: 31
          },
          end: {
            line: 187,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 187,
            column: 38
          },
          end: {
            line: 187,
            column: 43
          }
        }],
        line: 187
      },
      "10": {
        loc: {
          start: {
            line: 187,
            column: 45
          },
          end: {
            line: 187,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 187,
            column: 56
          },
          end: {
            line: 187,
            column: 64
          }
        }],
        line: 187
      },
      "11": {
        loc: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "12": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 189,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 189,
            column: 16
          }
        }, {
          start: {
            line: 189,
            column: 20
          },
          end: {
            line: 189,
            column: 29
          }
        }],
        line: 189
      },
      "13": {
        loc: {
          start: {
            line: 229,
            column: 17
          },
          end: {
            line: 229,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 229,
            column: 42
          },
          end: {
            line: 229,
            column: 55
          }
        }, {
          start: {
            line: 229,
            column: 58
          },
          end: {
            line: 229,
            column: 73
          }
        }],
        line: 229
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "554795fca6f5ad0bf329bf934c10b2f58452d4c4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_17xu18ao9e = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_17xu18ao9e();
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * API Route: Live Transfer Feed
 * Serves real-time transfer feed data from database
 */

import { NextResponse } from "next/server";
import { prisma } from "@/lib/prisma";
export
/* istanbul ignore next */
function GET(_x) {
  return _GET.apply(this, arguments);
}

// POST endpoint for manually adding feed items (admin use)
/* istanbul ignore next */
function _GET() {
  _GET = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(request)
  /* istanbul ignore next */
  {
    var url, searchParams, limit, offset, type, priority, league, sourceId, tags, where, feedItems, transformedItems, totalCount, _t;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_17xu18ao9e().f[0]++;
          cov_17xu18ao9e().s[0]++;
          _context.p = 1;
          url = (cov_17xu18ao9e().s[1]++, new URL(request.url));
          searchParams = (cov_17xu18ao9e().s[2]++, url.searchParams); // Parse query parameters
          limit = (cov_17xu18ao9e().s[3]++, Math.min(parseInt(
          /* istanbul ignore next */
          (cov_17xu18ao9e().b[0][0]++, searchParams.get("limit")) ||
          /* istanbul ignore next */
          (cov_17xu18ao9e().b[0][1]++, "50")), 100));
          offset = (cov_17xu18ao9e().s[4]++, parseInt(
          /* istanbul ignore next */
          (cov_17xu18ao9e().b[1][0]++, searchParams.get("offset")) ||
          /* istanbul ignore next */
          (cov_17xu18ao9e().b[1][1]++, "0")));
          type = (cov_17xu18ao9e().s[5]++, searchParams.get("type"));
          priority = (cov_17xu18ao9e().s[6]++, searchParams.get("priority"));
          league = (cov_17xu18ao9e().s[7]++, searchParams.get("league"));
          sourceId = (cov_17xu18ao9e().s[8]++, searchParams.get("sourceId"));
          tags = (cov_17xu18ao9e().s[9]++, searchParams.getAll("tag")); // Multiple tags support
          // Build where clause
          where = (cov_17xu18ao9e().s[10]++, {
            isPublished: true,
            isArchived: false
          });
          cov_17xu18ao9e().s[11]++;
          if (type) {
            /* istanbul ignore next */
            cov_17xu18ao9e().b[2][0]++;
            cov_17xu18ao9e().s[12]++;
            where.type = type;
          } else
          /* istanbul ignore next */
          {
            cov_17xu18ao9e().b[2][1]++;
          }
          cov_17xu18ao9e().s[13]++;
          if (priority) {
            /* istanbul ignore next */
            cov_17xu18ao9e().b[3][0]++;
            cov_17xu18ao9e().s[14]++;
            where.priority = priority;
          } else
          /* istanbul ignore next */
          {
            cov_17xu18ao9e().b[3][1]++;
          }
          cov_17xu18ao9e().s[15]++;
          if (league) {
            /* istanbul ignore next */
            cov_17xu18ao9e().b[4][0]++;
            cov_17xu18ao9e().s[16]++;
            where.league = league;
          } else
          /* istanbul ignore next */
          {
            cov_17xu18ao9e().b[4][1]++;
          }
          cov_17xu18ao9e().s[17]++;
          if (sourceId) {
            /* istanbul ignore next */
            cov_17xu18ao9e().b[5][0]++;
            cov_17xu18ao9e().s[18]++;
            where.sourceId = sourceId;
          } else
          /* istanbul ignore next */
          {
            cov_17xu18ao9e().b[5][1]++;
          }

          // Tag filtering
          cov_17xu18ao9e().s[19]++;
          if (tags.length > 0) {
            /* istanbul ignore next */
            cov_17xu18ao9e().b[6][0]++;
            cov_17xu18ao9e().s[20]++;
            where.tags = {
              some: {
                tag: {
                  name: {
                    /* istanbul ignore next */
                    "in": tags
                  }
                }
              }
            };
          } else
          /* istanbul ignore next */
          {
            cov_17xu18ao9e().b[6][1]++;
          }

          // Fetch feed items with relations
          cov_17xu18ao9e().s[21]++;
          _context.n = 2;
          return prisma.feedItem.findMany({
            where: where,
            include: {
              source: {
                select: {
                  id: true,
                  name: true,
                  username: true,
                  tier: true,
                  reliability: true,
                  region: true,
                  isVerified: true
                }
              },
              tags: {
                include: {
                  tag: {
                    select: {
                      id: true,
                      name: true,
                      type: true
                    }
                  }
                }
              },
              media: {
                select: {
                  id: true,
                  type: true,
                  url: true,
                  thumbnailUrl: true,
                  altText: true
                }
              }
            },
            orderBy: [{
              priority: "desc"
            }, {
              publishedAt: "desc"
            }],
            take: limit,
            skip: offset
          });
        case 2:
          feedItems = _context.v;
          // Transform data to match frontend interface
          transformedItems = (cov_17xu18ao9e().s[22]++, feedItems.map(function (item) {
            /* istanbul ignore next */
            var _item$transferType;
            cov_17xu18ao9e().f[1]++;
            cov_17xu18ao9e().s[23]++;
            return {
              id: item.id,
              type: item.type.toLowerCase(),
              timestamp: item.publishedAt,
              content: item.content,
              terryCommentary: item.terryCommentary,
              source: {
                name: item.source.name,
                handle:
                /* istanbul ignore next */
                "@".concat(item.source.username),
                tier: item.source.tier,
                reliability: item.source.reliability,
                region: item.source.region,
                isVerified: item.source.isVerified
              },
              tags: {
                clubs: item.tags.filter(function (t) {
                  /* istanbul ignore next */
                  cov_17xu18ao9e().f[2]++;
                  cov_17xu18ao9e().s[24]++;
                  return t.tag.type === "CLUB";
                }).map(function (t) {
                  /* istanbul ignore next */
                  cov_17xu18ao9e().f[3]++;
                  cov_17xu18ao9e().s[25]++;
                  return t.tag.name;
                }),
                players: item.tags.filter(function (t) {
                  /* istanbul ignore next */
                  cov_17xu18ao9e().f[4]++;
                  cov_17xu18ao9e().s[26]++;
                  return t.tag.type === "PLAYER";
                }).map(function (t) {
                  /* istanbul ignore next */
                  cov_17xu18ao9e().f[5]++;
                  cov_17xu18ao9e().s[27]++;
                  return t.tag.name;
                }),
                sources: [item.source.name]
              },
              media: item.media.length > 0 ?
              /* istanbul ignore next */
              (cov_17xu18ao9e().b[7][0]++, {
                type: item.media[0].type.toLowerCase(),
                url: item.media[0].url,
                altText: item.media[0].altText,
                thumbnailUrl: item.media[0].thumbnailUrl
              }) :
              /* istanbul ignore next */
              (cov_17xu18ao9e().b[7][1]++, undefined),
              engagement: {
                shares: item.originalShares + item.ourShares,
                reactions: item.originalLikes + item.ourReactions,
                clicks: item.ourClicks
              },
              metadata: {
                transferType:
                /* istanbul ignore next */
                (_item$transferType = item.transferType) === null || _item$transferType === void 0 ? void 0 :
                /* istanbul ignore next */
                _item$transferType.toLowerCase(),
                priority: item.priority.toLowerCase(),
                relevanceScore: item.relevanceScore,
                league: item.league,
                originalUrl: item.originalUrl
              },
              isRead: false,
              // Default for API responses
              isNew: false // Default for API responses
            };
          })); // Get total count for pagination
          cov_17xu18ao9e().s[28]++;
          _context.n = 3;
          return prisma.feedItem.count({
            where: where
          });
        case 3:
          totalCount = _context.v;
          cov_17xu18ao9e().s[29]++;
          return _context.a(2, NextResponse.json({
            success: true,
            data: transformedItems,
            pagination: {
              total: totalCount,
              limit: limit,
              offset: offset,
              hasMore: offset + limit < totalCount
            },
            meta: {
              fetchedAt: new Date().toISOString(),
              count: transformedItems.length
            }
          }));
        case 4:
          _context.p = 4;
          _t = _context.v;
          cov_17xu18ao9e().s[30]++;
          console.error("Failed to fetch feed data:",
          /* istanbul ignore next */
          _t);
          cov_17xu18ao9e().s[31]++;
          return _context.a(2, NextResponse.json({
            success: false,
            error: "Failed to fetch feed data",
            details:
            /* istanbul ignore next */
            _t instanceof Error ?
            /* istanbul ignore next */
            (cov_17xu18ao9e().b[8][0]++,
            /* istanbul ignore next */
            _t.message) :
            /* istanbul ignore next */
            (cov_17xu18ao9e().b[8][1]++, "Unknown error")
          }, {
            status: 500
          }));
      }
    }, _callee, null, [[1, 4]]);
  }));
  return _GET.apply(this, arguments);
}
export
/* istanbul ignore next */
function POST(_x2) {
  return _POST.apply(this, arguments);
}
/* istanbul ignore next */
function _POST() {
  _POST = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2(request)
  /* istanbul ignore next */
  {
    var body, _ref, content, sourceId, _ref$type, type, _ref$priority, priority, feedItem, _t2;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_17xu18ao9e().f[6]++;
          cov_17xu18ao9e().s[32]++;
          _context2.p = 1;
          cov_17xu18ao9e().s[33]++;
          _context2.n = 2;
          return request.json();
        case 2:
          body = _context2.v;
          _ref = (cov_17xu18ao9e().s[34]++, body), content = _ref.content, sourceId = _ref.sourceId, _ref$type = _ref.type, type = _ref$type === void 0 ? (cov_17xu18ao9e().b[9][0]++, "ITK") : _ref$type, _ref$priority = _ref.priority, priority = _ref$priority === void 0 ? (cov_17xu18ao9e().b[10][0]++, "MEDIUM") : _ref$priority;
          cov_17xu18ao9e().s[35]++;
          if (!(
          /* istanbul ignore next */
          (cov_17xu18ao9e().b[12][0]++, !content) ||
          /* istanbul ignore next */
          (cov_17xu18ao9e().b[12][1]++, !sourceId))) {
            _context2.n = 3;
            break;
          }
          cov_17xu18ao9e().b[11][0]++;
          cov_17xu18ao9e().s[36]++;
          return _context2.a(2, NextResponse.json({
            error: "Content and sourceId are required"
          }, {
            status: 400
          }));
        case 3:
          cov_17xu18ao9e().b[11][1]++;
        case 4:
          cov_17xu18ao9e().s[37]++;
          _context2.n = 5;
          return prisma.feedItem.create({
            data: {
              type: type,
              content: content,
              sourceId: sourceId,
              priority: priority,
              publishedAt: new Date(),
              isProcessed: true,
              isPublished: true,
              relevanceScore: 0.8 // Default for manual entries
            },
            include: {
              source: true,
              tags: {
                include: {
                  tag: true
                }
              }
            }
          });
        case 5:
          feedItem = _context2.v;
          cov_17xu18ao9e().s[38]++;
          return _context2.a(2, NextResponse.json({
            success: true,
            data: feedItem,
            message: "Feed item created successfully"
          }));
        case 6:
          _context2.p = 6;
          _t2 = _context2.v;
          cov_17xu18ao9e().s[39]++;
          console.error("Failed to create feed item:",
          /* istanbul ignore next */
          _t2);
          cov_17xu18ao9e().s[40]++;
          return _context2.a(2, NextResponse.json({
            error: "Failed to create feed item",
            details:
            /* istanbul ignore next */
            _t2 instanceof Error ?
            /* istanbul ignore next */
            (cov_17xu18ao9e().b[13][0]++,
            /* istanbul ignore next */
            _t2.message) :
            /* istanbul ignore next */
            (cov_17xu18ao9e().b[13][1]++, "Unknown error")
          }, {
            status: 500
          }));
      }
    }, _callee2, null, [[1, 6]]);
  }));
  return _POST.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTd4dTE4YW85ZSIsImFjdHVhbENvdmVyYWdlIiwiX3JlZ2VuZXJhdG9yIiwiZSIsInQiLCJyIiwiU3ltYm9sIiwibiIsIml0ZXJhdG9yIiwibyIsInRvU3RyaW5nVGFnIiwiaSIsImMiLCJwcm90b3R5cGUiLCJHZW5lcmF0b3IiLCJ1IiwiT2JqZWN0IiwiY3JlYXRlIiwiX3JlZ2VuZXJhdG9yRGVmaW5lMiIsImYiLCJwIiwieSIsIkciLCJ2IiwiYSIsImQiLCJiaW5kIiwibGVuZ3RoIiwibCIsIlR5cGVFcnJvciIsImNhbGwiLCJkb25lIiwidmFsdWUiLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwiZ2V0UHJvdG90eXBlT2YiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsImRpc3BsYXlOYW1lIiwidyIsIm0iLCJkZWZpbmVQcm9wZXJ0eSIsIl9yZWdlbmVyYXRvckRlZmluZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIl9pbnZva2UiLCJhc3luY0dlbmVyYXRvclN0ZXAiLCJQcm9taXNlIiwicmVzb2x2ZSIsInRoZW4iLCJfYXN5bmNUb0dlbmVyYXRvciIsImFyZ3VtZW50cyIsImFwcGx5IiwiX25leHQiLCJfdGhyb3ciLCJOZXh0UmVzcG9uc2UiLCJwcmlzbWEiLCJHRVQiLCJfeCIsIl9HRVQiLCJfY2FsbGVlIiwicmVxdWVzdCIsInVybCIsInNlYXJjaFBhcmFtcyIsImxpbWl0Iiwib2Zmc2V0IiwidHlwZSIsInByaW9yaXR5IiwibGVhZ3VlIiwic291cmNlSWQiLCJ0YWdzIiwid2hlcmUiLCJmZWVkSXRlbXMiLCJ0cmFuc2Zvcm1lZEl0ZW1zIiwidG90YWxDb3VudCIsIl90IiwiX2NvbnRleHQiLCJzIiwiVVJMIiwiTWF0aCIsIm1pbiIsInBhcnNlSW50IiwiYiIsImdldCIsImdldEFsbCIsImlzUHVibGlzaGVkIiwiaXNBcmNoaXZlZCIsInNvbWUiLCJ0YWciLCJuYW1lIiwiZmVlZEl0ZW0iLCJmaW5kTWFueSIsImluY2x1ZGUiLCJzb3VyY2UiLCJzZWxlY3QiLCJpZCIsInVzZXJuYW1lIiwidGllciIsInJlbGlhYmlsaXR5IiwicmVnaW9uIiwiaXNWZXJpZmllZCIsIm1lZGlhIiwidGh1bWJuYWlsVXJsIiwiYWx0VGV4dCIsIm9yZGVyQnkiLCJwdWJsaXNoZWRBdCIsInRha2UiLCJza2lwIiwibWFwIiwiaXRlbSIsIl9pdGVtJHRyYW5zZmVyVHlwZSIsInRvTG93ZXJDYXNlIiwidGltZXN0YW1wIiwiY29udGVudCIsInRlcnJ5Q29tbWVudGFyeSIsImhhbmRsZSIsImNvbmNhdCIsImNsdWJzIiwiZmlsdGVyIiwicGxheWVycyIsInNvdXJjZXMiLCJ1bmRlZmluZWQiLCJlbmdhZ2VtZW50Iiwic2hhcmVzIiwib3JpZ2luYWxTaGFyZXMiLCJvdXJTaGFyZXMiLCJyZWFjdGlvbnMiLCJvcmlnaW5hbExpa2VzIiwib3VyUmVhY3Rpb25zIiwiY2xpY2tzIiwib3VyQ2xpY2tzIiwibWV0YWRhdGEiLCJ0cmFuc2ZlclR5cGUiLCJyZWxldmFuY2VTY29yZSIsIm9yaWdpbmFsVXJsIiwiaXNSZWFkIiwiaXNOZXciLCJjb3VudCIsImpzb24iLCJzdWNjZXNzIiwiZGF0YSIsInBhZ2luYXRpb24iLCJ0b3RhbCIsImhhc01vcmUiLCJtZXRhIiwiZmV0Y2hlZEF0IiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwiY29uc29sZSIsImVycm9yIiwiZGV0YWlscyIsIkVycm9yIiwibWVzc2FnZSIsInN0YXR1cyIsIlBPU1QiLCJfeDIiLCJfUE9TVCIsIl9jYWxsZWUyIiwiYm9keSIsIl9yZWYiLCJfcmVmJHR5cGUiLCJfcmVmJHByaW9yaXR5IiwiX3QyIiwiX2NvbnRleHQyIiwiaXNQcm9jZXNzZWQiXSwic291cmNlcyI6WyJyb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFQSSBSb3V0ZTogTGl2ZSBUcmFuc2ZlciBGZWVkXG4gKiBTZXJ2ZXMgcmVhbC10aW1lIHRyYW5zZmVyIGZlZWQgZGF0YSBmcm9tIGRhdGFiYXNlXG4gKi9cblxuaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSBcIkAvbGliL3ByaXNtYVwiO1xuaW1wb3J0IHsgRmVlZFR5cGUsIFByaW9yaXR5LCBMZWFndWUgfSBmcm9tIFwiQHByaXNtYS9jbGllbnRcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIGNvbnN0IHVybCA9IG5ldyBVUkwocmVxdWVzdC51cmwpO1xuICAgIGNvbnN0IHNlYXJjaFBhcmFtcyA9IHVybC5zZWFyY2hQYXJhbXM7XG5cbiAgICAvLyBQYXJzZSBxdWVyeSBwYXJhbWV0ZXJzXG4gICAgY29uc3QgbGltaXQgPSBNYXRoLm1pbihwYXJzZUludChzZWFyY2hQYXJhbXMuZ2V0KFwibGltaXRcIikgfHwgXCI1MFwiKSwgMTAwKTtcbiAgICBjb25zdCBvZmZzZXQgPSBwYXJzZUludChzZWFyY2hQYXJhbXMuZ2V0KFwib2Zmc2V0XCIpIHx8IFwiMFwiKTtcbiAgICBjb25zdCB0eXBlID0gc2VhcmNoUGFyYW1zLmdldChcInR5cGVcIikgYXMgRmVlZFR5cGUgfCBudWxsO1xuICAgIGNvbnN0IHByaW9yaXR5ID0gc2VhcmNoUGFyYW1zLmdldChcInByaW9yaXR5XCIpIGFzIFByaW9yaXR5IHwgbnVsbDtcbiAgICBjb25zdCBsZWFndWUgPSBzZWFyY2hQYXJhbXMuZ2V0KFwibGVhZ3VlXCIpIGFzIExlYWd1ZSB8IG51bGw7XG4gICAgY29uc3Qgc291cmNlSWQgPSBzZWFyY2hQYXJhbXMuZ2V0KFwic291cmNlSWRcIik7XG4gICAgY29uc3QgdGFncyA9IHNlYXJjaFBhcmFtcy5nZXRBbGwoXCJ0YWdcIik7IC8vIE11bHRpcGxlIHRhZ3Mgc3VwcG9ydFxuXG4gICAgLy8gQnVpbGQgd2hlcmUgY2xhdXNlXG4gICAgY29uc3Qgd2hlcmU6IGFueSA9IHtcbiAgICAgIGlzUHVibGlzaGVkOiB0cnVlLFxuICAgICAgaXNBcmNoaXZlZDogZmFsc2UsXG4gICAgfTtcblxuICAgIGlmICh0eXBlKSB7XG4gICAgICB3aGVyZS50eXBlID0gdHlwZTtcbiAgICB9XG5cbiAgICBpZiAocHJpb3JpdHkpIHtcbiAgICAgIHdoZXJlLnByaW9yaXR5ID0gcHJpb3JpdHk7XG4gICAgfVxuXG4gICAgaWYgKGxlYWd1ZSkge1xuICAgICAgd2hlcmUubGVhZ3VlID0gbGVhZ3VlO1xuICAgIH1cblxuICAgIGlmIChzb3VyY2VJZCkge1xuICAgICAgd2hlcmUuc291cmNlSWQgPSBzb3VyY2VJZDtcbiAgICB9XG5cbiAgICAvLyBUYWcgZmlsdGVyaW5nXG4gICAgaWYgKHRhZ3MubGVuZ3RoID4gMCkge1xuICAgICAgd2hlcmUudGFncyA9IHtcbiAgICAgICAgc29tZToge1xuICAgICAgICAgIHRhZzoge1xuICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICBpbjogdGFncyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gRmV0Y2ggZmVlZCBpdGVtcyB3aXRoIHJlbGF0aW9uc1xuICAgIGNvbnN0IGZlZWRJdGVtcyA9IGF3YWl0IHByaXNtYS5mZWVkSXRlbS5maW5kTWFueSh7XG4gICAgICB3aGVyZSxcbiAgICAgIGluY2x1ZGU6IHtcbiAgICAgICAgc291cmNlOiB7XG4gICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICBpZDogdHJ1ZSxcbiAgICAgICAgICAgIG5hbWU6IHRydWUsXG4gICAgICAgICAgICB1c2VybmFtZTogdHJ1ZSxcbiAgICAgICAgICAgIHRpZXI6IHRydWUsXG4gICAgICAgICAgICByZWxpYWJpbGl0eTogdHJ1ZSxcbiAgICAgICAgICAgIHJlZ2lvbjogdHJ1ZSxcbiAgICAgICAgICAgIGlzVmVyaWZpZWQ6IHRydWUsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgdGFnczoge1xuICAgICAgICAgIGluY2x1ZGU6IHtcbiAgICAgICAgICAgIHRhZzoge1xuICAgICAgICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICAgICAgICBpZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBuYW1lOiB0cnVlLFxuICAgICAgICAgICAgICAgIHR5cGU6IHRydWUsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIG1lZGlhOiB7XG4gICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICBpZDogdHJ1ZSxcbiAgICAgICAgICAgIHR5cGU6IHRydWUsXG4gICAgICAgICAgICB1cmw6IHRydWUsXG4gICAgICAgICAgICB0aHVtYm5haWxVcmw6IHRydWUsXG4gICAgICAgICAgICBhbHRUZXh0OiB0cnVlLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgb3JkZXJCeTogW3sgcHJpb3JpdHk6IFwiZGVzY1wiIH0sIHsgcHVibGlzaGVkQXQ6IFwiZGVzY1wiIH1dLFxuICAgICAgdGFrZTogbGltaXQsXG4gICAgICBza2lwOiBvZmZzZXQsXG4gICAgfSk7XG5cbiAgICAvLyBUcmFuc2Zvcm0gZGF0YSB0byBtYXRjaCBmcm9udGVuZCBpbnRlcmZhY2VcbiAgICBjb25zdCB0cmFuc2Zvcm1lZEl0ZW1zID0gZmVlZEl0ZW1zLm1hcCgoaXRlbSkgPT4gKHtcbiAgICAgIGlkOiBpdGVtLmlkLFxuICAgICAgdHlwZTogaXRlbS50eXBlLnRvTG93ZXJDYXNlKCksXG4gICAgICB0aW1lc3RhbXA6IGl0ZW0ucHVibGlzaGVkQXQsXG4gICAgICBjb250ZW50OiBpdGVtLmNvbnRlbnQsXG4gICAgICB0ZXJyeUNvbW1lbnRhcnk6IGl0ZW0udGVycnlDb21tZW50YXJ5LFxuICAgICAgc291cmNlOiB7XG4gICAgICAgIG5hbWU6IGl0ZW0uc291cmNlLm5hbWUsXG4gICAgICAgIGhhbmRsZTogYEAke2l0ZW0uc291cmNlLnVzZXJuYW1lfWAsXG4gICAgICAgIHRpZXI6IGl0ZW0uc291cmNlLnRpZXIsXG4gICAgICAgIHJlbGlhYmlsaXR5OiBpdGVtLnNvdXJjZS5yZWxpYWJpbGl0eSxcbiAgICAgICAgcmVnaW9uOiBpdGVtLnNvdXJjZS5yZWdpb24sXG4gICAgICAgIGlzVmVyaWZpZWQ6IGl0ZW0uc291cmNlLmlzVmVyaWZpZWQsXG4gICAgICB9LFxuICAgICAgdGFnczoge1xuICAgICAgICBjbHViczogaXRlbS50YWdzXG4gICAgICAgICAgLmZpbHRlcigodCkgPT4gdC50YWcudHlwZSA9PT0gXCJDTFVCXCIpXG4gICAgICAgICAgLm1hcCgodCkgPT4gdC50YWcubmFtZSksXG4gICAgICAgIHBsYXllcnM6IGl0ZW0udGFnc1xuICAgICAgICAgIC5maWx0ZXIoKHQpID0+IHQudGFnLnR5cGUgPT09IFwiUExBWUVSXCIpXG4gICAgICAgICAgLm1hcCgodCkgPT4gdC50YWcubmFtZSksXG4gICAgICAgIHNvdXJjZXM6IFtpdGVtLnNvdXJjZS5uYW1lXSxcbiAgICAgIH0sXG4gICAgICBtZWRpYTpcbiAgICAgICAgaXRlbS5tZWRpYS5sZW5ndGggPiAwXG4gICAgICAgICAgPyB7XG4gICAgICAgICAgICAgIHR5cGU6IGl0ZW0ubWVkaWFbMF0udHlwZS50b0xvd2VyQ2FzZSgpLFxuICAgICAgICAgICAgICB1cmw6IGl0ZW0ubWVkaWFbMF0udXJsLFxuICAgICAgICAgICAgICBhbHRUZXh0OiBpdGVtLm1lZGlhWzBdLmFsdFRleHQsXG4gICAgICAgICAgICAgIHRodW1ibmFpbFVybDogaXRlbS5tZWRpYVswXS50aHVtYm5haWxVcmwsXG4gICAgICAgICAgICB9XG4gICAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgICBlbmdhZ2VtZW50OiB7XG4gICAgICAgIHNoYXJlczogaXRlbS5vcmlnaW5hbFNoYXJlcyArIGl0ZW0ub3VyU2hhcmVzLFxuICAgICAgICByZWFjdGlvbnM6IGl0ZW0ub3JpZ2luYWxMaWtlcyArIGl0ZW0ub3VyUmVhY3Rpb25zLFxuICAgICAgICBjbGlja3M6IGl0ZW0ub3VyQ2xpY2tzLFxuICAgICAgfSxcbiAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgIHRyYW5zZmVyVHlwZTogaXRlbS50cmFuc2ZlclR5cGU/LnRvTG93ZXJDYXNlKCksXG4gICAgICAgIHByaW9yaXR5OiBpdGVtLnByaW9yaXR5LnRvTG93ZXJDYXNlKCksXG4gICAgICAgIHJlbGV2YW5jZVNjb3JlOiBpdGVtLnJlbGV2YW5jZVNjb3JlLFxuICAgICAgICBsZWFndWU6IGl0ZW0ubGVhZ3VlLFxuICAgICAgICBvcmlnaW5hbFVybDogaXRlbS5vcmlnaW5hbFVybCxcbiAgICAgIH0sXG4gICAgICBpc1JlYWQ6IGZhbHNlLCAvLyBEZWZhdWx0IGZvciBBUEkgcmVzcG9uc2VzXG4gICAgICBpc05ldzogZmFsc2UsIC8vIERlZmF1bHQgZm9yIEFQSSByZXNwb25zZXNcbiAgICB9KSk7XG5cbiAgICAvLyBHZXQgdG90YWwgY291bnQgZm9yIHBhZ2luYXRpb25cbiAgICBjb25zdCB0b3RhbENvdW50ID0gYXdhaXQgcHJpc21hLmZlZWRJdGVtLmNvdW50KHtcbiAgICAgIHdoZXJlLFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBkYXRhOiB0cmFuc2Zvcm1lZEl0ZW1zLFxuICAgICAgcGFnaW5hdGlvbjoge1xuICAgICAgICB0b3RhbDogdG90YWxDb3VudCxcbiAgICAgICAgbGltaXQsXG4gICAgICAgIG9mZnNldCxcbiAgICAgICAgaGFzTW9yZTogb2Zmc2V0ICsgbGltaXQgPCB0b3RhbENvdW50LFxuICAgICAgfSxcbiAgICAgIG1ldGE6IHtcbiAgICAgICAgZmV0Y2hlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgIGNvdW50OiB0cmFuc2Zvcm1lZEl0ZW1zLmxlbmd0aCxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBmZXRjaCBmZWVkIGRhdGE6XCIsIGVycm9yKTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiBcIkZhaWxlZCB0byBmZXRjaCBmZWVkIGRhdGFcIixcbiAgICAgICAgZGV0YWlsczogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiBcIlVua25vd24gZXJyb3JcIixcbiAgICAgIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApO1xuICB9XG59XG5cbi8vIFBPU1QgZW5kcG9pbnQgZm9yIG1hbnVhbGx5IGFkZGluZyBmZWVkIGl0ZW1zIChhZG1pbiB1c2UpXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIGNvbnN0IGJvZHkgPSBhd2FpdCByZXF1ZXN0Lmpzb24oKTtcblxuICAgIGNvbnN0IHsgY29udGVudCwgc291cmNlSWQsIHR5cGUgPSBcIklUS1wiLCBwcmlvcml0eSA9IFwiTUVESVVNXCIgfSA9IGJvZHk7XG5cbiAgICBpZiAoIWNvbnRlbnQgfHwgIXNvdXJjZUlkKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6IFwiQ29udGVudCBhbmQgc291cmNlSWQgYXJlIHJlcXVpcmVkXCIgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICApO1xuICAgIH1cblxuICAgIC8vIENyZWF0ZSBmZWVkIGl0ZW1cbiAgICBjb25zdCBmZWVkSXRlbSA9IGF3YWl0IHByaXNtYS5mZWVkSXRlbS5jcmVhdGUoe1xuICAgICAgZGF0YToge1xuICAgICAgICB0eXBlOiB0eXBlIGFzIEZlZWRUeXBlLFxuICAgICAgICBjb250ZW50LFxuICAgICAgICBzb3VyY2VJZCxcbiAgICAgICAgcHJpb3JpdHk6IHByaW9yaXR5IGFzIFByaW9yaXR5LFxuICAgICAgICBwdWJsaXNoZWRBdDogbmV3IERhdGUoKSxcbiAgICAgICAgaXNQcm9jZXNzZWQ6IHRydWUsXG4gICAgICAgIGlzUHVibGlzaGVkOiB0cnVlLFxuICAgICAgICByZWxldmFuY2VTY29yZTogMC44LCAvLyBEZWZhdWx0IGZvciBtYW51YWwgZW50cmllc1xuICAgICAgfSxcbiAgICAgIGluY2x1ZGU6IHtcbiAgICAgICAgc291cmNlOiB0cnVlLFxuICAgICAgICB0YWdzOiB7XG4gICAgICAgICAgaW5jbHVkZToge1xuICAgICAgICAgICAgdGFnOiB0cnVlLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBkYXRhOiBmZWVkSXRlbSxcbiAgICAgIG1lc3NhZ2U6IFwiRmVlZCBpdGVtIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5XCIsXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBjcmVhdGUgZmVlZCBpdGVtOlwiLCBlcnJvcik7XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7XG4gICAgICAgIGVycm9yOiBcIkZhaWxlZCB0byBjcmVhdGUgZmVlZCBpdGVtXCIsXG4gICAgICAgIGRldGFpbHM6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogXCJVbmtub3duIGVycm9yXCIsXG4gICAgICB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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