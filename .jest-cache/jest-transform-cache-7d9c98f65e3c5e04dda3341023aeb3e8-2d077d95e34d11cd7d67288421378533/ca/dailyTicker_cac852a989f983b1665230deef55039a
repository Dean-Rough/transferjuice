6cb42e9f01d358119db29d6b932ce631
/* istanbul ignore next */
function cov_53qkdkmgg() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/breakingNews/dailyTicker.ts";
  var hash = "ce49da608b9ab786c8434cc1a0e458376171effc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/breakingNews/dailyTicker.ts",
    statementMap: {
      "0": {
        start: {
          line: 19,
          column: 32
        },
        end: {
          line: 227,
          column: 1
        }
      },
      "1": {
        start: {
          line: 234,
          column: 21
        },
        end: {
          line: 235,
          column: 47
        }
      },
      "2": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 235,
          column: 47
        }
      },
      "3": {
        start: {
          line: 237,
          column: 17
        },
        end: {
          line: 237,
          column: 34
        }
      },
      "4": {
        start: {
          line: 240,
          column: 2
        },
        end: {
          line: 247,
          column: 5
        }
      },
      "5": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 246,
          column: 5
        }
      },
      "6": {
        start: {
          line: 242,
          column: 26
        },
        end: {
          line: 242,
          column: 50
        }
      },
      "7": {
        start: {
          line: 243,
          column: 6
        },
        end: {
          line: 245,
          column: 7
        }
      },
      "8": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 76
        }
      },
      "9": {
        start: {
          line: 250,
          column: 17
        },
        end: {
          line: 250,
          column: 64
        }
      },
      "10": {
        start: {
          line: 252,
          column: 2
        },
        end: {
          line: 257,
          column: 4
        }
      },
      "11": {
        start: {
          line: 266,
          column: 39
        },
        end: {
          line: 266,
          column: 41
        }
      },
      "12": {
        start: {
          line: 267,
          column: 24
        },
        end: {
          line: 267,
          column: 41
        }
      },
      "13": {
        start: {
          line: 270,
          column: 2
        },
        end: {
          line: 290,
          column: 3
        }
      },
      "14": {
        start: {
          line: 271,
          column: 26
        },
        end: {
          line: 273,
          column: 5
        }
      },
      "15": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 281,
          column: 5
        }
      },
      "16": {
        start: {
          line: 280,
          column: 6
        },
        end: {
          line: 280,
          column: 15
        }
      },
      "17": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 283,
          column: 37
        }
      },
      "18": {
        start: {
          line: 284,
          column: 21
        },
        end: {
          line: 284,
          column: 59
        }
      },
      "19": {
        start: {
          line: 285,
          column: 18
        },
        end: {
          line: 285,
          column: 49
        }
      },
      "20": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 289,
          column: 24
        }
      },
      "21": {
        start: {
          line: 292,
          column: 2
        },
        end: {
          line: 292,
          column: 17
        }
      },
      "22": {
        start: {
          line: 301,
          column: 2
        },
        end: {
          line: 301,
          column: 37
        }
      },
      "23": {
        start: {
          line: 308,
          column: 16
        },
        end: {
          line: 319,
          column: 3
        }
      },
      "24": {
        start: {
          line: 321,
          column: 2
        },
        end: {
          line: 321,
          column: 57
        }
      },
      "25": {
        start: {
          line: 330,
          column: 2
        },
        end: {
          line: 335,
          column: 17
        }
      },
      "26": {
        start: {
          line: 332,
          column: 19
        },
        end: {
          line: 332,
          column: 53
        }
      },
      "27": {
        start: {
          line: 333,
          column: 6
        },
        end: {
          line: 333,
          column: 71
        }
      },
      "28": {
        start: {
          line: 342,
          column: 2
        },
        end: {
          line: 342,
          column: 34
        }
      },
      "29": {
        start: {
          line: 342,
          column: 22
        },
        end: {
          line: 342,
          column: 34
        }
      },
      "30": {
        start: {
          line: 344,
          column: 14
        },
        end: {
          line: 344,
          column: 24
        }
      },
      "31": {
        start: {
          line: 345,
          column: 18
        },
        end: {
          line: 345,
          column: 41
        }
      },
      "32": {
        start: {
          line: 348,
          column: 19
        },
        end: {
          line: 348,
          column: 32
        }
      },
      "33": {
        start: {
          line: 349,
          column: 2
        },
        end: {
          line: 349,
          column: 32
        }
      },
      "34": {
        start: {
          line: 351,
          column: 23
        },
        end: {
          line: 351,
          column: 41
        }
      },
      "35": {
        start: {
          line: 352,
          column: 2
        },
        end: {
          line: 352,
          column: 51
        }
      },
      "36": {
        start: {
          line: 355,
          column: 2
        },
        end: {
          line: 355,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "generateBreakingStory",
        decl: {
          start: {
            line: 232,
            column: 9
          },
          end: {
            line: 232,
            column: 30
          }
        },
        loc: {
          start: {
            line: 232,
            column: 65
          },
          end: {
            line: 258,
            column: 1
          }
        },
        line: 232
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 234,
            column: 21
          },
          end: {
            line: 234,
            column: 22
          }
        },
        loc: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 47
          }
        },
        line: 235
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 240,
            column: 32
          },
          end: {
            line: 240,
            column: 33
          }
        },
        loc: {
          start: {
            line: 240,
            column: 41
          },
          end: {
            line: 247,
            column: 3
          }
        },
        line: 240
      },
      "3": {
        name: "generateDailyBreakingNews",
        decl: {
          start: {
            line: 263,
            column: 22
          },
          end: {
            line: 263,
            column: 47
          }
        },
        loc: {
          start: {
            line: 265,
            column: 2
          },
          end: {
            line: 293,
            column: 1
          }
        },
        line: 265
      },
      "4": {
        name: "getCurrentBreakingNews",
        decl: {
          start: {
            line: 298,
            column: 22
          },
          end: {
            line: 298,
            column: 44
          }
        },
        loc: {
          start: {
            line: 298,
            column: 77
          },
          end: {
            line: 302,
            column: 1
          }
        },
        line: 298
      },
      "5": {
        name: "getRandomTerryQuip",
        decl: {
          start: {
            line: 307,
            column: 9
          },
          end: {
            line: 307,
            column: 27
          }
        },
        loc: {
          start: {
            line: 307,
            column: 38
          },
          end: {
            line: 322,
            column: 1
          }
        },
        line: 307
      },
      "6": {
        name: "formatBreakingNewsForDisplay",
        decl: {
          start: {
            line: 327,
            column: 16
          },
          end: {
            line: 327,
            column: 44
          }
        },
        loc: {
          start: {
            line: 329,
            column: 10
          },
          end: {
            line: 336,
            column: 1
          }
        },
        line: 329
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 331,
            column: 9
          },
          end: {
            line: 331,
            column: 10
          }
        },
        loc: {
          start: {
            line: 331,
            column: 20
          },
          end: {
            line: 334,
            column: 5
          }
        },
        line: 331
      },
      "8": {
        name: "needsNewBreakingNews",
        decl: {
          start: {
            line: 341,
            column: 16
          },
          end: {
            line: 341,
            column: 36
          }
        },
        loc: {
          start: {
            line: 341,
            column: 68
          },
          end: {
            line: 356,
            column: 1
          }
        },
        line: 341
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "1": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 241,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 241,
            column: 26
          }
        }, {
          start: {
            line: 241,
            column: 30
          },
          end: {
            line: 241,
            column: 58
          }
        }],
        line: 241
      },
      "2": {
        loc: {
          start: {
            line: 243,
            column: 6
          },
          end: {
            line: 245,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 6
          },
          end: {
            line: 245,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "3": {
        loc: {
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 281,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 281,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "4": {
        loc: {
          start: {
            line: 277,
            column: 6
          },
          end: {
            line: 278,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 6
          },
          end: {
            line: 277,
            column: 38
          }
        }, {
          start: {
            line: 278,
            column: 6
          },
          end: {
            line: 278,
            column: 57
          }
        }],
        line: 277
      },
      "5": {
        loc: {
          start: {
            line: 333,
            column: 13
          },
          end: {
            line: 333,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 333,
            column: 31
          },
          end: {
            line: 333,
            column: 63
          }
        }, {
          start: {
            line: 333,
            column: 66
          },
          end: {
            line: 333,
            column: 70
          }
        }],
        line: 333
      },
      "6": {
        loc: {
          start: {
            line: 342,
            column: 2
          },
          end: {
            line: 342,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 2
          },
          end: {
            line: 342,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      },
      "7": {
        loc: {
          start: {
            line: 355,
            column: 9
          },
          end: {
            line: 355,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 355,
            column: 9
          },
          end: {
            line: 355,
            column: 27
          }
        }, {
          start: {
            line: 355,
            column: 31
          },
          end: {
            line: 355,
            column: 46
          }
        }],
        line: 355
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ce49da608b9ab786c8434cc1a0e458376171effc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_53qkdkmgg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_53qkdkmgg();
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Terry's Daily Breaking News Ticker
 * Generates 6 absolute shitpost football banter stories daily
 */

/**
 * Breaking news templates for maximum shithousery
 */
var BREAKING_NEWS_TEMPLATES =
/* istanbul ignore next */
(cov_53qkdkmgg().s[0]++, [
// Transfer chaos
{
  template: "[CLUB] preparing £[AMOUNT]m bid for [PLAYER] who reportedly [ABSURDITY]",
  clubs: ["Arsenal", "Chelsea", "Man United", "Newcastle", "Everton", "West Ham"],
  amounts: ["127", "89", "156", "243", "67", "198"],
  players: ["mystery striker", "unidentified midfielder", "YouTube wonderkid", "FM legend", "Twitter target"],
  absurdities: ["can't pass a medical due to excessive FIFA playing", "only speaks in football clichés", "insists on wearing the number π", "demands a clause allowing TikTok breaks", "refuses to play on Tuesdays", "wants his mum as assistant manager", "requires a personal vibes coach", "won't sign unless club builds a slide from dressing room to pitch"]
},
// Manager meltdowns
{
  template: "[MANAGER] SLAMS [TARGET] after [INCIDENT] leaves him '[REACTION]'",
  managers: ["Arteta", "Ten Hag", "Pep", "Klopp", "Dyche", "Moyes", "Postecoglou"],
  targets: ["the grass length", "ball boys", "the concept of time", "modern football", "VAR's aura", "the moon's position"],
  incidents: ["wind changed direction during throw-in", "opposition manager looked at him funny", "someone breathed near the technical area", "corner flag moved 2mm", "fourth official existed", "fan sneezed in Row Z"],
  reactions: ["spiritually wounded", "philosophically bereft", "existentially confused", "vibrationally misaligned", "emotionally discombobulated"]
},
// Player drama
{
  template: "[PLAYER] SHOCK: Star [ACTION] after [TRIGGER] causes '[CONSEQUENCE]'",
  players: ["Unnamed striker", "Mystery winger", "Anonymous midfielder", "Secret defender", "Phantom goalkeeper"],
  actions: ["threatens retirement", "unfollows club on Instagram", "changes bio to just emojis", "posts cryptic hourglass", "likes rival tweet", "seen eating chips"],
  triggers: ["being subbed in 89th minute", "kit man forgetting birthday", "wrong brand of water in dressing room", "training cone placement", "canteen running out of pasta", "teammate's new haircut"],
  consequences: ["dressing room in TATTERS", "vibes absolutely FINISHED", "project in SHAMBLES", "culture DESTROYED", "harmony OBLITERATED"]
},
// Tactical revolution
{
  template: "[TEAM] to play revolutionary [FORMATION] with [INNOVATION] to combat [PROBLEM]",
  teams: ["Big Six side", "Struggling outfit", "Midtable warriors", "European hopefuls", "Relegation battlers"],
  formations: ["2-2-2-2-2", "0-0-10-0", "4-4-fucking-2", "1-1-1-1-1-1-1-1-1-1", "False Everything", "Inverted Christmas Tree"],
  innovations: ["all players wearing same number", "goalkeeper playing as false 9", "no boots allowed", "telepathic communication only", "playing backwards entire match", "substitutes already on pitch hiding"],
  problems: ["bad juju", "Mercury in retrograde", "opponent's vibes", "cosmic imbalance", "tactical feng shui", "general existence"]
},
// Medical madness
{
  template: "MEDICAL DRAMA: [PLAYER] fails medical due to [CONDITION] discovered by [METHOD]",
  players: ["£50m target", "deadline day signing", "free agent", "wonderkid", "proven veteran"],
  conditions: ["allergic to grass", "phobia of round objects", "inability to see the colour red", "compulsive need to nutmeg", "chronic celebration addiction", "persistent good vibes syndrome"],
  methods: ["crystal ball analysis", "vibe check", "aura reading", "tea leaf consultation", "zodiac compatibility test", "asking his mum"]
},
// Contract chaos
{
  template: "[PLAYER] demands [CLAUSE] in new contract after [REASON] leaves him [EMOTION]",
  players: ["Star striker", "Club captain", "Youth prospect", "Benchwarmer", "Loan army soldier"],
  clauses: ["own theme song for substitutions", "personal weather forecast", "designated nap room", "custom grass pattern under feet", "hourly compliment quota", "right to rename stadium on Wednesdays"],
  reasons: ["dream told him to", "read it in his horoscope", "dog barked three times", "saw it in FIFA career mode", "mate said it would be jokes", "why not innit"],
  emotions: ["spiritually awakened", "cosmically aligned", "vibrationally elevated", "dimensionally shifted", "quantumly entangled"]
}]);

/**
 * Generate a single breaking news story
 */
function generateBreakingStory(template) {
  /* istanbul ignore next */
  cov_53qkdkmgg().f[0]++;
  cov_53qkdkmgg().s[1]++;
  // Randomly select from each category
  var pickRandom = function pickRandom(arr) {
    /* istanbul ignore next */
    cov_53qkdkmgg().f[1]++;
    cov_53qkdkmgg().s[2]++;
    return arr[Math.floor(Math.random() * arr.length)];
  };
  var headline =
  /* istanbul ignore next */
  (cov_53qkdkmgg().s[3]++, template.template);

  // Replace all placeholders
  /* istanbul ignore next */
  cov_53qkdkmgg().s[4]++;
  Object.keys(template).forEach(function (key) {
    /* istanbul ignore next */
    cov_53qkdkmgg().f[2]++;
    cov_53qkdkmgg().s[5]++;
    if (
    /* istanbul ignore next */
    (cov_53qkdkmgg().b[1][0]++, key !== "template") &&
    /* istanbul ignore next */
    (cov_53qkdkmgg().b[1][1]++, Array.isArray(template[key]))) {
      /* istanbul ignore next */
      cov_53qkdkmgg().b[0][0]++;
      var placeholder =
      /* istanbul ignore next */
      (cov_53qkdkmgg().s[6]++, "[".concat(key.toUpperCase(), "]"));
      /* istanbul ignore next */
      cov_53qkdkmgg().s[7]++;
      if (headline.includes(placeholder)) {
        /* istanbul ignore next */
        cov_53qkdkmgg().b[2][0]++;
        cov_53qkdkmgg().s[8]++;
        headline = headline.replace(placeholder, pickRandom(template[key]));
      } else
      /* istanbul ignore next */
      {
        cov_53qkdkmgg().b[2][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_53qkdkmgg().b[0][1]++;
    }
  });

  // Pick appropriate emoji
  var emojis =
  /* istanbul ignore next */
  (cov_53qkdkmgg().s[9]++, ["🚨", "⚡", "🔥", "💥", "🎪", "🤯", "😱", "🎭"]);
  /* istanbul ignore next */
  cov_53qkdkmgg().s[10]++;
  return {
    id:
    /* istanbul ignore next */
    "breaking-".concat(Date.now(), "-").concat(Math.random().toString(36).substr(2, 9)),
    headline: headline.toUpperCase(),
    // ALL CAPS FOR MAXIMUM DRAMA
    timestamp: new Date(),
    emoji: "" // No emojis
  };
}

/**
 * Generate daily batch of 6 breaking news stories
 */
export
/* istanbul ignore next */
function generateDailyBreakingNews() {
  return _generateDailyBreakingNews.apply(this, arguments);
}

/**
 * Get current breaking news ticker
 */
/* istanbul ignore next */
function _generateDailyBreakingNews() {
  _generateDailyBreakingNews = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee()
  /* istanbul ignore next */
  {
    var stories, usedTemplates, templateIndex, template, story;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_53qkdkmgg().f[3]++;
          stories = (cov_53qkdkmgg().s[11]++, []);
          usedTemplates = (cov_53qkdkmgg().s[12]++, new Set()); // Generate 6 unique stories
          cov_53qkdkmgg().s[13]++;
        case 1:
          if (!(stories.length < 6)) {
            _context.n = 4;
            break;
          }
          templateIndex = (cov_53qkdkmgg().s[14]++, Math.floor(Math.random() * BREAKING_NEWS_TEMPLATES.length)); // Ensure we don't use the same template twice
          cov_53qkdkmgg().s[15]++;
          if (!(
          /* istanbul ignore next */
          (cov_53qkdkmgg().b[4][0]++, usedTemplates.has(templateIndex)) &&
          /* istanbul ignore next */
          (cov_53qkdkmgg().b[4][1]++, usedTemplates.size < BREAKING_NEWS_TEMPLATES.length))) {
            _context.n = 2;
            break;
          }
          cov_53qkdkmgg().b[3][0]++;
          cov_53qkdkmgg().s[16]++;
          return _context.a(3, 1);
        case 2:
          cov_53qkdkmgg().b[3][1]++;
        case 3:
          cov_53qkdkmgg().s[17]++;
          usedTemplates.add(templateIndex);
          template = (cov_53qkdkmgg().s[18]++, BREAKING_NEWS_TEMPLATES[templateIndex]);
          story = (cov_53qkdkmgg().s[19]++, generateBreakingStory(template)); // No Terry quips needed
          cov_53qkdkmgg().s[20]++;
          stories.push(story);
          _context.n = 1;
          break;
        case 4:
          cov_53qkdkmgg().s[21]++;
          return _context.a(2, stories);
      }
    }, _callee);
  }));
  return _generateDailyBreakingNews.apply(this, arguments);
}
export
/* istanbul ignore next */
function getCurrentBreakingNews() {
  return _getCurrentBreakingNews.apply(this, arguments);
}

/**
 * Random Terry quips for when AI fails
 */
/* istanbul ignore next */
function _getCurrentBreakingNews() {
  _getCurrentBreakingNews = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2()
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_53qkdkmgg().f[4]++;
          cov_53qkdkmgg().s[22]++;
          return _context2.a(2, generateDailyBreakingNews());
      }
    }, _callee2);
  }));
  return _getCurrentBreakingNews.apply(this, arguments);
}
function getRandomTerryQuip() {
  /* istanbul ignore next */
  cov_53qkdkmgg().f[5]++;
  var quips =
  /* istanbul ignore next */
  (cov_53qkdkmgg().s[23]++, ["The Terry's seen some nonsense in his time, but this...", "Right, that's enough internet for today", "Someone's getting sacked in the morning", "This is why we can't have nice things", "Proper Brexit tackle on common sense, that", "The beautiful game, ladies and gentlemen", "Christ alive, what timeline is this?", "Terry needs a lie down after reading that", "Absolute scenes in the group chat", "Games gone, pack it up lads"]);
  /* istanbul ignore next */
  cov_53qkdkmgg().s[24]++;
  return quips[Math.floor(Math.random() * quips.length)];
}

/**
 * Format breaking news for display
 */
export function formatBreakingNewsForDisplay(stories) {
  /* istanbul ignore next */
  cov_53qkdkmgg().f[6]++;
  cov_53qkdkmgg().s[25]++;
  return stories.map(function (story) {
    /* istanbul ignore next */
    cov_53qkdkmgg().f[7]++;
    var base =
    /* istanbul ignore next */
    (cov_53qkdkmgg().s[26]++, "".concat(story.emoji, " ").concat(story.headline));
    /* istanbul ignore next */
    cov_53qkdkmgg().s[27]++;
    return story.terryQuip ?
    /* istanbul ignore next */
    (cov_53qkdkmgg().b[5][0]++, "".concat(base, " - \"").concat(story.terryQuip, "\"")) :
    /* istanbul ignore next */
    (cov_53qkdkmgg().b[5][1]++, base);
  }).join(" • ");
}

/**
 * Check if we need new breaking news (daily refresh)
 */
export function needsNewBreakingNews(lastGenerated) {
  /* istanbul ignore next */
  cov_53qkdkmgg().f[8]++;
  cov_53qkdkmgg().s[28]++;
  if (!lastGenerated) {
    /* istanbul ignore next */
    cov_53qkdkmgg().b[6][0]++;
    cov_53qkdkmgg().s[29]++;
    return true;
  } else
  /* istanbul ignore next */
  {
    cov_53qkdkmgg().b[6][1]++;
  }
  var now =
  /* istanbul ignore next */
  (cov_53qkdkmgg().s[30]++, new Date());
  var lastGen =
  /* istanbul ignore next */
  (cov_53qkdkmgg().s[31]++, new Date(lastGenerated));

  // New stories at 6 AM every day
  var today6AM =
  /* istanbul ignore next */
  (cov_53qkdkmgg().s[32]++, new Date(now));
  /* istanbul ignore next */
  cov_53qkdkmgg().s[33]++;
  today6AM.setHours(6, 0, 0, 0);
  var yesterday6AM =
  /* istanbul ignore next */
  (cov_53qkdkmgg().s[34]++, new Date(today6AM));
  /* istanbul ignore next */
  cov_53qkdkmgg().s[35]++;
  yesterday6AM.setDate(yesterday6AM.getDate() - 1);

  // If last generated before today's 6 AM and it's now after 6 AM
  /* istanbul ignore next */
  cov_53qkdkmgg().s[36]++;
  return /* istanbul ignore next */(cov_53qkdkmgg().b[7][0]++, lastGen < today6AM) &&
  /* istanbul ignore next */
  (cov_53qkdkmgg().b[7][1]++, now >= today6AM);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,