2592531d67cfc9d751093f38c0e7e324
/* istanbul ignore next */ function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _templateObject;
function cov_1v6f1133u3() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/database/feedItems.ts";
  var hash = "784e6b71fdb28672168d2b0e2ab12cfe03c7d0b9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/database/feedItems.ts",
    statementMap: {
      "0": {
        start: {
          line: 38,
          column: 2
        },
        end: {
          line: 68,
          column: 4
        }
      },
      "1": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 66,
          column: 8
        }
      },
      "2": {
        start: {
          line: 61,
          column: 53
        },
        end: {
          line: 61,
          column: 62
        }
      },
      "3": {
        start: {
          line: 79,
          column: 2
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "4": {
        start: {
          line: 121,
          column: 64
        },
        end: {
          line: 121,
          column: 77
        }
      },
      "5": {
        start: {
          line: 123,
          column: 2
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "6": {
        start: {
          line: 161,
          column: 63
        },
        end: {
          line: 161,
          column: 76
        }
      },
      "7": {
        start: {
          line: 163,
          column: 49
        },
        end: {
          line: 173,
          column: 3
        }
      },
      "8": {
        start: {
          line: 175,
          column: 2
        },
        end: {
          line: 197,
          column: 3
        }
      },
      "9": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 185,
          column: 8
        }
      },
      "10": {
        start: {
          line: 177,
          column: 49
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "11": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 196,
          column: 6
        }
      },
      "12": {
        start: {
          line: 199,
          column: 2
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "13": {
        start: {
          line: 222,
          column: 2
        },
        end: {
          line: 230,
          column: 5
        }
      },
      "14": {
        start: {
          line: 223,
          column: 50
        },
        end: {
          line: 228,
          column: 5
        }
      },
      "15": {
        start: {
          line: 233,
          column: 2
        },
        end: {
          line: 242,
          column: 5
        }
      },
      "16": {
        start: {
          line: 249,
          column: 17
        },
        end: {
          line: 259,
          column: 4
        }
      },
      "17": {
        start: {
          line: 261,
          column: 2
        },
        end: {
          line: 261,
          column: 22
        }
      },
      "18": {
        start: {
          line: 271,
          column: 17
        },
        end: {
          line: 283,
          column: 3
        }
      },
      "19": {
        start: {
          line: 285,
          column: 2
        },
        end: {
          line: 289,
          column: 6
        }
      },
      "20": {
        start: {
          line: 285,
          column: 30
        },
        end: {
          line: 289,
          column: 3
        }
      },
      "21": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 342,
          column: 6
        }
      },
      "22": {
        start: {
          line: 345,
          column: 20
        },
        end: {
          line: 345,
          column: 51
        }
      },
      "23": {
        start: {
          line: 345,
          column: 40
        },
        end: {
          line: 345,
          column: 50
        }
      },
      "24": {
        start: {
          line: 346,
          column: 18
        },
        end: {
          line: 349,
          column: 4
        }
      },
      "25": {
        start: {
          line: 350,
          column: 20
        },
        end: {
          line: 350,
          column: 74
        }
      },
      "26": {
        start: {
          line: 350,
          column: 58
        },
        end: {
          line: 350,
          column: 72
        }
      },
      "27": {
        start: {
          line: 352,
          column: 2
        },
        end: {
          line: 368,
          column: 4
        }
      },
      "28": {
        start: {
          line: 354,
          column: 35
        },
        end: {
          line: 358,
          column: 5
        }
      },
      "29": {
        start: {
          line: 359,
          column: 31
        },
        end: {
          line: 362,
          column: 5
        }
      },
      "30": {
        start: {
          line: 363,
          column: 39
        },
        end: {
          line: 366,
          column: 5
        }
      }
    },
    fnMap: {
      "0": {
        name: "createFeedItemsFromTweets",
        decl: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 47
          }
        },
        loc: {
          start: {
            line: 37,
            column: 2
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 37
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 39,
            column: 15
          },
          end: {
            line: 39,
            column: 16
          }
        },
        loc: {
          start: {
            line: 40,
            column: 6
          },
          end: {
            line: 66,
            column: 8
          }
        },
        line: 40
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 61,
            column: 41
          },
          end: {
            line: 61,
            column: 42
          }
        },
        loc: {
          start: {
            line: 61,
            column: 53
          },
          end: {
            line: 61,
            column: 62
          }
        },
        line: 61
      },
      "3": {
        name: "getUnprocessedFeedItems",
        decl: {
          start: {
            line: 74,
            column: 22
          },
          end: {
            line: 74,
            column: 45
          }
        },
        loc: {
          start: {
            line: 78,
            column: 2
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 78
      },
      "4": {
        name: "getFeedItemsBySource",
        decl: {
          start: {
            line: 112,
            column: 22
          },
          end: {
            line: 112,
            column: 42
          }
        },
        loc: {
          start: {
            line: 120,
            column: 2
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 120
      },
      "5": {
        name: "getFeedItemsByTags",
        decl: {
          start: {
            line: 152,
            column: 22
          },
          end: {
            line: 152,
            column: 40
          }
        },
        loc: {
          start: {
            line: 160,
            column: 2
          },
          end: {
            line: 212,
            column: 1
          }
        },
        line: 160
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 177,
            column: 35
          },
          end: {
            line: 177,
            column: 36
          }
        },
        loc: {
          start: {
            line: 177,
            column: 49
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 177
      },
      "7": {
        name: "markFeedItemsAsUsed",
        decl: {
          start: {
            line: 217,
            column: 22
          },
          end: {
            line: 217,
            column: 41
          }
        },
        loc: {
          start: {
            line: 220,
            column: 2
          },
          end: {
            line: 243,
            column: 1
          }
        },
        line: 220
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 223,
            column: 26
          },
          end: {
            line: 223,
            column: 27
          }
        },
        loc: {
          start: {
            line: 223,
            column: 50
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 223
      },
      "9": {
        name: "archiveOldFeedItems",
        decl: {
          start: {
            line: 248,
            column: 22
          },
          end: {
            line: 248,
            column: 41
          }
        },
        loc: {
          start: {
            line: 248,
            column: 59
          },
          end: {
            line: 262,
            column: 1
          }
        },
        line: 248
      },
      "10": {
        name: "getTrendingTopics",
        decl: {
          start: {
            line: 267,
            column: 22
          },
          end: {
            line: 267,
            column: 39
          }
        },
        loc: {
          start: {
            line: 270,
            column: 60
          },
          end: {
            line: 290,
            column: 1
          }
        },
        line: 270
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 285,
            column: 20
          },
          end: {
            line: 285,
            column: 21
          }
        },
        loc: {
          start: {
            line: 285,
            column: 30
          },
          end: {
            line: 289,
            column: 3
          }
        },
        line: 285
      },
      "12": {
        name: "getFeedItemStats",
        decl: {
          start: {
            line: 295,
            column: 22
          },
          end: {
            line: 295,
            column: 38
          }
        },
        loc: {
          start: {
            line: 295,
            column: 65
          },
          end: {
            line: 369,
            column: 1
          }
        },
        line: 295
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 345,
            column: 33
          },
          end: {
            line: 345,
            column: 34
          }
        },
        loc: {
          start: {
            line: 345,
            column: 40
          },
          end: {
            line: 345,
            column: 50
          }
        },
        line: 345
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 350,
            column: 51
          },
          end: {
            line: 350,
            column: 52
          }
        },
        loc: {
          start: {
            line: 350,
            column: 58
          },
          end: {
            line: 350,
            column: 72
          }
        },
        line: 350
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 354,
            column: 27
          },
          end: {
            line: 354,
            column: 28
          }
        },
        loc: {
          start: {
            line: 354,
            column: 35
          },
          end: {
            line: 358,
            column: 5
          }
        },
        line: 354
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 359,
            column: 23
          },
          end: {
            line: 359,
            column: 24
          }
        },
        loc: {
          start: {
            line: 359,
            column: 31
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 359
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 363,
            column: 31
          },
          end: {
            line: 363,
            column: 32
          }
        },
        loc: {
          start: {
            line: 363,
            column: 39
          },
          end: {
            line: 366,
            column: 5
          }
        },
        line: 363
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 50,
            column: 20
          },
          end: {
            line: 50,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 20
          },
          end: {
            line: 50,
            column: 34
          }
        }, {
          start: {
            line: 50,
            column: 38
          },
          end: {
            line: 50,
            column: 46
          }
        }],
        line: 50
      },
      "1": {
        loc: {
          start: {
            line: 53,
            column: 26
          },
          end: {
            line: 53,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 26
          },
          end: {
            line: 53,
            column: 46
          }
        }, {
          start: {
            line: 53,
            column: 50
          },
          end: {
            line: 53,
            column: 51
          }
        }],
        line: 53
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 44
          }
        }, {
          start: {
            line: 54,
            column: 48
          },
          end: {
            line: 54,
            column: 49
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 55,
            column: 27
          },
          end: {
            line: 55,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 27
          },
          end: {
            line: 55,
            column: 48
          }
        }, {
          start: {
            line: 55,
            column: 52
          },
          end: {
            line: 55,
            column: 53
          }
        }],
        line: 55
      },
      "4": {
        loc: {
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 64,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 14
          },
          end: {
            line: 63,
            column: 15
          }
        }, {
          start: {
            line: 64,
            column: 14
          },
          end: {
            line: 64,
            column: 23
          }
        }],
        line: 58
      },
      "5": {
        loc: {
          start: {
            line: 77,
            column: 2
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 77,
            column: 10
          },
          end: {
            line: 77,
            column: 13
          }
        }],
        line: 77
      },
      "6": {
        loc: {
          start: {
            line: 121,
            column: 24
          },
          end: {
            line: 121,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 121,
            column: 32
          },
          end: {
            line: 121,
            column: 34
          }
        }],
        line: 121
      },
      "7": {
        loc: {
          start: {
            line: 121,
            column: 36
          },
          end: {
            line: 121,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 121,
            column: 54
          },
          end: {
            line: 121,
            column: 59
          }
        }],
        line: 121
      },
      "8": {
        loc: {
          start: {
            line: 121,
            column: 64
          },
          end: {
            line: 121,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 64
          },
          end: {
            line: 121,
            column: 71
          }
        }, {
          start: {
            line: 121,
            column: 75
          },
          end: {
            line: 121,
            column: 77
          }
        }],
        line: 121
      },
      "9": {
        loc: {
          start: {
            line: 126,
            column: 10
          },
          end: {
            line: 133,
            column: 12
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 10
          },
          end: {
            line: 132,
            column: 11
          }
        }, {
          start: {
            line: 133,
            column: 10
          },
          end: {
            line: 133,
            column: 12
          }
        }],
        line: 126
      },
      "10": {
        loc: {
          start: {
            line: 126,
            column: 10
          },
          end: {
            line: 126,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 10
          },
          end: {
            line: 126,
            column: 15
          }
        }, {
          start: {
            line: 126,
            column: 19
          },
          end: {
            line: 126,
            column: 24
          }
        }],
        line: 126
      },
      "11": {
        loc: {
          start: {
            line: 129,
            column: 18
          },
          end: {
            line: 129,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 18
          },
          end: {
            line: 129,
            column: 23
          }
        }, {
          start: {
            line: 129,
            column: 27
          },
          end: {
            line: 129,
            column: 41
          }
        }],
        line: 129
      },
      "12": {
        loc: {
          start: {
            line: 130,
            column: 18
          },
          end: {
            line: 130,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 18
          },
          end: {
            line: 130,
            column: 23
          }
        }, {
          start: {
            line: 130,
            column: 27
          },
          end: {
            line: 130,
            column: 41
          }
        }],
        line: 130
      },
      "13": {
        loc: {
          start: {
            line: 134,
            column: 10
          },
          end: {
            line: 134,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 10
          },
          end: {
            line: 134,
            column: 26
          }
        }, {
          start: {
            line: 134,
            column: 30
          },
          end: {
            line: 134,
            column: 51
          }
        }],
        line: 134
      },
      "14": {
        loc: {
          start: {
            line: 161,
            column: 24
          },
          end: {
            line: 161,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 161,
            column: 32
          },
          end: {
            line: 161,
            column: 34
          }
        }],
        line: 161
      },
      "15": {
        loc: {
          start: {
            line: 161,
            column: 36
          },
          end: {
            line: 161,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 161,
            column: 53
          },
          end: {
            line: 161,
            column: 58
          }
        }],
        line: 161
      },
      "16": {
        loc: {
          start: {
            line: 161,
            column: 63
          },
          end: {
            line: 161,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 63
          },
          end: {
            line: 161,
            column: 70
          }
        }, {
          start: {
            line: 161,
            column: 74
          },
          end: {
            line: 161,
            column: 76
          }
        }],
        line: 161
      },
      "17": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 171,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 171,
            column: 10
          }
        }],
        line: 164
      },
      "18": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 164,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 164,
            column: 13
          }
        }, {
          start: {
            line: 164,
            column: 17
          },
          end: {
            line: 164,
            column: 22
          }
        }],
        line: 164
      },
      "19": {
        loc: {
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 167,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 167,
            column: 21
          }
        }, {
          start: {
            line: 167,
            column: 25
          },
          end: {
            line: 167,
            column: 39
          }
        }],
        line: 167
      },
      "20": {
        loc: {
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 168,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 16
          },
          end: {
            line: 168,
            column: 21
          }
        }, {
          start: {
            line: 168,
            column: 25
          },
          end: {
            line: 168,
            column: 39
          }
        }],
        line: 168
      },
      "21": {
        loc: {
          start: {
            line: 175,
            column: 2
          },
          end: {
            line: 197,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 2
          },
          end: {
            line: 197,
            column: 3
          }
        }, {
          start: {
            line: 186,
            column: 9
          },
          end: {
            line: 197,
            column: 3
          }
        }],
        line: 175
      },
      "22": {
        loc: {
          start: {
            line: 269,
            column: 2
          },
          end: {
            line: 269,
            column: 12
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 269,
            column: 10
          },
          end: {
            line: 269,
            column: 12
          }
        }],
        line: 269
      },
      "23": {
        loc: {
          start: {
            line: 356,
            column: 18
          },
          end: {
            line: 356,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 18
          },
          end: {
            line: 356,
            column: 39
          }
        }, {
          start: {
            line: 356,
            column: 43
          },
          end: {
            line: 356,
            column: 52
          }
        }],
        line: 356
      },
      "24": {
        loc: {
          start: {
            line: 367,
            column: 18
          },
          end: {
            line: 367,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 367,
            column: 18
          },
          end: {
            line: 367,
            column: 50
          }
        }, {
          start: {
            line: 367,
            column: 54
          },
          end: {
            line: 367,
            column: 55
          }
        }],
        line: 367
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "784e6b71fdb28672168d2b0e2ab12cfe03c7d0b9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1v6f1133u3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1v6f1133u3();
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _taggedTemplateLiteral(e, t) { return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } })); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Feed Item Data Access Layer
 * Database operations for ITK tweets and feed content
 */

import { prisma } from "@/lib/prisma";
/**
 * Create feed items from tweets
 */
export
/* istanbul ignore next */
function createFeedItemsFromTweets(_x) {
  return _createFeedItemsFromTweets.apply(this, arguments);
}

/**
 * Get unprocessed feed items for briefing generation
 */
/* istanbul ignore next */
function _createFeedItemsFromTweets() {
  _createFeedItemsFromTweets = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(tweets)
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_1v6f1133u3().f[0]++;
          cov_1v6f1133u3().s[0]++;
          _context.n = 1;
          return prisma.$transaction(tweets.map(function (tweet) {
            /* istanbul ignore next */
            cov_1v6f1133u3().f[1]++;
            cov_1v6f1133u3().s[1]++;
            return prisma.feedItem.create({
              data: {
                type: "ITK",
                content: tweet.content,
                originalText: tweet.originalText,
                sourceId: tweet.sourceId,
                twitterId: tweet.twitterId,
                originalUrl: tweet.originalUrl,
                publishedAt: tweet.publishedAt,
                transferType: tweet.transferType,
                priority:
                /* istanbul ignore next */
                (cov_1v6f1133u3().b[0][0]++, tweet.priority) ||
                /* istanbul ignore next */
                (cov_1v6f1133u3().b[0][1]++, "MEDIUM"),
                league: tweet.league,
                relevanceScore: tweet.relevanceScore,
                originalShares:
                /* istanbul ignore next */
                (cov_1v6f1133u3().b[1][0]++, tweet.originalShares) ||
                /* istanbul ignore next */
                (cov_1v6f1133u3().b[1][1]++, 0),
                originalLikes:
                /* istanbul ignore next */
                (cov_1v6f1133u3().b[2][0]++, tweet.originalLikes) ||
                /* istanbul ignore next */
                (cov_1v6f1133u3().b[2][1]++, 0),
                originalReplies:
                /* istanbul ignore next */
                (cov_1v6f1133u3().b[3][0]++, tweet.originalReplies) ||
                /* istanbul ignore next */
                (cov_1v6f1133u3().b[3][1]++, 0),
                terryCommentary: tweet.terryCommentary,
                isProcessed: true,
                tags: tweet.tagIds ?
                /* istanbul ignore next */
                (cov_1v6f1133u3().b[4][0]++, {
                  createMany: {
                    data: tweet.tagIds.map(function (tagId) {
                      /* istanbul ignore next */
                      cov_1v6f1133u3().f[2]++;
                      cov_1v6f1133u3().s[2]++;
                      return {
                        tagId: tagId
                      };
                    })
                  }
                }) :
                /* istanbul ignore next */
                (cov_1v6f1133u3().b[4][1]++, undefined)
              }
            });
          }));
        case 1:
          return _context.a(2, _context.v);
      }
    }, _callee);
  }));
  return _createFeedItemsFromTweets.apply(this, arguments);
}
export
/* istanbul ignore next */
function getUnprocessedFeedItems(_x2, _x3) {
  return _getUnprocessedFeedItems.apply(this, arguments);
}

/**
 * Get feed items by source
 */
/* istanbul ignore next */
function _getUnprocessedFeedItems() {
  _getUnprocessedFeedItems = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2(since, until)
  /* istanbul ignore next */
  {
    var limit,
      _args2 = arguments;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          limit = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : (cov_1v6f1133u3().b[5][0]++, 100);
          cov_1v6f1133u3().f[3]++;
          cov_1v6f1133u3().s[3]++;
          _context2.n = 1;
          return prisma.feedItem.findMany({
            where: {
              publishedAt: {
                gte: since,
                lte: until
              },
              isProcessed: true,
              isArchived: false,
              type: {
                /* istanbul ignore next */
                "in": ["ITK", "BREAKING"]
              }
            },
            include: {
              source: true,
              tags: {
                include: {
                  tag: true
                }
              },
              media: true
            },
            orderBy: [{
              priority: "desc"
            }, {
              relevanceScore: "desc"
            }, {
              publishedAt: "desc"
            }],
            take: limit
          });
        case 1:
          return _context2.a(2, _context2.v);
      }
    }, _callee2);
  }));
  return _getUnprocessedFeedItems.apply(this, arguments);
}
export
/* istanbul ignore next */
function getFeedItemsBySource(_x4, _x5) {
  return _getFeedItemsBySource.apply(this, arguments);
}

/**
 * Get feed items by tags
 */
/* istanbul ignore next */
function _getFeedItemsBySource() {
  _getFeedItemsBySource = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee3(sourceId, options)
  /* istanbul ignore next */
  {
    var _ref, since, until, _ref$limit, limit, _ref$includeArchived, includeArchived;
    return _regenerator().w(function (_context3) {
      while (1) switch (_context3.n) {
        case 0:
          cov_1v6f1133u3().f[4]++;
          _ref = (cov_1v6f1133u3().s[4]++,
          /* istanbul ignore next */
          (cov_1v6f1133u3().b[8][0]++, options) ||
          /* istanbul ignore next */
          (cov_1v6f1133u3().b[8][1]++, {})), since = _ref.since, until = _ref.until, _ref$limit = _ref.limit, limit = _ref$limit === void 0 ? (cov_1v6f1133u3().b[6][0]++, 50) : _ref$limit, _ref$includeArchived = _ref.includeArchived, includeArchived = _ref$includeArchived === void 0 ? (cov_1v6f1133u3().b[7][0]++, false) : _ref$includeArchived;
          cov_1v6f1133u3().s[5]++;
          _context3.n = 1;
          return prisma.feedItem.findMany({
            where:
            /* istanbul ignore next */
            _objectSpread(_objectSpread({
              sourceId: sourceId
            },
            /* istanbul ignore next */
            (cov_1v6f1133u3().b[10][0]++, since) ||
            /* istanbul ignore next */
            (cov_1v6f1133u3().b[10][1]++, until) ?
            /* istanbul ignore next */
            (cov_1v6f1133u3().b[9][0]++, {
              publishedAt:
              /* istanbul ignore next */
              _objectSpread(_objectSpread({},
              /* istanbul ignore next */
              (cov_1v6f1133u3().b[11][0]++, since) &&
              /* istanbul ignore next */
              (cov_1v6f1133u3().b[11][1]++, {
                gte: since
              })),
              /* istanbul ignore next */
              (cov_1v6f1133u3().b[12][0]++, until) &&
              /* istanbul ignore next */
              (cov_1v6f1133u3().b[12][1]++, {
                lte: until
              }))
            }) :
            /* istanbul ignore next */
            (cov_1v6f1133u3().b[9][1]++, {})),
            /* istanbul ignore next */
            (cov_1v6f1133u3().b[13][0]++, !includeArchived) &&
            /* istanbul ignore next */
            (cov_1v6f1133u3().b[13][1]++, {
              isArchived: false
            })),
            include: {
              source: true,
              tags: {
                include: {
                  tag: true
                }
              }
            },
            orderBy: {
              publishedAt: "desc"
            },
            take: limit
          });
        case 1:
          return _context3.a(2, _context3.v);
      }
    }, _callee3);
  }));
  return _getFeedItemsBySource.apply(this, arguments);
}
export
/* istanbul ignore next */
function getFeedItemsByTags(_x6, _x7) {
  return _getFeedItemsByTags.apply(this, arguments);
}

/**
 * Mark feed items as used in briefing
 */
/* istanbul ignore next */
function _getFeedItemsByTags() {
  _getFeedItemsByTags = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee4(tagNames, options)
  /* istanbul ignore next */
  {
    var _ref2, since, until, _ref2$limit, limit, _ref2$requireAllTags, requireAllTags, whereClause;
    return _regenerator().w(function (_context4) {
      while (1) switch (_context4.n) {
        case 0:
          cov_1v6f1133u3().f[5]++;
          _ref2 = (cov_1v6f1133u3().s[6]++,
          /* istanbul ignore next */
          (cov_1v6f1133u3().b[16][0]++, options) ||
          /* istanbul ignore next */
          (cov_1v6f1133u3().b[16][1]++, {})), since = _ref2.since, until = _ref2.until, _ref2$limit = _ref2.limit, limit = _ref2$limit === void 0 ? (cov_1v6f1133u3().b[14][0]++, 50) : _ref2$limit, _ref2$requireAllTags = _ref2.requireAllTags, requireAllTags = _ref2$requireAllTags === void 0 ? (cov_1v6f1133u3().b[15][0]++, false) : _ref2$requireAllTags;
          whereClause = (cov_1v6f1133u3().s[7]++, _objectSpread(_objectSpread({},
          /* istanbul ignore next */
          (cov_1v6f1133u3().b[18][0]++, since) ||
          /* istanbul ignore next */
          (cov_1v6f1133u3().b[18][1]++, until) ?
          /* istanbul ignore next */
          (cov_1v6f1133u3().b[17][0]++, {
            publishedAt:
            /* istanbul ignore next */
            _objectSpread(_objectSpread({},
            /* istanbul ignore next */
            (cov_1v6f1133u3().b[19][0]++, since) &&
            /* istanbul ignore next */
            (cov_1v6f1133u3().b[19][1]++, {
              gte: since
            })),
            /* istanbul ignore next */
            (cov_1v6f1133u3().b[20][0]++, until) &&
            /* istanbul ignore next */
            (cov_1v6f1133u3().b[20][1]++, {
              lte: until
            }))
          }) :
          /* istanbul ignore next */
          (cov_1v6f1133u3().b[17][1]++, {})), {}, {
            isArchived: false
          }));
          cov_1v6f1133u3().s[8]++;
          if (requireAllTags) {
            /* istanbul ignore next */
            cov_1v6f1133u3().b[21][0]++;
            cov_1v6f1133u3().s[9]++;
            // Must have ALL specified tags
            whereClause.AND = tagNames.map(function (tagName) {
              /* istanbul ignore next */
              cov_1v6f1133u3().f[6]++;
              cov_1v6f1133u3().s[10]++;
              return {
                tags: {
                  some: {
                    tag: {
                      name: tagName
                    }
                  }
                }
              };
            });
          } else {
            /* istanbul ignore next */
            cov_1v6f1133u3().b[21][1]++;
            cov_1v6f1133u3().s[11]++;
            // Must have ANY of the specified tags
            whereClause.tags = {
              some: {
                tag: {
                  name: {
                    /* istanbul ignore next */
                    "in": tagNames
                  }
                }
              }
            };
          }
          cov_1v6f1133u3().s[12]++;
          _context4.n = 1;
          return prisma.feedItem.findMany({
            where: whereClause,
            include: {
              source: true,
              tags: {
                include: {
                  tag: true
                }
              }
            },
            orderBy: {
              publishedAt: "desc"
            },
            take: limit
          });
        case 1:
          return _context4.a(2, _context4.v);
      }
    }, _callee4);
  }));
  return _getFeedItemsByTags.apply(this, arguments);
}
export
/* istanbul ignore next */
function markFeedItemsAsUsed(_x8, _x9) {
  return _markFeedItemsAsUsed.apply(this, arguments);
}

/**
 * Archive old feed items
 */
/* istanbul ignore next */
function _markFeedItemsAsUsed() {
  _markFeedItemsAsUsed = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee5(feedItemIds, briefingId)
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context5) {
      while (1) switch (_context5.n) {
        case 0:
          cov_1v6f1133u3().f[7]++;
          cov_1v6f1133u3().s[13]++;
          _context5.n = 1;
          return prisma.briefingFeedItem.createMany({
            data: feedItemIds.map(function (feedItemId, index) {
              /* istanbul ignore next */
              cov_1v6f1133u3().f[8]++;
              cov_1v6f1133u3().s[14]++;
              return {
                briefingId: briefingId,
                feedItemId: feedItemId,
                position: index,
                section: "main"
              };
            }),
            skipDuplicates: true
          });
        case 1:
          cov_1v6f1133u3().s[15]++;
          _context5.n = 2;
          return prisma.feedItem.updateMany({
            where: {
              id: {
                /* istanbul ignore next */
                "in": feedItemIds
              }
            },
            data: {
              isPublished: true
            }
          });
        case 2:
          return _context5.a(2);
      }
    }, _callee5);
  }));
  return _markFeedItemsAsUsed.apply(this, arguments);
}
export
/* istanbul ignore next */
function archiveOldFeedItems(_x0) {
  return _archiveOldFeedItems.apply(this, arguments);
}

/**
 * Get trending topics from recent feed items
 */
/* istanbul ignore next */
function _archiveOldFeedItems() {
  _archiveOldFeedItems = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee6(olderThan)
  /* istanbul ignore next */
  {
    var result;
    return _regenerator().w(function (_context6) {
      while (1) switch (_context6.n) {
        case 0:
          cov_1v6f1133u3().f[9]++;
          cov_1v6f1133u3().s[16]++;
          _context6.n = 1;
          return prisma.feedItem.updateMany({
            where: {
              publishedAt: {
                lt: olderThan
              },
              isArchived: false
            },
            data: {
              isArchived: true
            }
          });
        case 1:
          result = _context6.v;
          cov_1v6f1133u3().s[17]++;
          return _context6.a(2, result.count);
      }
    }, _callee6);
  }));
  return _archiveOldFeedItems.apply(this, arguments);
}
export
/* istanbul ignore next */
function getTrendingTopics(_x1) {
  return _getTrendingTopics.apply(this, arguments);
}

/**
 * Get feed item statistics for a time period
 */
/* istanbul ignore next */
function _getTrendingTopics() {
  _getTrendingTopics = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee7(since)
  /* istanbul ignore next */
  {
    var limit,
      result,
      _args7 = arguments;
    return _regenerator().w(function (_context7) {
      while (1) switch (_context7.n) {
        case 0:
          limit = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : (cov_1v6f1133u3().b[22][0]++, 10);
          cov_1v6f1133u3().f[10]++;
          cov_1v6f1133u3().s[18]++;
          _context7.n = 1;
          return prisma.$queryRaw(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    SELECT t.name, t.type, COUNT(DISTINCT fit.feed_item_id) as count\n    FROM tags t\n    JOIN feed_item_tags fit ON t.id = fit.tag_id\n    JOIN feed_items fi ON fit.feed_item_id = fi.id\n    WHERE fi.published_at >= ", "\n      AND fi.is_archived = false\n    GROUP BY t.name, t.type\n    ORDER BY count DESC\n    LIMIT ", "\n  "])), since, limit);
        case 1:
          result = _context7.v;
          cov_1v6f1133u3().s[19]++;
          return _context7.a(2, result.map(function (row) {
            /* istanbul ignore next */
            cov_1v6f1133u3().f[11]++;
            cov_1v6f1133u3().s[20]++;
            return {
              name: row.name,
              type: row.type,
              count: Number(row.count)
            };
          }));
      }
    }, _callee7);
  }));
  return _getTrendingTopics.apply(this, arguments);
}
export
/* istanbul ignore next */
function getFeedItemStats(_x10, _x11) {
  return _getFeedItemStats.apply(this, arguments);
}
/* istanbul ignore next */
function _getFeedItemStats() {
  _getFeedItemStats = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee8(since, until)
  /* istanbul ignore next */
  {
    var _ref3, _ref4, totalItems, bySource, byType, byPriority, avgRelevance, sourceIds, sources, sourceMap;
    return _regenerator().w(function (_context8) {
      while (1) switch (_context8.n) {
        case 0:
          cov_1v6f1133u3().f[12]++;
          cov_1v6f1133u3().s[21]++;
          _context8.n = 1;
          return Promise.all([
          // Total count
          prisma.feedItem.count({
            where: {
              publishedAt: {
                gte: since,
                lte: until
              }
            }
          }),
          // By source
          prisma.feedItem.groupBy({
            by: ["sourceId"],
            where: {
              publishedAt: {
                gte: since,
                lte: until
              }
            },
            _count: true
          }),
          // By transfer type
          prisma.feedItem.groupBy({
            by: ["transferType"],
            where: {
              publishedAt: {
                gte: since,
                lte: until
              },
              transferType: {
                not: null
              }
            },
            _count: true
          }),
          // By priority
          prisma.feedItem.groupBy({
            by: ["priority"],
            where: {
              publishedAt: {
                gte: since,
                lte: until
              }
            },
            _count: true
          }),
          // Average relevance
          prisma.feedItem.aggregate({
            where: {
              publishedAt: {
                gte: since,
                lte: until
              }
            },
            _avg: {
              relevanceScore: true
            }
          })]);
        case 1:
          _ref3 = _context8.v;
          _ref4 = _slicedToArray(_ref3, 5);
          totalItems = _ref4[0];
          bySource = _ref4[1];
          byType = _ref4[2];
          byPriority = _ref4[3];
          avgRelevance = _ref4[4];
          // Get source names
          sourceIds = (cov_1v6f1133u3().s[22]++, bySource.map(function (s) {
            /* istanbul ignore next */
            cov_1v6f1133u3().f[13]++;
            cov_1v6f1133u3().s[23]++;
            return s.sourceId;
          }));
          cov_1v6f1133u3().s[24]++;
          _context8.n = 2;
          return prisma.iTKSource.findMany({
            where: {
              id: {
                /* istanbul ignore next */
                "in": sourceIds
              }
            },
            select: {
              id: true,
              name: true
            }
          });
        case 2:
          sources = _context8.v;
          sourceMap = (cov_1v6f1133u3().s[25]++, Object.fromEntries(sources.map(function (s) {
            /* istanbul ignore next */
            cov_1v6f1133u3().f[14]++;
            cov_1v6f1133u3().s[26]++;
            return [s.id, s.name];
          })));
          cov_1v6f1133u3().s[27]++;
          return _context8.a(2, {
            totalItems: totalItems,
            bySource: bySource.map(function (s) {
              /* istanbul ignore next */
              cov_1v6f1133u3().f[15]++;
              cov_1v6f1133u3().s[28]++;
              return {
                sourceId: s.sourceId,
                sourceName:
                /* istanbul ignore next */
                (cov_1v6f1133u3().b[23][0]++, sourceMap[s.sourceId]) ||
                /* istanbul ignore next */
                (cov_1v6f1133u3().b[23][1]++, "Unknown"),
                count: s._count
              };
            }),
            byType: byType.map(function (t) {
              /* istanbul ignore next */
              cov_1v6f1133u3().f[16]++;
              cov_1v6f1133u3().s[29]++;
              return {
                type: t.transferType,
                count: t._count
              };
            }),
            byPriority: byPriority.map(function (p) {
              /* istanbul ignore next */
              cov_1v6f1133u3().f[17]++;
              cov_1v6f1133u3().s[30]++;
              return {
                priority: p.priority,
                count: p._count
              };
            }),
            avgRelevance:
            /* istanbul ignore next */
            (cov_1v6f1133u3().b[24][0]++, avgRelevance._avg.relevanceScore) ||
            /* istanbul ignore next */
            (cov_1v6f1133u3().b[24][1]++, 0)
          });
      }
    }, _callee8);
  }));
  return _getFeedItemStats.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,