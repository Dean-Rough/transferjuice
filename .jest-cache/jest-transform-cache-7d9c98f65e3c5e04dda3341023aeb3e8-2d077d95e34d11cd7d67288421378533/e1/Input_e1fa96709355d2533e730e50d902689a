f300a2dca8ad646e2b6305d48f975235
/* istanbul ignore next */ function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["className", "variant", "size", "type", "error", "label", "helperText"];
function cov_1pqlwrivv7() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/components/ui/Input.tsx";
  var hash = "720e568ce59cafdd935a779b22c11999cdb0ffe8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/components/ui/Input.tsx",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "1": {
        start: {
          line: 27,
          column: 25
        },
        end: {
          line: 27,
          column: 50
        }
      },
      "2": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 232
        }
      },
      "3": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "4": {
        start: {
          line: 41,
          column: 24
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "5": {
        start: {
          line: 47,
          column: 30
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "6": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 71,
          column: 6
        }
      },
      "7": {
        start: {
          line: 75,
          column: 0
        },
        end: {
          line: 75,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 14,
            column: 3
          }
        },
        loc: {
          start: {
            line: 26,
            column: 7
          },
          end: {
            line: 72,
            column: 3
          }
        },
        line: 26
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 17,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 17,
            column: 25
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 6
          },
          end: {
            line: 18,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 13
          },
          end: {
            line: 18,
            column: 17
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 6
          },
          end: {
            line: 19,
            column: 19
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 13
          },
          end: {
            line: 19,
            column: 19
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 27,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 33
          },
          end: {
            line: 27,
            column: 40
          }
        }, {
          start: {
            line: 27,
            column: 43
          },
          end: {
            line: 27,
            column: 50
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 9
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 9
          },
          end: {
            line: 56,
            column: 14
          }
        }, {
          start: {
            line: 57,
            column: 10
          },
          end: {
            line: 60,
            column: 18
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 13
          },
          end: {
            line: 59,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 13
          },
          end: {
            line: 59,
            column: 27
          }
        }, {
          start: {
            line: 59,
            column: 31
          },
          end: {
            line: 59,
            column: 75
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 63,
            column: 9
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 10
          },
          end: {
            line: 63,
            column: 15
          }
        }, {
          start: {
            line: 63,
            column: 19
          },
          end: {
            line: 63,
            column: 29
          }
        }, {
          start: {
            line: 64,
            column: 10
          },
          end: {
            line: 68,
            column: 14
          }
        }],
        line: 63
      },
      "7": {
        loc: {
          start: {
            line: 65,
            column: 34
          },
          end: {
            line: 65,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 42
          },
          end: {
            line: 65,
            column: 56
          }
        }, {
          start: {
            line: 65,
            column: 59
          },
          end: {
            line: 65,
            column: 82
          }
        }],
        line: 65
      },
      "8": {
        loc: {
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 67,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 13
          },
          end: {
            line: 67,
            column: 18
          }
        }, {
          start: {
            line: 67,
            column: 22
          },
          end: {
            line: 67,
            column: 32
          }
        }],
        line: 67
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "720e568ce59cafdd935a779b22c11999cdb0ffe8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1pqlwrivv7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1pqlwrivv7();
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }
import { forwardRef } from 'react';
import { clsx } from 'clsx';
/* istanbul ignore next */
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
var Input =
/* istanbul ignore next */
(cov_1pqlwrivv7().s[0]++, /*#__PURE__*/forwardRef(function (
/* istanbul ignore next */
_ref, ref) {
  /* istanbul ignore next */
  var className = _ref.className,
    _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? (cov_1pqlwrivv7().b[0][0]++, 'default') : _ref$variant,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? (cov_1pqlwrivv7().b[1][0]++, 'md') : _ref$size,
    _ref$type = _ref.type,
    type = _ref$type === void 0 ? (cov_1pqlwrivv7().b[2][0]++, 'text') : _ref$type,
    error = _ref.error,
    label = _ref.label,
    helperText = _ref.helperText,
    props = _objectWithoutProperties(_ref, _excluded);
  /* istanbul ignore next */
  cov_1pqlwrivv7().f[0]++;
  var inputVariant =
  /* istanbul ignore next */
  (cov_1pqlwrivv7().s[1]++, error ?
  /* istanbul ignore next */
  (cov_1pqlwrivv7().b[3][0]++, 'error') :
  /* istanbul ignore next */
  (cov_1pqlwrivv7().b[3][1]++, variant));
  var baseClasses =
  /* istanbul ignore next */
  (cov_1pqlwrivv7().s[2]++, 'flex w-full rounded-lg border bg-secondary px-4 py-3 text-foreground placeholder-muted-foreground transition-colors duration-200 focus-visible:outline-none focus-visible:ring-1 disabled:cursor-not-allowed disabled:opacity-50');
  var variantClasses =
  /* istanbul ignore next */
  (cov_1pqlwrivv7().s[3]++, {
    /* istanbul ignore next */
    "default": 'border-border focus-visible:border-orange-500 focus-visible:ring-orange-500',
    error: 'border-red-500 focus-visible:border-red-500 focus-visible:ring-red-500',
    success: 'border-green-500 focus-visible:border-green-500 focus-visible:ring-green-500'
  });
  var sizeClasses =
  /* istanbul ignore next */
  (cov_1pqlwrivv7().s[4]++, {
    sm: 'h-9 px-3 text-sm',
    md: 'h-11 px-4 text-base',
    lg: 'h-13 px-5 text-lg'
  });
  var combinedClassName =
  /* istanbul ignore next */
  (cov_1pqlwrivv7().s[5]++, clsx(baseClasses, variantClasses[inputVariant], sizeClasses[size], className));
  /* istanbul ignore next */
  cov_1pqlwrivv7().s[6]++;
  return /*#__PURE__*/ /* istanbul ignore next */_jsxs(
  /* istanbul ignore next */
  "div",
  /* istanbul ignore next */
  {
    className: "space-y-2",
    children: [
    /* istanbul ignore next */
    (cov_1pqlwrivv7().b[4][0]++, label) &&
    /* istanbul ignore next */
    (cov_1pqlwrivv7().b[4][1]++, /*#__PURE__*/
    /* istanbul ignore next */
    _jsxs(
    /* istanbul ignore next */
    "label",
    /* istanbul ignore next */
    {
      className: "text-sm font-medium text-foreground",
      children: [label,
      /* istanbul ignore next */
      (cov_1pqlwrivv7().b[5][0]++, props.required) &&
      /* istanbul ignore next */
      (cov_1pqlwrivv7().b[5][1]++, /*#__PURE__*/
      /* istanbul ignore next */
      _jsx(
      /* istanbul ignore next */
      "span",
      /* istanbul ignore next */
      {
        className: "text-red-500 ml-1",
        children: "*"
      }))]
    })), /*#__PURE__*/
    /* istanbul ignore next */
    _jsx(
    /* istanbul ignore next */
    "input",
    /* istanbul ignore next */
    _objectSpread({
      type: type,
      className: combinedClassName,
      ref: ref
    }, props)), (
    /* istanbul ignore next */
    (cov_1pqlwrivv7().b[6][0]++, error) ||
    /* istanbul ignore next */
    (cov_1pqlwrivv7().b[6][1]++, helperText)) &&
    /* istanbul ignore next */
    (cov_1pqlwrivv7().b[6][2]++, /*#__PURE__*/
    /* istanbul ignore next */
    _jsx(
    /* istanbul ignore next */
    "p",
    /* istanbul ignore next */
    {
      className:
      /* istanbul ignore next */
      "text-sm ".concat(error ?
      /* istanbul ignore next */
      (cov_1pqlwrivv7().b[7][0]++, 'text-red-500') :
      /* istanbul ignore next */
      (cov_1pqlwrivv7().b[7][1]++, 'text-muted-foreground')),
      children:
      /* istanbul ignore next */
      (cov_1pqlwrivv7().b[8][0]++, error) ||
      /* istanbul ignore next */
      (cov_1pqlwrivv7().b[8][1]++, helperText)
    }))]
  });
}));
/* istanbul ignore next */
cov_1pqlwrivv7().s[7]++;
Input.displayName = 'Input';
export { Input };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,