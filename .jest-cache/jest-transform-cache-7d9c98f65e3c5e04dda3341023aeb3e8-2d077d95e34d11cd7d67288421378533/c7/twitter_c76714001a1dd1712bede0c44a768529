b64b12f2016546003edde9a86d343a6c
/* istanbul ignore next */
function cov_1ggzoqmx0w() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/briefings/twitter.ts";
  var hash = "c641250ac88d17bafaec7fd01ecaeb551fd6a865";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/briefings/twitter.ts",
    statementMap: {
      "0": {
        start: {
          line: 28,
          column: 42
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "1": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "2": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 37
        }
      },
      "3": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 7
        }
      },
      "4": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 40,
          column: 23
        }
      },
      "5": {
        start: {
          line: 47,
          column: 2
        },
        end: {
          line: 47,
          column: 62
        }
      },
      "6": {
        start: {
          line: 49,
          column: 2
        },
        end: {
          line: 62,
          column: 3
        }
      },
      "7": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "8": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "9": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 60,
          column: 68
        }
      },
      "10": {
        start: {
          line: 64,
          column: 2
        },
        end: {
          line: 64,
          column: 41
        }
      },
      "11": {
        start: {
          line: 74,
          column: 17
        },
        end: {
          line: 74,
          column: 35
        }
      },
      "12": {
        start: {
          line: 75,
          column: 37
        },
        end: {
          line: 81,
          column: 3
        }
      },
      "13": {
        start: {
          line: 84,
          column: 18
        },
        end: {
          line: 84,
          column: 45
        }
      },
      "14": {
        start: {
          line: 86,
          column: 2
        },
        end: {
          line: 86,
          column: 70
        }
      },
      "15": {
        start: {
          line: 89,
          column: 2
        },
        end: {
          line: 118,
          column: 3
        }
      },
      "16": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "17": {
        start: {
          line: 91,
          column: 27
        },
        end: {
          line: 96,
          column: 7
        }
      },
      "18": {
        start: {
          line: 98,
          column: 6
        },
        end: {
          line: 98,
          column: 54
        }
      },
      "19": {
        start: {
          line: 99,
          column: 6
        },
        end: {
          line: 99,
          column: 60
        }
      },
      "20": {
        start: {
          line: 100,
          column: 6
        },
        end: {
          line: 100,
          column: 64
        }
      },
      "21": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 101,
          column: 58
        }
      },
      "22": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "23": {
        start: {
          line: 111,
          column: 27
        },
        end: {
          line: 111,
          column: 130
        }
      },
      "24": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 112,
          column: 34
        }
      },
      "25": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 113,
          column: 40
        }
      },
      "26": {
        start: {
          line: 116,
          column: 6
        },
        end: {
          line: 116,
          column: 15
        }
      },
      "27": {
        start: {
          line: 120,
          column: 2
        },
        end: {
          line: 122,
          column: 4
        }
      },
      "28": {
        start: {
          line: 124,
          column: 2
        },
        end: {
          line: 124,
          column: 17
        }
      },
      "29": {
        start: {
          line: 136,
          column: 36
        },
        end: {
          line: 143,
          column: 3
        }
      },
      "30": {
        start: {
          line: 145,
          column: 2
        },
        end: {
          line: 197,
          column: 3
        }
      },
      "31": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 160,
          column: 5
        }
      },
      "32": {
        start: {
          line: 148,
          column: 19
        },
        end: {
          line: 148,
          column: 66
        }
      },
      "33": {
        start: {
          line: 149,
          column: 6
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "34": {
        start: {
          line: 159,
          column: 6
        },
        end: {
          line: 159,
          column: 33
        }
      },
      "35": {
        start: {
          line: 163,
          column: 21
        },
        end: {
          line: 168,
          column: 6
        }
      },
      "36": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 172,
          column: 5
        }
      },
      "37": {
        start: {
          line: 171,
          column: 6
        },
        end: {
          line: 171,
          column: 20
        }
      },
      "38": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 174,
          column: 46
        }
      },
      "39": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 175,
          column: 49
        }
      },
      "40": {
        start: {
          line: 178,
          column: 27
        },
        end: {
          line: 182,
          column: 5
        }
      },
      "41": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 184,
          column: 50
        }
      },
      "42": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "43": {
        start: {
          line: 188,
          column: 24
        },
        end: {
          line: 191,
          column: 7
        }
      },
      "44": {
        start: {
          line: 192,
          column: 6
        },
        end: {
          line: 192,
          column: 49
        }
      },
      "45": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 195,
          column: 73
        }
      },
      "46": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 196,
          column: 16
        }
      },
      "47": {
        start: {
          line: 199,
          column: 2
        },
        end: {
          line: 199,
          column: 16
        }
      },
      "48": {
        start: {
          line: 210,
          column: 38
        },
        end: {
          line: 210,
          column: 40
        }
      },
      "49": {
        start: {
          line: 212,
          column: 2
        },
        end: {
          line: 239,
          column: 3
        }
      },
      "50": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 216,
          column: 5
        }
      },
      "51": {
        start: {
          line: 214,
          column: 46
        },
        end: {
          line: 214,
          column: 69
        }
      },
      "52": {
        start: {
          line: 215,
          column: 6
        },
        end: {
          line: 215,
          column: 15
        }
      },
      "53": {
        start: {
          line: 219,
          column: 27
        },
        end: {
          line: 219,
          column: 66
        }
      },
      "54": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 223,
          column: 5
        }
      },
      "55": {
        start: {
          line: 222,
          column: 6
        },
        end: {
          line: 222,
          column: 15
        }
      },
      "56": {
        start: {
          line: 226,
          column: 18
        },
        end: {
          line: 226,
          column: 56
        }
      },
      "57": {
        start: {
          line: 229,
          column: 17
        },
        end: {
          line: 229,
          column: 66
        }
      },
      "58": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 238,
          column: 7
        }
      },
      "59": {
        start: {
          line: 241,
          column: 2
        },
        end: {
          line: 241,
          column: 19
        }
      },
      "60": {
        start: {
          line: 251,
          column: 30
        },
        end: {
          line: 251,
          column: 32
        }
      },
      "61": {
        start: {
          line: 253,
          column: 2
        },
        end: {
          line: 255,
          column: 3
        }
      },
      "62": {
        start: {
          line: 254,
          column: 4
        },
        end: {
          line: 254,
          column: 17
        }
      },
      "63": {
        start: {
          line: 257,
          column: 2
        },
        end: {
          line: 269,
          column: 3
        }
      },
      "64": {
        start: {
          line: 258,
          column: 22
        },
        end: {
          line: 260,
          column: 5
        }
      },
      "65": {
        start: {
          line: 259,
          column: 13
        },
        end: {
          line: 259,
          column: 37
        }
      },
      "66": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 268,
          column: 5
        }
      },
      "67": {
        start: {
          line: 263,
          column: 6
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "68": {
        start: {
          line: 271,
          column: 2
        },
        end: {
          line: 271,
          column: 15
        }
      },
      "69": {
        start: {
          line: 281,
          column: 30
        },
        end: {
          line: 285,
          column: 3
        }
      },
      "70": {
        start: {
          line: 288,
          column: 15
        },
        end: {
          line: 288,
          column: 39
        }
      },
      "71": {
        start: {
          line: 291,
          column: 23
        },
        end: {
          line: 302,
          column: 3
        }
      },
      "72": {
        start: {
          line: 304,
          column: 2
        },
        end: {
          line: 308,
          column: 3
        }
      },
      "73": {
        start: {
          line: 305,
          column: 4
        },
        end: {
          line: 307,
          column: 5
        }
      },
      "74": {
        start: {
          line: 306,
          column: 6
        },
        end: {
          line: 306,
          column: 28
        }
      },
      "75": {
        start: {
          line: 311,
          column: 2
        },
        end: {
          line: 329,
          column: 3
        }
      },
      "76": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 312,
          column: 45
        }
      },
      "77": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 328,
          column: 5
        }
      },
      "78": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 324,
          column: 21
        }
      },
      "79": {
        start: {
          line: 327,
          column: 6
        },
        end: {
          line: 327,
          column: 30
        }
      },
      "80": {
        start: {
          line: 334,
          column: 2
        },
        end: {
          line: 334,
          column: 14
        }
      },
      "81": {
        start: {
          line: 345,
          column: 18
        },
        end: {
          line: 345,
          column: 60
        }
      },
      "82": {
        start: {
          line: 347,
          column: 2
        },
        end: {
          line: 352,
          column: 3
        }
      },
      "83": {
        start: {
          line: 348,
          column: 4
        },
        end: {
          line: 348,
          column: 79
        }
      },
      "84": {
        start: {
          line: 348,
          column: 36
        },
        end: {
          line: 348,
          column: 77
        }
      },
      "85": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 351,
          column: 6
        }
      },
      "86": {
        start: {
          line: 350,
          column: 6
        },
        end: {
          line: 350,
          column: 51
        }
      },
      "87": {
        start: {
          line: 354,
          column: 15
        },
        end: {
          line: 354,
          column: 58
        }
      },
      "88": {
        start: {
          line: 355,
          column: 17
        },
        end: {
          line: 355,
          column: 68
        }
      },
      "89": {
        start: {
          line: 355,
          column: 52
        },
        end: {
          line: 355,
          column: 66
        }
      },
      "90": {
        start: {
          line: 358,
          column: 23
        },
        end: {
          line: 389,
          column: 4
        }
      },
      "91": {
        start: {
          line: 359,
          column: 29
        },
        end: {
          line: 359,
          column: 31
        }
      },
      "92": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 362,
          column: 7
        }
      },
      "93": {
        start: {
          line: 361,
          column: 6
        },
        end: {
          line: 361,
          column: 50
        }
      },
      "94": {
        start: {
          line: 361,
          column: 24
        },
        end: {
          line: 361,
          column: 50
        }
      },
      "95": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 365,
          column: 7
        }
      },
      "96": {
        start: {
          line: 364,
          column: 6
        },
        end: {
          line: 364,
          column: 54
        }
      },
      "97": {
        start: {
          line: 364,
          column: 26
        },
        end: {
          line: 364,
          column: 54
        }
      },
      "98": {
        start: {
          line: 368,
          column: 22
        },
        end: {
          line: 370,
          column: 5
        }
      },
      "99": {
        start: {
          line: 369,
          column: 13
        },
        end: {
          line: 369,
          column: 58
        }
      },
      "100": {
        start: {
          line: 371,
          column: 4
        },
        end: {
          line: 371,
          column: 45
        }
      },
      "101": {
        start: {
          line: 371,
          column: 19
        },
        end: {
          line: 371,
          column: 45
        }
      },
      "102": {
        start: {
          line: 373,
          column: 4
        },
        end: {
          line: 388,
          column: 6
        }
      },
      "103": {
        start: {
          line: 391,
          column: 2
        },
        end: {
          line: 391,
          column: 55
        }
      },
      "104": {
        start: {
          line: 398,
          column: 48
        },
        end: {
          line: 407,
          column: 3
        }
      },
      "105": {
        start: {
          line: 409,
          column: 2
        },
        end: {
          line: 409,
          column: 42
        }
      },
      "106": {
        start: {
          line: 417,
          column: 2
        },
        end: {
          line: 425,
          column: 3
        }
      },
      "107": {
        start: {
          line: 418,
          column: 4
        },
        end: {
          line: 423,
          column: 5
        }
      },
      "108": {
        start: {
          line: 422,
          column: 6
        },
        end: {
          line: 422,
          column: 24
        }
      },
      "109": {
        start: {
          line: 424,
          column: 4
        },
        end: {
          line: 424,
          column: 18
        }
      },
      "110": {
        start: {
          line: 428,
          column: 2
        },
        end: {
          line: 430,
          column: 3
        }
      },
      "111": {
        start: {
          line: 429,
          column: 4
        },
        end: {
          line: 429,
          column: 20
        }
      },
      "112": {
        start: {
          line: 432,
          column: 2
        },
        end: {
          line: 432,
          column: 15
        }
      },
      "113": {
        start: {
          line: 443,
          column: 16
        },
        end: {
          line: 443,
          column: 62
        }
      },
      "114": {
        start: {
          line: 444,
          column: 16
        },
        end: {
          line: 444,
          column: 25
        }
      },
      "115": {
        start: {
          line: 447,
          column: 21
        },
        end: {
          line: 447,
          column: 63
        }
      },
      "116": {
        start: {
          line: 450,
          column: 20
        },
        end: {
          line: 450,
          column: 63
        }
      },
      "117": {
        start: {
          line: 452,
          column: 2
        },
        end: {
          line: 455,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "getTwitterClient",
        decl: {
          start: {
            line: 33,
            column: 9
          },
          end: {
            line: 33,
            column: 25
          }
        },
        loc: {
          start: {
            line: 33,
            column: 43
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 33
      },
      "1": {
        name: "syncGlobalSourcesToDatabase",
        decl: {
          start: {
            line: 46,
            column: 22
          },
          end: {
            line: 46,
            column: 49
          }
        },
        loc: {
          start: {
            line: 46,
            column: 67
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 46
      },
      "2": {
        name: "fetchTweetsForBriefing",
        decl: {
          start: {
            line: 70,
            column: 22
          },
          end: {
            line: 70,
            column: 44
          }
        },
        loc: {
          start: {
            line: 73,
            column: 30
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 73
      },
      "3": {
        name: "fetchTweetsFromSource",
        decl: {
          start: {
            line: 130,
            column: 15
          },
          end: {
            line: 130,
            column: 36
          }
        },
        loc: {
          start: {
            line: 135,
            column: 30
          },
          end: {
            line: 200,
            column: 1
          }
        },
        line: 135
      },
      "4": {
        name: "processTweetsForRelevance",
        decl: {
          start: {
            line: 205,
            column: 15
          },
          end: {
            line: 205,
            column: 40
          }
        },
        loc: {
          start: {
            line: 209,
            column: 29
          },
          end: {
            line: 242,
            column: 1
          }
        },
        line: 209
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 214,
            column: 38
          },
          end: {
            line: 214,
            column: 39
          }
        },
        loc: {
          start: {
            line: 214,
            column: 46
          },
          end: {
            line: 214,
            column: 69
          }
        },
        line: 214
      },
      "6": {
        name: "extractMediaFromTweet",
        decl: {
          start: {
            line: 247,
            column: 9
          },
          end: {
            line: 247,
            column: 30
          }
        },
        loc: {
          start: {
            line: 250,
            column: 16
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 250
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 259,
            column: 6
          },
          end: {
            line: 259,
            column: 7
          }
        },
        loc: {
          start: {
            line: 259,
            column: 13
          },
          end: {
            line: 259,
            column: 37
          }
        },
        line: 259
      },
      "8": {
        name: "extractTagsFromTweet",
        decl: {
          start: {
            line: 277,
            column: 15
          },
          end: {
            line: 277,
            column: 35
          }
        },
        loc: {
          start: {
            line: 280,
            column: 26
          },
          end: {
            line: 335,
            column: 1
          }
        },
        line: 280
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 316,
            column: 22
          },
          end: {
            line: 316,
            column: 23
          }
        },
        loc: {
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 324,
            column: 21
          }
        },
        line: 317
      },
      "10": {
        name: "createFeedItemsFromProcessedTweets",
        decl: {
          start: {
            line: 340,
            column: 15
          },
          end: {
            line: 340,
            column: 49
          }
        },
        loc: {
          start: {
            line: 343,
            column: 18
          },
          end: {
            line: 392,
            column: 1
          }
        },
        line: 343
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 348,
            column: 26
          },
          end: {
            line: 348,
            column: 27
          }
        },
        loc: {
          start: {
            line: 348,
            column: 36
          },
          end: {
            line: 348,
            column: 77
          }
        },
        line: 348
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 349,
            column: 28
          },
          end: {
            line: 349,
            column: 29
          }
        },
        loc: {
          start: {
            line: 350,
            column: 6
          },
          end: {
            line: 350,
            column: 51
          }
        },
        line: 350
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 355,
            column: 45
          },
          end: {
            line: 355,
            column: 46
          }
        },
        loc: {
          start: {
            line: 355,
            column: 52
          },
          end: {
            line: 355,
            column: 66
          }
        },
        line: 355
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 358,
            column: 43
          },
          end: {
            line: 358,
            column: 44
          }
        },
        loc: {
          start: {
            line: 358,
            column: 51
          },
          end: {
            line: 389,
            column: 3
          }
        },
        line: 358
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 360,
            column: 26
          },
          end: {
            line: 360,
            column: 27
          }
        },
        loc: {
          start: {
            line: 360,
            column: 36
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 360
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 363,
            column: 28
          },
          end: {
            line: 363,
            column: 29
          }
        },
        loc: {
          start: {
            line: 363,
            column: 40
          },
          end: {
            line: 365,
            column: 5
          }
        },
        line: 363
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 369,
            column: 6
          },
          end: {
            line: 369,
            column: 7
          }
        },
        loc: {
          start: {
            line: 369,
            column: 13
          },
          end: {
            line: 369,
            column: 58
          }
        },
        line: 369
      },
      "18": {
        name: "mapTransferType",
        decl: {
          start: {
            line: 397,
            column: 9
          },
          end: {
            line: 397,
            column: 24
          }
        },
        loc: {
          start: {
            line: 397,
            column: 66
          },
          end: {
            line: 410,
            column: 1
          }
        },
        line: 397
      },
      "19": {
        name: "calculatePriority",
        decl: {
          start: {
            line: 415,
            column: 9
          },
          end: {
            line: 415,
            column: 26
          }
        },
        loc: {
          start: {
            line: 415,
            column: 77
          },
          end: {
            line: 433,
            column: 1
          }
        },
        line: 415
      },
      "20": {
        name: "getTweetsForBriefing",
        decl: {
          start: {
            line: 438,
            column: 22
          },
          end: {
            line: 438,
            column: 42
          }
        },
        loc: {
          start: {
            line: 441,
            column: 3
          },
          end: {
            line: 456,
            column: 1
          }
        },
        line: 441
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 2
          },
          end: {
            line: 39,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 2
          },
          end: {
            line: 39,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 111,
            column: 72
          },
          end: {
            line: 111,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 97
          },
          end: {
            line: 111,
            column: 110
          }
        }, {
          start: {
            line: 111,
            column: 113
          },
          end: {
            line: 111,
            column: 128
          }
        }],
        line: 111
      },
      "2": {
        loc: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "3": {
        loc: {
          start: {
            line: 167,
            column: 15
          },
          end: {
            line: 167,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 15
          },
          end: {
            line: 167,
            column: 33
          }
        }, {
          start: {
            line: 167,
            column: 37
          },
          end: {
            line: 167,
            column: 46
          }
        }],
        line: 167
      },
      "4": {
        loc: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "5": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 170,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 170,
            column: 22
          }
        }, {
          start: {
            line: 170,
            column: 26
          },
          end: {
            line: 170,
            column: 52
          }
        }],
        line: 170
      },
      "6": {
        loc: {
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "7": {
        loc: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "8": {
        loc: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "9": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 221,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 221,
            column: 41
          }
        }, {
          start: {
            line: 221,
            column: 45
          },
          end: {
            line: 221,
            column: 76
          }
        }],
        line: 221
      },
      "10": {
        loc: {
          start: {
            line: 253,
            column: 2
          },
          end: {
            line: 255,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 2
          },
          end: {
            line: 255,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "11": {
        loc: {
          start: {
            line: 253,
            column: 6
          },
          end: {
            line: 253,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 6
          },
          end: {
            line: 253,
            column: 36
          }
        }, {
          start: {
            line: 253,
            column: 40
          },
          end: {
            line: 253,
            column: 65
          }
        }],
        line: 253
      },
      "12": {
        loc: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 268,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 268,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "13": {
        loc: {
          start: {
            line: 265,
            column: 13
          },
          end: {
            line: 265,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 13
          },
          end: {
            line: 265,
            column: 26
          }
        }, {
          start: {
            line: 265,
            column: 30
          },
          end: {
            line: 265,
            column: 57
          }
        }, {
          start: {
            line: 265,
            column: 61
          },
          end: {
            line: 265,
            column: 63
          }
        }],
        line: 265
      },
      "14": {
        loc: {
          start: {
            line: 305,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "15": {
        loc: {
          start: {
            line: 311,
            column: 2
          },
          end: {
            line: 329,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 2
          },
          end: {
            line: 329,
            column: 3
          }
        }, {
          start: {
            line: 313,
            column: 9
          },
          end: {
            line: 329,
            column: 3
          }
        }],
        line: 311
      },
      "16": {
        loc: {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 315
      },
      "17": {
        loc: {
          start: {
            line: 361,
            column: 6
          },
          end: {
            line: 361,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 6
          },
          end: {
            line: 361,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 361
      },
      "18": {
        loc: {
          start: {
            line: 364,
            column: 6
          },
          end: {
            line: 364,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 6
          },
          end: {
            line: 364,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "19": {
        loc: {
          start: {
            line: 369,
            column: 13
          },
          end: {
            line: 369,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 13
          },
          end: {
            line: 369,
            column: 35
          }
        }, {
          start: {
            line: 369,
            column: 39
          },
          end: {
            line: 369,
            column: 58
          }
        }],
        line: 369
      },
      "20": {
        loc: {
          start: {
            line: 371,
            column: 4
          },
          end: {
            line: 371,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 4
          },
          end: {
            line: 371,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 371
      },
      "21": {
        loc: {
          start: {
            line: 382,
            column: 14
          },
          end: {
            line: 382,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 382,
            column: 15
          },
          end: {
            line: 382,
            column: 43
          }
        }, {
          start: {
            line: 382,
            column: 48
          },
          end: {
            line: 382,
            column: 57
          }
        }],
        line: 382
      },
      "22": {
        loc: {
          start: {
            line: 409,
            column: 9
          },
          end: {
            line: 409,
            column: 41
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 409,
            column: 16
          },
          end: {
            line: 409,
            column: 29
          }
        }, {
          start: {
            line: 409,
            column: 32
          },
          end: {
            line: 409,
            column: 41
          }
        }],
        line: 409
      },
      "23": {
        loc: {
          start: {
            line: 417,
            column: 2
          },
          end: {
            line: 425,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 417,
            column: 2
          },
          end: {
            line: 425,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 417
      },
      "24": {
        loc: {
          start: {
            line: 417,
            column: 6
          },
          end: {
            line: 417,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 6
          },
          end: {
            line: 417,
            column: 23
          }
        }, {
          start: {
            line: 417,
            column: 27
          },
          end: {
            line: 417,
            column: 58
          }
        }],
        line: 417
      },
      "25": {
        loc: {
          start: {
            line: 418,
            column: 4
          },
          end: {
            line: 423,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 4
          },
          end: {
            line: 423,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "26": {
        loc: {
          start: {
            line: 419,
            column: 6
          },
          end: {
            line: 420,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 419,
            column: 6
          },
          end: {
            line: 419,
            column: 49
          }
        }, {
          start: {
            line: 420,
            column: 6
          },
          end: {
            line: 420,
            column: 47
          }
        }],
        line: 419
      },
      "27": {
        loc: {
          start: {
            line: 428,
            column: 2
          },
          end: {
            line: 430,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 2
          },
          end: {
            line: 430,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 428
      },
      "28": {
        loc: {
          start: {
            line: 428,
            column: 6
          },
          end: {
            line: 428,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 428,
            column: 6
          },
          end: {
            line: 428,
            column: 22
          }
        }, {
          start: {
            line: 428,
            column: 26
          },
          end: {
            line: 428,
            column: 57
          }
        }],
        line: 428
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c641250ac88d17bafaec7fd01ecaeb551fd6a865"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ggzoqmx0w = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ggzoqmx0w();
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Twitter Integration for Briefing Generation
 * Fetches and processes tweets from ITK sources for briefings
 */

import { TwitterClient } from "@/lib/twitter/client";
import { classifyTransferTweet } from "@/lib/twitter/transferClassifier";
import { GLOBAL_ITK_SOURCES } from "@/lib/twitter/globalSources";
import { getActiveITKSources, updateSourceFetchStatus, upsertITKSource } from "@/lib/database/sources";
import { createFeedItemsFromTweets, getUnprocessedFeedItems } from "@/lib/database/feedItems";
import { findOrCreateTags } from "@/lib/database/tags";
import { validateEnvironment } from "@/lib/validations/environment";
// Initialize Twitter client
var twitterClient =
/* istanbul ignore next */
(cov_1ggzoqmx0w().s[0]++, null);

/**
 * Get or create Twitter client
 */
function getTwitterClient() {
  /* istanbul ignore next */
  cov_1ggzoqmx0w().f[0]++;
  cov_1ggzoqmx0w().s[1]++;
  if (!twitterClient) {
    /* istanbul ignore next */
    cov_1ggzoqmx0w().b[0][0]++;
    var env =
    /* istanbul ignore next */
    (cov_1ggzoqmx0w().s[2]++, validateEnvironment());
    /* istanbul ignore next */
    cov_1ggzoqmx0w().s[3]++;
    twitterClient = new TwitterClient({
      bearerToken: env.TWITTER_BEARER_TOKEN
    });
  } else
  /* istanbul ignore next */
  {
    cov_1ggzoqmx0w().b[0][1]++;
  }
  cov_1ggzoqmx0w().s[4]++;
  return twitterClient;
}

/**
 * Sync global sources to database
 */
export
/* istanbul ignore next */
function syncGlobalSourcesToDatabase() {
  return _syncGlobalSourcesToDatabase.apply(this, arguments);
}

/**
 * Fetch tweets from ITK sources for a time period
 */
/* istanbul ignore next */
function _syncGlobalSourcesToDatabase() {
  _syncGlobalSourcesToDatabase = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee()
  /* istanbul ignore next */
  {
    var _iterator2, _step2, source, _t, _t2;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_1ggzoqmx0w().f[1]++;
          cov_1ggzoqmx0w().s[5]++;
          console.log("🔄 Syncing global ITK sources to database...");
          cov_1ggzoqmx0w().s[6]++;
          _iterator2 = _createForOfIteratorHelper(GLOBAL_ITK_SOURCES);
          _context.p = 1;
          _iterator2.s();
        case 2:
          if ((_step2 = _iterator2.n()).done) {
            _context.n = 7;
            break;
          }
          source = _step2.value;
          cov_1ggzoqmx0w().s[7]++;
          _context.p = 3;
          cov_1ggzoqmx0w().s[8]++;
          _context.n = 4;
          return upsertITKSource({
            username: source.handle.replace("@", ""),
            name: source.name,
            tier: source.tier,
            reliability: source.reliability,
            region: source.region,
            isVerified: source.isVerified
          });
        case 4:
          _context.n = 6;
          break;
        case 5:
          _context.p = 5;
          _t = _context.v;
          cov_1ggzoqmx0w().s[9]++;
          console.error(
          /* istanbul ignore next */
          "Failed to sync source ".concat(source.name, ":"),
          /* istanbul ignore next */
          _t);
        case 6:
          _context.n = 2;
          break;
        case 7:
          _context.n = 9;
          break;
        case 8:
          _context.p = 8;
          _t2 = _context.v;
          _iterator2.e(_t2);
        case 9:
          _context.p = 9;
          _iterator2.f();
          return _context.f(9);
        case 10:
          cov_1ggzoqmx0w().s[10]++;
          console.log("✅ Global sources synced");
        case 11:
          return _context.a(2);
      }
    }, _callee, null, [[3, 5], [1, 8, 9, 10]]);
  }));
  return _syncGlobalSourcesToDatabase.apply(this, arguments);
}
export
/* istanbul ignore next */
function fetchTweetsForBriefing(_x, _x2) {
  return _fetchTweetsForBriefing.apply(this, arguments);
}

/**
 * Fetch tweets from a single source
 */
/* istanbul ignore next */
function _fetchTweetsForBriefing() {
  _fetchTweetsForBriefing = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2(since, until)
  /* istanbul ignore next */
  {
    var client, results, sources, _iterator3, _step3, source, sourceResult, errorMessage, _t3, _t4;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_1ggzoqmx0w().f[2]++;
          client = (cov_1ggzoqmx0w().s[11]++, getTwitterClient());
          results = (cov_1ggzoqmx0w().s[12]++, {
            totalTweets: 0,
            relevantTweets: 0,
            feedItemsCreated: 0,
            errors: [],
            sourceStats: {}
          }); // Get active sources from database
          cov_1ggzoqmx0w().s[13]++;
          _context2.n = 1;
          return getActiveITKSources();
        case 1:
          sources = _context2.v;
          cov_1ggzoqmx0w().s[14]++;
          console.log(
          /* istanbul ignore next */
          "\uD83D\uDCE1 Fetching tweets from ".concat(sources.length, " sources..."));

          // Process each source
          cov_1ggzoqmx0w().s[15]++;
          _iterator3 = _createForOfIteratorHelper(sources);
          _context2.p = 2;
          _iterator3.s();
        case 3:
          if ((_step3 = _iterator3.n()).done) {
            _context2.n = 9;
            break;
          }
          source = _step3.value;
          cov_1ggzoqmx0w().s[16]++;
          _context2.p = 4;
          cov_1ggzoqmx0w().s[17]++;
          _context2.n = 5;
          return fetchTweetsFromSource(client, source, since, until);
        case 5:
          sourceResult = _context2.v;
          cov_1ggzoqmx0w().s[18]++;
          results.totalTweets += sourceResult.totalTweets;
          cov_1ggzoqmx0w().s[19]++;
          results.relevantTweets += sourceResult.relevantTweets;
          cov_1ggzoqmx0w().s[20]++;
          results.feedItemsCreated += sourceResult.feedItemsCreated;
          cov_1ggzoqmx0w().s[21]++;
          results.sourceStats[source.username] = sourceResult;

          // Update source fetch status
          cov_1ggzoqmx0w().s[22]++;
          _context2.n = 6;
          return updateSourceFetchStatus(source.id, {
            lastFetchedAt: new Date(),
            lastTweetId: sourceResult.lastTweetId,
            tweetsProcessed: sourceResult.totalTweets,
            relevantTweets: sourceResult.relevantTweets
          });
        case 6:
          _context2.n = 8;
          break;
        case 7:
          _context2.p = 7;
          _t3 = _context2.v;
          errorMessage = (cov_1ggzoqmx0w().s[23]++, "Failed to fetch from @".concat(source.username, ": ").concat(
          /* istanbul ignore next */
          _t3 instanceof Error ?
          /* istanbul ignore next */
          (cov_1ggzoqmx0w().b[1][0]++,
          /* istanbul ignore next */
          _t3.message) :
          /* istanbul ignore next */
          (cov_1ggzoqmx0w().b[1][1]++, "Unknown error")));
          cov_1ggzoqmx0w().s[24]++;
          console.error(errorMessage);
          cov_1ggzoqmx0w().s[25]++;
          results.errors.push(errorMessage);

          // Don't fail the entire process for one source
          cov_1ggzoqmx0w().s[26]++;
          return _context2.a(3, 8);
        case 8:
          _context2.n = 3;
          break;
        case 9:
          _context2.n = 11;
          break;
        case 10:
          _context2.p = 10;
          _t4 = _context2.v;
          _iterator3.e(_t4);
        case 11:
          _context2.p = 11;
          _iterator3.f();
          return _context2.f(11);
        case 12:
          cov_1ggzoqmx0w().s[27]++;
          console.log(
          /* istanbul ignore next */
          "\u2705 Fetched ".concat(results.totalTweets, " tweets, ").concat(results.relevantTweets, " relevant"));
          cov_1ggzoqmx0w().s[28]++;
          return _context2.a(2, results);
      }
    }, _callee2, null, [[4, 7], [2, 10, 11, 12]]);
  }));
  return _fetchTweetsForBriefing.apply(this, arguments);
}
/* istanbul ignore next */
function fetchTweetsFromSource(_x3, _x4, _x5, _x6) {
  return _fetchTweetsFromSource.apply(this, arguments);
}
/**
 * Process tweets for transfer relevance
 */
/* istanbul ignore next */
function _fetchTweetsFromSource() {
  _fetchTweetsFromSource = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee3(client, source, since, until)
  /* istanbul ignore next */
  {
    var result, user, timeline, relevantTweets, feedItems, _t5;
    return _regenerator().w(function (_context3) {
      while (1) switch (_context3.n) {
        case 0:
          cov_1ggzoqmx0w().f[3]++;
          result = (cov_1ggzoqmx0w().s[29]++, {
            sourceId: source.id,
            sourceName: source.name,
            totalTweets: 0,
            relevantTweets: 0,
            feedItemsCreated: 0,
            lastTweetId: undefined
          });
          cov_1ggzoqmx0w().s[30]++;
          _context3.p = 1;
          cov_1ggzoqmx0w().s[31]++;
          if (source.twitterId) {
            _context3.n = 4;
            break;
          }
          cov_1ggzoqmx0w().b[2][0]++;
          cov_1ggzoqmx0w().s[32]++;
          _context3.n = 2;
          return client.getUserByUsername(source.username);
        case 2:
          user = _context3.v;
          cov_1ggzoqmx0w().s[33]++;
          _context3.n = 3;
          return upsertITKSource({
            username: source.username,
            name: source.name,
            twitterId: user.id,
            profileImageUrl: user.profile_image_url,
            description: user.description,
            followerCount: user.public_metrics.followers_count,
            followingCount: user.public_metrics.following_count,
            tweetCount: user.public_metrics.tweet_count
          });
        case 3:
          cov_1ggzoqmx0w().s[34]++;
          source.twitterId = user.id;
          _context3.n = 5;
          break;
        case 4:
          cov_1ggzoqmx0w().b[2][1]++;
        case 5:
          cov_1ggzoqmx0w().s[35]++;
          _context3.n = 6;
          return client.getUserTimeline(source.twitterId, {
            maxResults: 100,
            startTime: since.toISOString(),
            endTime: until.toISOString(),
            sinceId:
            /* istanbul ignore next */
            (cov_1ggzoqmx0w().b[3][0]++, source.lastTweetId) ||
            /* istanbul ignore next */
            (cov_1ggzoqmx0w().b[3][1]++, undefined)
          });
        case 6:
          timeline = _context3.v;
          cov_1ggzoqmx0w().s[36]++;
          if (!(
          /* istanbul ignore next */
          (cov_1ggzoqmx0w().b[5][0]++, !timeline.data) ||
          /* istanbul ignore next */
          (cov_1ggzoqmx0w().b[5][1]++, timeline.data.length === 0))) {
            _context3.n = 7;
            break;
          }
          cov_1ggzoqmx0w().b[4][0]++;
          cov_1ggzoqmx0w().s[37]++;
          return _context3.a(2, result);
        case 7:
          cov_1ggzoqmx0w().b[4][1]++;
        case 8:
          cov_1ggzoqmx0w().s[38]++;
          result.totalTweets = timeline.data.length;
          cov_1ggzoqmx0w().s[39]++;
          result.lastTweetId = timeline.meta.newest_id;

          // Process tweets
          cov_1ggzoqmx0w().s[40]++;
          _context3.n = 9;
          return processTweetsForRelevance(timeline.data, source, timeline);
        case 9:
          relevantTweets = _context3.v;
          cov_1ggzoqmx0w().s[41]++;
          result.relevantTweets = relevantTweets.length;
          cov_1ggzoqmx0w().s[42]++;
          if (!(relevantTweets.length > 0)) {
            _context3.n = 11;
            break;
          }
          cov_1ggzoqmx0w().b[6][0]++;
          cov_1ggzoqmx0w().s[43]++;
          _context3.n = 10;
          return createFeedItemsFromProcessedTweets(relevantTweets, source);
        case 10:
          feedItems = _context3.v;
          cov_1ggzoqmx0w().s[44]++;
          result.feedItemsCreated = feedItems.length;
          _context3.n = 12;
          break;
        case 11:
          cov_1ggzoqmx0w().b[6][1]++;
        case 12:
          _context3.n = 14;
          break;
        case 13:
          _context3.p = 13;
          _t5 = _context3.v;
          cov_1ggzoqmx0w().s[45]++;
          console.error(
          /* istanbul ignore next */
          "Error processing source @".concat(source.username, ":"),
          /* istanbul ignore next */
          _t5);
          cov_1ggzoqmx0w().s[46]++;
          throw _t5;
        case 14:
          cov_1ggzoqmx0w().s[47]++;
          return _context3.a(2, result);
      }
    }, _callee3, null, [[1, 13]]);
  }));
  return _fetchTweetsFromSource.apply(this, arguments);
}
/* istanbul ignore next */
function processTweetsForRelevance(_x7, _x8, _x9) {
  return _processTweetsForRelevance.apply(this, arguments);
}
/**
 * Extract media from tweet
 */
/* istanbul ignore next */
function _processTweetsForRelevance() {
  _processTweetsForRelevance = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee4(tweets, source, timeline)
  /* istanbul ignore next */
  {
    var processed, _iterator4, _step4, _tweet$referenced_twe, tweet, classification, media, tags, _t6;
    return _regenerator().w(function (_context4) {
      while (1) switch (_context4.n) {
        case 0:
          cov_1ggzoqmx0w().f[4]++;
          processed = (cov_1ggzoqmx0w().s[48]++, []);
          cov_1ggzoqmx0w().s[49]++;
          _iterator4 = _createForOfIteratorHelper(tweets);
          _context4.p = 1;
          _iterator4.s();
        case 2:
          if ((_step4 = _iterator4.n()).done) {
            _context4.n = 10;
            break;
          }
          tweet = _step4.value;
          cov_1ggzoqmx0w().s[50]++;
          if (!((_tweet$referenced_twe = tweet.referenced_tweets) !== null && _tweet$referenced_twe !== void 0 &&
          /* istanbul ignore next */
          _tweet$referenced_twe.some(function (rt) {
            /* istanbul ignore next */
            cov_1ggzoqmx0w().f[5]++;
            cov_1ggzoqmx0w().s[51]++;
            return rt.type === "retweeted";
          }))) {
            _context4.n = 3;
            break;
          }
          cov_1ggzoqmx0w().b[7][0]++;
          cov_1ggzoqmx0w().s[52]++;
          return _context4.a(3, 9);
        case 3:
          cov_1ggzoqmx0w().b[7][1]++;
        case 4:
          cov_1ggzoqmx0w().s[53]++;
          _context4.n = 5;
          return classifyTransferTweet(tweet.text);
        case 5:
          classification = _context4.v;
          cov_1ggzoqmx0w().s[54]++;
          if (!(
          /* istanbul ignore next */
          (cov_1ggzoqmx0w().b[9][0]++, !classification.isTransferRelated) ||
          /* istanbul ignore next */
          (cov_1ggzoqmx0w().b[9][1]++, classification.confidence < 0.5))) {
            _context4.n = 6;
            break;
          }
          cov_1ggzoqmx0w().b[8][0]++;
          cov_1ggzoqmx0w().s[55]++;
          return _context4.a(3, 9);
        case 6:
          cov_1ggzoqmx0w().b[8][1]++;
        case 7:
          // Extract media
          media = (cov_1ggzoqmx0w().s[56]++, extractMediaFromTweet(tweet, timeline)); // Extract tags
          cov_1ggzoqmx0w().s[57]++;
          _context4.n = 8;
          return extractTagsFromTweet(tweet, classification);
        case 8:
          tags = _context4.v;
          cov_1ggzoqmx0w().s[58]++;
          processed.push({
            tweet: tweet,
            classification: classification,
            source: source,
            media: media,
            tags: tags,
            tweetUrl:
            /* istanbul ignore next */
            "https://twitter.com/".concat(source.username, "/status/").concat(tweet.id)
          });
        case 9:
          _context4.n = 2;
          break;
        case 10:
          _context4.n = 12;
          break;
        case 11:
          _context4.p = 11;
          _t6 = _context4.v;
          _iterator4.e(_t6);
        case 12:
          _context4.p = 12;
          _iterator4.f();
          return _context4.f(12);
        case 13:
          cov_1ggzoqmx0w().s[59]++;
          return _context4.a(2, processed);
      }
    }, _callee4, null, [[1, 11, 12, 13]]);
  }));
  return _processTweetsForRelevance.apply(this, arguments);
}
function extractMediaFromTweet(tweet, timeline) {
  /* istanbul ignore next */
  var _tweet$attachments, _timeline$includes;
  cov_1ggzoqmx0w().f[6]++;
  var media =
  /* istanbul ignore next */
  (cov_1ggzoqmx0w().s[60]++, []);
  /* istanbul ignore next */
  cov_1ggzoqmx0w().s[61]++;
  if (
  /* istanbul ignore next */
  (cov_1ggzoqmx0w().b[11][0]++, !
  /* istanbul ignore next */
  ((_tweet$attachments = tweet.attachments) !== null && _tweet$attachments !== void 0 &&
  /* istanbul ignore next */
  _tweet$attachments.media_keys)) ||
  /* istanbul ignore next */
  (cov_1ggzoqmx0w().b[11][1]++, !
  /* istanbul ignore next */
  ((_timeline$includes = timeline.includes) !== null && _timeline$includes !== void 0 &&
  /* istanbul ignore next */
  _timeline$includes.media))) {
    /* istanbul ignore next */
    cov_1ggzoqmx0w().b[10][0]++;
    cov_1ggzoqmx0w().s[62]++;
    return media;
  } else
  /* istanbul ignore next */
  {
    cov_1ggzoqmx0w().b[10][1]++;
  }
  cov_1ggzoqmx0w().s[63]++;
  var _iterator = _createForOfIteratorHelper(tweet.attachments.media_keys),
    _step;
  /* istanbul ignore next */
  try {
    var _loop = function _loop() {
      /* istanbul ignore next */
      var mediaKey = _step.value;
      var mediaItem =
      /* istanbul ignore next */
      (cov_1ggzoqmx0w().s[64]++, timeline.includes.media.find(function (m) {
        /* istanbul ignore next */
        cov_1ggzoqmx0w().f[7]++;
        cov_1ggzoqmx0w().s[65]++;
        return m.media_key === mediaKey;
      }));
      /* istanbul ignore next */
      cov_1ggzoqmx0w().s[66]++;
      if (mediaItem) {
        /* istanbul ignore next */
        cov_1ggzoqmx0w().b[12][0]++;
        cov_1ggzoqmx0w().s[67]++;
        media.push({
          type: mediaItem.type,
          url:
          /* istanbul ignore next */
          (cov_1ggzoqmx0w().b[13][0]++, mediaItem.url) ||
          /* istanbul ignore next */
          (cov_1ggzoqmx0w().b[13][1]++, mediaItem.preview_image_url) ||
          /* istanbul ignore next */
          (cov_1ggzoqmx0w().b[13][2]++, ""),
          altText: undefined // Not available in current response
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ggzoqmx0w().b[12][1]++;
      }
    };
    for (
    /* istanbul ignore next */
    _iterator.s();
    /* istanbul ignore next */
    !(_step = _iterator.n()).done;)
    /* istanbul ignore next */
    {
      _loop();
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  cov_1ggzoqmx0w().s[68]++;
  return media;
}

/**
 * Extract tags from tweet and classification
 */
/* istanbul ignore next */
function extractTagsFromTweet(_x0, _x1) {
  return _extractTagsFromTweet.apply(this, arguments);
}
/**
 * Create feed items from processed tweets
 */
/* istanbul ignore next */
function _extractTagsFromTweet() {
  _extractTagsFromTweet = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee5(tweet, classification)
  /* istanbul ignore next */
  {
    var tags, text, clubPatterns, _i, _clubPatterns, _clubPatterns$_i, pattern, club;
    return _regenerator().w(function (_context5) {
      while (1) switch (_context5.n) {
        case 0:
          cov_1ggzoqmx0w().f[8]++;
          tags = (cov_1ggzoqmx0w().s[69]++, {
            clubs: [],
            players: [],
            leagues: []
          }); // Extract from classification keywords
          text = (cov_1ggzoqmx0w().s[70]++, tweet.text.toLowerCase()); // Club detection (basic - could be enhanced with NLP)
          clubPatterns = (cov_1ggzoqmx0w().s[71]++, [{
            pattern: /manchester united|man utd|mufc/gi,
            club: "Manchester United"
          }, {
            pattern: /manchester city|man city|mcfc/gi,
            club: "Manchester City"
          }, {
            pattern: /liverpool|lfc/gi,
            club: "Liverpool"
          }, {
            pattern: /chelsea|cfc/gi,
            club: "Chelsea"
          }, {
            pattern: /arsenal|afc/gi,
            club: "Arsenal"
          }, {
            pattern: /tottenham|spurs|thfc/gi,
            club: "Tottenham"
          }, {
            pattern: /real madrid|madrid/gi,
            club: "Real Madrid"
          }, {
            pattern: /barcelona|barca|fcb/gi,
            club: "Barcelona"
          }, {
            pattern: /bayern|fcb/gi,
            club: "Bayern Munich"
          }, {
            pattern: /psg|paris/gi,
            club: "PSG"
          }]);
          cov_1ggzoqmx0w().s[72]++;
          for (
          /* istanbul ignore next */
          _i = 0, _clubPatterns = clubPatterns;
          /* istanbul ignore next */
          _i < _clubPatterns.length;
          /* istanbul ignore next */
          _i++) {
            /* istanbul ignore next */
            _clubPatterns$_i = _clubPatterns[_i], pattern = _clubPatterns$_i.pattern, club = _clubPatterns$_i.club;
            /* istanbul ignore next */
            cov_1ggzoqmx0w().s[73]++;
            if (pattern.test(text)) {
              /* istanbul ignore next */
              cov_1ggzoqmx0w().b[14][0]++;
              cov_1ggzoqmx0w().s[74]++;
              tags.clubs.push(club);
            } else
            /* istanbul ignore next */
            {
              cov_1ggzoqmx0w().b[14][1]++;
            }
          }

          // League detection
          cov_1ggzoqmx0w().s[75]++;
          if (classification.league) {
            /* istanbul ignore next */
            cov_1ggzoqmx0w().b[15][0]++;
            cov_1ggzoqmx0w().s[76]++;
            tags.leagues.push(classification.league);
          } else {
            /* istanbul ignore next */
            cov_1ggzoqmx0w().b[15][1]++;
            cov_1ggzoqmx0w().s[77]++;
            // Infer from clubs
            if (tags.clubs.some(function (c) {
              /* istanbul ignore next */
              cov_1ggzoqmx0w().f[9]++;
              cov_1ggzoqmx0w().s[78]++;
              return ["Manchester United", "Manchester City", "Liverpool", "Chelsea", "Arsenal", "Tottenham"].includes(c);
            })) {
              /* istanbul ignore next */
              cov_1ggzoqmx0w().b[16][0]++;
              cov_1ggzoqmx0w().s[79]++;
              tags.leagues.push("PL");
            } else
            /* istanbul ignore next */
            {
              cov_1ggzoqmx0w().b[16][1]++;
            }
          }

          // Player extraction would require more sophisticated NLP
          // For now, we'll rely on Terry AI to extract player names during content generation
          cov_1ggzoqmx0w().s[80]++;
          return _context5.a(2, tags);
      }
    }, _callee5);
  }));
  return _extractTagsFromTweet.apply(this, arguments);
}
/* istanbul ignore next */
function createFeedItemsFromProcessedTweets(_x10, _x11) {
  return _createFeedItemsFromProcessedTweets.apply(this, arguments);
}
/**
 * Map classification transfer type to enum
 */
/* istanbul ignore next */
function _createFeedItemsFromProcessedTweets() {
  _createFeedItemsFromProcessedTweets = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee6(processedTweets, source)
  /* istanbul ignore next */
  {
    var allTags, _iterator5, _step5, pt, tags, tagMap, feedItemData;
    return _regenerator().w(function (_context6) {
      while (1) switch (_context6.n) {
        case 0:
          cov_1ggzoqmx0w().f[10]++;
          // Create tags first
          allTags = (cov_1ggzoqmx0w().s[81]++, new Set());
          cov_1ggzoqmx0w().s[82]++;
          _iterator5 = _createForOfIteratorHelper(processedTweets);
          try {
            for (
            /* istanbul ignore next */
            _iterator5.s();
            /* istanbul ignore next */
            !(_step5 = _iterator5.n()).done;) {
              /* istanbul ignore next */
              pt = _step5.value;
              /* istanbul ignore next */
              cov_1ggzoqmx0w().s[83]++;
              pt.tags.clubs.forEach(function (club) {
                /* istanbul ignore next */
                cov_1ggzoqmx0w().f[11]++;
                cov_1ggzoqmx0w().s[84]++;
                return allTags.add({
                  name: club,
                  type: "CLUB"
                });
              });
              /* istanbul ignore next */
              cov_1ggzoqmx0w().s[85]++;
              pt.tags.players.forEach(function (player) {
                /* istanbul ignore next */
                cov_1ggzoqmx0w().f[12]++;
                cov_1ggzoqmx0w().s[86]++;
                return allTags.add({
                  name: player,
                  type: "PLAYER"
                });
              });
            }
          } catch (err) {
            _iterator5.e(err);
          } finally {
            _iterator5.f();
          }
          cov_1ggzoqmx0w().s[87]++;
          _context6.n = 1;
          return findOrCreateTags(Array.from(allTags));
        case 1:
          tags = _context6.v;
          tagMap = (cov_1ggzoqmx0w().s[88]++, Object.fromEntries(tags.map(function (t) {
            /* istanbul ignore next */
            cov_1ggzoqmx0w().f[13]++;
            cov_1ggzoqmx0w().s[89]++;
            return [t.name, t.id];
          }))); // Prepare feed items
          feedItemData = (cov_1ggzoqmx0w().s[90]++, processedTweets.map(function (pt) {
            /* istanbul ignore next */
            cov_1ggzoqmx0w().f[14]++;
            var tagIds =
            /* istanbul ignore next */
            (cov_1ggzoqmx0w().s[91]++, []);
            /* istanbul ignore next */
            cov_1ggzoqmx0w().s[92]++;
            pt.tags.clubs.forEach(function (club) {
              /* istanbul ignore next */
              cov_1ggzoqmx0w().f[15]++;
              cov_1ggzoqmx0w().s[93]++;
              if (tagMap[club]) {
                /* istanbul ignore next */
                cov_1ggzoqmx0w().b[17][0]++;
                cov_1ggzoqmx0w().s[94]++;
                tagIds.push(tagMap[club]);
              } else
              /* istanbul ignore next */
              {
                cov_1ggzoqmx0w().b[17][1]++;
              }
            });
            /* istanbul ignore next */
            cov_1ggzoqmx0w().s[95]++;
            pt.tags.players.forEach(function (player) {
              /* istanbul ignore next */
              cov_1ggzoqmx0w().f[16]++;
              cov_1ggzoqmx0w().s[96]++;
              if (tagMap[player]) {
                /* istanbul ignore next */
                cov_1ggzoqmx0w().b[18][0]++;
                cov_1ggzoqmx0w().s[97]++;
                tagIds.push(tagMap[player]);
              } else
              /* istanbul ignore next */
              {
                cov_1ggzoqmx0w().b[18][1]++;
              }
            });

            // Add source as tag
            var sourceTag =
            /* istanbul ignore next */
            (cov_1ggzoqmx0w().s[98]++, tags.find(function (t) {
              /* istanbul ignore next */
              cov_1ggzoqmx0w().f[17]++;
              cov_1ggzoqmx0w().s[99]++;
              return /* istanbul ignore next */(cov_1ggzoqmx0w().b[19][0]++, t.name === source.name) &&
              /* istanbul ignore next */
              (cov_1ggzoqmx0w().b[19][1]++, t.type === "SOURCE");
            }));
            /* istanbul ignore next */
            cov_1ggzoqmx0w().s[100]++;
            if (sourceTag) {
              /* istanbul ignore next */
              cov_1ggzoqmx0w().b[20][0]++;
              cov_1ggzoqmx0w().s[101]++;
              tagIds.push(sourceTag.id);
            } else
            /* istanbul ignore next */
            {
              cov_1ggzoqmx0w().b[20][1]++;
            }
            cov_1ggzoqmx0w().s[102]++;
            return {
              content: pt.tweet.text,
              originalText: pt.tweet.text,
              sourceId: source.id,
              twitterId: pt.tweet.id,
              originalUrl: pt.tweetUrl,
              publishedAt: new Date(pt.tweet.created_at),
              transferType: mapTransferType(pt.classification.transferType),
              priority: calculatePriority(pt.classification, source),
              league:
              /* istanbul ignore next */
              (cov_1ggzoqmx0w().b[21][0]++, pt.tags.leagues[0]) ||
              /* istanbul ignore next */
              (cov_1ggzoqmx0w().b[21][1]++, undefined),
              relevanceScore: pt.classification.confidence,
              originalShares: pt.tweet.public_metrics.retweet_count,
              originalLikes: pt.tweet.public_metrics.like_count,
              originalReplies: pt.tweet.public_metrics.reply_count,
              tagIds: tagIds
            };
          }));
          cov_1ggzoqmx0w().s[103]++;
          _context6.n = 2;
          return createFeedItemsFromTweets(feedItemData);
        case 2:
          return _context6.a(2, _context6.v);
      }
    }, _callee6);
  }));
  return _createFeedItemsFromProcessedTweets.apply(this, arguments);
}
function mapTransferType(type) {
  /* istanbul ignore next */
  cov_1ggzoqmx0w().f[18]++;
  var mapping =
  /* istanbul ignore next */
  (cov_1ggzoqmx0w().s[104]++, {
    signing: "SIGNING",
    rumour: "RUMOUR",
    medical: "MEDICAL",
    confirmed: "CONFIRMED",
    bid: "BID",
    personal_terms: "PERSONAL_TERMS",
    loan: "LOAN",
    extension: "EXTENSION"
  });
  /* istanbul ignore next */
  cov_1ggzoqmx0w().s[105]++;
  return type ?
  /* istanbul ignore next */
  (cov_1ggzoqmx0w().b[22][0]++, mapping[type]) :
  /* istanbul ignore next */
  (cov_1ggzoqmx0w().b[22][1]++, undefined);
}

/**
 * Calculate priority based on classification and source
 */
function calculatePriority(classification, source) {
  /* istanbul ignore next */
  cov_1ggzoqmx0w().f[19]++;
  cov_1ggzoqmx0w().s[106]++;
  // High priority for Tier 1 sources with high confidence
  if (
  /* istanbul ignore next */
  (cov_1ggzoqmx0w().b[24][0]++, source.tier === 1) &&
  /* istanbul ignore next */
  (cov_1ggzoqmx0w().b[24][1]++, classification.confidence > 0.8)) {
    /* istanbul ignore next */
    cov_1ggzoqmx0w().b[23][0]++;
    cov_1ggzoqmx0w().s[107]++;
    if (
    /* istanbul ignore next */
    (cov_1ggzoqmx0w().b[26][0]++, classification.transferType === "confirmed") ||
    /* istanbul ignore next */
    (cov_1ggzoqmx0w().b[26][1]++, classification.transferType === "medical")) {
      /* istanbul ignore next */
      cov_1ggzoqmx0w().b[25][0]++;
      cov_1ggzoqmx0w().s[108]++;
      return "BREAKING";
    } else
    /* istanbul ignore next */
    {
      cov_1ggzoqmx0w().b[25][1]++;
    }
    cov_1ggzoqmx0w().s[109]++;
    return "HIGH";
  } else
  /* istanbul ignore next */
  {
    cov_1ggzoqmx0w().b[23][1]++;
  }

  // Medium priority for good sources or high confidence
  cov_1ggzoqmx0w().s[110]++;
  if (
  /* istanbul ignore next */
  (cov_1ggzoqmx0w().b[28][0]++, source.tier <= 2) ||
  /* istanbul ignore next */
  (cov_1ggzoqmx0w().b[28][1]++, classification.confidence > 0.7)) {
    /* istanbul ignore next */
    cov_1ggzoqmx0w().b[27][0]++;
    cov_1ggzoqmx0w().s[111]++;
    return "MEDIUM";
  } else
  /* istanbul ignore next */
  {
    cov_1ggzoqmx0w().b[27][1]++;
  }
  cov_1ggzoqmx0w().s[112]++;
  return "LOW";
}

/**
 * Get tweets for briefing generation
 */
export
/* istanbul ignore next */
function getTweetsForBriefing(_x12) {
  return _getTweetsForBriefing.apply(this, arguments);
}

// Type definitions
/* istanbul ignore next */
function _getTweetsForBriefing() {
  _getTweetsForBriefing = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee7(timestamp)
  /* istanbul ignore next */
  {
    var since, until, fetchStats, feedItems;
    return _regenerator().w(function (_context7) {
      while (1) switch (_context7.n) {
        case 0:
          cov_1ggzoqmx0w().f[20]++;
          // Fetch tweets from the last hour
          since = (cov_1ggzoqmx0w().s[113]++, new Date(timestamp.getTime() - 60 * 60 * 1000));
          until = (cov_1ggzoqmx0w().s[114]++, timestamp); // Fetch new tweets
          cov_1ggzoqmx0w().s[115]++;
          _context7.n = 1;
          return fetchTweetsForBriefing(since, until);
        case 1:
          fetchStats = _context7.v;
          cov_1ggzoqmx0w().s[116]++;
          _context7.n = 2;
          return getUnprocessedFeedItems(since, until);
        case 2:
          feedItems = _context7.v;
          cov_1ggzoqmx0w().s[117]++;
          return _context7.a(2, {
            feedItems: feedItems,
            stats: fetchStats
          });
      }
    }, _callee7);
  }));
  return _getTweetsForBriefing.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,