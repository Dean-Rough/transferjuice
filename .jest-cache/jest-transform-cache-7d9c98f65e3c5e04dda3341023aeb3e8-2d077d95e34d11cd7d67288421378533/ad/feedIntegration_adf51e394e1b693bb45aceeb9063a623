a7432e6aaa616efb17ba434808ff24fb
/* istanbul ignore next */ function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function cov_mbze6z6xc() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/twitter/feedIntegration.ts";
  var hash = "bc7ddc500a32f8671f97864e061bb8b5c16cd203";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/twitter/feedIntegration.ts",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 38
        },
        end: {
          line: 83,
          column: 1
        }
      },
      "1": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 48
        }
      },
      "2": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "3": {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 33,
          column: 60
        }
      },
      "4": {
        start: {
          line: 36,
          column: 29
        },
        end: {
          line: 36,
          column: 73
        }
      },
      "5": {
        start: {
          line: 38,
          column: 2
        },
        end: {
          line: 82,
          column: 4
        }
      },
      "6": {
        start: {
          line: 88,
          column: 35
        },
        end: {
          line: 198,
          column: 1
        }
      },
      "7": {
        start: {
          line: 90,
          column: 23
        },
        end: {
          line: 163,
          column: 3
        }
      },
      "8": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 168,
          column: 3
        }
      },
      "9": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 167,
          column: 54
        }
      },
      "10": {
        start: {
          line: 171,
          column: 25
        },
        end: {
          line: 190,
          column: 3
        }
      },
      "11": {
        start: {
          line: 193,
          column: 18
        },
        end: {
          line: 195,
          column: 3
        }
      },
      "12": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 194,
          column: 56
        }
      },
      "13": {
        start: {
          line: 197,
          column: 2
        },
        end: {
          line: 197,
          column: 28
        }
      },
      "14": {
        start: {
          line: 203,
          column: 26
        },
        end: {
          line: 231,
          column: 1
        }
      },
      "15": {
        start: {
          line: 208,
          column: 2
        },
        end: {
          line: 215,
          column: 3
        }
      },
      "16": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 22
        }
      },
      "17": {
        start: {
          line: 218,
          column: 2
        },
        end: {
          line: 223,
          column: 3
        }
      },
      "18": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 222,
          column: 18
        }
      },
      "19": {
        start: {
          line: 226,
          column: 2
        },
        end: {
          line: 228,
          column: 3
        }
      },
      "20": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 227,
          column: 20
        }
      },
      "21": {
        start: {
          line: 230,
          column: 2
        },
        end: {
          line: 230,
          column: 15
        }
      },
      "22": {
        start: {
          line: 236,
          column: 24
        },
        end: {
          line: 253,
          column: 1
        }
      },
      "23": {
        start: {
          line: 239,
          column: 2
        },
        end: {
          line: 252,
          column: 3
        }
      },
      "24": {
        start: {
          line: 242,
          column: 6
        },
        end: {
          line: 242,
          column: 25
        }
      },
      "25": {
        start: {
          line: 244,
          column: 6
        },
        end: {
          line: 244,
          column: 23
        }
      },
      "26": {
        start: {
          line: 246,
          column: 6
        },
        end: {
          line: 246,
          column: 19
        }
      },
      "27": {
        start: {
          line: 248,
          column: 6
        },
        end: {
          line: 248,
          column: 30
        }
      },
      "28": {
        start: {
          line: 251,
          column: 6
        },
        end: {
          line: 251,
          column: 22
        }
      },
      "29": {
        start: {
          line: 258,
          column: 24
        },
        end: {
          line: 298,
          column: 1
        }
      },
      "30": {
        start: {
          line: 259,
          column: 22
        },
        end: {
          line: 283,
          column: 3
        }
      },
      "31": {
        start: {
          line: 285,
          column: 2
        },
        end: {
          line: 295,
          column: 3
        }
      },
      "32": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 294,
          column: 5
        }
      },
      "33": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "34": {
        start: {
          line: 289,
          column: 10
        },
        end: {
          line: 289,
          column: 63
        }
      },
      "35": {
        start: {
          line: 293,
          column: 6
        },
        end: {
          line: 293,
          column: 54
        }
      },
      "36": {
        start: {
          line: 297,
          column: 2
        },
        end: {
          line: 297,
          column: 17
        }
      },
      "37": {
        start: {
          line: 303,
          column: 26
        },
        end: {
          line: 313,
          column: 1
        }
      },
      "38": {
        start: {
          line: 304,
          column: 2
        },
        end: {
          line: 312,
          column: 4
        }
      },
      "39": {
        start: {
          line: 318,
          column: 40
        },
        end: {
          line: 330,
          column: 1
        }
      },
      "40": {
        start: {
          line: 325,
          column: 2
        },
        end: {
          line: 329,
          column: 6
        }
      },
      "41": {
        start: {
          line: 326,
          column: 36
        },
        end: {
          line: 326,
          column: 68
        }
      },
      "42": {
        start: {
          line: 328,
          column: 6
        },
        end: {
          line: 328,
          column: 59
        }
      },
      "43": {
        start: {
          line: 335,
          column: 41
        },
        end: {
          line: 386,
          column: 1
        }
      },
      "44": {
        start: {
          line: 344,
          column: 31
        },
        end: {
          line: 348,
          column: 3
        }
      },
      "45": {
        start: {
          line: 346,
          column: 6
        },
        end: {
          line: 347,
          column: 48
        }
      },
      "46": {
        start: {
          line: 350,
          column: 2
        },
        end: {
          line: 353,
          column: 3
        }
      },
      "47": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 351,
          column: 65
        }
      },
      "48": {
        start: {
          line: 352,
          column: 4
        },
        end: {
          line: 352,
          column: 11
        }
      },
      "49": {
        start: {
          line: 356,
          column: 20
        },
        end: {
          line: 356,
          column: 66
        }
      },
      "50": {
        start: {
          line: 359,
          column: 2
        },
        end: {
          line: 369,
          column: 5
        }
      },
      "51": {
        start: {
          line: 360,
          column: 26
        },
        end: {
          line: 360,
          column: 69
        }
      },
      "52": {
        start: {
          line: 361,
          column: 22
        },
        end: {
          line: 361,
          column: 56
        }
      },
      "53": {
        start: {
          line: 362,
          column: 22
        },
        end: {
          line: 362,
          column: 56
        }
      },
      "54": {
        start: {
          line: 364,
          column: 4
        },
        end: {
          line: 366,
          column: 5
        }
      },
      "55": {
        start: {
          line: 365,
          column: 6
        },
        end: {
          line: 365,
          column: 35
        }
      },
      "56": {
        start: {
          line: 368,
          column: 4
        },
        end: {
          line: 368,
          column: 65
        }
      },
      "57": {
        start: {
          line: 372,
          column: 2
        },
        end: {
          line: 379,
          column: 5
        }
      },
      "58": {
        start: {
          line: 373,
          column: 41
        },
        end: {
          line: 373,
          column: 78
        }
      },
      "59": {
        start: {
          line: 375,
          column: 37
        },
        end: {
          line: 375,
          column: 70
        }
      },
      "60": {
        start: {
          line: 376,
          column: 39
        },
        end: {
          line: 376,
          column: 74
        }
      },
      "61": {
        start: {
          line: 378,
          column: 36
        },
        end: {
          line: 378,
          column: 68
        }
      },
      "62": {
        start: {
          line: 385,
          column: 2
        },
        end: {
          line: 385,
          column: 19
        }
      },
      "63": {
        start: {
          line: 391,
          column: 37
        },
        end: {
          line: 408,
          column: 1
        }
      },
      "64": {
        start: {
          line: 392,
          column: 15
        },
        end: {
          line: 392,
          column: 32
        }
      },
      "65": {
        start: {
          line: 393,
          column: 2
        },
        end: {
          line: 407,
          column: 5
        }
      },
      "66": {
        start: {
          line: 395,
          column: 22
        },
        end: {
          line: 399,
          column: 13
        }
      },
      "67": {
        start: {
          line: 401,
          column: 4
        },
        end: {
          line: 403,
          column: 5
        }
      },
      "68": {
        start: {
          line: 402,
          column: 6
        },
        end: {
          line: 402,
          column: 19
        }
      },
      "69": {
        start: {
          line: 405,
          column: 4
        },
        end: {
          line: 405,
          column: 24
        }
      },
      "70": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 406,
          column: 16
        }
      },
      "71": {
        start: {
          line: 413,
          column: 34
        },
        end: {
          line: 462,
          column: 1
        }
      },
      "72": {
        start: {
          line: 431,
          column: 7
        },
        end: {
          line: 431,
          column: 9
        }
      },
      "73": {
        start: {
          line: 433,
          column: 20
        },
        end: {
          line: 433,
          column: 37
        }
      },
      "74": {
        start: {
          line: 435,
          column: 2
        },
        end: {
          line: 459,
          column: 3
        }
      },
      "75": {
        start: {
          line: 436,
          column: 4
        },
        end: {
          line: 436,
          column: 47
        }
      },
      "76": {
        start: {
          line: 436,
          column: 38
        },
        end: {
          line: 436,
          column: 47
        }
      },
      "77": {
        start: {
          line: 439,
          column: 20
        },
        end: {
          line: 447,
          column: 5
        }
      },
      "78": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 446,
          column: 9
        }
      },
      "79": {
        start: {
          line: 450,
          column: 4
        },
        end: {
          line: 450,
          column: 54
        }
      },
      "80": {
        start: {
          line: 450,
          column: 27
        },
        end: {
          line: 450,
          column: 52
        }
      },
      "81": {
        start: {
          line: 451,
          column: 4
        },
        end: {
          line: 451,
          column: 33
        }
      },
      "82": {
        start: {
          line: 454,
          column: 4
        },
        end: {
          line: 458,
          column: 7
        }
      },
      "83": {
        start: {
          line: 457,
          column: 48
        },
        end: {
          line: 457,
          column: 56
        }
      },
      "84": {
        start: {
          line: 461,
          column: 2
        },
        end: {
          line: 461,
          column: 23
        }
      },
      "85": {
        start: {
          line: 467,
          column: 28
        },
        end: {
          line: 479,
          column: 1
        }
      },
      "86": {
        start: {
          line: 471,
          column: 15
        },
        end: {
          line: 471,
          column: 61
        }
      },
      "87": {
        start: {
          line: 471,
          column: 44
        },
        end: {
          line: 471,
          column: 59
        }
      },
      "88": {
        start: {
          line: 472,
          column: 15
        },
        end: {
          line: 472,
          column: 61
        }
      },
      "89": {
        start: {
          line: 472,
          column: 44
        },
        end: {
          line: 472,
          column: 59
        }
      },
      "90": {
        start: {
          line: 474,
          column: 23
        },
        end: {
          line: 474,
          column: 68
        }
      },
      "91": {
        start: {
          line: 474,
          column: 55
        },
        end: {
          line: 474,
          column: 66
        }
      },
      "92": {
        start: {
          line: 475,
          column: 16
        },
        end: {
          line: 475,
          column: 43
        }
      },
      "93": {
        start: {
          line: 478,
          column: 2
        },
        end: {
          line: 478,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 38
          },
          end: {
            line: 16,
            column: 39
          }
        },
        loc: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 88,
            column: 35
          },
          end: {
            line: 88,
            column: 36
          }
        },
        loc: {
          start: {
            line: 88,
            column: 75
          },
          end: {
            line: 198,
            column: 1
          }
        },
        line: 88
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 166,
            column: 36
          },
          end: {
            line: 166,
            column: 37
          }
        },
        loc: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 54
          }
        },
        line: 167
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 193,
            column: 40
          },
          end: {
            line: 193,
            column: 41
          }
        },
        loc: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 194,
            column: 56
          }
        },
        line: 194
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 203,
            column: 26
          },
          end: {
            line: 203,
            column: 27
          }
        },
        loc: {
          start: {
            line: 206,
            column: 39
          },
          end: {
            line: 231,
            column: 1
          }
        },
        line: 206
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 236,
            column: 24
          },
          end: {
            line: 236,
            column: 25
          }
        },
        loc: {
          start: {
            line: 238,
            column: 43
          },
          end: {
            line: 253,
            column: 1
          }
        },
        line: 238
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 258,
            column: 24
          },
          end: {
            line: 258,
            column: 25
          }
        },
        loc: {
          start: {
            line: 258,
            column: 77
          },
          end: {
            line: 298,
            column: 1
          }
        },
        line: 258
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 287,
            column: 17
          },
          end: {
            line: 287,
            column: 18
          }
        },
        loc: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        },
        line: 288
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 288,
            column: 28
          },
          end: {
            line: 288,
            column: 29
          }
        },
        loc: {
          start: {
            line: 289,
            column: 10
          },
          end: {
            line: 289,
            column: 63
          }
        },
        line: 289
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 303,
            column: 26
          },
          end: {
            line: 303,
            column: 27
          }
        },
        loc: {
          start: {
            line: 303,
            column: 55
          },
          end: {
            line: 313,
            column: 1
          }
        },
        line: 303
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 318,
            column: 40
          },
          end: {
            line: 318,
            column: 41
          }
        },
        loc: {
          start: {
            line: 324,
            column: 17
          },
          end: {
            line: 330,
            column: 1
          }
        },
        line: 324
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 326,
            column: 12
          },
          end: {
            line: 326,
            column: 13
          }
        },
        loc: {
          start: {
            line: 326,
            column: 36
          },
          end: {
            line: 326,
            column: 68
          }
        },
        line: 326
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 327,
            column: 9
          },
          end: {
            line: 327,
            column: 10
          }
        },
        loc: {
          start: {
            line: 328,
            column: 6
          },
          end: {
            line: 328,
            column: 59
          }
        },
        line: 328
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 335,
            column: 41
          },
          end: {
            line: 335,
            column: 42
          }
        },
        loc: {
          start: {
            line: 342,
            column: 5
          },
          end: {
            line: 386,
            column: 1
          }
        },
        line: 342
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 345,
            column: 5
          }
        },
        loc: {
          start: {
            line: 346,
            column: 6
          },
          end: {
            line: 347,
            column: 48
          }
        },
        line: 346
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 359,
            column: 17
          },
          end: {
            line: 359,
            column: 18
          }
        },
        loc: {
          start: {
            line: 359,
            column: 27
          },
          end: {
            line: 369,
            column: 3
          }
        },
        line: 359
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 373,
            column: 31
          },
          end: {
            line: 373,
            column: 32
          }
        },
        loc: {
          start: {
            line: 373,
            column: 41
          },
          end: {
            line: 373,
            column: 78
          }
        },
        line: 373
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 375,
            column: 27
          },
          end: {
            line: 375,
            column: 28
          }
        },
        loc: {
          start: {
            line: 375,
            column: 37
          },
          end: {
            line: 375,
            column: 70
          }
        },
        line: 375
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 376,
            column: 29
          },
          end: {
            line: 376,
            column: 30
          }
        },
        loc: {
          start: {
            line: 376,
            column: 39
          },
          end: {
            line: 376,
            column: 74
          }
        },
        line: 376
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 378,
            column: 26
          },
          end: {
            line: 378,
            column: 27
          }
        },
        loc: {
          start: {
            line: 378,
            column: 36
          },
          end: {
            line: 378,
            column: 68
          }
        },
        line: 378
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 391,
            column: 37
          },
          end: {
            line: 391,
            column: 38
          }
        },
        loc: {
          start: {
            line: 391,
            column: 75
          },
          end: {
            line: 408,
            column: 1
          }
        },
        line: 391
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 393,
            column: 23
          },
          end: {
            line: 393,
            column: 24
          }
        },
        loc: {
          start: {
            line: 393,
            column: 34
          },
          end: {
            line: 407,
            column: 3
          }
        },
        line: 393
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 413,
            column: 34
          },
          end: {
            line: 413,
            column: 35
          }
        },
        loc: {
          start: {
            line: 424,
            column: 6
          },
          end: {
            line: 462,
            column: 1
          }
        },
        line: 424
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 440,
            column: 6
          },
          end: {
            line: 440,
            column: 7
          }
        },
        loc: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        },
        line: 441
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 450,
            column: 20
          },
          end: {
            line: 450,
            column: 21
          }
        },
        loc: {
          start: {
            line: 450,
            column: 27
          },
          end: {
            line: 450,
            column: 52
          }
        },
        line: 450
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 457,
            column: 41
          },
          end: {
            line: 457,
            column: 42
          }
        },
        loc: {
          start: {
            line: 457,
            column: 48
          },
          end: {
            line: 457,
            column: 56
          }
        },
        line: 457
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 467,
            column: 28
          },
          end: {
            line: 467,
            column: 29
          }
        },
        loc: {
          start: {
            line: 470,
            column: 14
          },
          end: {
            line: 479,
            column: 1
          }
        },
        line: 470
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 471,
            column: 37
          },
          end: {
            line: 471,
            column: 38
          }
        },
        loc: {
          start: {
            line: 471,
            column: 44
          },
          end: {
            line: 471,
            column: 59
          }
        },
        line: 471
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 472,
            column: 37
          },
          end: {
            line: 472,
            column: 38
          }
        },
        loc: {
          start: {
            line: 472,
            column: 44
          },
          end: {
            line: 472,
            column: 59
          }
        },
        line: 472
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 474,
            column: 48
          },
          end: {
            line: 474,
            column: 49
          }
        },
        loc: {
          start: {
            line: 474,
            column: 55
          },
          end: {
            line: 474,
            column: 66
          }
        },
        line: 474
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 36
          }
        }, {
          start: {
            line: 23,
            column: 5
          },
          end: {
            line: 23,
            column: 48
          }
        }, {
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 24,
            column: 47
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 10
          },
          end: {
            line: 40,
            column: 41
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 33
          }
        }, {
          start: {
            line: 40,
            column: 36
          },
          end: {
            line: 40,
            column: 41
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 11
          },
          end: {
            line: 61,
            column: 17
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 61,
            column: 17
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 50
          },
          end: {
            line: 57,
            column: 57
          }
        }, {
          start: {
            line: 57,
            column: 60
          },
          end: {
            line: 57,
            column: 67
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 208,
            column: 2
          },
          end: {
            line: 215,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 2
          },
          end: {
            line: 215,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "6": {
        loc: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 212,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 209,
            column: 36
          }
        }, {
          start: {
            line: 210,
            column: 4
          },
          end: {
            line: 210,
            column: 21
          }
        }, {
          start: {
            line: 211,
            column: 5
          },
          end: {
            line: 211,
            column: 48
          }
        }, {
          start: {
            line: 212,
            column: 6
          },
          end: {
            line: 212,
            column: 47
          }
        }],
        line: 209
      },
      "7": {
        loc: {
          start: {
            line: 218,
            column: 2
          },
          end: {
            line: 223,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 2
          },
          end: {
            line: 223,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "8": {
        loc: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 220,
            column: 21
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 5
          },
          end: {
            line: 219,
            column: 37
          }
        }, {
          start: {
            line: 219,
            column: 41
          },
          end: {
            line: 219,
            column: 57
          }
        }, {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 220,
            column: 21
          }
        }],
        line: 219
      },
      "9": {
        loc: {
          start: {
            line: 226,
            column: 2
          },
          end: {
            line: 228,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 2
          },
          end: {
            line: 228,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "10": {
        loc: {
          start: {
            line: 226,
            column: 6
          },
          end: {
            line: 226,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 6
          },
          end: {
            line: 226,
            column: 38
          }
        }, {
          start: {
            line: 226,
            column: 42
          },
          end: {
            line: 226,
            column: 59
          }
        }],
        line: 226
      },
      "11": {
        loc: {
          start: {
            line: 239,
            column: 2
          },
          end: {
            line: 252,
            column: 3
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 240,
            column: 21
          }
        }, {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 242,
            column: 25
          }
        }, {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 244,
            column: 23
          }
        }, {
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 246,
            column: 19
          }
        }, {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 248,
            column: 30
          }
        }, {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 249,
            column: 18
          }
        }, {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 251,
            column: 22
          }
        }],
        line: 239
      },
      "12": {
        loc: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "13": {
        loc: {
          start: {
            line: 341,
            column: 2
          },
          end: {
            line: 341,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 341,
            column: 26
          },
          end: {
            line: 341,
            column: 29
          }
        }],
        line: 341
      },
      "14": {
        loc: {
          start: {
            line: 346,
            column: 6
          },
          end: {
            line: 347,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 346,
            column: 6
          },
          end: {
            line: 346,
            column: 38
          }
        }, {
          start: {
            line: 347,
            column: 6
          },
          end: {
            line: 347,
            column: 48
          }
        }],
        line: 346
      },
      "15": {
        loc: {
          start: {
            line: 350,
            column: 2
          },
          end: {
            line: 353,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 350,
            column: 2
          },
          end: {
            line: 353,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 350
      },
      "16": {
        loc: {
          start: {
            line: 364,
            column: 4
          },
          end: {
            line: 366,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 4
          },
          end: {
            line: 366,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "17": {
        loc: {
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 403,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 403,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 401
      },
      "18": {
        loc: {
          start: {
            line: 436,
            column: 4
          },
          end: {
            line: 436,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 436,
            column: 4
          },
          end: {
            line: 436,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 436
      },
      "19": {
        loc: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 441,
            column: 40
          }
        }, {
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 442,
            column: 38
          }
        }, {
          start: {
            line: 443,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        }],
        line: 441
      },
      "20": {
        loc: {
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 457,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 457,
            column: 29
          },
          end: {
            line: 457,
            column: 57
          }
        }, {
          start: {
            line: 457,
            column: 60
          },
          end: {
            line: 457,
            column: 69
          }
        }],
        line: 457
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0, 0, 0, 0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bc7ddc500a32f8671f97864e061bb8b5c16cd203"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_mbze6z6xc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_mbze6z6xc();
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
/**
 * Feed Integration Utilities
 * Converts classified tweets into feed items and integrates with the feed store
 */
/**
 * Convert a classified tweet into a feed item
 */
cov_mbze6z6xc().s[0]++;
export var convertTweetToFeedItem = function convertTweetToFeedItem(tweet, classification, source) {
  /* istanbul ignore next */
  cov_mbze6z6xc().f[0]++;
  var isBreaking =
  /* istanbul ignore next */
  (cov_mbze6z6xc().s[1]++,
  /* istanbul ignore next */
  (cov_mbze6z6xc().b[0][0]++, classification.confidence >= 0.9) && (
  /* istanbul ignore next */
  (cov_mbze6z6xc().b[0][1]++, classification.transferType === 'confirmed') ||
  /* istanbul ignore next */
  (cov_mbze6z6xc().b[0][2]++, classification.transferType === 'signing')));

  // Extract clubs and players from content
  var
    /* istanbul ignore next */
    _ref = (cov_mbze6z6xc().s[2]++, extractEntitiesFromContent(tweet.text, classification.language)),
    /* istanbul ignore next */
    clubs = _ref.clubs,
    /* istanbul ignore next */
    players = _ref.players;

  // Determine priority based on confidence and transfer type
  var priority =
  /* istanbul ignore next */
  (cov_mbze6z6xc().s[3]++, determinePriority(classification, source));

  // Map transfer type
  var mappedTransferType =
  /* istanbul ignore next */
  (cov_mbze6z6xc().s[4]++, mapTransferType(classification.transferType));
  /* istanbul ignore next */
  cov_mbze6z6xc().s[5]++;
  return {
    id:
    /* istanbul ignore next */
    "tweet-".concat(tweet.id),
    type: isBreaking ?
    /* istanbul ignore next */
    (cov_mbze6z6xc().b[1][0]++, 'breaking') :
    /* istanbul ignore next */
    (cov_mbze6z6xc().b[1][1]++, 'itk'),
    timestamp: new Date(tweet.createdAt),
    content: cleanTweetContent(tweet.text),
    source: {
      name: source.name,
      handle: source.handle,
      tier: source.tier,
      reliability: source.reliability,
      region: source.region
    },
    tags: {
      clubs: clubs,
      players: players,
      sources: [source.name]
    },
    media: tweet.media ?
    /* istanbul ignore next */
    (cov_mbze6z6xc().b[2][0]++, {
      type: tweet.media[0].type === 'photo' ?
      /* istanbul ignore next */
      (cov_mbze6z6xc().b[3][0]++, 'image') :
      /* istanbul ignore next */
      (cov_mbze6z6xc().b[3][1]++, 'video'),
      url: tweet.media[0].url,
      altText:
      /* istanbul ignore next */
      "Transfer update from ".concat(source.name)
    }) :
    /* istanbul ignore next */
    (cov_mbze6z6xc().b[2][1]++, undefined),
    engagement: tweet.metrics ?
    /* istanbul ignore next */
    (cov_mbze6z6xc().b[4][0]++, {
      shares: tweet.metrics.retweets,
      reactions: tweet.metrics.likes,
      clicks: tweet.metrics.replies
    }) :
    /* istanbul ignore next */
    (cov_mbze6z6xc().b[4][1]++, {
      shares: 0,
      reactions: 0,
      clicks: 0
    }),
    metadata: {
      transferType: mappedTransferType,
      priority: priority,
      relevanceScore: classification.confidence,
      league: determineLeague(clubs),
      originalUrl:
      /* istanbul ignore next */
      "https://twitter.com/".concat(tweet.author.username, "/status/").concat(tweet.id)
    },
    isRead: false,
    isNew: true
  };
};

/**
 * Extract club and player entities from tweet content
 */
/* istanbul ignore next */
cov_mbze6z6xc().s[6]++;
var extractEntitiesFromContent = function extractEntitiesFromContent(content, language) {
  /* istanbul ignore next */
  cov_mbze6z6xc().f[1]++;
  // Common club names patterns (could be enhanced with ML/NER)
  var clubPatterns =
  /* istanbul ignore next */
  (cov_mbze6z6xc().s[7]++, [
  // Premier League
  'Arsenal', 'Chelsea', 'Manchester United', 'Man United', 'United', 'Liverpool', 'Manchester City', 'Man City', 'City', 'Tottenham', 'Spurs', 'Newcastle', 'Brighton', 'West Ham', 'Aston Villa', 'Crystal Palace',
  // La Liga
  'Real Madrid', 'Madrid', 'Barcelona', 'Barca', 'Atletico Madrid', 'Atletico', 'Sevilla', 'Valencia', 'Villarreal', 'Real Sociedad', 'Athletic Bilbao',
  // Serie A
  'Juventus', 'Juve', 'AC Milan', 'Milan', 'Inter Milan', 'Inter', 'Napoli', 'AS Roma', 'Roma', 'Lazio', 'Fiorentina', 'Atalanta',
  // Bundesliga
  'Bayern Munich', 'Bayern', 'Borussia Dortmund', 'Dortmund', 'BVB', 'RB Leipzig', 'Leipzig', 'Bayer Leverkusen', 'Leverkusen', 'Eintracht Frankfurt',
  // Ligue 1
  'PSG', 'Paris Saint-Germain', 'Lyon', 'Marseille', 'Monaco', 'Lille',
  // Other major clubs
  'Ajax', 'PSV', 'Feyenoord', 'Benfica', 'Porto', 'Sporting']);

  // Extract clubs mentioned in the content
  var clubs =
  /* istanbul ignore next */
  (cov_mbze6z6xc().s[8]++, clubPatterns.filter(function (club) {
    /* istanbul ignore next */
    cov_mbze6z6xc().f[2]++;
    cov_mbze6z6xc().s[9]++;
    return content.toLowerCase().includes(club.toLowerCase());
  }));

  // Common player name patterns (simplified - could use NER)
  var playerPatterns =
  /* istanbul ignore next */
  (cov_mbze6z6xc().s[10]++, ['Haaland', 'Mbappe', 'Bellingham', 'Kane', 'Salah', 'Vinicius', 'Pedri', 'Gavi', 'Musiala', 'Camavinga', 'Osimhen', 'Leao', 'Kvaratskhelia', 'Vlahovic', 'Saka', 'Foden', 'Wirtz', 'Moukoko']);

  // Extract players mentioned in the content
  var players =
  /* istanbul ignore next */
  (cov_mbze6z6xc().s[11]++, playerPatterns.filter(function (player) {
    /* istanbul ignore next */
    cov_mbze6z6xc().f[3]++;
    cov_mbze6z6xc().s[12]++;
    return content.toLowerCase().includes(player.toLowerCase());
  }));
  /* istanbul ignore next */
  cov_mbze6z6xc().s[13]++;
  return {
    clubs: clubs,
    players: players
  };
};

/**
 * Determine priority based on classification and source
 */
/* istanbul ignore next */
cov_mbze6z6xc().s[14]++;
var determinePriority = function determinePriority(classification, source) {
  /* istanbul ignore next */
  cov_mbze6z6xc().f[4]++;
  cov_mbze6z6xc().s[15]++;
  // Breaking news: high confidence + tier 1 source + confirmed/signing
  if (
  /* istanbul ignore next */
  (cov_mbze6z6xc().b[6][0]++, classification.confidence >= 0.9) &&
  /* istanbul ignore next */
  (cov_mbze6z6xc().b[6][1]++, source.tier === 1) && (
  /* istanbul ignore next */
  (cov_mbze6z6xc().b[6][2]++, classification.transferType === 'confirmed') ||
  /* istanbul ignore next */
  (cov_mbze6z6xc().b[6][3]++, classification.transferType === 'signing'))) {
    /* istanbul ignore next */
    cov_mbze6z6xc().b[5][0]++;
    cov_mbze6z6xc().s[16]++;
    return 'breaking';
  } else
  /* istanbul ignore next */
  {
    cov_mbze6z6xc().b[5][1]++;
  }

  // High priority: good confidence + good source OR tier 1 source
  cov_mbze6z6xc().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_mbze6z6xc().b[8][0]++, classification.confidence >= 0.7) &&
  /* istanbul ignore next */
  (cov_mbze6z6xc().b[8][1]++, source.tier <= 2) ||
  /* istanbul ignore next */
  (cov_mbze6z6xc().b[8][2]++, source.tier === 1)) {
    /* istanbul ignore next */
    cov_mbze6z6xc().b[7][0]++;
    cov_mbze6z6xc().s[18]++;
    return 'high';
  } else
  /* istanbul ignore next */
  {
    cov_mbze6z6xc().b[7][1]++;
  }

  // Medium priority: decent confidence OR tier 2 source
  cov_mbze6z6xc().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_mbze6z6xc().b[10][0]++, classification.confidence >= 0.5) ||
  /* istanbul ignore next */
  (cov_mbze6z6xc().b[10][1]++, source.tier === 2)) {
    /* istanbul ignore next */
    cov_mbze6z6xc().b[9][0]++;
    cov_mbze6z6xc().s[20]++;
    return 'medium';
  } else
  /* istanbul ignore next */
  {
    cov_mbze6z6xc().b[9][1]++;
  }
  cov_mbze6z6xc().s[21]++;
  return 'low';
};

/**
 * Map classification transfer type to feed item transfer type
 */
/* istanbul ignore next */
cov_mbze6z6xc().s[22]++;
var mapTransferType = function mapTransferType(transferType) {
  /* istanbul ignore next */
  cov_mbze6z6xc().f[5]++;
  cov_mbze6z6xc().s[23]++;
  switch (transferType) {
    case 'confirmed':
      /* istanbul ignore next */
      cov_mbze6z6xc().b[11][0]++;
    case 'signing':
      /* istanbul ignore next */
      cov_mbze6z6xc().b[11][1]++;
      cov_mbze6z6xc().s[24]++;
      return 'confirmed';
    case 'medical':
      /* istanbul ignore next */
      cov_mbze6z6xc().b[11][2]++;
      cov_mbze6z6xc().s[25]++;
      return 'medical';
    case 'bid':
      /* istanbul ignore next */
      cov_mbze6z6xc().b[11][3]++;
      cov_mbze6z6xc().s[26]++;
      return 'bid';
    case 'personal_terms':
      /* istanbul ignore next */
      cov_mbze6z6xc().b[11][4]++;
      cov_mbze6z6xc().s[27]++;
      return 'personal_terms';
    case 'rumour':
      /* istanbul ignore next */
      cov_mbze6z6xc().b[11][5]++;
    default:
      /* istanbul ignore next */
      cov_mbze6z6xc().b[11][6]++;
      cov_mbze6z6xc().s[28]++;
      return 'rumour';
  }
};

/**
 * Determine league based on clubs mentioned
 */
/* istanbul ignore next */
cov_mbze6z6xc().s[29]++;
var determineLeague = function determineLeague(clubs) {
  /* istanbul ignore next */
  cov_mbze6z6xc().f[6]++;
  var leagueClubs =
  /* istanbul ignore next */
  (cov_mbze6z6xc().s[30]++, {
    PL: ['Arsenal', 'Chelsea', 'Manchester United', 'Liverpool', 'Manchester City', 'Tottenham'],
    LaLiga: ['Real Madrid', 'Barcelona', 'Atletico Madrid', 'Sevilla', 'Valencia'],
    SerieA: ['Juventus', 'AC Milan', 'Inter Milan', 'Napoli', 'AS Roma'],
    Bundesliga: ['Bayern Munich', 'Borussia Dortmund', 'RB Leipzig', 'Bayer Leverkusen'],
    Ligue1: ['PSG', 'Lyon', 'Marseille', 'Monaco']
  });
  /* istanbul ignore next */
  cov_mbze6z6xc().s[31]++;
  var _loop = function _loop() {
      var
        /* istanbul ignore next */
        _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
        /* istanbul ignore next */
        league = _Object$entries$_i[0],
        /* istanbul ignore next */
        leagueClubList = _Object$entries$_i[1];
      /* istanbul ignore next */
      cov_mbze6z6xc().s[32]++;
      if (clubs.some(function (club) {
        /* istanbul ignore next */
        cov_mbze6z6xc().f[7]++;
        cov_mbze6z6xc().s[33]++;
        return leagueClubList.some(function (leagueClub) {
          /* istanbul ignore next */
          cov_mbze6z6xc().f[8]++;
          cov_mbze6z6xc().s[34]++;
          return club.toLowerCase().includes(leagueClub.toLowerCase());
        });
      })) {
        /* istanbul ignore next */
        cov_mbze6z6xc().b[12][0]++;
        cov_mbze6z6xc().s[35]++;
        return {
          v: league
        };
      } else
      /* istanbul ignore next */
      {
        cov_mbze6z6xc().b[12][1]++;
      }
    },
    _ret;
  for (
  /* istanbul ignore next */
  var _i = 0, _Object$entries = Object.entries(leagueClubs);
  /* istanbul ignore next */
  _i < _Object$entries.length;
  /* istanbul ignore next */
  _i++)
  /* istanbul ignore next */
  {
    _ret = _loop();
    if (_ret) return _ret.v;
  }
  cov_mbze6z6xc().s[36]++;
  return 'Other';
};

/**
 * Clean tweet content (remove URLs, normalize text)
 */
/* istanbul ignore next */
cov_mbze6z6xc().s[37]++;
var cleanTweetContent = function cleanTweetContent(content) {
  /* istanbul ignore next */
  cov_mbze6z6xc().f[9]++;
  cov_mbze6z6xc().s[38]++;
  return content
  // Remove URLs
  .replace(/https?:\/\/[^\s]+/g, '')
  // Remove extra whitespace
  .replace(/\s+/g, ' ')
  // Trim
  .trim();
};

/**
 * Batch convert tweets to feed items
 */
/* istanbul ignore next */
cov_mbze6z6xc().s[39]++;
export var convertTweetsToFeedItems = function convertTweetsToFeedItems(tweetClassifications) {
  /* istanbul ignore next */
  cov_mbze6z6xc().f[10]++;
  cov_mbze6z6xc().s[40]++;
  return tweetClassifications.filter(function (
  /* istanbul ignore next */
  _ref2) {
    /* istanbul ignore next */
    var classification = _ref2.classification;
    /* istanbul ignore next */
    cov_mbze6z6xc().f[11]++;
    cov_mbze6z6xc().s[41]++;
    return classification.isTransferRelated;
  }).map(function (
  /* istanbul ignore next */
  _ref3) {
    /* istanbul ignore next */
    var tweet = _ref3.tweet,
      classification = _ref3.classification,
      source = _ref3.source;
    /* istanbul ignore next */
    cov_mbze6z6xc().f[12]++;
    cov_mbze6z6xc().s[42]++;
    return convertTweetToFeedItem(tweet, classification, source);
  });
};

/**
 * Integration function to add classified tweets to feed store
 */
/* istanbul ignore next */
cov_mbze6z6xc().s[43]++;
export var integrateClassifiedTweets =
/* istanbul ignore next */
/*#__PURE__*/function () {
  var _ref4 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(tweetClassifications)
  /* istanbul ignore next */
  {
    var minConfidence,
      highConfidenceTweets,
      feedItems,
      _args = arguments;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          minConfidence = _args.length > 1 && _args[1] !== undefined ? _args[1] : (cov_mbze6z6xc().b[13][0]++, 0.4);
          cov_mbze6z6xc().f[13]++;
          // Filter by confidence threshold
          highConfidenceTweets = (cov_mbze6z6xc().s[44]++, tweetClassifications.filter(function (
          /* istanbul ignore next */
          _ref5) {
            /* istanbul ignore next */
            var classification = _ref5.classification;
            /* istanbul ignore next */
            cov_mbze6z6xc().f[14]++;
            cov_mbze6z6xc().s[45]++;
            return /* istanbul ignore next */(cov_mbze6z6xc().b[14][0]++, classification.isTransferRelated) &&
            /* istanbul ignore next */
            (cov_mbze6z6xc().b[14][1]++, classification.confidence >= minConfidence);
          }));
          cov_mbze6z6xc().s[46]++;
          if (!(highConfidenceTweets.length === 0)) {
            _context.n = 1;
            break;
          }
          cov_mbze6z6xc().b[15][0]++;
          cov_mbze6z6xc().s[47]++;
          console.log('No high-confidence transfer tweets to process');
          cov_mbze6z6xc().s[48]++;
          return _context.a(2);
        case 1:
          cov_mbze6z6xc().b[15][1]++;
        case 2:
          // Convert to feed items
          feedItems = (cov_mbze6z6xc().s[49]++, convertTweetsToFeedItems(highConfidenceTweets)); // Sort by priority and confidence
          cov_mbze6z6xc().s[50]++;
          feedItems.sort(function (a, b) {
            /* istanbul ignore next */
            cov_mbze6z6xc().f[15]++;
            var priorityOrder =
            /* istanbul ignore next */
            (cov_mbze6z6xc().s[51]++, {
              breaking: 4,
              high: 3,
              medium: 2,
              low: 1
            });
            var aPriority =
            /* istanbul ignore next */
            (cov_mbze6z6xc().s[52]++, priorityOrder[a.metadata.priority]);
            var bPriority =
            /* istanbul ignore next */
            (cov_mbze6z6xc().s[53]++, priorityOrder[b.metadata.priority]);
            /* istanbul ignore next */
            cov_mbze6z6xc().s[54]++;
            if (aPriority !== bPriority) {
              /* istanbul ignore next */
              cov_mbze6z6xc().b[16][0]++;
              cov_mbze6z6xc().s[55]++;
              return bPriority - aPriority; // Higher priority first
            } else
            /* istanbul ignore next */
            {
              cov_mbze6z6xc().b[16][1]++;
            }
            cov_mbze6z6xc().s[56]++;
            return b.metadata.relevanceScore - a.metadata.relevanceScore; // Higher confidence first
          });

          // Add to feed store (would integrate with actual store in production)
          cov_mbze6z6xc().s[57]++;
          console.log(
          /* istanbul ignore next */
          "\uD83D\uDCCA Processing ".concat(feedItems.length, " transfer tweets into feed:"), {
            breaking: feedItems.filter(function (item) {
              /* istanbul ignore next */
              cov_mbze6z6xc().f[16]++;
              cov_mbze6z6xc().s[58]++;
              return item.metadata.priority === 'breaking';
            }).length,
            high: feedItems.filter(function (item) {
              /* istanbul ignore next */
              cov_mbze6z6xc().f[17]++;
              cov_mbze6z6xc().s[59]++;
              return item.metadata.priority === 'high';
            }).length,
            medium: feedItems.filter(function (item) {
              /* istanbul ignore next */
              cov_mbze6z6xc().f[18]++;
              cov_mbze6z6xc().s[60]++;
              return item.metadata.priority === 'medium';
            }).length,
            low: feedItems.filter(function (item) {
              /* istanbul ignore next */
              cov_mbze6z6xc().f[19]++;
              cov_mbze6z6xc().s[61]++;
              return item.metadata.priority === 'low';
            }).length
          });

          // In production, this would call:
          // const { addItem } = useFeedStore.getState();
          // feedItems.forEach(item => addItem(item));
          cov_mbze6z6xc().s[62]++;
          return _context.a(2, feedItems);
      }
    }, _callee);
  }));
  return function integrateClassifiedTweets(_x) {
    return _ref4.apply(this, arguments);
  };
}();

/**
 * Filter duplicate tweets (same content from multiple sources)
 */
/* istanbul ignore next */
cov_mbze6z6xc().s[63]++;
export var filterDuplicateTweets = function filterDuplicateTweets(tweets) {
  /* istanbul ignore next */
  cov_mbze6z6xc().f[20]++;
  var seen =
  /* istanbul ignore next */
  (cov_mbze6z6xc().s[64]++, new Set());
  /* istanbul ignore next */
  cov_mbze6z6xc().s[65]++;
  return tweets.filter(function (tweet) {
    /* istanbul ignore next */
    cov_mbze6z6xc().f[21]++;
    // Create a normalized content signature
    var signature =
    /* istanbul ignore next */
    (cov_mbze6z6xc().s[66]++, tweet.text.toLowerCase().replace(/[^\w\s]/g, '') // Remove punctuation
    .replace(/\s+/g, ' ') // Normalize whitespace
    .trim());
    /* istanbul ignore next */
    cov_mbze6z6xc().s[67]++;
    if (seen.has(signature)) {
      /* istanbul ignore next */
      cov_mbze6z6xc().b[17][0]++;
      cov_mbze6z6xc().s[68]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_mbze6z6xc().b[17][1]++;
    }
    cov_mbze6z6xc().s[69]++;
    seen.add(signature);
    /* istanbul ignore next */
    cov_mbze6z6xc().s[70]++;
    return true;
  });
};

/**
 * Merge tweets from different sources about the same transfer
 */
/* istanbul ignore next */
cov_mbze6z6xc().s[71]++;
export var mergeSimilarTweets = function mergeSimilarTweets(tweetClassifications) {
  /* istanbul ignore next */
  cov_mbze6z6xc().f[22]++;
  // Simple implementation - could be enhanced with similarity algorithms
  var mergedResults =
  /* istanbul ignore next */
  (cov_mbze6z6xc().s[72]++, []);
  var processed =
  /* istanbul ignore next */
  (cov_mbze6z6xc().s[73]++, new Set());
  /* istanbul ignore next */
  cov_mbze6z6xc().s[74]++;
  var _iterator = _createForOfIteratorHelper(tweetClassifications),
    _step;
  /* istanbul ignore next */
  try {
    var _loop2 = function _loop2() {
      /* istanbul ignore next */
      var item = _step.value;
      /* istanbul ignore next */
      cov_mbze6z6xc().s[75]++;
      if (processed.has(item.tweet.id)) {
        /* istanbul ignore next */
        cov_mbze6z6xc().b[18][0]++;
        cov_mbze6z6xc().s[76]++;
        return 1; // continue
      } else
      /* istanbul ignore next */
      {
        cov_mbze6z6xc().b[18][1]++;
      }

      // Find similar tweets (same transfer keywords and entities)
      var similar =
      /* istanbul ignore next */
      (cov_mbze6z6xc().s[77]++, tweetClassifications.filter(function (other) {
        /* istanbul ignore next */
        cov_mbze6z6xc().f[23]++;
        cov_mbze6z6xc().s[78]++;
        return /* istanbul ignore next */(cov_mbze6z6xc().b[19][0]++, other.tweet.id !== item.tweet.id) &&
        /* istanbul ignore next */
        (cov_mbze6z6xc().b[19][1]++, !processed.has(other.tweet.id)) &&
        /* istanbul ignore next */
        (cov_mbze6z6xc().b[19][2]++, haveSimilarKeywords(item.classification.keywords, other.classification.keywords));
      }));

      // Mark similar tweets as processed
      /* istanbul ignore next */
      cov_mbze6z6xc().s[79]++;
      similar.forEach(function (s) {
        /* istanbul ignore next */
        cov_mbze6z6xc().f[24]++;
        cov_mbze6z6xc().s[80]++;
        return processed.add(s.tweet.id);
      });
      /* istanbul ignore next */
      cov_mbze6z6xc().s[81]++;
      processed.add(item.tweet.id);

      // Add the main tweet with additional sources
      /* istanbul ignore next */
      cov_mbze6z6xc().s[82]++;
      mergedResults.push(
      /* istanbul ignore next */
      _objectSpread(_objectSpread({}, item), {}, {
        additionalSources: similar.length > 0 ?
        /* istanbul ignore next */
        (cov_mbze6z6xc().b[20][0]++, similar.map(function (s) {
          /* istanbul ignore next */
          cov_mbze6z6xc().f[25]++;
          cov_mbze6z6xc().s[83]++;
          return s.source;
        })) :
        /* istanbul ignore next */
        (cov_mbze6z6xc().b[20][1]++, undefined)
      }));
    };
    for (
    /* istanbul ignore next */
    _iterator.s();
    /* istanbul ignore next */
    !(_step = _iterator.n()).done;)
    /* istanbul ignore next */
    {
      if (_loop2()) continue;
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  /* istanbul ignore next */
  cov_mbze6z6xc().s[84]++;
  return mergedResults;
};

/**
 * Check if two keyword arrays have significant overlap
 */
/* istanbul ignore next */
cov_mbze6z6xc().s[85]++;
var haveSimilarKeywords = function haveSimilarKeywords(keywords1, keywords2) {
  /* istanbul ignore next */
  cov_mbze6z6xc().f[26]++;
  var set1 =
  /* istanbul ignore next */
  (cov_mbze6z6xc().s[86]++, new Set(keywords1.map(function (k) {
    /* istanbul ignore next */
    cov_mbze6z6xc().f[27]++;
    cov_mbze6z6xc().s[87]++;
    return k.toLowerCase();
  })));
  var set2 =
  /* istanbul ignore next */
  (cov_mbze6z6xc().s[88]++, new Set(keywords2.map(function (k) {
    /* istanbul ignore next */
    cov_mbze6z6xc().f[28]++;
    cov_mbze6z6xc().s[89]++;
    return k.toLowerCase();
  })));
  var intersection =
  /* istanbul ignore next */
  (cov_mbze6z6xc().s[90]++, new Set(
  /* istanbul ignore next */
  _toConsumableArray(set1).filter(function (k) {
    /* istanbul ignore next */
    cov_mbze6z6xc().f[29]++;
    cov_mbze6z6xc().s[91]++;
    return set2.has(k);
  })));
  var union =
  /* istanbul ignore next */
  (cov_mbze6z6xc().s[92]++, new Set(
  /* istanbul ignore next */
  [].concat(_toConsumableArray(set1), _toConsumableArray(set2))));

  // Consider similar if >50% keyword overlap
  /* istanbul ignore next */
  cov_mbze6z6xc().s[93]++;
  return intersection.size / union.size > 0.5;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,