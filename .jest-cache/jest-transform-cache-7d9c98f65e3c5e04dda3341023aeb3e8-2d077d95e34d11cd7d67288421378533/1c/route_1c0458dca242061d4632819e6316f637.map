{"version":3,"names":["cov_nbo1tvwz0","actualCoverage","_regenerator","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","next","push","isArray","NextResponse","z","timestampSchema","s","string","regex","generateRelatedBriefings","currentTimestamp","_ref","split","map","Number","_ref2","year","month","day","hour","currentDate","Date","relatedBriefings","offsets","forEach","offset","index","relatedDate","getTime","timestamp","getFullYear","String","getMonth","padStart","getDate","getHours","join","titles","funnyTitle","id","concat","slug","title","toLocaleDateString","weekday","funny","full","summary","metaDescription","sections","polaroids","tags","clubs","players","leagues","sources","metadata","estimatedReadTime","wordCount","terryScore","shareCount","twitter","facebook","whatsapp","email","viewCount","sharing","url","shortUrl","description","openGraph","image","status","publishedAt","createdAt","updatedAt","GET","_x","_x2","_GET","_callee","request","_ref3","params","validatedTimestamp","briefings","_t","_context","parse","json","headers","ZodError","b","error","console"],"sources":["route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { z } from \"zod\";\nimport { Briefing } from \"@/lib/types/briefing\";\n\n// Timestamp validation schema\nconst timestampSchema = z\n  .string()\n  .regex(\n    /^\\d{4}-\\d{2}-\\d{2}-\\d{2}$/,\n    \"Timestamp must be in format YYYY-MM-DD-HH\"\n  );\n\n// Generate mock related briefings\nconst generateRelatedBriefings = (currentTimestamp: string): Briefing[] => {\n  const [year, month, day, hour] = currentTimestamp.split(\"-\").map(Number);\n  const currentDate = new Date(year, month - 1, day, hour);\n\n  const relatedBriefings: Briefing[] = [];\n\n  // Generate 2 previous and 2 next briefings for navigation\n  const offsets = [-2, -1, 1, 2];\n\n  offsets.forEach((offset, index) => {\n    const relatedDate = new Date(\n      currentDate.getTime() + offset * 60 * 60 * 1000\n    );\n\n    const timestamp = [\n      relatedDate.getFullYear(),\n      String(relatedDate.getMonth() + 1).padStart(2, \"0\"),\n      String(relatedDate.getDate()).padStart(2, \"0\"),\n      String(relatedDate.getHours()).padStart(2, \"0\"),\n    ].join(\"-\");\n\n    // Vary titles based on position\n    const titles = [\n      \"Barcelona's Director of Football Caught Using FIFA Career Mode for Transfers\",\n      \"Bayern Munich's New Strategy: Only Sign Players Named Thomas\",\n      \"PSG Considering Bid for the Moon to Improve Atmosphere at Parc des Princes\",\n      \"Inter Milan's Scouting Network Revealed to be One Guy with Twitter\",\n    ];\n\n    const funnyTitle = titles[index % titles.length];\n\n    relatedBriefings.push({\n      id: `briefing-${timestamp}`,\n      slug: timestamp,\n      timestamp: relatedDate,\n      title: {\n        day: relatedDate.toLocaleDateString(\"en-US\", { weekday: \"long\" }),\n        hour: `${relatedDate.getHours()}:00`,\n        month: relatedDate.toLocaleDateString(\"en-US\", { month: \"short\" }),\n        year: String(relatedDate.getFullYear()),\n        funny: funnyTitle,\n        full: `${relatedDate.toLocaleDateString(\"en-US\", { weekday: \"long\" })} ${relatedDate.getHours()}:00 Briefing ${relatedDate.toLocaleDateString(\"en-US\", { month: \"short\" })} ${relatedDate.getFullYear()} - ${funnyTitle}`,\n      },\n      summary: \"More transfer chaos and football absurdity from The Terry.\",\n      metaDescription:\n        \"The Terry's take on football's latest transfer nonsense.\",\n      sections: [], // Not needed for related briefings\n      polaroids: [],\n      tags: {\n        clubs: [\"Barcelona\", \"Bayern Munich\", \"PSG\", \"Inter Milan\"],\n        players: [\"Various Players\"],\n        leagues: [\"La Liga\", \"Bundesliga\", \"Ligue 1\", \"Serie A\"],\n        sources: [\"Various Sources\"],\n      },\n      metadata: {\n        estimatedReadTime: 5,\n        wordCount: 1200,\n        terryScore: 88,\n        shareCount: {\n          twitter: 0,\n          facebook: 0,\n          whatsapp: 0,\n          email: 0,\n        },\n        viewCount: 0,\n      },\n      sharing: {\n        url: `https://transferjuice.com/briefings/${timestamp}`,\n        shortUrl: `https://tjuice.co/b/${timestamp}`,\n        title: funnyTitle,\n        description: \"The Terry's latest briefing\",\n        shareCount: {\n          twitter: 0,\n          facebook: 0,\n          whatsapp: 0,\n          email: 0,\n        },\n      },\n      openGraph: {\n        title: `${funnyTitle} - Transfer Juice`,\n        description: \"The Terry's latest briefing\",\n        image: \"https://transferjuice.com/og/briefing-default.jpg\",\n        url: `https://transferjuice.com/briefings/${timestamp}`,\n      },\n      status: \"published\",\n      publishedAt: relatedDate,\n      createdAt: relatedDate,\n      updatedAt: relatedDate,\n    });\n  });\n\n  return relatedBriefings;\n};\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: { timestamp: string } }\n) {\n  try {\n    // Validate timestamp format\n    const validatedTimestamp = timestampSchema.parse(params.timestamp);\n\n    // TODO: Replace with actual database query\n    // First, get the current briefing to find its tags\n    // const currentBriefing = await prisma.briefing.findUnique({\n    //   where: { slug: validatedTimestamp },\n    //   select: {\n    //     id: true,\n    //     tags: true,\n    //     publishedAt: true,\n    //   },\n    // });\n\n    // if (!currentBriefing) {\n    //   return NextResponse.json(\n    //     { error: 'Briefing not found' },\n    //     { status: 404 }\n    //   );\n    // }\n\n    // Find related briefings based on:\n    // 1. Same-day briefings (temporal proximity)\n    // 2. Similar tags (content similarity)\n    // 3. Exclude the current briefing\n\n    // const relatedBriefings = await prisma.briefing.findMany({\n    //   where: {\n    //     id: { not: currentBriefing.id },\n    //     status: 'published',\n    //     OR: [\n    //       // Same day briefings\n    //       {\n    //         publishedAt: {\n    //           gte: startOfDay(currentBriefing.publishedAt),\n    //           lte: endOfDay(currentBriefing.publishedAt),\n    //         },\n    //       },\n    //       // Similar tags\n    //       {\n    //         tags: {\n    //           clubs: {\n    //             hasSome: currentBriefing.tags.clubs,\n    //           },\n    //         },\n    //       },\n    //       {\n    //         tags: {\n    //           players: {\n    //             hasSome: currentBriefing.tags.players,\n    //           },\n    //         },\n    //       },\n    //     ],\n    //   },\n    //   orderBy: [\n    //     // Prioritize temporal proximity\n    //     {\n    //       publishedAt: 'desc',\n    //     },\n    //   ],\n    //   take: 5,\n    //   select: {\n    //     id: true,\n    //     slug: true,\n    //     timestamp: true,\n    //     title: true,\n    //     summary: true,\n    //     tags: true,\n    //     metadata: {\n    //       select: {\n    //         estimatedReadTime: true,\n    //         terryScore: true,\n    //       },\n    //     },\n    //   },\n    // });\n\n    const briefings = generateRelatedBriefings(validatedTimestamp);\n\n    return NextResponse.json(\n      { briefings },\n      {\n        status: 200,\n        headers: {\n          \"Cache-Control\": \"public, s-maxage=600, stale-while-revalidate=1200\",\n        },\n      }\n    );\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: \"Invalid timestamp format. Use YYYY-MM-DD-HH\" },\n        { status: 400 }\n      );\n    }\n\n    console.error(\"Error fetching related briefings:\", error);\n    return NextResponse.json(\n      { error: \"Internal server error\" },\n      { status: 500 }\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}