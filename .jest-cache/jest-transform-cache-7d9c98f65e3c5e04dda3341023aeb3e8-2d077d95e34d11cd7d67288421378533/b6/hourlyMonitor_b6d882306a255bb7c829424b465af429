183a44eddfb793cc58e6778269233326
/* istanbul ignore next */ function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function cov_1pjb6jsvof() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/monitoring/hourlyMonitor.ts";
  var hash = "d4d65020d76f3d7493cdfbeae8a9760f055909dd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/monitoring/hourlyMonitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 68,
          column: 2
        }
      },
      "1": {
        start: {
          line: 70,
          column: 25
        },
        end: {
          line: 74,
          column: 2
        }
      },
      "2": {
        start: {
          line: 81,
          column: 2
        },
        end: {
          line: 216,
          column: 4
        }
      },
      "3": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 84,
          column: 60
        }
      },
      "4": {
        start: {
          line: 86,
          column: 24
        },
        end: {
          line: 86,
          column: 34
        }
      },
      "5": {
        start: {
          line: 87,
          column: 32
        },
        end: {
          line: 87,
          column: 33
        }
      },
      "6": {
        start: {
          line: 88,
          column: 28
        },
        end: {
          line: 88,
          column: 29
        }
      },
      "7": {
        start: {
          line: 89,
          column: 24
        },
        end: {
          line: 89,
          column: 25
        }
      },
      "8": {
        start: {
          line: 90,
          column: 32
        },
        end: {
          line: 90,
          column: 33
        }
      },
      "9": {
        start: {
          line: 91,
          column: 36
        },
        end: {
          line: 91,
          column: 38
        }
      },
      "10": {
        start: {
          line: 93,
          column: 6
        },
        end: {
          line: 210,
          column: 7
        }
      },
      "11": {
        start: {
          line: 95,
          column: 27
        },
        end: {
          line: 98,
          column: 10
        }
      },
      "12": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 70
        }
      },
      "13": {
        start: {
          line: 103,
          column: 27
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "14": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 47
        }
      },
      "15": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 48
        }
      },
      "16": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 75
        }
      },
      "17": {
        start: {
          line: 114,
          column: 32
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "18": {
        start: {
          line: 117,
          column: 28
        },
        end: {
          line: 117,
          column: 30
        }
      },
      "19": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "20": {
        start: {
          line: 120,
          column: 14
        },
        end: {
          line: 144,
          column: 15
        }
      },
      "21": {
        start: {
          line: 122,
          column: 18
        },
        end: {
          line: 122,
          column: 63
        }
      },
      "22": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 140,
          column: 17
        }
      },
      "23": {
        start: {
          line: 124,
          column: 18
        },
        end: {
          line: 124,
          column: 48
        }
      },
      "24": {
        start: {
          line: 127,
          column: 18
        },
        end: {
          line: 135,
          column: 19
        }
      },
      "25": {
        start: {
          line: 128,
          column: 20
        },
        end: {
          line: 128,
          column: 38
        }
      },
      "26": {
        start: {
          line: 129,
          column: 25
        },
        end: {
          line: 135,
          column: 19
        }
      },
      "27": {
        start: {
          line: 132,
          column: 20
        },
        end: {
          line: 132,
          column: 42
        }
      },
      "28": {
        start: {
          line: 134,
          column: 20
        },
        end: {
          line: 134,
          column: 34
        }
      },
      "29": {
        start: {
          line: 137,
          column: 18
        },
        end: {
          line: 139,
          column: 19
        }
      },
      "30": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 69
        }
      },
      "31": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 72
        }
      },
      "32": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 30
        }
      },
      "33": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 27
        }
      },
      "34": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 78
        }
      },
      "35": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 154,
          column: 10
        }
      },
      "36": {
        start: {
          line: 157,
          column: 29
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "37": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 54
        }
      },
      "38": {
        start: {
          line: 165,
          column: 29
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "39": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 49
        }
      },
      "40": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 49
        }
      },
      "41": {
        start: {
          line: 176,
          column: 30
        },
        end: {
          line: 176,
          column: 52
        }
      },
      "42": {
        start: {
          line: 178,
          column: 10
        },
        end: {
          line: 181,
          column: 15
        }
      },
      "43": {
        start: {
          line: 179,
          column: 51
        },
        end: {
          line: 179,
          column: 62
        }
      },
      "44": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 71
        }
      },
      "45": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 186,
          column: 10
        }
      },
      "46": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 196,
          column: 11
        }
      },
      "47": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 28
        }
      },
      "48": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 57
        }
      },
      "49": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 207,
          column: 11
        }
      },
      "50": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 20
        }
      },
      "51": {
        start: {
          line: 223,
          column: 21
        },
        end: {
          line: 223,
          column: 23
        }
      },
      "52": {
        start: {
          line: 225,
          column: 2
        },
        end: {
          line: 259,
          column: 3
        }
      },
      "53": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 258,
          column: 5
        }
      },
      "54": {
        start: {
          line: 228,
          column: 24
        },
        end: {
          line: 228,
          column: 57
        }
      },
      "55": {
        start: {
          line: 231,
          column: 24
        },
        end: {
          line: 234,
          column: 8
        }
      },
      "56": {
        start: {
          line: 237,
          column: 29
        },
        end: {
          line: 237,
          column: 31
        }
      },
      "57": {
        start: {
          line: 238,
          column: 6
        },
        end: {
          line: 250,
          column: 7
        }
      },
      "58": {
        start: {
          line: 239,
          column: 31
        },
        end: {
          line: 239,
          column: 72
        }
      },
      "59": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "60": {
        start: {
          line: 244,
          column: 10
        },
        end: {
          line: 248,
          column: 13
        }
      },
      "61": {
        start: {
          line: 252,
          column: 6
        },
        end: {
          line: 252,
          column: 41
        }
      },
      "62": {
        start: {
          line: 255,
          column: 6
        },
        end: {
          line: 255,
          column: 55
        }
      },
      "63": {
        start: {
          line: 257,
          column: 6
        },
        end: {
          line: 257,
          column: 73
        }
      },
      "64": {
        start: {
          line: 261,
          column: 2
        },
        end: {
          line: 261,
          column: 20
        }
      },
      "65": {
        start: {
          line: 270,
          column: 2
        },
        end: {
          line: 372,
          column: 3
        }
      },
      "66": {
        start: {
          line: 272,
          column: 28
        },
        end: {
          line: 276,
          column: 5
        }
      },
      "67": {
        start: {
          line: 279,
          column: 17
        },
        end: {
          line: 279,
          column: 60
        }
      },
      "68": {
        start: {
          line: 282,
          column: 33
        },
        end: {
          line: 315,
          column: 5
        }
      },
      "69": {
        start: {
          line: 309,
          column: 28
        },
        end: {
          line: 309,
          column: 34
        }
      },
      "70": {
        start: {
          line: 319,
          column: 6
        },
        end: {
          line: 319,
          column: 66
        }
      },
      "71": {
        start: {
          line: 322,
          column: 33
        },
        end: {
          line: 345,
          column: 5
        }
      },
      "72": {
        start: {
          line: 348,
          column: 4
        },
        end: {
          line: 363,
          column: 5
        }
      },
      "73": {
        start: {
          line: 349,
          column: 6
        },
        end: {
          line: 351,
          column: 8
        }
      },
      "74": {
        start: {
          line: 352,
          column: 6
        },
        end: {
          line: 352,
          column: 74
        }
      },
      "75": {
        start: {
          line: 353,
          column: 11
        },
        end: {
          line: 363,
          column: 5
        }
      },
      "76": {
        start: {
          line: 354,
          column: 6
        },
        end: {
          line: 356,
          column: 8
        }
      },
      "77": {
        start: {
          line: 357,
          column: 6
        },
        end: {
          line: 357,
          column: 72
        }
      },
      "78": {
        start: {
          line: 358,
          column: 6
        },
        end: {
          line: 358,
          column: 18
        }
      },
      "79": {
        start: {
          line: 360,
          column: 6
        },
        end: {
          line: 362,
          column: 8
        }
      },
      "80": {
        start: {
          line: 365,
          column: 4
        },
        end: {
          line: 365,
          column: 18
        }
      },
      "81": {
        start: {
          line: 367,
          column: 4
        },
        end: {
          line: 370,
          column: 6
        }
      },
      "82": {
        start: {
          line: 371,
          column: 4
        },
        end: {
          line: 371,
          column: 16
        }
      },
      "83": {
        start: {
          line: 381,
          column: 18
        },
        end: {
          line: 381,
          column: 20
        }
      },
      "84": {
        start: {
          line: 383,
          column: 2
        },
        end: {
          line: 388,
          column: 3
        }
      },
      "85": {
        start: {
          line: 384,
          column: 28
        },
        end: {
          line: 384,
          column: 73
        }
      },
      "86": {
        start: {
          line: 385,
          column: 4
        },
        end: {
          line: 387,
          column: 5
        }
      },
      "87": {
        start: {
          line: 386,
          column: 6
        },
        end: {
          line: 386,
          column: 36
        }
      },
      "88": {
        start: {
          line: 390,
          column: 2
        },
        end: {
          line: 390,
          column: 17
        }
      },
      "89": {
        start: {
          line: 400,
          column: 2
        },
        end: {
          line: 402,
          column: 3
        }
      },
      "90": {
        start: {
          line: 401,
          column: 4
        },
        end: {
          line: 401,
          column: 19
        }
      },
      "91": {
        start: {
          line: 404,
          column: 2
        },
        end: {
          line: 438,
          column: 3
        }
      },
      "92": {
        start: {
          line: 406,
          column: 20
        },
        end: {
          line: 409,
          column: 6
        }
      },
      "93": {
        start: {
          line: 412,
          column: 4
        },
        end: {
          line: 435,
          column: 5
        }
      },
      "94": {
        start: {
          line: 413,
          column: 30
        },
        end: {
          line: 417,
          column: 7
        }
      },
      "95": {
        start: {
          line: 419,
          column: 51
        },
        end: {
          line: 432,
          column: 7
        }
      },
      "96": {
        start: {
          line: 434,
          column: 6
        },
        end: {
          line: 434,
          column: 34
        }
      },
      "97": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 437,
          column: 59
        }
      },
      "98": {
        start: {
          line: 440,
          column: 2
        },
        end: {
          line: 440,
          column: 17
        }
      },
      "99": {
        start: {
          line: 449,
          column: 27
        },
        end: {
          line: 449,
          column: 29
        }
      },
      "100": {
        start: {
          line: 451,
          column: 2
        },
        end: {
          line: 472,
          column: 3
        }
      },
      "101": {
        start: {
          line: 452,
          column: 4
        },
        end: {
          line: 471,
          column: 5
        }
      },
      "102": {
        start: {
          line: 454,
          column: 21
        },
        end: {
          line: 457,
          column: 7
        }
      },
      "103": {
        start: {
          line: 460,
          column: 40
        },
        end: {
          line: 463,
          column: 7
        }
      },
      "104": {
        start: {
          line: 466,
          column: 6
        },
        end: {
          line: 466,
          column: 46
        }
      },
      "105": {
        start: {
          line: 468,
          column: 6
        },
        end: {
          line: 468,
          column: 41
        }
      },
      "106": {
        start: {
          line: 470,
          column: 6
        },
        end: {
          line: 470,
          column: 57
        }
      },
      "107": {
        start: {
          line: 474,
          column: 2
        },
        end: {
          line: 474,
          column: 26
        }
      },
      "108": {
        start: {
          line: 481,
          column: 2
        },
        end: {
          line: 483,
          column: 3
        }
      },
      "109": {
        start: {
          line: 482,
          column: 4
        },
        end: {
          line: 482,
          column: 49
        }
      },
      "110": {
        start: {
          line: 493,
          column: 15
        },
        end: {
          line: 493,
          column: 17
        }
      },
      "111": {
        start: {
          line: 496,
          column: 22
        },
        end: {
          line: 496,
          column: 50
        }
      },
      "112": {
        start: {
          line: 497,
          column: 2
        },
        end: {
          line: 499,
          column: 3
        }
      },
      "113": {
        start: {
          line: 498,
          column: 4
        },
        end: {
          line: 498,
          column: 54
        }
      },
      "114": {
        start: {
          line: 502,
          column: 24
        },
        end: {
          line: 502,
          column: 52
        }
      },
      "115": {
        start: {
          line: 503,
          column: 2
        },
        end: {
          line: 505,
          column: 3
        }
      },
      "116": {
        start: {
          line: 504,
          column: 4
        },
        end: {
          line: 504,
          column: 56
        }
      },
      "117": {
        start: {
          line: 508,
          column: 2
        },
        end: {
          line: 520,
          column: 3
        }
      },
      "118": {
        start: {
          line: 509,
          column: 4
        },
        end: {
          line: 519,
          column: 5
        }
      },
      "119": {
        start: {
          line: 510,
          column: 6
        },
        end: {
          line: 518,
          column: 7
        }
      },
      "120": {
        start: {
          line: 512,
          column: 10
        },
        end: {
          line: 512,
          column: 64
        }
      },
      "121": {
        start: {
          line: 516,
          column: 21
        },
        end: {
          line: 516,
          column: 46
        }
      },
      "122": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 517,
          column: 43
        }
      },
      "123": {
        start: {
          line: 522,
          column: 2
        },
        end: {
          line: 522,
          column: 14
        }
      },
      "124": {
        start: {
          line: 529,
          column: 16
        },
        end: {
          line: 536,
          column: 3
        }
      },
      "125": {
        start: {
          line: 537,
          column: 18
        },
        end: {
          line: 537,
          column: 70
        }
      },
      "126": {
        start: {
          line: 539,
          column: 2
        },
        end: {
          line: 541,
          column: 3
        }
      },
      "127": {
        start: {
          line: 539,
          column: 27
        },
        end: {
          line: 539,
          column: 63
        }
      },
      "128": {
        start: {
          line: 540,
          column: 4
        },
        end: {
          line: 540,
          column: 18
        }
      },
      "129": {
        start: {
          line: 542,
          column: 2
        },
        end: {
          line: 544,
          column: 3
        }
      },
      "130": {
        start: {
          line: 542,
          column: 31
        },
        end: {
          line: 542,
          column: 69
        }
      },
      "131": {
        start: {
          line: 543,
          column: 4
        },
        end: {
          line: 543,
          column: 20
        }
      },
      "132": {
        start: {
          line: 545,
          column: 2
        },
        end: {
          line: 545,
          column: 18
        }
      },
      "133": {
        start: {
          line: 554,
          column: 2
        },
        end: {
          line: 554,
          column: 58
        }
      },
      "134": {
        start: {
          line: 554,
          column: 40
        },
        end: {
          line: 554,
          column: 58
        }
      },
      "135": {
        start: {
          line: 555,
          column: 2
        },
        end: {
          line: 555,
          column: 54
        }
      },
      "136": {
        start: {
          line: 555,
          column: 40
        },
        end: {
          line: 555,
          column: 54
        }
      },
      "137": {
        start: {
          line: 556,
          column: 2
        },
        end: {
          line: 556,
          column: 55
        }
      },
      "138": {
        start: {
          line: 556,
          column: 39
        },
        end: {
          line: 556,
          column: 55
        }
      },
      "139": {
        start: {
          line: 557,
          column: 2
        },
        end: {
          line: 557,
          column: 15
        }
      },
      "140": {
        start: {
          line: 564,
          column: 20
        },
        end: {
          line: 567,
          column: 4
        }
      },
      "141": {
        start: {
          line: 569,
          column: 2
        },
        end: {
          line: 569,
          column: 76
        }
      },
      "142": {
        start: {
          line: 579,
          column: 2
        },
        end: {
          line: 584,
          column: 5
        }
      },
      "143": {
        start: {
          line: 591,
          column: 30
        },
        end: {
          line: 591,
          column: 32
        }
      },
      "144": {
        start: {
          line: 594,
          column: 25
        },
        end: {
          line: 594,
          column: 52
        }
      },
      "145": {
        start: {
          line: 595,
          column: 2
        },
        end: {
          line: 597,
          column: 3
        }
      },
      "146": {
        start: {
          line: 596,
          column: 4
        },
        end: {
          line: 596,
          column: 38
        }
      },
      "147": {
        start: {
          line: 600,
          column: 23
        },
        end: {
          line: 612,
          column: 3
        }
      },
      "148": {
        start: {
          line: 614,
          column: 2
        },
        end: {
          line: 618,
          column: 3
        }
      },
      "149": {
        start: {
          line: 615,
          column: 4
        },
        end: {
          line: 617,
          column: 5
        }
      },
      "150": {
        start: {
          line: 616,
          column: 6
        },
        end: {
          line: 616,
          column: 29
        }
      },
      "151": {
        start: {
          line: 620,
          column: 2
        },
        end: {
          line: 620,
          column: 33
        }
      },
      "152": {
        start: {
          line: 627,
          column: 14
        },
        end: {
          line: 627,
          column: 15
        }
      },
      "153": {
        start: {
          line: 630,
          column: 20
        },
        end: {
          line: 630,
          column: 45
        }
      },
      "154": {
        start: {
          line: 631,
          column: 2
        },
        end: {
          line: 631,
          column: 32
        }
      },
      "155": {
        start: {
          line: 634,
          column: 2
        },
        end: {
          line: 634,
          column: 41
        }
      },
      "156": {
        start: {
          line: 634,
          column: 29
        },
        end: {
          line: 634,
          column: 41
        }
      },
      "157": {
        start: {
          line: 635,
          column: 2
        },
        end: {
          line: 635,
          column: 48
        }
      },
      "158": {
        start: {
          line: 635,
          column: 37
        },
        end: {
          line: 635,
          column: 48
        }
      },
      "159": {
        start: {
          line: 636,
          column: 2
        },
        end: {
          line: 636,
          column: 48
        }
      },
      "160": {
        start: {
          line: 636,
          column: 37
        },
        end: {
          line: 636,
          column: 48
        }
      },
      "161": {
        start: {
          line: 637,
          column: 2
        },
        end: {
          line: 637,
          column: 47
        }
      },
      "162": {
        start: {
          line: 637,
          column: 36
        },
        end: {
          line: 637,
          column: 47
        }
      },
      "163": {
        start: {
          line: 638,
          column: 2
        },
        end: {
          line: 638,
          column: 45
        }
      },
      "164": {
        start: {
          line: 638,
          column: 34
        },
        end: {
          line: 638,
          column: 45
        }
      },
      "165": {
        start: {
          line: 639,
          column: 2
        },
        end: {
          line: 639,
          column: 45
        }
      },
      "166": {
        start: {
          line: 639,
          column: 33
        },
        end: {
          line: 639,
          column: 45
        }
      },
      "167": {
        start: {
          line: 642,
          column: 25
        },
        end: {
          line: 648,
          column: 3
        }
      },
      "168": {
        start: {
          line: 649,
          column: 2
        },
        end: {
          line: 653,
          column: 3
        }
      },
      "169": {
        start: {
          line: 650,
          column: 4
        },
        end: {
          line: 652,
          column: 5
        }
      },
      "170": {
        start: {
          line: 651,
          column: 6
        },
        end: {
          line: 651,
          column: 17
        }
      },
      "171": {
        start: {
          line: 656,
          column: 27
        },
        end: {
          line: 660,
          column: 3
        }
      },
      "172": {
        start: {
          line: 662,
          column: 2
        },
        end: {
          line: 667,
          column: 3
        }
      },
      "173": {
        start: {
          line: 663,
          column: 20
        },
        end: {
          line: 663,
          column: 42
        }
      },
      "174": {
        start: {
          line: 664,
          column: 4
        },
        end: {
          line: 666,
          column: 5
        }
      },
      "175": {
        start: {
          line: 665,
          column: 6
        },
        end: {
          line: 665,
          column: 34
        }
      },
      "176": {
        start: {
          line: 669,
          column: 2
        },
        end: {
          line: 669,
          column: 30
        }
      },
      "177": {
        start: {
          line: 676,
          column: 2
        },
        end: {
          line: 741,
          column: 3
        }
      },
      "178": {
        start: {
          line: 679,
          column: 6
        },
        end: {
          line: 679,
          column: 73
        }
      },
      "179": {
        start: {
          line: 682,
          column: 21
        },
        end: {
          line: 696,
          column: 6
        }
      },
      "180": {
        start: {
          line: 699,
          column: 4
        },
        end: {
          line: 718,
          column: 5
        }
      },
      "181": {
        start: {
          line: 700,
          column: 24
        },
        end: {
          line: 710,
          column: 8
        }
      },
      "182": {
        start: {
          line: 712,
          column: 6
        },
        end: {
          line: 717,
          column: 9
        }
      },
      "183": {
        start: {
          line: 721,
          column: 4
        },
        end: {
          line: 730,
          column: 5
        }
      },
      "184": {
        start: {
          line: 722,
          column: 6
        },
        end: {
          line: 729,
          column: 9
        }
      },
      "185": {
        start: {
          line: 733,
          column: 4
        },
        end: {
          line: 737,
          column: 5
        }
      },
      "186": {
        start: {
          line: 734,
          column: 6
        },
        end: {
          line: 736,
          column: 8
        }
      },
      "187": {
        start: {
          line: 739,
          column: 4
        },
        end: {
          line: 739,
          column: 63
        }
      },
      "188": {
        start: {
          line: 740,
          column: 4
        },
        end: {
          line: 740,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "runHourlyMonitor",
        decl: {
          start: {
            line: 80,
            column: 22
          },
          end: {
            line: 80,
            column: 38
          }
        },
        loc: {
          start: {
            line: 80,
            column: 66
          },
          end: {
            line: 217,
            column: 1
          }
        },
        line: 80
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 16
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 83
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 105,
            column: 10
          },
          end: {
            line: 105,
            column: 11
          }
        },
        loc: {
          start: {
            line: 105,
            column: 22
          },
          end: {
            line: 107,
            column: 11
          }
        },
        line: 105
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 116,
            column: 10
          },
          end: {
            line: 116,
            column: 11
          }
        },
        loc: {
          start: {
            line: 116,
            column: 22
          },
          end: {
            line: 148,
            column: 11
          }
        },
        line: 116
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 159,
            column: 10
          },
          end: {
            line: 159,
            column: 11
          }
        },
        loc: {
          start: {
            line: 159,
            column: 22
          },
          end: {
            line: 161,
            column: 11
          }
        },
        line: 159
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 167,
            column: 10
          },
          end: {
            line: 167,
            column: 11
          }
        },
        loc: {
          start: {
            line: 167,
            column: 22
          },
          end: {
            line: 169,
            column: 11
          }
        },
        line: 167
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 179,
            column: 35
          },
          end: {
            line: 179,
            column: 36
          }
        },
        loc: {
          start: {
            line: 179,
            column: 51
          },
          end: {
            line: 179,
            column: 62
          }
        },
        line: 179
      },
      "7": {
        name: "checkAllSources",
        decl: {
          start: {
            line: 222,
            column: 15
          },
          end: {
            line: 222,
            column: 30
          }
        },
        loc: {
          start: {
            line: 222,
            column: 63
          },
          end: {
            line: 262,
            column: 1
          }
        },
        line: 222
      },
      "8": {
        name: "processTransferContentWithQuality",
        decl: {
          start: {
            line: 267,
            column: 15
          },
          end: {
            line: 267,
            column: 48
          }
        },
        loc: {
          start: {
            line: 269,
            column: 32
          },
          end: {
            line: 373,
            column: 1
          }
        },
        line: 269
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 309,
            column: 21
          },
          end: {
            line: 309,
            column: 22
          }
        },
        loc: {
          start: {
            line: 309,
            column: 28
          },
          end: {
            line: 309,
            column: 34
          }
        },
        line: 309
      },
      "10": {
        name: "processTransferContent",
        decl: {
          start: {
            line: 378,
            column: 15
          },
          end: {
            line: 378,
            column: 37
          }
        },
        loc: {
          start: {
            line: 380,
            column: 36
          },
          end: {
            line: 391,
            column: 1
          }
        },
        line: 380
      },
      "11": {
        name: "addContentPadding",
        decl: {
          start: {
            line: 396,
            column: 15
          },
          end: {
            line: 396,
            column: 32
          }
        },
        loc: {
          start: {
            line: 398,
            column: 36
          },
          end: {
            line: 441,
            column: 1
          }
        },
        line: 398
      },
      "12": {
        name: "finalizeUpdates",
        decl: {
          start: {
            line: 446,
            column: 15
          },
          end: {
            line: 446,
            column: 30
          }
        },
        loc: {
          start: {
            line: 448,
            column: 27
          },
          end: {
            line: 475,
            column: 1
          }
        },
        line: 448
      },
      "13": {
        name: "broadcastLiveUpdates",
        decl: {
          start: {
            line: 480,
            column: 15
          },
          end: {
            line: 480,
            column: 35
          }
        },
        loc: {
          start: {
            line: 480,
            column: 76
          },
          end: {
            line: 484,
            column: 1
          }
        },
        line: 480
      },
      "14": {
        name: "extractTags",
        decl: {
          start: {
            line: 489,
            column: 9
          },
          end: {
            line: 489,
            column: 20
          }
        },
        loc: {
          start: {
            line: 492,
            column: 63
          },
          end: {
            line: 523,
            column: 1
          }
        },
        line: 492
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 511,
            column: 19
          },
          end: {
            line: 511,
            column: 20
          }
        },
        loc: {
          start: {
            line: 512,
            column: 10
          },
          end: {
            line: 512,
            column: 64
          }
        },
        line: 512
      },
      "16": {
        name: "determineTagType",
        decl: {
          start: {
            line: 528,
            column: 9
          },
          end: {
            line: 528,
            column: 25
          }
        },
        loc: {
          start: {
            line: 528,
            column: 73
          },
          end: {
            line: 546,
            column: 1
          }
        },
        line: 528
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 539,
            column: 17
          },
          end: {
            line: 539,
            column: 18
          }
        },
        loc: {
          start: {
            line: 539,
            column: 27
          },
          end: {
            line: 539,
            column: 63
          }
        },
        line: 539
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 542,
            column: 19
          },
          end: {
            line: 542,
            column: 20
          }
        },
        loc: {
          start: {
            line: 542,
            column: 31
          },
          end: {
            line: 542,
            column: 69
          }
        },
        line: 542
      },
      "19": {
        name: "determinePriority",
        decl: {
          start: {
            line: 551,
            column: 9
          },
          end: {
            line: 551,
            column: 26
          }
        },
        loc: {
          start: {
            line: 553,
            column: 42
          },
          end: {
            line: 558,
            column: 1
          }
        },
        line: 553
      },
      "20": {
        name: "getLastCheckTime",
        decl: {
          start: {
            line: 563,
            column: 15
          },
          end: {
            line: 563,
            column: 31
          }
        },
        loc: {
          start: {
            line: 563,
            column: 65
          },
          end: {
            line: 570,
            column: 1
          }
        },
        line: 563
      },
      "21": {
        name: "updateLastCheckTime",
        decl: {
          start: {
            line: 575,
            column: 15
          },
          end: {
            line: 575,
            column: 34
          }
        },
        loc: {
          start: {
            line: 578,
            column: 17
          },
          end: {
            line: 585,
            column: 1
          }
        },
        line: 578
      },
      "22": {
        name: "extractTerryisms",
        decl: {
          start: {
            line: 590,
            column: 9
          },
          end: {
            line: 590,
            column: 25
          }
        },
        loc: {
          start: {
            line: 590,
            column: 53
          },
          end: {
            line: 621,
            column: 1
          }
        },
        line: 590
      },
      "23": {
        name: "calculateTerryCompatibility",
        decl: {
          start: {
            line: 626,
            column: 9
          },
          end: {
            line: 626,
            column: 36
          }
        },
        loc: {
          start: {
            line: 626,
            column: 62
          },
          end: {
            line: 670,
            column: 1
          }
        },
        line: 626
      },
      "24": {
        name: "saveUpdateToDatabase",
        decl: {
          start: {
            line: 675,
            column: 15
          },
          end: {
            line: 675,
            column: 35
          }
        },
        loc: {
          start: {
            line: 675,
            column: 73
          },
          end: {
            line: 742,
            column: 1
          }
        },
        line: 675
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 123,
            column: 16
          },
          end: {
            line: 140,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 16
          },
          end: {
            line: 140,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "1": {
        loc: {
          start: {
            line: 127,
            column: 18
          },
          end: {
            line: 135,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 18
          },
          end: {
            line: 135,
            column: 19
          }
        }, {
          start: {
            line: 129,
            column: 25
          },
          end: {
            line: 135,
            column: 19
          }
        }],
        line: 127
      },
      "2": {
        loc: {
          start: {
            line: 129,
            column: 25
          },
          end: {
            line: 135,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 25
          },
          end: {
            line: 135,
            column: 19
          }
        }, {
          start: {
            line: 133,
            column: 25
          },
          end: {
            line: 135,
            column: 19
          }
        }],
        line: 129
      },
      "3": {
        loc: {
          start: {
            line: 137,
            column: 18
          },
          end: {
            line: 139,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 18
          },
          end: {
            line: 139,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "4": {
        loc: {
          start: {
            line: 178,
            column: 10
          },
          end: {
            line: 181,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 14
          },
          end: {
            line: 180,
            column: 34
          }
        }, {
          start: {
            line: 181,
            column: 14
          },
          end: {
            line: 181,
            column: 15
          }
        }],
        line: 178
      },
      "5": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "6": {
        loc: {
          start: {
            line: 241,
            column: 10
          },
          end: {
            line: 242,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 10
          },
          end: {
            line: 241,
            column: 42
          }
        }, {
          start: {
            line: 242,
            column: 10
          },
          end: {
            line: 242,
            column: 41
          }
        }],
        line: 241
      },
      "7": {
        loc: {
          start: {
            line: 340,
            column: 24
          },
          end: {
            line: 344,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 341,
            column: 10
          },
          end: {
            line: 341,
            column: 18
          }
        }, {
          start: {
            line: 342,
            column: 10
          },
          end: {
            line: 344,
            column: 20
          }
        }],
        line: 340
      },
      "8": {
        loc: {
          start: {
            line: 342,
            column: 10
          },
          end: {
            line: 344,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 343,
            column: 12
          },
          end: {
            line: 343,
            column: 29
          }
        }, {
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 344,
            column: 20
          }
        }],
        line: 342
      },
      "9": {
        loc: {
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        }, {
          start: {
            line: 353,
            column: 11
          },
          end: {
            line: 363,
            column: 5
          }
        }],
        line: 348
      },
      "10": {
        loc: {
          start: {
            line: 353,
            column: 11
          },
          end: {
            line: 363,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 11
          },
          end: {
            line: 363,
            column: 5
          }
        }, {
          start: {
            line: 359,
            column: 11
          },
          end: {
            line: 363,
            column: 5
          }
        }],
        line: 353
      },
      "11": {
        loc: {
          start: {
            line: 385,
            column: 4
          },
          end: {
            line: 387,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 385,
            column: 4
          },
          end: {
            line: 387,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 385
      },
      "12": {
        loc: {
          start: {
            line: 400,
            column: 2
          },
          end: {
            line: 402,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 400,
            column: 2
          },
          end: {
            line: 402,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 400
      },
      "13": {
        loc: {
          start: {
            line: 424,
            column: 14
          },
          end: {
            line: 424,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 424,
            column: 14
          },
          end: {
            line: 424,
            column: 24
          }
        }, {
          start: {
            line: 424,
            column: 28
          },
          end: {
            line: 424,
            column: 30
          }
        }],
        line: 424
      },
      "14": {
        loc: {
          start: {
            line: 462,
            column: 16
          },
          end: {
            line: 462,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 462,
            column: 16
          },
          end: {
            line: 462,
            column: 22
          }
        }, {
          start: {
            line: 462,
            column: 26
          },
          end: {
            line: 462,
            column: 28
          }
        }],
        line: 462
      },
      "15": {
        loc: {
          start: {
            line: 496,
            column: 22
          },
          end: {
            line: 496,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 496,
            column: 22
          },
          end: {
            line: 496,
            column: 44
          }
        }, {
          start: {
            line: 496,
            column: 48
          },
          end: {
            line: 496,
            column: 50
          }
        }],
        line: 496
      },
      "16": {
        loc: {
          start: {
            line: 502,
            column: 24
          },
          end: {
            line: 502,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 502,
            column: 24
          },
          end: {
            line: 502,
            column: 46
          }
        }, {
          start: {
            line: 502,
            column: 50
          },
          end: {
            line: 502,
            column: 52
          }
        }],
        line: 502
      },
      "17": {
        loc: {
          start: {
            line: 508,
            column: 2
          },
          end: {
            line: 520,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 508,
            column: 2
          },
          end: {
            line: 520,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 508
      },
      "18": {
        loc: {
          start: {
            line: 510,
            column: 6
          },
          end: {
            line: 518,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 510,
            column: 6
          },
          end: {
            line: 518,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 510
      },
      "19": {
        loc: {
          start: {
            line: 539,
            column: 2
          },
          end: {
            line: 541,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 539,
            column: 2
          },
          end: {
            line: 541,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 539
      },
      "20": {
        loc: {
          start: {
            line: 542,
            column: 2
          },
          end: {
            line: 544,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 542,
            column: 2
          },
          end: {
            line: 544,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 542
      },
      "21": {
        loc: {
          start: {
            line: 554,
            column: 2
          },
          end: {
            line: 554,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 554,
            column: 2
          },
          end: {
            line: 554,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 554
      },
      "22": {
        loc: {
          start: {
            line: 555,
            column: 2
          },
          end: {
            line: 555,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 555,
            column: 2
          },
          end: {
            line: 555,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 555
      },
      "23": {
        loc: {
          start: {
            line: 556,
            column: 2
          },
          end: {
            line: 556,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 556,
            column: 2
          },
          end: {
            line: 556,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 556
      },
      "24": {
        loc: {
          start: {
            line: 569,
            column: 9
          },
          end: {
            line: 569,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 569,
            column: 9
          },
          end: {
            line: 569,
            column: 29
          }
        }, {
          start: {
            line: 569,
            column: 33
          },
          end: {
            line: 569,
            column: 75
          }
        }],
        line: 569
      },
      "25": {
        loc: {
          start: {
            line: 595,
            column: 2
          },
          end: {
            line: 597,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 595,
            column: 2
          },
          end: {
            line: 597,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 595
      },
      "26": {
        loc: {
          start: {
            line: 615,
            column: 4
          },
          end: {
            line: 617,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 615,
            column: 4
          },
          end: {
            line: 617,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 615
      },
      "27": {
        loc: {
          start: {
            line: 634,
            column: 2
          },
          end: {
            line: 634,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 634,
            column: 2
          },
          end: {
            line: 634,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 634
      },
      "28": {
        loc: {
          start: {
            line: 635,
            column: 2
          },
          end: {
            line: 635,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 635,
            column: 2
          },
          end: {
            line: 635,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 635
      },
      "29": {
        loc: {
          start: {
            line: 636,
            column: 2
          },
          end: {
            line: 636,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 636,
            column: 2
          },
          end: {
            line: 636,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 636
      },
      "30": {
        loc: {
          start: {
            line: 637,
            column: 2
          },
          end: {
            line: 637,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 637,
            column: 2
          },
          end: {
            line: 637,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 637
      },
      "31": {
        loc: {
          start: {
            line: 638,
            column: 2
          },
          end: {
            line: 638,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 638,
            column: 2
          },
          end: {
            line: 638,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 638
      },
      "32": {
        loc: {
          start: {
            line: 639,
            column: 2
          },
          end: {
            line: 639,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 639,
            column: 2
          },
          end: {
            line: 639,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 639
      },
      "33": {
        loc: {
          start: {
            line: 650,
            column: 4
          },
          end: {
            line: 652,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 650,
            column: 4
          },
          end: {
            line: 652,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 650
      },
      "34": {
        loc: {
          start: {
            line: 664,
            column: 4
          },
          end: {
            line: 666,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 664,
            column: 4
          },
          end: {
            line: 666,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 664
      },
      "35": {
        loc: {
          start: {
            line: 679,
            column: 6
          },
          end: {
            line: 679,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 679,
            column: 6
          },
          end: {
            line: 679,
            column: 42
          }
        }, {
          start: {
            line: 679,
            column: 46
          },
          end: {
            line: 679,
            column: 73
          }
        }],
        line: 679
      },
      "36": {
        loc: {
          start: {
            line: 733,
            column: 4
          },
          end: {
            line: 737,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 733,
            column: 4
          },
          end: {
            line: 737,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 733
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d4d65020d76f3d7493cdfbeae8a9760f055909dd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1pjb6jsvof = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1pjb6jsvof();
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Hourly Transfer Monitoring System
 *
 * This system runs every hour to:
 * 1. Check all ITK accounts for new tweets/updates
 * 2. Generate engaging Terry-style updates
 * 3. Validate quality and route for human review if needed
 * 4. Search for relevant images
 * 5. Mix in funny stories from partner sources during quiet periods
 * 6. Track comprehensive metrics and performance
 */

import { prisma } from "@/lib/prisma";
import { twitterClient } from "@/lib/twitter/client";
import { classifyTransferContent } from "@/lib/twitter/transferClassifier";
import { generateTerryCommentary } from "@/lib/ai/terryCommentarySystem";
import { searchRelevantImages } from "@/lib/media/imageSearch";
import { getEngagingStories } from "@/lib/partnerships/storyMixer";
import { broadcastUpdate } from "@/lib/realtime/broadcaster";
import { ContentQualityValidator } from "@/lib/ai/quality-validator";
import { TerryArticleGenerator } from "@/lib/ai/article-generator";
import { metricsCollector, trackPipelineExecution } from "@/lib/monitoring/pipelineMetrics";
import { CONFIG } from "@/config/pipeline";
// Initialize quality validator and article generator
var qualityValidator =
/* istanbul ignore next */
(cov_1pjb6jsvof().s[0]++, new ContentQualityValidator({
  openaiApiKey: CONFIG.ai.openai.apiKey,
  strictMode: CONFIG.env.NODE_ENV === "production",
  autoReviewThreshold: CONFIG.quality.autoPublishThreshold * 100,
  terryMinimumScore: CONFIG.quality.thresholds.terryVoice * 100
}));
var articleGenerator =
/* istanbul ignore next */
(cov_1pjb6jsvof().s[1]++, new TerryArticleGenerator({
  openaiApiKey: CONFIG.ai.openai.apiKey,
  model: CONFIG.ai.openai.model,
  terryIntensity: "medium"
}));

/**
 * Main hourly monitoring function
 * Called by cron job every hour - now with comprehensive metrics tracking
 */
export
/* istanbul ignore next */
function runHourlyMonitor() {
  return _runHourlyMonitor.apply(this, arguments);
}

/**
 * Check all ITK sources for new content since last check
 */
/* istanbul ignore next */
function _runHourlyMonitor() {
  _runHourlyMonitor = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee6()
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context6) {
      while (1) switch (_context6.n) {
        case 0:
          cov_1pjb6jsvof().f[0]++;
          cov_1pjb6jsvof().s[2]++;
          return _context6.a(2, trackPipelineExecution("source_monitoring",
          /* istanbul ignore next */
          /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function
          /* istanbul ignore next */
          _callee5()
          /* istanbul ignore next */
          {
            var startTime, totalItemsProcessed, itemsSuccessful, itemsFailed, humanReviewRequired, qualityScores, itkSources, newContent, transferUpdates, mixedContent, finalUpdates, executionTime, averageQualityScore, _t3;
            return _regenerator().w(function (_context5) {
              while (1) switch (_context5.n) {
                case 0:
                  cov_1pjb6jsvof().f[1]++;
                  cov_1pjb6jsvof().s[3]++;
                  console.log("🔄 Starting hourly transfer monitor...");
                  startTime = (cov_1pjb6jsvof().s[4]++, Date.now());
                  totalItemsProcessed = (cov_1pjb6jsvof().s[5]++, 0);
                  itemsSuccessful = (cov_1pjb6jsvof().s[6]++, 0);
                  itemsFailed = (cov_1pjb6jsvof().s[7]++, 0);
                  humanReviewRequired = (cov_1pjb6jsvof().s[8]++, 0);
                  qualityScores = (cov_1pjb6jsvof().s[9]++, []);
                  cov_1pjb6jsvof().s[10]++;
                  _context5.p = 1;
                  cov_1pjb6jsvof().s[11]++;
                  _context5.n = 2;
                  return prisma.itkSource.findMany({
                    where: {
                      isActive: true
                    },
                    orderBy: {
                      reliability: "desc"
                    }
                  });
                case 2:
                  itkSources = _context5.v;
                  cov_1pjb6jsvof().s[12]++;
                  console.log(
                  /* istanbul ignore next */
                  "\uD83D\uDCE1 Monitoring ".concat(itkSources.length, " ITK sources"));

                  // 2. Check each source for new content
                  cov_1pjb6jsvof().s[13]++;
                  _context5.n = 3;
                  return trackPipelineExecution("source_monitoring",
                  /* istanbul ignore next */
                  /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function
                  /* istanbul ignore next */
                  _callee()
                  /* istanbul ignore next */
                  {
                    return _regenerator().w(function (_context) {
                      while (1) switch (_context.n) {
                        case 0:
                          cov_1pjb6jsvof().f[2]++;
                          cov_1pjb6jsvof().s[14]++;
                          return _context.a(2, checkAllSources(itkSources));
                      }
                    }, _callee);
                  })));
                case 3:
                  newContent = _context5.v;
                  cov_1pjb6jsvof().s[15]++;
                  totalItemsProcessed = newContent.length;
                  cov_1pjb6jsvof().s[16]++;
                  console.log(
                  /* istanbul ignore next */
                  "\uD83D\uDCCA Found ".concat(newContent.length, " new pieces of content"));

                  // 3. Process transfer-related content with quality validation
                  cov_1pjb6jsvof().s[17]++;
                  _context5.n = 4;
                  return trackPipelineExecution("processing",
                  /* istanbul ignore next */
                  /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function
                  /* istanbul ignore next */
                  _callee2()
                  /* istanbul ignore next */
                  {
                    var updates, _iterator4, _step4, item, processedUpdate, _t, _t2;
                    return _regenerator().w(function (_context2) {
                      while (1) switch (_context2.n) {
                        case 0:
                          cov_1pjb6jsvof().f[3]++;
                          updates = (cov_1pjb6jsvof().s[18]++, []);
                          cov_1pjb6jsvof().s[19]++;
                          _iterator4 = _createForOfIteratorHelper(newContent);
                          _context2.p = 1;
                          _iterator4.s();
                        case 2:
                          if ((_step4 = _iterator4.n()).done) {
                            _context2.n = 7;
                            break;
                          }
                          item = _step4.value;
                          cov_1pjb6jsvof().s[20]++;
                          _context2.p = 3;
                          cov_1pjb6jsvof().s[21]++;
                          _context2.n = 4;
                          return processTransferContentWithQuality(item);
                        case 4:
                          processedUpdate = _context2.v;
                          cov_1pjb6jsvof().s[22]++;
                          if (processedUpdate) {
                            /* istanbul ignore next */
                            cov_1pjb6jsvof().b[0][0]++;
                            cov_1pjb6jsvof().s[23]++;
                            updates.push(processedUpdate);

                            // Track metrics
                            /* istanbul ignore next */
                            cov_1pjb6jsvof().s[24]++;
                            if (processedUpdate.validationStatus === "passed") {
                              /* istanbul ignore next */
                              cov_1pjb6jsvof().b[1][0]++;
                              cov_1pjb6jsvof().s[25]++;
                              itemsSuccessful++;
                            } else {
                              /* istanbul ignore next */
                              cov_1pjb6jsvof().b[1][1]++;
                              cov_1pjb6jsvof().s[26]++;
                              if (processedUpdate.validationStatus === "review_required") {
                                /* istanbul ignore next */
                                cov_1pjb6jsvof().b[2][0]++;
                                cov_1pjb6jsvof().s[27]++;
                                humanReviewRequired++;
                              } else {
                                /* istanbul ignore next */
                                cov_1pjb6jsvof().b[2][1]++;
                                cov_1pjb6jsvof().s[28]++;
                                itemsFailed++;
                              }
                            }
                            /* istanbul ignore next */
                            cov_1pjb6jsvof().s[29]++;
                            if (processedUpdate.qualityScore) {
                              /* istanbul ignore next */
                              cov_1pjb6jsvof().b[3][0]++;
                              cov_1pjb6jsvof().s[30]++;
                              qualityScores.push(processedUpdate.qualityScore);
                            } else
                            /* istanbul ignore next */
                            {
                              cov_1pjb6jsvof().b[3][1]++;
                            }
                          } else
                          /* istanbul ignore next */
                          {
                            cov_1pjb6jsvof().b[0][1]++;
                          }
                          _context2.n = 6;
                          break;
                        case 5:
                          _context2.p = 5;
                          _t = _context2.v;
                          cov_1pjb6jsvof().s[31]++;
                          console.error("Failed to process content item:",
                          /* istanbul ignore next */
                          _t);
                          cov_1pjb6jsvof().s[32]++;
                          itemsFailed++;
                        case 6:
                          _context2.n = 2;
                          break;
                        case 7:
                          _context2.n = 9;
                          break;
                        case 8:
                          _context2.p = 8;
                          _t2 = _context2.v;
                          _iterator4.e(_t2);
                        case 9:
                          _context2.p = 9;
                          _iterator4.f();
                          return _context2.f(9);
                        case 10:
                          cov_1pjb6jsvof().s[33]++;
                          return _context2.a(2, updates);
                      }
                    }, _callee2, null, [[3, 5], [1, 8, 9, 10]]);
                  })));
                case 4:
                  transferUpdates = _context5.v;
                  cov_1pjb6jsvof().s[34]++;
                  console.log(
                  /* istanbul ignore next */
                  "\u2705 Processed ".concat(transferUpdates.length, " transfer updates"));
                  cov_1pjb6jsvof().s[35]++;
                  console.log(
                  /* istanbul ignore next */
                  "\uD83D\uDCC8 Quality: ".concat(itemsSuccessful, " passed, ").concat(humanReviewRequired, " need review, ").concat(itemsFailed, " failed"));

                  // 4. Mix in engaging stories if content is light
                  cov_1pjb6jsvof().s[36]++;
                  _context5.n = 5;
                  return trackPipelineExecution("mixing",
                  /* istanbul ignore next */
                  /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function
                  /* istanbul ignore next */
                  _callee3()
                  /* istanbul ignore next */
                  {
                    return _regenerator().w(function (_context3) {
                      while (1) switch (_context3.n) {
                        case 0:
                          cov_1pjb6jsvof().f[4]++;
                          cov_1pjb6jsvof().s[37]++;
                          return _context3.a(2, addContentPadding(transferUpdates));
                      }
                    }, _callee3);
                  })));
                case 5:
                  mixedContent = _context5.v;
                  cov_1pjb6jsvof().s[38]++;
                  _context5.n = 6;
                  return trackPipelineExecution("broadcasting",
                  /* istanbul ignore next */
                  /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function
                  /* istanbul ignore next */
                  _callee4()
                  /* istanbul ignore next */
                  {
                    return _regenerator().w(function (_context4) {
                      while (1) switch (_context4.n) {
                        case 0:
                          cov_1pjb6jsvof().f[5]++;
                          cov_1pjb6jsvof().s[39]++;
                          return _context4.a(2, finalizeUpdates(mixedContent));
                      }
                    }, _callee4);
                  })));
                case 6:
                  finalUpdates = _context5.v;
                  cov_1pjb6jsvof().s[40]++;
                  _context5.n = 7;
                  return broadcastLiveUpdates(finalUpdates);
                case 7:
                  // Update execution metrics
                  executionTime = (cov_1pjb6jsvof().s[41]++, Date.now() - startTime);
                  averageQualityScore = (cov_1pjb6jsvof().s[42]++, qualityScores.length > 0 ?
                  /* istanbul ignore next */
                  (cov_1pjb6jsvof().b[4][0]++, qualityScores.reduce(function (sum, score) {
                    /* istanbul ignore next */
                    cov_1pjb6jsvof().f[6]++;
                    cov_1pjb6jsvof().s[43]++;
                    return sum + score;
                  }, 0) / qualityScores.length) :
                  /* istanbul ignore next */
                  (cov_1pjb6jsvof().b[4][1]++, 0));
                  cov_1pjb6jsvof().s[44]++;
                  console.log(
                  /* istanbul ignore next */
                  "\u2705 Hourly monitor complete in ".concat(executionTime, "ms"));
                  cov_1pjb6jsvof().s[45]++;
                  console.log(
                  /* istanbul ignore next */
                  "\uD83D\uDCCA Final stats: ".concat(finalUpdates.length, " updates, avg quality ").concat(averageQualityScore.toFixed(1)));

                  // Update metrics with final results
                  cov_1pjb6jsvof().s[46]++;
                  metricsCollector.updateExecution("current", {
                    itemsProcessed: totalItemsProcessed,
                    itemsSuccessful: itemsSuccessful,
                    itemsFailed: itemsFailed,
                    humanReviewRequired: humanReviewRequired,
                    averageQualityScore: averageQualityScore,
                    duration: executionTime
                  });
                  cov_1pjb6jsvof().s[47]++;
                  return _context5.a(2, finalUpdates);
                case 8:
                  _context5.p = 8;
                  _t3 = _context5.v;
                  cov_1pjb6jsvof().s[48]++;
                  console.error("❌ Hourly monitor failed:",
                  /* istanbul ignore next */
                  _t3);

                  // Update metrics with error info
                  cov_1pjb6jsvof().s[49]++;
                  metricsCollector.updateExecution("current", {
                    itemsProcessed: totalItemsProcessed,
                    itemsSuccessful: itemsSuccessful,
                    itemsFailed: totalItemsProcessed // All failed if we hit this catch
                  });
                  cov_1pjb6jsvof().s[50]++;
                  throw _t3;
                case 9:
                  return _context5.a(2);
              }
            }, _callee5, null, [[1, 8]]);
          })), {
            pipeline_stage: "hourly_monitor",
            total_sources: "tracked_in_execution"
          }));
      }
    }, _callee6);
  }));
  return _runHourlyMonitor.apply(this, arguments);
}
/* istanbul ignore next */
function checkAllSources(_x) {
  return _checkAllSources.apply(this, arguments);
}
/**
 * Process transfer content with integrated quality validation
 */
/* istanbul ignore next */
function _checkAllSources() {
  _checkAllSources = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee7(sources)
  /* istanbul ignore next */
  {
    var newContent, _iterator5, _step5, source, lastCheck, newTweets, relevantTweets, _iterator6, _step6, tweet, classification, _t4, _t5, _t6;
    return _regenerator().w(function (_context7) {
      while (1) switch (_context7.n) {
        case 0:
          cov_1pjb6jsvof().f[7]++;
          newContent = (cov_1pjb6jsvof().s[51]++, []);
          cov_1pjb6jsvof().s[52]++;
          _iterator5 = _createForOfIteratorHelper(sources);
          _context7.p = 1;
          _iterator5.s();
        case 2:
          if ((_step5 = _iterator5.n()).done) {
            _context7.n = 17;
            break;
          }
          source = _step5.value;
          cov_1pjb6jsvof().s[53]++;
          _context7.p = 3;
          cov_1pjb6jsvof().s[54]++;
          _context7.n = 4;
          return getLastCheckTime(source.id);
        case 4:
          lastCheck = _context7.v;
          cov_1pjb6jsvof().s[55]++;
          _context7.n = 5;
          return twitterClient.getUserTimeline(source.username, {
            since: lastCheck,
            maxResults: 20
          });
        case 5:
          newTweets = _context7.v;
          // Filter for transfer relevance
          relevantTweets = (cov_1pjb6jsvof().s[56]++, []);
          cov_1pjb6jsvof().s[57]++;
          _iterator6 = _createForOfIteratorHelper(newTweets);
          _context7.p = 6;
          _iterator6.s();
        case 7:
          if ((_step6 = _iterator6.n()).done) {
            _context7.n = 10;
            break;
          }
          tweet = _step6.value;
          cov_1pjb6jsvof().s[58]++;
          _context7.n = 8;
          return classifyTransferContent(tweet.text);
        case 8:
          classification = _context7.v;
          cov_1pjb6jsvof().s[59]++;
          if (
          /* istanbul ignore next */
          (cov_1pjb6jsvof().b[6][0]++, classification.isTransferRelated) &&
          /* istanbul ignore next */
          (cov_1pjb6jsvof().b[6][1]++, classification.confidence > 0.7)) {
            /* istanbul ignore next */
            cov_1pjb6jsvof().b[5][0]++;
            cov_1pjb6jsvof().s[60]++;
            relevantTweets.push(
            /* istanbul ignore next */
            _objectSpread(_objectSpread({}, tweet), {}, {
              source: source,
              classification: classification
            }));
          } else
          /* istanbul ignore next */
          {
            cov_1pjb6jsvof().b[5][1]++;
          }
        case 9:
          _context7.n = 7;
          break;
        case 10:
          _context7.n = 12;
          break;
        case 11:
          _context7.p = 11;
          _t4 = _context7.v;
          _iterator6.e(_t4);
        case 12:
          _context7.p = 12;
          _iterator6.f();
          return _context7.f(12);
        case 13:
          cov_1pjb6jsvof().s[61]++;
          /* istanbul ignore next */
          newContent.push.apply(newContent, relevantTweets);

          // Update last check time
          cov_1pjb6jsvof().s[62]++;
          _context7.n = 14;
          return updateLastCheckTime(source.id, new Date());
        case 14:
          _context7.n = 16;
          break;
        case 15:
          _context7.p = 15;
          _t5 = _context7.v;
          cov_1pjb6jsvof().s[63]++;
          console.error(
          /* istanbul ignore next */
          "Failed to check source ".concat(source.username, ":"),
          /* istanbul ignore next */
          _t5);
        case 16:
          _context7.n = 2;
          break;
        case 17:
          _context7.n = 19;
          break;
        case 18:
          _context7.p = 18;
          _t6 = _context7.v;
          _iterator5.e(_t6);
        case 19:
          _context7.p = 19;
          _iterator5.f();
          return _context7.f(19);
        case 20:
          cov_1pjb6jsvof().s[64]++;
          return _context7.a(2, newContent);
      }
    }, _callee7, null, [[6, 11, 12, 13], [3, 15], [1, 18, 19, 20]]);
  }));
  return _checkAllSources.apply(this, arguments);
}
/* istanbul ignore next */
function processTransferContentWithQuality(_x2) {
  return _processTransferContentWithQuality.apply(this, arguments);
}
/**
 * Legacy process function for backward compatibility
 */
/* istanbul ignore next */
function _processTransferContentWithQuality() {
  _processTransferContentWithQuality = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee8(item)
  /* istanbul ignore next */
  {
    var terryCommentary, tags, articleForValidation, validationResult, update, _t7;
    return _regenerator().w(function (_context8) {
      while (1) switch (_context8.n) {
        case 0:
          cov_1pjb6jsvof().f[8]++;
          cov_1pjb6jsvof().s[65]++;
          _context8.p = 1;
          cov_1pjb6jsvof().s[66]++;
          _context8.n = 2;
          return generateTerryCommentary(item.text, item.classification, item.source);
        case 2:
          terryCommentary = _context8.v;
          // Extract tags from content
          tags = (cov_1pjb6jsvof().s[67]++, extractTags(item.text, item.classification)); // Create article structure for quality validation
          articleForValidation = (cov_1pjb6jsvof().s[68]++, {
            title:
            /* istanbul ignore next */
            "Transfer Update: ".concat(item.source.name),
            slug:
            /* istanbul ignore next */
            "update-".concat(Date.now()),
            content: {
              sections: [{
                id: "main",
                type: "main",
                title: "Latest Update",
                content: terryCommentary,
                order: 1,
                sourceTweets: [item.id],
                terryisms: extractTerryisms(terryCommentary)
              }],
              wordCount: terryCommentary.split(" ").length,
              estimatedReadTime: Math.ceil(terryCommentary.split(" ").length / 200),
              terryScore: calculateTerryCompatibility(terryCommentary),
              qualityMetrics: {
                coherence: 85,
                factualAccuracy: 90,
                brandVoice: calculateTerryCompatibility(terryCommentary),
                readability: 80
              }
            },
            summary: terryCommentary.substring(0, 160),
            metaDescription:
            /* istanbul ignore next */
            "Transfer update: ".concat(item.text.substring(0, 120), "..."),
            tags: tags.map(function (t) {
              /* istanbul ignore next */
              cov_1pjb6jsvof().f[9]++;
              cov_1pjb6jsvof().s[69]++;
              return t.name;
            }),
            briefingType: "SPECIAL",
            status: "DRAFT",
            qualityScore: 0,
            // Will be calculated
            aiModel: CONFIG.ai.openai.model,
            generationTime: 0
          }); // Validate content quality
          cov_1pjb6jsvof().s[70]++;
          _context8.n = 3;
          return qualityValidator.validateContent(articleForValidation);
        case 3:
          validationResult = _context8.v;
          // Create update object with quality metrics
          update = (cov_1pjb6jsvof().s[71]++, {
            id:
            /* istanbul ignore next */
            "update_".concat(Date.now(), "_").concat(Math.random().toString(36).substr(2, 9)),
            type: "transfer_update",
            content: item.text,
            terryCommentary: terryCommentary,
            tags: tags,
            originalSource: {
              name: item.source.name,
              username: item.source.username,
              url:
              /* istanbul ignore next */
              "https://twitter.com/".concat(item.source.username, "/status/").concat(item.id)
            },
            timestamp: new Date(item.created_at),
            priority: determinePriority(item.classification),
            // Quality metrics
            qualityScore: validationResult.overallScore,
            terryScore: articleForValidation.content.terryScore,
            requiresHumanReview: validationResult.requiresHumanReview,
            validationStatus: validationResult.passed ?
            /* istanbul ignore next */
            (cov_1pjb6jsvof().b[7][0]++, "passed") :
            /* istanbul ignore next */
            (cov_1pjb6jsvof().b[7][1]++, validationResult.requiresHumanReview ?
            /* istanbul ignore next */
            (cov_1pjb6jsvof().b[8][0]++, "review_required") :
            /* istanbul ignore next */
            (cov_1pjb6jsvof().b[8][1]++, "failed"))
          }); // Log quality results
          cov_1pjb6jsvof().s[72]++;
          if (!validationResult.requiresHumanReview) {
            _context8.n = 4;
            break;
          }
          cov_1pjb6jsvof().b[9][0]++;
          cov_1pjb6jsvof().s[73]++;
          console.log(
          /* istanbul ignore next */
          "\uD83D\uDD0D Content requires human review - Quality: ".concat(validationResult.overallScore, ", Terry: ").concat(update.terryScore));
          cov_1pjb6jsvof().s[74]++;
          console.log(
          /* istanbul ignore next */
          "   Blockers: ".concat(validationResult.blockers.join(", ")));
          _context8.n = 6;
          break;
        case 4:
          cov_1pjb6jsvof().b[9][1]++;
          cov_1pjb6jsvof().s[75]++;
          if (validationResult.passed) {
            _context8.n = 5;
            break;
          }
          cov_1pjb6jsvof().b[10][0]++;
          cov_1pjb6jsvof().s[76]++;
          console.log(
          /* istanbul ignore next */
          "\u274C Content failed validation - Quality: ".concat(validationResult.overallScore));
          cov_1pjb6jsvof().s[77]++;
          console.log(
          /* istanbul ignore next */
          "   Issues: ".concat(validationResult.blockers.join(", ")));
          cov_1pjb6jsvof().s[78]++;
          return _context8.a(2, null);
        case 5:
          cov_1pjb6jsvof().b[10][1]++;
          cov_1pjb6jsvof().s[79]++;
          console.log(
          /* istanbul ignore next */
          "\u2705 Content passed validation - Quality: ".concat(validationResult.overallScore, ", Terry: ").concat(update.terryScore));
        case 6:
          cov_1pjb6jsvof().s[80]++;
          return _context8.a(2, update);
        case 7:
          _context8.p = 7;
          _t7 = _context8.v;
          cov_1pjb6jsvof().s[81]++;
          console.error("Failed to process content item with quality validation:",
          /* istanbul ignore next */
          _t7);
          cov_1pjb6jsvof().s[82]++;
          return _context8.a(2, null);
      }
    }, _callee8, null, [[1, 7]]);
  }));
  return _processTransferContentWithQuality.apply(this, arguments);
}
/* istanbul ignore next */
function processTransferContent(_x3) {
  return _processTransferContent.apply(this, arguments);
}
/**
 * Add engaging stories during quiet periods
 */
/* istanbul ignore next */
function _processTransferContent() {
  _processTransferContent = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee9(content)
  /* istanbul ignore next */
  {
    var updates, _iterator7, _step7, item, processedUpdate, _t8;
    return _regenerator().w(function (_context9) {
      while (1) switch (_context9.n) {
        case 0:
          cov_1pjb6jsvof().f[10]++;
          updates = (cov_1pjb6jsvof().s[83]++, []);
          cov_1pjb6jsvof().s[84]++;
          _iterator7 = _createForOfIteratorHelper(content);
          _context9.p = 1;
          _iterator7.s();
        case 2:
          if ((_step7 = _iterator7.n()).done) {
            _context9.n = 5;
            break;
          }
          item = _step7.value;
          cov_1pjb6jsvof().s[85]++;
          _context9.n = 3;
          return processTransferContentWithQuality(item);
        case 3:
          processedUpdate = _context9.v;
          cov_1pjb6jsvof().s[86]++;
          if (processedUpdate) {
            /* istanbul ignore next */
            cov_1pjb6jsvof().b[11][0]++;
            cov_1pjb6jsvof().s[87]++;
            updates.push(processedUpdate);
          } else
          /* istanbul ignore next */
          {
            cov_1pjb6jsvof().b[11][1]++;
          }
        case 4:
          _context9.n = 2;
          break;
        case 5:
          _context9.n = 7;
          break;
        case 6:
          _context9.p = 6;
          _t8 = _context9.v;
          _iterator7.e(_t8);
        case 7:
          _context9.p = 7;
          _iterator7.f();
          return _context9.f(7);
        case 8:
          cov_1pjb6jsvof().s[88]++;
          return _context9.a(2, updates);
      }
    }, _callee9, null, [[1, 6, 7, 8]]);
  }));
  return _processTransferContent.apply(this, arguments);
}
/* istanbul ignore next */
function addContentPadding(_x4) {
  return _addContentPadding.apply(this, arguments);
}
/**
 * Finalize updates with images and save to database
 */
/* istanbul ignore next */
function _addContentPadding() {
  _addContentPadding = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee0(updates)
  /* istanbul ignore next */
  {
    var stories, _iterator8, _step8, story, terryCommentary, paddingUpdate, _t9, _t0;
    return _regenerator().w(function (_context0) {
      while (1) switch (_context0.n) {
        case 0:
          cov_1pjb6jsvof().f[11]++;
          cov_1pjb6jsvof().s[89]++;
          if (!(updates.length >= 3)) {
            _context0.n = 1;
            break;
          }
          cov_1pjb6jsvof().b[12][0]++;
          cov_1pjb6jsvof().s[90]++;
          return _context0.a(2, updates);
        case 1:
          cov_1pjb6jsvof().b[12][1]++;
        case 2:
          cov_1pjb6jsvof().s[91]++;
          _context0.p = 3;
          cov_1pjb6jsvof().s[92]++;
          _context0.n = 4;
          return getEngagingStories({
            minRequired: 3 - updates.length,
            sources: ["theupshot", "fourfourtwo", "footballramble", "theathletic"]
          });
        case 4:
          stories = _context0.v;
          cov_1pjb6jsvof().s[93]++;
          // Convert stories to updates with Terry commentary
          _iterator8 = _createForOfIteratorHelper(stories);
          _context0.p = 5;
          _iterator8.s();
        case 6:
          if ((_step8 = _iterator8.n()).done) {
            _context0.n = 9;
            break;
          }
          story = _step8.value;
          cov_1pjb6jsvof().s[94]++;
          _context0.n = 7;
          return generateTerryCommentary(story.content, {
            isTransferRelated: false,
            isFootballStory: true
          }, story.source);
        case 7:
          terryCommentary = _context0.v;
          paddingUpdate = (cov_1pjb6jsvof().s[95]++, {
            id:
            /* istanbul ignore next */
            "story_".concat(Date.now(), "_").concat(Math.random().toString(36).substr(2, 9)),
            type: "story_mix",
            content: story.content,
            terryCommentary: terryCommentary,
            tags:
            /* istanbul ignore next */
            (cov_1pjb6jsvof().b[13][0]++, story.tags) ||
            /* istanbul ignore next */
            (cov_1pjb6jsvof().b[13][1]++, []),
            partnerAttribution: {
              source: story.source.name,
              url: story.url,
              attribution: story.attribution
            },
            timestamp: new Date(),
            priority: "medium"
          });
          cov_1pjb6jsvof().s[96]++;
          updates.push(paddingUpdate);
        case 8:
          _context0.n = 6;
          break;
        case 9:
          _context0.n = 11;
          break;
        case 10:
          _context0.p = 10;
          _t9 = _context0.v;
          _iterator8.e(_t9);
        case 11:
          _context0.p = 11;
          _iterator8.f();
          return _context0.f(11);
        case 12:
          _context0.n = 14;
          break;
        case 13:
          _context0.p = 13;
          _t0 = _context0.v;
          cov_1pjb6jsvof().s[97]++;
          console.error("Failed to add content padding:",
          /* istanbul ignore next */
          _t0);
        case 14:
          cov_1pjb6jsvof().s[98]++;
          return _context0.a(2, updates);
      }
    }, _callee0, null, [[5, 10, 11, 12], [3, 13]]);
  }));
  return _addContentPadding.apply(this, arguments);
}
/* istanbul ignore next */
function finalizeUpdates(_x5) {
  return _finalizeUpdates.apply(this, arguments);
}
/**
 * Broadcast updates to live feed clients
 */
/* istanbul ignore next */
function _finalizeUpdates() {
  _finalizeUpdates = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee1(updates)
  /* istanbul ignore next */
  {
    var finalizedUpdates, _iterator9, _step9, update, images, finalUpdate, _t1, _t10;
    return _regenerator().w(function (_context1) {
      while (1) switch (_context1.n) {
        case 0:
          cov_1pjb6jsvof().f[12]++;
          finalizedUpdates = (cov_1pjb6jsvof().s[99]++, []);
          cov_1pjb6jsvof().s[100]++;
          _iterator9 = _createForOfIteratorHelper(updates);
          _context1.p = 1;
          _iterator9.s();
        case 2:
          if ((_step9 = _iterator9.n()).done) {
            _context1.n = 8;
            break;
          }
          update = _step9.value;
          cov_1pjb6jsvof().s[101]++;
          _context1.p = 3;
          cov_1pjb6jsvof().s[102]++;
          _context1.n = 4;
          return searchRelevantImages(update.content + " " + update.terryCommentary, update.tags);
        case 4:
          images = _context1.v;
          // Complete the update object
          finalUpdate = (cov_1pjb6jsvof().s[103]++, _objectSpread(_objectSpread({}, update), {}, {
            images:
            /* istanbul ignore next */
            (cov_1pjb6jsvof().b[14][0]++, images) ||
            /* istanbul ignore next */
            (cov_1pjb6jsvof().b[14][1]++, [])
          })); // Save to database
          cov_1pjb6jsvof().s[104]++;
          _context1.n = 5;
          return saveUpdateToDatabase(finalUpdate);
        case 5:
          cov_1pjb6jsvof().s[105]++;
          finalizedUpdates.push(finalUpdate);
          _context1.n = 7;
          break;
        case 6:
          _context1.p = 6;
          _t1 = _context1.v;
          cov_1pjb6jsvof().s[106]++;
          console.error("Failed to finalize update:",
          /* istanbul ignore next */
          _t1);
        case 7:
          _context1.n = 2;
          break;
        case 8:
          _context1.n = 10;
          break;
        case 9:
          _context1.p = 9;
          _t10 = _context1.v;
          _iterator9.e(_t10);
        case 10:
          _context1.p = 10;
          _iterator9.f();
          return _context1.f(10);
        case 11:
          cov_1pjb6jsvof().s[107]++;
          return _context1.a(2, finalizedUpdates);
      }
    }, _callee1, null, [[3, 6], [1, 9, 10, 11]]);
  }));
  return _finalizeUpdates.apply(this, arguments);
}
/* istanbul ignore next */
function broadcastLiveUpdates(_x6) {
  return _broadcastLiveUpdates.apply(this, arguments);
}
/**
 * Extract tags from content and classification
 */
/* istanbul ignore next */
function _broadcastLiveUpdates() {
  _broadcastLiveUpdates = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee10(updates)
  /* istanbul ignore next */
  {
    var _iterator0, _step0, update, _t11;
    return _regenerator().w(function (_context10) {
      while (1) switch (_context10.n) {
        case 0:
          cov_1pjb6jsvof().f[13]++;
          cov_1pjb6jsvof().s[108]++;
          _iterator0 = _createForOfIteratorHelper(updates);
          _context10.p = 1;
          _iterator0.s();
        case 2:
          if ((_step0 = _iterator0.n()).done) {
            _context10.n = 4;
            break;
          }
          update = _step0.value;
          cov_1pjb6jsvof().s[109]++;
          _context10.n = 3;
          return broadcastUpdate("feed-update", update);
        case 3:
          _context10.n = 2;
          break;
        case 4:
          _context10.n = 6;
          break;
        case 5:
          _context10.p = 5;
          _t11 = _context10.v;
          _iterator0.e(_t11);
        case 6:
          _context10.p = 6;
          _iterator0.f();
          return _context10.f(6);
        case 7:
          return _context10.a(2);
      }
    }, _callee10, null, [[1, 5, 6, 7]]);
  }));
  return _broadcastLiveUpdates.apply(this, arguments);
}
function extractTags(content, classification) {
  /* istanbul ignore next */
  cov_1pjb6jsvof().f[14]++;
  var tags =
  /* istanbul ignore next */
  (cov_1pjb6jsvof().s[110]++, []);

  // Extract club tags
  var clubMatches =
  /* istanbul ignore next */
  (cov_1pjb6jsvof().s[111]++,
  /* istanbul ignore next */
  (cov_1pjb6jsvof().b[15][0]++, content.match(/#\w+/g)) ||
  /* istanbul ignore next */
  (cov_1pjb6jsvof().b[15][1]++, []));
  /* istanbul ignore next */
  cov_1pjb6jsvof().s[112]++;
  var _iterator = _createForOfIteratorHelper(clubMatches),
    _step;
  /* istanbul ignore next */
  try {
    for (
    /* istanbul ignore next */
    _iterator.s();
    /* istanbul ignore next */
    !(_step = _iterator.n()).done;) {
      /* istanbul ignore next */
      var match = _step.value;
      /* istanbul ignore next */
      cov_1pjb6jsvof().s[113]++;
      tags.push({
        name: match,
        type: "club"
      });
    }

    // Extract player tags
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var playerMatches =
  /* istanbul ignore next */
  (cov_1pjb6jsvof().s[114]++,
  /* istanbul ignore next */
  (cov_1pjb6jsvof().b[16][0]++, content.match(/@\w+/g)) ||
  /* istanbul ignore next */
  (cov_1pjb6jsvof().b[16][1]++, []));
  /* istanbul ignore next */
  cov_1pjb6jsvof().s[115]++;
  var _iterator2 = _createForOfIteratorHelper(playerMatches),
    _step2;
  /* istanbul ignore next */
  try {
    for (
    /* istanbul ignore next */
    _iterator2.s();
    /* istanbul ignore next */
    !(_step2 = _iterator2.n()).done;) {
      /* istanbul ignore next */
      var _match = _step2.value;
      /* istanbul ignore next */
      cov_1pjb6jsvof().s[116]++;
      tags.push({
        name: _match,
        type: "player"
      });
    }

    // Add classification-based tags
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  /* istanbul ignore next */
  cov_1pjb6jsvof().s[117]++;
  if (classification.keywords) {
    /* istanbul ignore next */
    cov_1pjb6jsvof().b[17][0]++;
    cov_1pjb6jsvof().s[118]++;
    var _iterator3 = _createForOfIteratorHelper(classification.keywords),
      _step3;
    /* istanbul ignore next */
    try {
      var _loop = function _loop() {
        /* istanbul ignore next */
        var keyword = _step3.value;
        /* istanbul ignore next */
        cov_1pjb6jsvof().s[119]++;
        if (!tags.some(function (tag) {
          /* istanbul ignore next */
          cov_1pjb6jsvof().f[15]++;
          cov_1pjb6jsvof().s[120]++;
          return tag.name.toLowerCase().includes(keyword.toLowerCase());
        })) {
          /* istanbul ignore next */
          cov_1pjb6jsvof().b[18][0]++;
          // Determine tag type based on keyword
          var type =
          /* istanbul ignore next */
          (cov_1pjb6jsvof().s[121]++, determineTagType(keyword));
          /* istanbul ignore next */
          cov_1pjb6jsvof().s[122]++;
          tags.push({
            name: keyword,
            type: type
          });
        } else
        /* istanbul ignore next */
        {
          cov_1pjb6jsvof().b[18][1]++;
        }
      };
      for (
      /* istanbul ignore next */
      _iterator3.s();
      /* istanbul ignore next */
      !(_step3 = _iterator3.n()).done;)
      /* istanbul ignore next */
      {
        _loop();
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
  } else
  /* istanbul ignore next */
  {
    cov_1pjb6jsvof().b[17][1]++;
  }
  cov_1pjb6jsvof().s[123]++;
  return tags;
}

/**
 * Determine tag type from keyword
 */
function determineTagType(keyword) {
  /* istanbul ignore next */
  cov_1pjb6jsvof().f[16]++;
  var clubs =
  /* istanbul ignore next */
  (cov_1pjb6jsvof().s[124]++, ["arsenal", "chelsea", "liverpool", "madrid", "barcelona", "psg"]);
  var players =
  /* istanbul ignore next */
  (cov_1pjb6jsvof().s[125]++, ["haaland", "mbappe", "bellingham", "kane", "messi"]);
  /* istanbul ignore next */
  cov_1pjb6jsvof().s[126]++;
  if (clubs.some(function (club) {
    /* istanbul ignore next */
    cov_1pjb6jsvof().f[17]++;
    cov_1pjb6jsvof().s[127]++;
    return keyword.toLowerCase().includes(club);
  })) {
    /* istanbul ignore next */
    cov_1pjb6jsvof().b[19][0]++;
    cov_1pjb6jsvof().s[128]++;
    return "club";
  } else
  /* istanbul ignore next */
  {
    cov_1pjb6jsvof().b[19][1]++;
  }
  cov_1pjb6jsvof().s[129]++;
  if (players.some(function (player) {
    /* istanbul ignore next */
    cov_1pjb6jsvof().f[18]++;
    cov_1pjb6jsvof().s[130]++;
    return keyword.toLowerCase().includes(player);
  })) {
    /* istanbul ignore next */
    cov_1pjb6jsvof().b[20][0]++;
    cov_1pjb6jsvof().s[131]++;
    return "player";
  } else
  /* istanbul ignore next */
  {
    cov_1pjb6jsvof().b[20][1]++;
  }
  cov_1pjb6jsvof().s[132]++;
  return "source";
}

/**
 * Determine priority based on classification
 */
function determinePriority(classification) {
  /* istanbul ignore next */
  cov_1pjb6jsvof().f[19]++;
  cov_1pjb6jsvof().s[133]++;
  if (classification.confidence > 0.95) {
    /* istanbul ignore next */
    cov_1pjb6jsvof().b[21][0]++;
    cov_1pjb6jsvof().s[134]++;
    return "breaking";
  } else
  /* istanbul ignore next */
  {
    cov_1pjb6jsvof().b[21][1]++;
  }
  cov_1pjb6jsvof().s[135]++;
  if (classification.confidence > 0.85) {
    /* istanbul ignore next */
    cov_1pjb6jsvof().b[22][0]++;
    cov_1pjb6jsvof().s[136]++;
    return "high";
  } else
  /* istanbul ignore next */
  {
    cov_1pjb6jsvof().b[22][1]++;
  }
  cov_1pjb6jsvof().s[137]++;
  if (classification.confidence > 0.7) {
    /* istanbul ignore next */
    cov_1pjb6jsvof().b[23][0]++;
    cov_1pjb6jsvof().s[138]++;
    return "medium";
  } else
  /* istanbul ignore next */
  {
    cov_1pjb6jsvof().b[23][1]++;
  }
  cov_1pjb6jsvof().s[139]++;
  return "low";
}

/**
 * Get last check time for a source
 */
/* istanbul ignore next */
function getLastCheckTime(_x7) {
  return _getLastCheckTime.apply(this, arguments);
}
/**
 * Update last check time for a source
 */
/* istanbul ignore next */
function _getLastCheckTime() {
  _getLastCheckTime = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee11(sourceId)
  /* istanbul ignore next */
  {
    var lastCheck;
    return _regenerator().w(function (_context11) {
      while (1) switch (_context11.n) {
        case 0:
          cov_1pjb6jsvof().f[20]++;
          cov_1pjb6jsvof().s[140]++;
          _context11.n = 1;
          return prisma.sourceCheckLog.findFirst({
            where: {
              sourceId: sourceId
            },
            orderBy: {
              checkedAt: "desc"
            }
          });
        case 1:
          lastCheck = _context11.v;
          cov_1pjb6jsvof().s[141]++;
          return _context11.a(2,
          /* istanbul ignore next */
          (cov_1pjb6jsvof().b[24][0]++, lastCheck === null || lastCheck === void 0 ? void 0 : lastCheck.checkedAt) ||
          /* istanbul ignore next */
          (cov_1pjb6jsvof().b[24][1]++, new Date(Date.now() - 24 * 60 * 60 * 1000)));
      }
    }, _callee11);
  }));
  return _getLastCheckTime.apply(this, arguments);
}
/* istanbul ignore next */
function updateLastCheckTime(_x8, _x9) {
  return _updateLastCheckTime.apply(this, arguments);
}
/**
 * Extract Terry-isms from content for quality validation
 */
/* istanbul ignore next */
function _updateLastCheckTime() {
  _updateLastCheckTime = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee12(sourceId, timestamp)
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context12) {
      while (1) switch (_context12.n) {
        case 0:
          cov_1pjb6jsvof().f[21]++;
          cov_1pjb6jsvof().s[142]++;
          _context12.n = 1;
          return prisma.sourceCheckLog.create({
            data: {
              sourceId: sourceId,
              checkedAt: timestamp
            }
          });
        case 1:
          return _context12.a(2);
      }
    }, _callee12);
  }));
  return _updateLastCheckTime.apply(this, arguments);
}
function extractTerryisms(content) {
  /* istanbul ignore next */
  cov_1pjb6jsvof().f[22]++;
  var terryisms =
  /* istanbul ignore next */
  (cov_1pjb6jsvof().s[143]++, []);

  // Look for parenthetical asides
  var parentheticals =
  /* istanbul ignore next */
  (cov_1pjb6jsvof().s[144]++, content.match(/\([^)]+\)/g));
  /* istanbul ignore next */
  cov_1pjb6jsvof().s[145]++;
  if (parentheticals) {
    /* istanbul ignore next */
    cov_1pjb6jsvof().b[25][0]++;
    cov_1pjb6jsvof().s[146]++;
    /* istanbul ignore next */
    terryisms.push.apply(terryisms,
    /* istanbul ignore next */
    _toConsumableArray(parentheticals));
  } else
  /* istanbul ignore next */
  {
    cov_1pjb6jsvof().b[25][1]++;
  }

  // Look for specific Terry phrases
  var terryPhrases =
  /* istanbul ignore next */
  (cov_1pjb6jsvof().s[147]++, ["of course", "apparently", "somehow", "brilliant", "properly mental", "exactly the sort of", "which is", "absolutely mental", "right then", "here we are", "naturally"]);
  /* istanbul ignore next */
  cov_1pjb6jsvof().s[148]++;
  for (
  /* istanbul ignore next */
  var _i = 0, _terryPhrases = terryPhrases;
  /* istanbul ignore next */
  _i < _terryPhrases.length;
  /* istanbul ignore next */
  _i++) {
    var phrase =
    /* istanbul ignore next */
    _terryPhrases[_i];
    /* istanbul ignore next */
    cov_1pjb6jsvof().s[149]++;
    if (content.toLowerCase().includes(phrase)) {
      /* istanbul ignore next */
      cov_1pjb6jsvof().b[26][0]++;
      cov_1pjb6jsvof().s[150]++;
      terryisms.push(phrase);
    } else
    /* istanbul ignore next */
    {
      cov_1pjb6jsvof().b[26][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1pjb6jsvof().s[151]++;
  return /* istanbul ignore next */_toConsumableArray(new Set(terryisms)); // Remove duplicates
}

/**
 * Calculate Terry compatibility score for content
 */
function calculateTerryCompatibility(content) {
  /* istanbul ignore next */
  cov_1pjb6jsvof().f[23]++;
  var score =
  /* istanbul ignore next */
  (cov_1pjb6jsvof().s[152]++, 0);

  // Check for Terry-isms
  var terryisms =
  /* istanbul ignore next */
  (cov_1pjb6jsvof().s[153]++, extractTerryisms(content));
  /* istanbul ignore next */
  cov_1pjb6jsvof().s[154]++;
  score += terryisms.length * 5;

  // Check for specific Terry patterns
  /* istanbul ignore next */
  cov_1pjb6jsvof().s[155]++;
  if (content.includes("(")) {
    /* istanbul ignore next */
    cov_1pjb6jsvof().b[27][0]++;
    cov_1pjb6jsvof().s[156]++;
    score += 10;
  } else
  /* istanbul ignore next */
  {
    cov_1pjb6jsvof().b[27][1]++;
  } // Parenthetical asides
  cov_1pjb6jsvof().s[157]++;
  if (content.includes("brilliant")) {
    /* istanbul ignore next */
    cov_1pjb6jsvof().b[28][0]++;
    cov_1pjb6jsvof().s[158]++;
    score += 5;
  } else
  /* istanbul ignore next */
  {
    cov_1pjb6jsvof().b[28][1]++;
  }
  cov_1pjb6jsvof().s[159]++;
  if (content.includes("of course")) {
    /* istanbul ignore next */
    cov_1pjb6jsvof().b[29][0]++;
    cov_1pjb6jsvof().s[160]++;
    score += 5;
  } else
  /* istanbul ignore next */
  {
    cov_1pjb6jsvof().b[29][1]++;
  }
  cov_1pjb6jsvof().s[161]++;
  if (content.includes("properly")) {
    /* istanbul ignore next */
    cov_1pjb6jsvof().b[30][0]++;
    cov_1pjb6jsvof().s[162]++;
    score += 5;
  } else
  /* istanbul ignore next */
  {
    cov_1pjb6jsvof().b[30][1]++;
  }
  cov_1pjb6jsvof().s[163]++;
  if (content.includes("mental")) {
    /* istanbul ignore next */
    cov_1pjb6jsvof().b[31][0]++;
    cov_1pjb6jsvof().s[164]++;
    score += 8;
  } else
  /* istanbul ignore next */
  {
    cov_1pjb6jsvof().b[31][1]++;
  }
  cov_1pjb6jsvof().s[165]++;
  if (content.includes("chaos")) {
    /* istanbul ignore next */
    cov_1pjb6jsvof().b[32][0]++;
    cov_1pjb6jsvof().s[166]++;
    score += 10;
  } else
  /* istanbul ignore next */
  {
    cov_1pjb6jsvof().b[32][1]++;
  }

  // Check for emotional content
  var emotionalWords =
  /* istanbul ignore next */
  (cov_1pjb6jsvof().s[167]++, ["ridiculous", "absurd", "madness", "genius", "disaster"]);
  /* istanbul ignore next */
  cov_1pjb6jsvof().s[168]++;
  for (
  /* istanbul ignore next */
  var _i2 = 0, _emotionalWords = emotionalWords;
  /* istanbul ignore next */
  _i2 < _emotionalWords.length;
  /* istanbul ignore next */
  _i2++) {
    var word =
    /* istanbul ignore next */
    _emotionalWords[_i2];
    /* istanbul ignore next */
    cov_1pjb6jsvof().s[169]++;
    if (content.toLowerCase().includes(word)) {
      /* istanbul ignore next */
      cov_1pjb6jsvof().b[33][0]++;
      cov_1pjb6jsvof().s[170]++;
      score += 3;
    } else
    /* istanbul ignore next */
    {
      cov_1pjb6jsvof().b[33][1]++;
    }
  }

  // Check for specificity (Terry loves specific details)
  var specificPatterns =
  /* istanbul ignore next */
  (cov_1pjb6jsvof().s[171]++, [/£\d+/g,
  // Money amounts
  /\d+ million/g,
  // Large numbers
  /\d+ years?/g // Time periods
  ]);
  /* istanbul ignore next */
  cov_1pjb6jsvof().s[172]++;
  for (
  /* istanbul ignore next */
  var _i3 = 0, _specificPatterns = specificPatterns;
  /* istanbul ignore next */
  _i3 < _specificPatterns.length;
  /* istanbul ignore next */
  _i3++) {
    var pattern =
    /* istanbul ignore next */
    _specificPatterns[_i3];
    var matches =
    /* istanbul ignore next */
    (cov_1pjb6jsvof().s[173]++, content.match(pattern));
    /* istanbul ignore next */
    cov_1pjb6jsvof().s[174]++;
    if (matches) {
      /* istanbul ignore next */
      cov_1pjb6jsvof().b[34][0]++;
      cov_1pjb6jsvof().s[175]++;
      score += matches.length * 5;
    } else
    /* istanbul ignore next */
    {
      cov_1pjb6jsvof().b[34][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1pjb6jsvof().s[176]++;
  return Math.min(score, 100);
}

/**
 * Save update to database with quality metrics
 */
/* istanbul ignore next */
function saveUpdateToDatabase(_x0) {
  return _saveUpdateToDatabase.apply(this, arguments);
}
/* istanbul ignore next */
function _saveUpdateToDatabase() {
  _saveUpdateToDatabase = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee13(update)
  /* istanbul ignore next */
  {
    var _update$originalSourc, _update$originalSourc2, isPublished, feedItem, _iterator1, _step1, tag, tagRecord, _iterator10, _step10, image, _t12, _t13, _t14;
    return _regenerator().w(function (_context13) {
      while (1) switch (_context13.n) {
        case 0:
          cov_1pjb6jsvof().f[24]++;
          cov_1pjb6jsvof().s[177]++;
          _context13.p = 1;
          // Determine published status based on validation
          isPublished = (cov_1pjb6jsvof().s[178]++,
          /* istanbul ignore next */
          (cov_1pjb6jsvof().b[35][0]++, update.validationStatus === "passed") &&
          /* istanbul ignore next */
          (cov_1pjb6jsvof().b[35][1]++, !update.requiresHumanReview)); // Save the main feed item
          cov_1pjb6jsvof().s[179]++;
          _context13.n = 2;
          return prisma.feedItem.create({
            data: {
              type: update.type,
              content: update.content,
              terryCommentary: update.terryCommentary,
              sourceId:
              /* istanbul ignore next */
              (_update$originalSourc = update.originalSource) === null || _update$originalSourc === void 0 ? void 0 :
              /* istanbul ignore next */
              _update$originalSourc.username,
              originalUrl:
              /* istanbul ignore next */
              (_update$originalSourc2 = update.originalSource) === null || _update$originalSourc2 === void 0 ? void 0 :
              /* istanbul ignore next */
              _update$originalSourc2.url,
              priority: update.priority.toUpperCase(),
              publishedAt: update.timestamp,
              isPublished: isPublished
              // Store quality metrics in metadata if needed
              // qualityScore: update.qualityScore,
              // terryScore: update.terryScore,
            }
          });
        case 2:
          feedItem = _context13.v;
          cov_1pjb6jsvof().s[180]++;
          // Save tags
          _iterator1 = _createForOfIteratorHelper(update.tags);
          _context13.p = 3;
          _iterator1.s();
        case 4:
          if ((_step1 = _iterator1.n()).done) {
            _context13.n = 7;
            break;
          }
          tag = _step1.value;
          cov_1pjb6jsvof().s[181]++;
          _context13.n = 5;
          return prisma.tag.upsert({
            where: {
              name: tag.name
            },
            update: {
              usageCount: {
                increment: 1
              },
              lastUsedAt: new Date()
            },
            create: {
              name: tag.name,
              type: tag.type.toUpperCase(),
              normalizedName: tag.name.toLowerCase().replace(/[^a-z0-9]/g, ""),
              usageCount: 1,
              lastUsedAt: new Date()
            }
          });
        case 5:
          tagRecord = _context13.v;
          cov_1pjb6jsvof().s[182]++;
          _context13.n = 6;
          return prisma.feedItemTag.create({
            data: {
              feedItemId: feedItem.id,
              tagId: tagRecord.id
            }
          });
        case 6:
          _context13.n = 4;
          break;
        case 7:
          _context13.n = 9;
          break;
        case 8:
          _context13.p = 8;
          _t12 = _context13.v;
          _iterator1.e(_t12);
        case 9:
          _context13.p = 9;
          _iterator1.f();
          return _context13.f(9);
        case 10:
          cov_1pjb6jsvof().s[183]++;
          // Save images
          _iterator10 = _createForOfIteratorHelper(update.images);
          _context13.p = 11;
          _iterator10.s();
        case 12:
          if ((_step10 = _iterator10.n()).done) {
            _context13.n = 14;
            break;
          }
          image = _step10.value;
          cov_1pjb6jsvof().s[184]++;
          _context13.n = 13;
          return prisma.feedItemMedia.create({
            data: {
              feedItemId: feedItem.id,
              type: image.type.toUpperCase(),
              url: image.url,
              altText: image.altText
            }
          });
        case 13:
          _context13.n = 12;
          break;
        case 14:
          _context13.n = 16;
          break;
        case 15:
          _context13.p = 15;
          _t13 = _context13.v;
          _iterator10.e(_t13);
        case 16:
          _context13.p = 16;
          _iterator10.f();
          return _context13.f(16);
        case 17:
          cov_1pjb6jsvof().s[185]++;
          // Log quality metrics for monitoring
          if (update.qualityScore) {
            /* istanbul ignore next */
            cov_1pjb6jsvof().b[36][0]++;
            cov_1pjb6jsvof().s[186]++;
            console.log(
            /* istanbul ignore next */
            "\uD83D\uDCBE Saved feed item ".concat(feedItem.id, " - Quality: ").concat(update.qualityScore, ", Terry: ").concat(update.terryScore, ", Published: ").concat(isPublished));
          } else
          /* istanbul ignore next */
          {
            cov_1pjb6jsvof().b[36][1]++;
          }
          _context13.n = 19;
          break;
        case 18:
          _context13.p = 18;
          _t14 = _context13.v;
          cov_1pjb6jsvof().s[187]++;
          console.error("Failed to save update to database:",
          /* istanbul ignore next */
          _t14);
          cov_1pjb6jsvof().s[188]++;
          throw _t14;
        case 19:
          return _context13.a(2);
      }
    }, _callee13, null, [[11, 15, 16, 17], [3, 8, 9, 10], [1, 18]]);
  }));
  return _saveUpdateToDatabase.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,