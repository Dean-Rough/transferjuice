3f27f03542017cd9e0e33d0d94ba8c37
/* istanbul ignore next */
function cov_2k1tst58h0() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/image/index.ts";
  var hash = "66ba00cf682848b3f2e467a22ba25acb473c7251";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/image/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 28,
          column: 41
        },
        end: {
          line: 37,
          column: 2
        }
      },
      "1": {
        start: {
          line: 39,
          column: 41
        },
        end: {
          line: 56,
          column: 2
        }
      },
      "2": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 58
        }
      },
      "3": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 76,
          column: 7
        }
      },
      "4": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 84,
          column: 7
        }
      },
      "5": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 89,
          column: 7
        }
      },
      "6": {
        start: {
          line: 104,
          column: 22
        },
        end: {
          line: 104,
          column: 32
        }
      },
      "7": {
        start: {
          line: 105,
          column: 29
        },
        end: {
          line: 105,
          column: 31
        }
      },
      "8": {
        start: {
          line: 106,
          column: 31
        },
        end: {
          line: 106,
          column: 33
        }
      },
      "9": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "10": {
        start: {
          line: 110,
          column: 28
        },
        end: {
          line: 115,
          column: 7
        }
      },
      "11": {
        start: {
          line: 117,
          column: 6
        },
        end: {
          line: 119,
          column: 7
        }
      },
      "12": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 73
        }
      },
      "13": {
        start: {
          line: 122,
          column: 30
        },
        end: {
          line: 126,
          column: 7
        }
      },
      "14": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 138,
          column: 21
        }
      },
      "15": {
        start: {
          line: 141,
          column: 22
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "16": {
        start: {
          line: 148,
          column: 6
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "17": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 160,
          column: 8
        }
      },
      "18": {
        start: {
          line: 162,
          column: 6
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "19": {
        start: {
          line: 194,
          column: 29
        },
        end: {
          line: 194,
          column: 31
        }
      },
      "20": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "21": {
        start: {
          line: 198,
          column: 28
        },
        end: {
          line: 202,
          column: 7
        }
      },
      "22": {
        start: {
          line: 204,
          column: 6
        },
        end: {
          line: 206,
          column: 7
        }
      },
      "23": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 51
        }
      },
      "24": {
        start: {
          line: 209,
          column: 30
        },
        end: {
          line: 212,
          column: 7
        }
      },
      "25": {
        start: {
          line: 214,
          column: 6
        },
        end: {
          line: 217,
          column: 8
        }
      },
      "26": {
        start: {
          line: 219,
          column: 6
        },
        end: {
          line: 221,
          column: 8
        }
      },
      "27": {
        start: {
          line: 222,
          column: 6
        },
        end: {
          line: 225,
          column: 8
        }
      },
      "28": {
        start: {
          line: 240,
          column: 29
        },
        end: {
          line: 240,
          column: 31
        }
      },
      "29": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 265,
          column: 5
        }
      },
      "30": {
        start: {
          line: 243,
          column: 31
        },
        end: {
          line: 247,
          column: 7
        }
      },
      "31": {
        start: {
          line: 249,
          column: 6
        },
        end: {
          line: 256,
          column: 8
        }
      },
      "32": {
        start: {
          line: 258,
          column: 6
        },
        end: {
          line: 260,
          column: 8
        }
      },
      "33": {
        start: {
          line: 261,
          column: 6
        },
        end: {
          line: 264,
          column: 8
        }
      },
      "34": {
        start: {
          line: 281,
          column: 37
        },
        end: {
          line: 281,
          column: 39
        }
      },
      "35": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 297,
          column: 5
        }
      },
      "36": {
        start: {
          line: 285,
          column: 6
        },
        end: {
          line: 296,
          column: 7
        }
      },
      "37": {
        start: {
          line: 286,
          column: 30
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "38": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 41
        }
      },
      "39": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 295,
          column: 10
        }
      },
      "40": {
        start: {
          line: 300,
          column: 27
        },
        end: {
          line: 302,
          column: 5
        }
      },
      "41": {
        start: {
          line: 301,
          column: 6
        },
        end: {
          line: 301,
          column: 50
        }
      },
      "42": {
        start: {
          line: 301,
          column: 43
        },
        end: {
          line: 301,
          column: 49
        }
      },
      "43": {
        start: {
          line: 303,
          column: 25
        },
        end: {
          line: 305,
          column: 5
        }
      },
      "44": {
        start: {
          line: 304,
          column: 6
        },
        end: {
          line: 304,
          column: 48
        }
      },
      "45": {
        start: {
          line: 304,
          column: 41
        },
        end: {
          line: 304,
          column: 47
        }
      },
      "46": {
        start: {
          line: 307,
          column: 4
        },
        end: {
          line: 324,
          column: 5
        }
      },
      "47": {
        start: {
          line: 308,
          column: 6
        },
        end: {
          line: 323,
          column: 7
        }
      },
      "48": {
        start: {
          line: 310,
          column: 10
        },
        end: {
          line: 314,
          column: 11
        }
      },
      "49": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 320,
          column: 10
        }
      },
      "50": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 65
        }
      },
      "51": {
        start: {
          line: 327,
          column: 27
        },
        end: {
          line: 331,
          column: 48
        }
      },
      "52": {
        start: {
          line: 329,
          column: 17
        },
        end: {
          line: 329,
          column: 77
        }
      },
      "53": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 333,
          column: 26
        }
      },
      "54": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 344,
          column: 46
        }
      },
      "55": {
        start: {
          line: 344,
          column: 36
        },
        end: {
          line: 344,
          column: 46
        }
      },
      "56": {
        start: {
          line: 346,
          column: 4
        },
        end: {
          line: 368,
          column: 5
        }
      },
      "57": {
        start: {
          line: 347,
          column: 30
        },
        end: {
          line: 350,
          column: 7
        }
      },
      "58": {
        start: {
          line: 353,
          column: 6
        },
        end: {
          line: 360,
          column: 7
        }
      },
      "59": {
        start: {
          line: 354,
          column: 27
        },
        end: {
          line: 354,
          column: 71
        }
      },
      "60": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "61": {
        start: {
          line: 356,
          column: 10
        },
        end: {
          line: 358,
          column: 12
        }
      },
      "62": {
        start: {
          line: 362,
          column: 6
        },
        end: {
          line: 362,
          column: 29
        }
      },
      "63": {
        start: {
          line: 364,
          column: 6
        },
        end: {
          line: 366,
          column: 8
        }
      },
      "64": {
        start: {
          line: 367,
          column: 6
        },
        end: {
          line: 367,
          column: 16
        }
      },
      "65": {
        start: {
          line: 381,
          column: 4
        },
        end: {
          line: 404,
          column: 5
        }
      },
      "66": {
        start: {
          line: 382,
          column: 21
        },
        end: {
          line: 386,
          column: 7
        }
      },
      "67": {
        start: {
          line: 389,
          column: 6
        },
        end: {
          line: 391,
          column: 7
        }
      },
      "68": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 63
        }
      },
      "69": {
        start: {
          line: 393,
          column: 6
        },
        end: {
          line: 396,
          column: 7
        }
      },
      "70": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 395,
          column: 79
        }
      },
      "71": {
        start: {
          line: 398,
          column: 6
        },
        end: {
          line: 398,
          column: 20
        }
      },
      "72": {
        start: {
          line: 400,
          column: 6
        },
        end: {
          line: 402,
          column: 8
        }
      },
      "73": {
        start: {
          line: 403,
          column: 6
        },
        end: {
          line: 403,
          column: 23
        }
      },
      "74": {
        start: {
          line: 417,
          column: 6
        },
        end: {
          line: 422,
          column: 11
        }
      },
      "75": {
        start: {
          line: 419,
          column: 26
        },
        end: {
          line: 419,
          column: 59
        }
      },
      "76": {
        start: {
          line: 424,
          column: 27
        },
        end: {
          line: 427,
          column: 5
        }
      },
      "77": {
        start: {
          line: 425,
          column: 20
        },
        end: {
          line: 425,
          column: 53
        }
      },
      "78": {
        start: {
          line: 429,
          column: 30
        },
        end: {
          line: 432,
          column: 5
        }
      },
      "79": {
        start: {
          line: 430,
          column: 20
        },
        end: {
          line: 430,
          column: 55
        }
      },
      "80": {
        start: {
          line: 435,
          column: 6
        },
        end: {
          line: 437,
          column: 11
        }
      },
      "81": {
        start: {
          line: 440,
          column: 6
        },
        end: {
          line: 443,
          column: 12
        }
      },
      "82": {
        start: {
          line: 441,
          column: 26
        },
        end: {
          line: 441,
          column: 57
        }
      },
      "83": {
        start: {
          line: 445,
          column: 4
        },
        end: {
          line: 454,
          column: 6
        }
      },
      "84": {
        start: {
          line: 461,
          column: 4
        },
        end: {
          line: 461,
          column: 23
        }
      },
      "85": {
        start: {
          line: 471,
          column: 4
        },
        end: {
          line: 474,
          column: 6
        }
      },
      "86": {
        start: {
          line: 481,
          column: 4
        },
        end: {
          line: 481,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 70,
            column: 2
          },
          end: {
            line: 70,
            column: 3
          }
        },
        loc: {
          start: {
            line: 70,
            column: 43
          },
          end: {
            line: 90,
            column: 3
          }
        },
        line: 70
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 95,
            column: 2
          },
          end: {
            line: 95,
            column: 3
          }
        },
        loc: {
          start: {
            line: 103,
            column: 34
          },
          end: {
            line: 180,
            column: 3
          }
        },
        line: 103
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 185,
            column: 2
          },
          end: {
            line: 185,
            column: 3
          }
        },
        loc: {
          start: {
            line: 193,
            column: 5
          },
          end: {
            line: 227,
            column: 3
          }
        },
        line: 193
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 232,
            column: 2
          },
          end: {
            line: 232,
            column: 3
          }
        },
        loc: {
          start: {
            line: 239,
            column: 5
          },
          end: {
            line: 266,
            column: 3
          }
        },
        line: 239
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 271,
            column: 2
          },
          end: {
            line: 271,
            column: 3
          }
        },
        loc: {
          start: {
            line: 280,
            column: 28
          },
          end: {
            line: 334,
            column: 3
          }
        },
        line: 280
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 300,
            column: 51
          },
          end: {
            line: 300,
            column: 52
          }
        },
        loc: {
          start: {
            line: 301,
            column: 6
          },
          end: {
            line: 301,
            column: 50
          }
        },
        line: 301
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 301,
            column: 36
          },
          end: {
            line: 301,
            column: 37
          }
        },
        loc: {
          start: {
            line: 301,
            column: 43
          },
          end: {
            line: 301,
            column: 49
          }
        },
        line: 301
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 303,
            column: 49
          },
          end: {
            line: 303,
            column: 50
          }
        },
        loc: {
          start: {
            line: 304,
            column: 6
          },
          end: {
            line: 304,
            column: 48
          }
        },
        line: 304
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 304,
            column: 34
          },
          end: {
            line: 304,
            column: 35
          }
        },
        loc: {
          start: {
            line: 304,
            column: 41
          },
          end: {
            line: 304,
            column: 47
          }
        },
        line: 304
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        },
        loc: {
          start: {
            line: 329,
            column: 17
          },
          end: {
            line: 329,
            column: 77
          }
        },
        line: 329
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 339,
            column: 2
          },
          end: {
            line: 339,
            column: 3
          }
        },
        loc: {
          start: {
            line: 343,
            column: 31
          },
          end: {
            line: 369,
            column: 3
          }
        },
        line: 343
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 374,
            column: 2
          },
          end: {
            line: 374,
            column: 3
          }
        },
        loc: {
          start: {
            line: 380,
            column: 40
          },
          end: {
            line: 405,
            column: 3
          }
        },
        line: 380
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 410,
            column: 2
          },
          end: {
            line: 410,
            column: 3
          }
        },
        loc: {
          start: {
            line: 415,
            column: 36
          },
          end: {
            line: 455,
            column: 3
          }
        },
        line: 415
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 419,
            column: 12
          },
          end: {
            line: 419,
            column: 13
          }
        },
        loc: {
          start: {
            line: 419,
            column: 26
          },
          end: {
            line: 419,
            column: 59
          }
        },
        line: 419
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 425,
            column: 6
          },
          end: {
            line: 425,
            column: 7
          }
        },
        loc: {
          start: {
            line: 425,
            column: 20
          },
          end: {
            line: 425,
            column: 53
          }
        },
        line: 425
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 430,
            column: 6
          },
          end: {
            line: 430,
            column: 7
          }
        },
        loc: {
          start: {
            line: 430,
            column: 20
          },
          end: {
            line: 430,
            column: 55
          }
        },
        line: 430
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 441,
            column: 9
          }
        },
        loc: {
          start: {
            line: 441,
            column: 26
          },
          end: {
            line: 441,
            column: 57
          }
        },
        line: 441
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 460,
            column: 2
          },
          end: {
            line: 460,
            column: 3
          }
        },
        loc: {
          start: {
            line: 460,
            column: 35
          },
          end: {
            line: 462,
            column: 3
          }
        },
        line: 460
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 467,
            column: 2
          },
          end: {
            line: 467,
            column: 3
          }
        },
        loc: {
          start: {
            line: 470,
            column: 5
          },
          end: {
            line: 475,
            column: 3
          }
        },
        line: 470
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 480,
            column: 2
          },
          end: {
            line: 480,
            column: 3
          }
        },
        loc: {
          start: {
            line: 480,
            column: 22
          },
          end: {
            line: 482,
            column: 3
          }
        },
        line: 480
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 102,
            column: 11
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 102,
            column: 9
          },
          end: {
            line: 102,
            column: 11
          }
        }],
        line: 98
      },
      "1": {
        loc: {
          start: {
            line: 117,
            column: 6
          },
          end: {
            line: 119,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 6
          },
          end: {
            line: 119,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "2": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 138,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        }, {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 138,
            column: 21
          }
        }],
        line: 130
      },
      "3": {
        loc: {
          start: {
            line: 159,
            column: 28
          },
          end: {
            line: 159,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 53
          },
          end: {
            line: 159,
            column: 66
          }
        }, {
          start: {
            line: 159,
            column: 69
          },
          end: {
            line: 159,
            column: 84
          }
        }],
        line: 159
      },
      "4": {
        loc: {
          start: {
            line: 204,
            column: 6
          },
          end: {
            line: 206,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 6
          },
          end: {
            line: 206,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "5": {
        loc: {
          start: {
            line: 220,
            column: 42
          },
          end: {
            line: 220,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 220,
            column: 67
          },
          end: {
            line: 220,
            column: 80
          }
        }, {
          start: {
            line: 220,
            column: 83
          },
          end: {
            line: 220,
            column: 98
          }
        }],
        line: 220
      },
      "6": {
        loc: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 235,
            column: 27
          },
          end: {
            line: 235,
            column: 36
          }
        }],
        line: 235
      },
      "7": {
        loc: {
          start: {
            line: 259,
            column: 43
          },
          end: {
            line: 259,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 259,
            column: 68
          },
          end: {
            line: 259,
            column: 81
          }
        }, {
          start: {
            line: 259,
            column: 84
          },
          end: {
            line: 259,
            column: 99
          }
        }],
        line: 259
      },
      "8": {
        loc: {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 324,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 324,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "9": {
        loc: {
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 307,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 307,
            column: 33
          }
        }, {
          start: {
            line: 307,
            column: 37
          },
          end: {
            line: 307,
            column: 60
          }
        }],
        line: 307
      },
      "10": {
        loc: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 344,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 344,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "11": {
        loc: {
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 359,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 359,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "12": {
        loc: {
          start: {
            line: 365,
            column: 36
          },
          end: {
            line: 365,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 365,
            column: 61
          },
          end: {
            line: 365,
            column: 74
          }
        }, {
          start: {
            line: 365,
            column: 77
          },
          end: {
            line: 365,
            column: 92
          }
        }],
        line: 365
      },
      "13": {
        loc: {
          start: {
            line: 389,
            column: 6
          },
          end: {
            line: 391,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 6
          },
          end: {
            line: 391,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "14": {
        loc: {
          start: {
            line: 393,
            column: 6
          },
          end: {
            line: 396,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 6
          },
          end: {
            line: 396,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 393
      },
      "15": {
        loc: {
          start: {
            line: 401,
            column: 35
          },
          end: {
            line: 401,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 401,
            column: 60
          },
          end: {
            line: 401,
            column: 73
          }
        }, {
          start: {
            line: 401,
            column: 76
          },
          end: {
            line: 401,
            column: 91
          }
        }],
        line: 401
      },
      "16": {
        loc: {
          start: {
            line: 417,
            column: 6
          },
          end: {
            line: 422,
            column: 11
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 418,
            column: 10
          },
          end: {
            line: 421,
            column: 34
          }
        }, {
          start: {
            line: 422,
            column: 10
          },
          end: {
            line: 422,
            column: 11
          }
        }],
        line: 417
      },
      "17": {
        loc: {
          start: {
            line: 435,
            column: 6
          },
          end: {
            line: 437,
            column: 11
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 436,
            column: 10
          },
          end: {
            line: 436,
            column: 66
          }
        }, {
          start: {
            line: 437,
            column: 10
          },
          end: {
            line: 437,
            column: 11
          }
        }],
        line: 435
      },
      "18": {
        loc: {
          start: {
            line: 440,
            column: 6
          },
          end: {
            line: 443,
            column: 12
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 440,
            column: 6
          },
          end: {
            line: 443,
            column: 7
          }
        }, {
          start: {
            line: 443,
            column: 11
          },
          end: {
            line: 443,
            column: 12
          }
        }],
        line: 440
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "66ba00cf682848b3f2e467a22ba25acb473c7251"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2k1tst58h0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2k1tst58h0();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Image Integration and Processing System
 * Main orchestrator for the complete image pipeline
 */

import { ImageSourcingService } from "./sourcing";
import { ImageProcessor } from "./processor";
import { ImagePlacementService } from "./placement";

// Define TweetMediaInfo type based on Twitter API structure

import { z } from "zod";

// Main pipeline schemas
export var ImagePipelineConfigSchema =
/* istanbul ignore next */
(cov_2k1tst58h0().s[0]++, z.object({
  openaiApiKey: z.string().min(1),
  userAgent: z.string().min(1),
  enableCaching: z[
  /* istanbul ignore next */
  "boolean"]().optional()[
  /* istanbul ignore next */
  "default"](true),
  enableCdn: z[
  /* istanbul ignore next */
  "boolean"]().optional()[
  /* istanbul ignore next */
  "default"](true),
  cdnBaseUrl: z.string().url().optional(),
  compressionQuality: z.number().min(10).max(100).optional()[
  /* istanbul ignore next */
  "default"](85),
  maxImagesPerArticle: z.number().min(1).max(20).optional()[
  /* istanbul ignore next */
  "default"](8),
  minRelevanceScore: z.number().min(0).max(100).optional()[
  /* istanbul ignore next */
  "default"](60)
}));
export var ImagePipelineResultSchema =
/* istanbul ignore next */
(cov_2k1tst58h0().s[1]++, z.object({
  success: z[
  /* istanbul ignore next */
  "boolean"](),
  articleLayout: z.any().optional(),
  // ArticleLayout
  processedImages: z.array(z.any()),
  // ProcessedImage[]
  sourcedImages: z.array(z.any()),
  // ImageSource[]
  metrics: z.object({
    totalProcessingTime: z.number(),
    imagesSourced: z.number(),
    imagesProcessed: z.number(),
    imagesPlaced: z.number(),
    averageRelevance: z.number(),
    totalImageSize: z.number(),
    compressionRatio: z.number(),
    cdnDeliveryEnabled: z[
    /* istanbul ignore next */
    "boolean"]()
  }),
  errors: z.array(z.string()),
  warnings: z.array(z.string())
}));

// Re-export types for convenience

export
/* istanbul ignore next */
var ImagePipeline = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  ImagePipeline(config) {
    /* istanbul ignore next */
    _classCallCheck(this, ImagePipeline);
    cov_2k1tst58h0().f[0]++;
    cov_2k1tst58h0().s[2]++;
    this.config = ImagePipelineConfigSchema.parse(config);
    /* istanbul ignore next */
    cov_2k1tst58h0().s[3]++;
    this.sourcingService = new ImageSourcingService({
      userAgent: this.config.userAgent,
      enableCaching: this.config.enableCaching
    });
    /* istanbul ignore next */
    cov_2k1tst58h0().s[4]++;
    this.processor = new ImageProcessor({
      openaiApiKey: this.config.openaiApiKey,
      cdnBaseUrl: this.config.cdnBaseUrl,
      enableCdn: this.config.enableCdn,
      compressionQuality: this.config.compressionQuality,
      userAgent: this.config.userAgent
    });
    /* istanbul ignore next */
    cov_2k1tst58h0().s[5]++;
    this.placementService = new ImagePlacementService({
      openaiApiKey: this.config.openaiApiKey,
      minRelevanceScore: this.config.minRelevanceScore
    });
  }

  /**
   * Complete image pipeline for article generation
   */
  return _createClass(ImagePipeline, [{
    key: "processArticleImages",
    value: (function () {
      var _processArticleImages = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee(sections, contentAnalyses)
      /* istanbul ignore next */
      {
        var twitterMedia,
          startTime,
          errors,
          warnings,
          sourcedImages,
          processedImages,
          articleLayout,
          metrics,
          _args = arguments,
          _t,
          _t2;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              twitterMedia = _args.length > 2 && _args[2] !== undefined ? _args[2] : (cov_2k1tst58h0().b[0][0]++, []);
              cov_2k1tst58h0().f[1]++;
              startTime = (cov_2k1tst58h0().s[6]++, Date.now());
              errors = (cov_2k1tst58h0().s[7]++, []);
              warnings = (cov_2k1tst58h0().s[8]++, []);
              cov_2k1tst58h0().s[9]++;
              _context.p = 1;
              cov_2k1tst58h0().s[10]++;
              _context.n = 2;
              return this.sourceImages(contentAnalyses, twitterMedia, errors, warnings);
            case 2:
              sourcedImages = _context.v;
              cov_2k1tst58h0().s[11]++;
              if (sourcedImages.length === 0) {
                /* istanbul ignore next */
                cov_2k1tst58h0().b[1][0]++;
                cov_2k1tst58h0().s[12]++;
                warnings.push("No images sourced - article will have no images");
              } else
              /* istanbul ignore next */
              {
                cov_2k1tst58h0().b[1][1]++;
              }

              // Step 2: Process images (resize, optimize, generate alt text)
              cov_2k1tst58h0().s[13]++;
              _context.n = 3;
              return this.processImages(sourcedImages, errors, warnings);
            case 3:
              processedImages = _context.v;
              cov_2k1tst58h0().s[14]++;
              if (!(processedImages.length > 0)) {
                _context.n = 5;
                break;
              }
              cov_2k1tst58h0().b[2][0]++;
              _context.n = 4;
              return this.createLayout(sections, processedImages, contentAnalyses, errors, warnings);
            case 4:
              _t = _context.v;
              _context.n = 6;
              break;
            case 5:
              _t = (cov_2k1tst58h0().b[2][1]++, undefined);
            case 6:
              articleLayout = _t;
              // Calculate final metrics
              metrics = (cov_2k1tst58h0().s[15]++, this.calculatePipelineMetrics(sourcedImages, processedImages, articleLayout, Date.now() - startTime));
              cov_2k1tst58h0().s[16]++;
              return _context.a(2, ImagePipelineResultSchema.parse({
                success: errors.length === 0,
                articleLayout: articleLayout,
                processedImages: processedImages,
                sourcedImages: sourcedImages,
                metrics: metrics,
                errors: errors,
                warnings: warnings
              }));
            case 7:
              _context.p = 7;
              _t2 = _context.v;
              cov_2k1tst58h0().s[17]++;
              errors.push(
              /* istanbul ignore next */
              "Pipeline failed: ".concat(
              /* istanbul ignore next */
              _t2 instanceof Error ?
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[3][0]++,
              /* istanbul ignore next */
              _t2.message) :
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[3][1]++, "Unknown error")));
              cov_2k1tst58h0().s[18]++;
              return _context.a(2, ImagePipelineResultSchema.parse({
                success: false,
                processedImages: [],
                sourcedImages: [],
                metrics: {
                  totalProcessingTime: Date.now() - startTime,
                  imagesSourced: 0,
                  imagesProcessed: 0,
                  imagesPlaced: 0,
                  averageRelevance: 0,
                  totalImageSize: 0,
                  compressionRatio: 0,
                  cdnDeliveryEnabled: this.config.enableCdn
                },
                errors: errors,
                warnings: warnings
              }));
          }
        }, _callee, this, [[1, 7]]);
      }));
      function processArticleImages(_x, _x2) {
        return _processArticleImages.apply(this, arguments);
      }
      return processArticleImages;
    }()
    /**
     * Process images for a single tweet (for real-time processing)
     */
    )
  }, {
    key: "processTweetImages",
    value: (function () {
      var _processTweetImages = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(tweetMedia, tweetId, authorHandle, contentAnalysis)
      /* istanbul ignore next */
      {
        var errors, twitterImages, processedImages, _t3;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              cov_2k1tst58h0().f[2]++;
              errors = (cov_2k1tst58h0().s[19]++, []);
              cov_2k1tst58h0().s[20]++;
              _context2.p = 1;
              cov_2k1tst58h0().s[21]++;
              _context2.n = 2;
              return this.sourcingService.extractTwitterImages(tweetMedia, tweetId, authorHandle);
            case 2:
              twitterImages = _context2.v;
              cov_2k1tst58h0().s[22]++;
              if (!(twitterImages.length === 0)) {
                _context2.n = 3;
                break;
              }
              cov_2k1tst58h0().b[4][0]++;
              cov_2k1tst58h0().s[23]++;
              return _context2.a(2, {
                processedImages: [],
                errors: []
              });
            case 3:
              cov_2k1tst58h0().b[4][1]++;
            case 4:
              cov_2k1tst58h0().s[24]++;
              _context2.n = 5;
              return this.processor.processImages(twitterImages, 2);
            case 5:
              processedImages = _context2.v;
              cov_2k1tst58h0().s[25]++;
              return _context2.a(2, {
                processedImages: processedImages,
                errors: errors
              });
            case 6:
              _context2.p = 6;
              _t3 = _context2.v;
              cov_2k1tst58h0().s[26]++;
              errors.push(
              /* istanbul ignore next */
              "Tweet image processing failed: ".concat(
              /* istanbul ignore next */
              _t3 instanceof Error ?
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[5][0]++,
              /* istanbul ignore next */
              _t3.message) :
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[5][1]++, "Unknown error")));
              cov_2k1tst58h0().s[27]++;
              return _context2.a(2, {
                processedImages: [],
                errors: errors
              });
          }
        }, _callee2, this, [[1, 6]]);
      }));
      function processTweetImages(_x3, _x4, _x5, _x6) {
        return _processTweetImages.apply(this, arguments);
      }
      return processTweetImages;
    }()
    /**
     * Find contextual images for specific entities
     */
    )
  }, {
    key: "findContextualImages",
    value: (function () {
      var _findContextualImages = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3(playerNames, clubNames)
      /* istanbul ignore next */
      {
        var transferType,
          errors,
          contextualImages,
          _args3 = arguments,
          _t4;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              transferType = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : (cov_2k1tst58h0().b[6][0]++, "signing");
              cov_2k1tst58h0().f[3]++;
              errors = (cov_2k1tst58h0().s[28]++, []);
              cov_2k1tst58h0().s[29]++;
              _context3.p = 1;
              cov_2k1tst58h0().s[30]++;
              _context3.n = 2;
              return this.sourcingService.findContextualImages(playerNames, clubNames, transferType);
            case 2:
              contextualImages = _context3.v;
              cov_2k1tst58h0().s[31]++;
              return _context3.a(2, {
                images:
                /* istanbul ignore next */
                [].concat(_toConsumableArray(contextualImages.players), _toConsumableArray(contextualImages.clubs), _toConsumableArray(contextualImages.contextual)),
                errors: errors
              });
            case 3:
              _context3.p = 3;
              _t4 = _context3.v;
              cov_2k1tst58h0().s[32]++;
              errors.push(
              /* istanbul ignore next */
              "Contextual image search failed: ".concat(
              /* istanbul ignore next */
              _t4 instanceof Error ?
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[7][0]++,
              /* istanbul ignore next */
              _t4.message) :
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[7][1]++, "Unknown error")));
              cov_2k1tst58h0().s[33]++;
              return _context3.a(2, {
                images: [],
                errors: errors
              });
          }
        }, _callee3, this, [[1, 3]]);
      }));
      function findContextualImages(_x7, _x8) {
        return _findContextualImages.apply(this, arguments);
      }
      return findContextualImages;
    }()
    /**
     * Source images from all available channels
     */
    )
  }, {
    key: "sourceImages",
    value: (function () {
      var _sourceImages = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4(contentAnalyses, twitterMedia, errors, warnings)
      /* istanbul ignore next */
      {
        var _this = this;
        var allImages, _iterator, _step, _step$value, tweetId, media, authorHandle, twitterImages, allPlayerNames, allClubNames, contextualImages, filteredImages, _t5, _t6, _t7;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_2k1tst58h0().f[4]++;
              allImages = (cov_2k1tst58h0().s[34]++, []); // Extract Twitter images
              cov_2k1tst58h0().s[35]++;
              _iterator = _createForOfIteratorHelper(twitterMedia);
              _context4.p = 1;
              _iterator.s();
            case 2:
              if ((_step = _iterator.n()).done) {
                _context4.n = 7;
                break;
              }
              _step$value = _step.value, tweetId = _step$value.tweetId, media = _step$value.media, authorHandle = _step$value.authorHandle;
              cov_2k1tst58h0().s[36]++;
              _context4.p = 3;
              cov_2k1tst58h0().s[37]++;
              _context4.n = 4;
              return this.sourcingService.extractTwitterImages(media, tweetId, authorHandle);
            case 4:
              twitterImages = _context4.v;
              cov_2k1tst58h0().s[38]++;
              /* istanbul ignore next */
              allImages.push.apply(allImages,
              /* istanbul ignore next */
              _toConsumableArray(twitterImages));
              _context4.n = 6;
              break;
            case 5:
              _context4.p = 5;
              _t5 = _context4.v;
              cov_2k1tst58h0().s[39]++;
              warnings.push(
              /* istanbul ignore next */
              "Failed to extract Twitter images for tweet ".concat(tweetId, ": ").concat(_t5));
            case 6:
              _context4.n = 2;
              break;
            case 7:
              _context4.n = 9;
              break;
            case 8:
              _context4.p = 8;
              _t6 = _context4.v;
              _iterator.e(_t6);
            case 9:
              _context4.p = 9;
              _iterator.f();
              return _context4.f(9);
            case 10:
              // Search Wikipedia for relevant images
              allPlayerNames = (cov_2k1tst58h0().s[40]++, contentAnalyses.flatMap(function (analysis) {
                /* istanbul ignore next */
                cov_2k1tst58h0().f[5]++;
                cov_2k1tst58h0().s[41]++;
                return analysis.entities.players.map(function (p) {
                  /* istanbul ignore next */
                  cov_2k1tst58h0().f[6]++;
                  cov_2k1tst58h0().s[42]++;
                  return p.name;
                });
              }));
              allClubNames = (cov_2k1tst58h0().s[43]++, contentAnalyses.flatMap(function (analysis) {
                /* istanbul ignore next */
                cov_2k1tst58h0().f[7]++;
                cov_2k1tst58h0().s[44]++;
                return analysis.entities.clubs.map(function (c) {
                  /* istanbul ignore next */
                  cov_2k1tst58h0().f[8]++;
                  cov_2k1tst58h0().s[45]++;
                  return c.name;
                });
              }));
              cov_2k1tst58h0().s[46]++;
              if (!(
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[9][0]++, allPlayerNames.length > 0) ||
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[9][1]++, allClubNames.length > 0))) {
                _context4.n = 15;
                break;
              }
              cov_2k1tst58h0().b[8][0]++;
              cov_2k1tst58h0().s[47]++;
              _context4.p = 11;
              cov_2k1tst58h0().s[48]++;
              _context4.n = 12;
              return this.sourcingService.findContextualImages(
              /* istanbul ignore next */
              _toConsumableArray(new Set(allPlayerNames)),
              /* istanbul ignore next */
              // Deduplicate
              _toConsumableArray(new Set(allClubNames)), "signing");
            case 12:
              contextualImages = _context4.v;
              cov_2k1tst58h0().s[49]++;
              /* istanbul ignore next */
              allImages.push.apply(allImages,
              /* istanbul ignore next */
              _toConsumableArray(contextualImages.players).concat(_toConsumableArray(contextualImages.clubs), _toConsumableArray(contextualImages.contextual)));
              _context4.n = 14;
              break;
            case 13:
              _context4.p = 13;
              _t7 = _context4.v;
              cov_2k1tst58h0().s[50]++;
              warnings.push(
              /* istanbul ignore next */
              "Wikipedia image search failed: ".concat(_t7));
            case 14:
              _context4.n = 16;
              break;
            case 15:
              cov_2k1tst58h0().b[8][1]++;
            case 16:
              // Filter and deduplicate
              filteredImages = (cov_2k1tst58h0().s[51]++, allImages.filter(function (img) {
                /* istanbul ignore next */
                cov_2k1tst58h0().f[9]++;
                cov_2k1tst58h0().s[52]++;
                return img.metadata.relevanceScore >= _this.config.minRelevanceScore;
              }).slice(0, this.config.maxImagesPerArticle));
              cov_2k1tst58h0().s[53]++;
              return _context4.a(2, filteredImages);
          }
        }, _callee4, this, [[11, 13], [3, 5], [1, 8, 9, 10]]);
      }));
      function sourceImages(_x9, _x0, _x1, _x10) {
        return _sourceImages.apply(this, arguments);
      }
      return sourceImages;
    }()
    /**
     * Process sourced images
     */
    )
  }, {
    key: "processImages",
    value: (function () {
      var _processImages = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee5(sourcedImages, errors, warnings)
      /* istanbul ignore next */
      {
        var processedImages, _iterator2, _step2, image, validation, _t8;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              cov_2k1tst58h0().f[10]++;
              cov_2k1tst58h0().s[54]++;
              if (!(sourcedImages.length === 0)) {
                _context5.n = 1;
                break;
              }
              cov_2k1tst58h0().b[10][0]++;
              cov_2k1tst58h0().s[55]++;
              return _context5.a(2, []);
            case 1:
              cov_2k1tst58h0().b[10][1]++;
            case 2:
              cov_2k1tst58h0().s[56]++;
              _context5.p = 3;
              cov_2k1tst58h0().s[57]++;
              _context5.n = 4;
              return this.processor.processImages(sourcedImages, 3);
            case 4:
              processedImages = _context5.v;
              cov_2k1tst58h0().s[58]++;
              // Validate processed images
              _iterator2 = _createForOfIteratorHelper(processedImages);
              try {
                for (
                /* istanbul ignore next */
                _iterator2.s();
                /* istanbul ignore next */
                !(_step2 = _iterator2.n()).done;) {
                  /* istanbul ignore next */
                  image = _step2.value;
                  /* istanbul ignore next */
                  validation = (cov_2k1tst58h0().s[59]++, this.processor.validateProcessedImage(image));
                  /* istanbul ignore next */
                  cov_2k1tst58h0().s[60]++;
                  if (!validation.valid) {
                    /* istanbul ignore next */
                    cov_2k1tst58h0().b[11][0]++;
                    cov_2k1tst58h0().s[61]++;
                    warnings.push(
                    /* istanbul ignore next */
                    "Image ".concat(image.id, " validation issues: ").concat(validation.issues.join(", ")));
                  } else
                  /* istanbul ignore next */
                  {
                    cov_2k1tst58h0().b[11][1]++;
                  }
                }
              } catch (err) {
                _iterator2.e(err);
              } finally {
                _iterator2.f();
              }
              cov_2k1tst58h0().s[62]++;
              return _context5.a(2, processedImages);
            case 5:
              _context5.p = 5;
              _t8 = _context5.v;
              cov_2k1tst58h0().s[63]++;
              errors.push(
              /* istanbul ignore next */
              "Image processing failed: ".concat(
              /* istanbul ignore next */
              _t8 instanceof Error ?
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[12][0]++,
              /* istanbul ignore next */
              _t8.message) :
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[12][1]++, "Unknown error")));
              cov_2k1tst58h0().s[64]++;
              return _context5.a(2, []);
          }
        }, _callee5, this, [[3, 5]]);
      }));
      function processImages(_x11, _x12, _x13) {
        return _processImages.apply(this, arguments);
      }
      return processImages;
    }()
    /**
     * Create article layout
     */
    )
  }, {
    key: "createLayout",
    value: (function () {
      var _createLayout = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee6(sections, processedImages, contentAnalyses, errors, warnings)
      /* istanbul ignore next */
      {
        var layout, _t9;
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.n) {
            case 0:
              cov_2k1tst58h0().f[11]++;
              cov_2k1tst58h0().s[65]++;
              _context6.p = 1;
              cov_2k1tst58h0().s[66]++;
              _context6.n = 2;
              return this.placementService.createArticleLayout(sections, processedImages, contentAnalyses);
            case 2:
              layout = _context6.v;
              cov_2k1tst58h0().s[67]++;
              // Validate layout
              if (layout.metadata.averageRelevance < 50) {
                /* istanbul ignore next */
                cov_2k1tst58h0().b[13][0]++;
                cov_2k1tst58h0().s[68]++;
                warnings.push("Low average image relevance in layout");
              } else
              /* istanbul ignore next */
              {
                cov_2k1tst58h0().b[13][1]++;
              }
              cov_2k1tst58h0().s[69]++;
              if (layout.performance.totalImageSize > 5000000) {
                /* istanbul ignore next */
                cov_2k1tst58h0().b[14][0]++;
                cov_2k1tst58h0().s[70]++;
                // 5MB
                warnings.push("Large total image size may impact loading performance");
              } else
              /* istanbul ignore next */
              {
                cov_2k1tst58h0().b[14][1]++;
              }
              cov_2k1tst58h0().s[71]++;
              return _context6.a(2, layout);
            case 3:
              _context6.p = 3;
              _t9 = _context6.v;
              cov_2k1tst58h0().s[72]++;
              errors.push(
              /* istanbul ignore next */
              "Layout creation failed: ".concat(
              /* istanbul ignore next */
              _t9 instanceof Error ?
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[15][0]++,
              /* istanbul ignore next */
              _t9.message) :
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[15][1]++, "Unknown error")));
              cov_2k1tst58h0().s[73]++;
              return _context6.a(2, undefined);
          }
        }, _callee6, this, [[1, 3]]);
      }));
      function createLayout(_x14, _x15, _x16, _x17, _x18) {
        return _createLayout.apply(this, arguments);
      }
      return createLayout;
    }()
    /**
     * Calculate pipeline metrics
     */
    )
  }, {
    key: "calculatePipelineMetrics",
    value: function calculatePipelineMetrics(sourcedImages, processedImages, articleLayout, totalProcessingTime) {
      /* istanbul ignore next */
      cov_2k1tst58h0().f[12]++;
      var averageRelevance =
      /* istanbul ignore next */
      (cov_2k1tst58h0().s[74]++, sourcedImages.length > 0 ?
      /* istanbul ignore next */
      (cov_2k1tst58h0().b[16][0]++, sourcedImages.reduce(function (sum, img) {
        /* istanbul ignore next */
        cov_2k1tst58h0().f[13]++;
        cov_2k1tst58h0().s[75]++;
        return sum + img.metadata.relevanceScore;
      }, 0) / sourcedImages.length) :
      /* istanbul ignore next */
      (cov_2k1tst58h0().b[16][1]++, 0));
      var totalImageSize =
      /* istanbul ignore next */
      (cov_2k1tst58h0().s[76]++, processedImages.reduce(function (sum, img) {
        /* istanbul ignore next */
        cov_2k1tst58h0().f[14]++;
        cov_2k1tst58h0().s[77]++;
        return sum + img.variants.large.fileSize;
      }, 0));
      var totalOriginalSize =
      /* istanbul ignore next */
      (cov_2k1tst58h0().s[78]++, processedImages.reduce(function (sum, img) {
        /* istanbul ignore next */
        cov_2k1tst58h0().f[15]++;
        cov_2k1tst58h0().s[79]++;
        return sum + img.optimization.originalSize;
      }, 0));
      var compressionRatio =
      /* istanbul ignore next */
      (cov_2k1tst58h0().s[80]++, totalOriginalSize > 0 ?
      /* istanbul ignore next */
      (cov_2k1tst58h0().b[17][0]++, (totalOriginalSize - totalImageSize) / totalOriginalSize) :
      /* istanbul ignore next */
      (cov_2k1tst58h0().b[17][1]++, 0));
      var imagesPlaced =
      /* istanbul ignore next */
      (cov_2k1tst58h0().s[81]++,
      /* istanbul ignore next */
      (cov_2k1tst58h0().b[18][0]++, articleLayout === null || articleLayout === void 0 ? void 0 : articleLayout.sections.reduce(function (sum, section) {
        /* istanbul ignore next */
        cov_2k1tst58h0().f[16]++;
        cov_2k1tst58h0().s[82]++;
        return sum + section.placements.length;
      }, 0)) ||
      /* istanbul ignore next */
      (cov_2k1tst58h0().b[18][1]++, 0));
      /* istanbul ignore next */
      cov_2k1tst58h0().s[83]++;
      return {
        totalProcessingTime: totalProcessingTime,
        imagesSourced: sourcedImages.length,
        imagesProcessed: processedImages.length,
        imagesPlaced: imagesPlaced,
        averageRelevance: Math.round(averageRelevance),
        totalImageSize: totalImageSize,
        compressionRatio: Math.round(compressionRatio * 100) / 100,
        cdnDeliveryEnabled: this.config.enableCdn
      };
    }

    /**
     * Get pipeline configuration
     */
  }, {
    key: "getConfig",
    value: function getConfig() {
      /* istanbul ignore next */
      cov_2k1tst58h0().f[17]++;
      cov_2k1tst58h0().s[84]++;
      return this.config;
    }

    /**
     * Get service statistics
     */
  }, {
    key: "getServiceStats",
    value: (function () {
      var _getServiceStats = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee7()
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context7) {
          while (1) switch (_context7.n) {
            case 0:
              cov_2k1tst58h0().f[18]++;
              cov_2k1tst58h0().s[85]++;
              return _context7.a(2, {
                sourcing: this.sourcingService.getCacheStats(),
                processing: this.processor.getProcessingStats()
              });
          }
        }, _callee7, this);
      }));
      function getServiceStats() {
        return _getServiceStats.apply(this, arguments);
      }
      return getServiceStats;
    }()
    /**
     * Clear all caches
     */
    )
  }, {
    key: "clearCaches",
    value: function clearCaches() {
      /* istanbul ignore next */
      cov_2k1tst58h0().f[19]++;
      cov_2k1tst58h0().s[86]++;
      this.sourcingService.clearCache();
    }
  }]);
}();

// Export individual services for direct use
export { ImageSourcingService, ImageProcessor, ImagePlacementService };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,