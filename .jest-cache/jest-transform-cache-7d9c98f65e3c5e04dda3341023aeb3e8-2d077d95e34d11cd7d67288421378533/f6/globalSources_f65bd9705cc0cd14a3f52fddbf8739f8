812412cbf2f05b3653ea8691801c634e
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateSourceRateLimit = exports.isSourceRateLimited = exports.getTransferKeywords = exports.getSourcesByTier = exports.getSourcesByRegion = exports.getSourcesByLanguage = exports.getSourceByHandle = exports.getMonitoringPriority = exports.getAvailableSources = exports.getActiveSources = exports.TRANSFER_KEYWORDS = exports.TIER_3_SOURCES = exports.TIER_2_SOURCES = exports.TIER_2_ADDITIONAL = exports.TIER_1_SOURCES = exports.SHIT_TIER_SOURCES = exports.GLOBAL_ITK_SOURCES = exports.ALL_ITK_SOURCES = void 0;
/**
 * Global ITK Source Configuration and Management
 * Defines trusted sources worldwide with region/language detection
 */

/**
 * Tier 1: Elite sources (95%+ reliability)
 * These are the Romano, Ornstein level sources from ITK_Twitter_Handles.csv
 */
var TIER_1_SOURCES = exports.TIER_1_SOURCES = [{
  id: "fabrizio-romano",
  name: "Fabrizio Romano",
  handle: "@FabrizioRomano",
  tier: 1,
  reliability: 0.95,
  region: "GLOBAL",
  language: "en",
  specialties: ["transfers", "here-we-go", "contracts"],
  leagues: ["PL", "LaLiga", "SerieA", "Bundesliga", "Ligue1", "UCL"],
  isActive: true
}, {
  id: "david-ornstein",
  name: "David Ornstein",
  handle: "@David_Ornstein",
  tier: 1,
  reliability: 0.93,
  region: "UK",
  language: "en",
  specialties: ["premier-league", "arsenal", "exclusive"],
  leagues: ["PL"],
  isActive: true
}, {
  id: "sam-lee",
  name: "Sam Lee",
  handle: "@SamLee",
  tier: 1,
  reliability: 0.92,
  region: "UK",
  language: "en",
  specialties: ["manchester-city", "premier-league", "exclusive"],
  leagues: ["PL"],
  isActive: true
}, {
  id: "paul-joyce",
  name: "Paul Joyce",
  handle: "@_pauljoyce",
  tier: 1,
  reliability: 0.91,
  region: "UK",
  language: "en",
  specialties: ["liverpool", "everton", "premier-league"],
  leagues: ["PL"],
  isActive: true
}, {
  id: "laurie-whitwell",
  name: "Laurie Whitwell",
  handle: "@lauriewhitwell",
  tier: 1,
  reliability: 0.9,
  region: "UK",
  language: "en",
  specialties: ["manchester-united", "premier-league", "athletic"],
  leagues: ["PL"],
  isActive: true
}, {
  id: "rob-dawson",
  name: "Rob Dawson",
  handle: "@RobDawsonESPN",
  tier: 1,
  reliability: 0.89,
  region: "UK",
  language: "en",
  specialties: ["manchester-united", "espn", "premier-league"],
  leagues: ["PL"],
  isActive: true
}, {
  id: "luke-edwards",
  name: "Luke Edwards",
  handle: "@LukeEdwardsTele",
  tier: 1,
  reliability: 0.88,
  region: "UK",
  language: "en",
  specialties: ["newcastle", "premier-league", "telegraph"],
  leagues: ["PL"],
  isActive: true
}, {
  id: "john-percy",
  name: "John Percy",
  handle: "@JPercyTelegraph",
  tier: 1,
  reliability: 0.87,
  region: "UK",
  language: "en",
  specialties: ["aston-villa", "midlands", "telegraph"],
  leagues: ["PL"],
  isActive: true
}, {
  id: "craig-hope",
  name: "Craig Hope",
  handle: "@CraigHope_DM",
  tier: 1,
  reliability: 0.86,
  region: "UK",
  language: "en",
  specialties: ["newcastle", "premier-league", "daily-mail"],
  leagues: ["PL"],
  isActive: true
}, {
  id: "dean-jones",
  name: "Dean Jones",
  handle: "@DeanJonesSoccer",
  tier: 1,
  reliability: 0.85,
  region: "UK",
  language: "en",
  specialties: ["transfers", "premier-league", "teamtalk"],
  leagues: ["PL"],
  isActive: true
}, {
  id: "sirayah-shiraz",
  name: "Sirayah Shiraz",
  handle: "@SirayahShiraz",
  tier: 1,
  reliability: 0.84,
  region: "UK",
  language: "en",
  specialties: ["arsenal", "premier-league", "exclusive"],
  leagues: ["PL"],
  isActive: true
}, {
  id: "mohamed-bouhafsi",
  name: "Mohamed Bouhafsi",
  handle: "@BouhafsiMohamed",
  tier: 1,
  reliability: 0.92,
  region: "FR",
  language: "fr",
  specialties: ["ligue1", "psg", "french-transfers"],
  leagues: ["Ligue1", "UCL"],
  isActive: true
}, {
  id: "gianluca-di-marzio",
  name: "Gianluca Di Marzio",
  handle: "@DiMarzio",
  tier: 1,
  reliability: 0.91,
  region: "IT",
  language: "it",
  specialties: ["serie-a", "italian-clubs", "juventus", "inter", "milan"],
  leagues: ["SerieA", "UCL"],
  isActive: true
}, {
  id: "alfredo-pedulla",
  name: "Alfredo Pedulla",
  handle: "@alfredopedulla",
  tier: 1,
  reliability: 0.89,
  region: "IT",
  language: "it",
  specialties: ["serie-a", "transfers", "italian-football"],
  leagues: ["SerieA", "UCL"],
  isActive: true
}, {
  id: "raphael-honigstein",
  name: "Raphael Honigstein",
  handle: "@honigstein",
  tier: 1,
  reliability: 0.88,
  region: "DE",
  language: "en",
  specialties: ["bundesliga", "bayern", "german-football"],
  leagues: ["Bundesliga", "UCL"],
  isActive: true
}];

/**
 * Tier 2 and Tier 3 sources have been removed
 * Only keeping Tier 1 (elite journalists) and Shit Tier (for comedy)
 */
var TIER_2_SOURCES = exports.TIER_2_SOURCES = [];
var TIER_2_ADDITIONAL = exports.TIER_2_ADDITIONAL = [];
var TIER_3_SOURCES = exports.TIER_3_SOURCES = [];

/**
 * Shit-Tier Sources: For Terry's entertainment ONLY (20-45% reliability)
 * These exist purely for Terry to mock mercilessly
 * IMPORTANT: These should be clearly marked as comedy/satire sources in the feed
 */
var SHIT_TIER_SOURCES = exports.SHIT_TIER_SOURCES = [{
  id: "fechejes",
  name: "Fechejes",
  handle: "@Fechejes",
  tier: 3,
  // Will be overridden to Shit-Tier in display
  reliability: 0.45,
  region: "ES",
  language: "es",
  specialties: ["wild-speculation", "clickbait", "made-up-stories", "comedy-tier"],
  leagues: ["LaLiga"],
  isActive: true,
  isShitTier: true // Special flag for comedy sources
}, {
  id: "el-chiringuito",
  name: "El Chiringuito TV",
  handle: "@elchiringuitotv",
  tier: 3,
  reliability: 0.35,
  region: "ES",
  language: "es",
  specialties: ["madrid-bias", "shouting", "dramatic-nonsense", "comedy-tier"],
  leagues: ["LaLiga"],
  isActive: true,
  isShitTier: true
}, {
  id: "troll-football",
  name: "Troll Football",
  handle: "@TrollFootball",
  tier: 3,
  reliability: 0.25,
  region: "GLOBAL",
  language: "en",
  specialties: ["memes", "fake-news", "engagement-farming", "comedy-tier"],
  leagues: ["PL", "LaLiga", "SerieA", "Bundesliga", "Ligue1"],
  isActive: true,
  isShitTier: true
}, {
  id: "football-italia",
  name: "Football Italia Random Twitter",
  handle: "@FootItalia",
  tier: 3,
  reliability: 0.4,
  region: "IT",
  language: "en",
  specialties: ["serie-a-chaos", "unverified-rumors", "agent-gossip", "comedy-tier"],
  leagues: ["SerieA"],
  isActive: true,
  isShitTier: true
}, {
  id: "caughtoffside",
  name: "CaughtOffside",
  handle: "@caughtoffside",
  tier: 3,
  reliability: 0.3,
  region: "UK",
  language: "en",
  specialties: ["transfer-nonsense", "daily-mail-level", "clickbait-headlines", "comedy-tier"],
  leagues: ["PL"],
  isActive: true,
  isShitTier: true
}, {
  id: "dont-la-una",
  name: "Don BalÃ³n",
  handle: "@DonBalon",
  tier: 3,
  reliability: 0.35,
  region: "ES",
  language: "es",
  specialties: ["real-madrid-fiction", "messi-obsession", "fantasy-transfers", "comedy-tier"],
  leagues: ["LaLiga"],
  isActive: true,
  isShitTier: true
}, {
  id: "teamtalk",
  name: "TeamTalk",
  handle: "@TeamTalk",
  tier: 3,
  reliability: 0.42,
  region: "UK",
  language: "en",
  specialties: ["recycled-rumors", "agent-quotes", "weekly-nonsense", "comedy-tier"],
  leagues: ["PL", "Championship"],
  isActive: true,
  isShitTier: true
}, {
  id: "calciomercato-random",
  name: "Calciomercato Random",
  handle: "@CalcioMercatoIT",
  tier: 3,
  reliability: 0.38,
  region: "IT",
  language: "it",
  specialties: ["juventus-propaganda", "agent-inventions", "deadline-day-chaos", "comedy-tier"],
  leagues: ["SerieA"],
  isActive: true,
  isShitTier: true
}];

// Combine all sources (Tier 1 elite journalists + Shit Tier for comedy only)
var ALL_ITK_SOURCES = exports.ALL_ITK_SOURCES = [].concat(TIER_1_SOURCES, SHIT_TIER_SOURCES);

// Export GLOBAL_ITK_SOURCES as an alias for ALL_ITK_SOURCES
var GLOBAL_ITK_SOURCES = exports.GLOBAL_ITK_SOURCES = ALL_ITK_SOURCES;

// Transfer-related keywords by language
var TRANSFER_KEYWORDS = exports.TRANSFER_KEYWORDS = {
  en: ["signing", "transfer", "medical", "fee", "contract", "bid", "offer", "deal", "agreement", "personal terms", "here we go", "done deal", "confirmed", "breaking", "exclusive", "official", "ðŸš¨",
  // Breaking news emoji
  "âœ…" // Confirmed emoji
  ],
  es: ["fichaje", "traspaso", "contrato", "oferta", "acuerdo", "confirmado", "oficial", "exclusiva", "Ãºltima hora", "reconocimiento mÃ©dico", "fee",
  // Often used in Spanish tweets
  "ðŸš¨", "âœ…"],
  it: ["trasferimento", "contratto", "offerta", "accordo", "ufficiale", "confermato", "esclusiva", "visite mediche", "calciomercato", "trattativa", "ðŸš¨", "âœ…"],
  fr: ["transfert", "contrat", "offre", "accord", "officiel", "confirmÃ©", "exclusif", "visite mÃ©dicale", "mercato", "nÃ©gociation", "ðŸš¨", "âœ…"],
  de: ["transfer", "vertrag", "angebot", "vereinbarung", "offiziell", "bestÃ¤tigt", "exklusiv", "medizincheck", "wechsel", "verhandlung", "ðŸš¨", "âœ…"],
  pt: ["transferÃªncia", "contrato", "oferta", "acordo", "oficial", "confirmado", "exclusivo", "exames mÃ©dicos", "mercado", "negociaÃ§Ã£o", "ðŸš¨", "âœ…"]
};

/**
 * Get sources by region
 */
var getSourcesByRegion = exports.getSourcesByRegion = function getSourcesByRegion(region) {
  return ALL_ITK_SOURCES.filter(function (source) {
    return source.region === region;
  });
};

/**
 * Get sources by tier
 */
var getSourcesByTier = exports.getSourcesByTier = function getSourcesByTier(tier) {
  return ALL_ITK_SOURCES.filter(function (source) {
    return source.tier === tier;
  });
};

/**
 * Get sources by language
 */
var getSourcesByLanguage = exports.getSourcesByLanguage = function getSourcesByLanguage(language) {
  return ALL_ITK_SOURCES.filter(function (source) {
    return source.language === language;
  });
};

/**
 * Get transfer keywords for a language
 */
var getTransferKeywords = exports.getTransferKeywords = function getTransferKeywords(language) {
  return TRANSFER_KEYWORDS[language] || TRANSFER_KEYWORDS.en;
};

/**
 * Get active sources (for monitoring)
 */
var getActiveSources = exports.getActiveSources = function getActiveSources() {
  return ALL_ITK_SOURCES.filter(function (source) {
    return source.isActive;
  });
};

/**
 * Get source by handle (for tweet processing)
 */
var getSourceByHandle = exports.getSourceByHandle = function getSourceByHandle(handle) {
  var normalizedHandle = handle.startsWith("@") ? handle : "@".concat(handle);
  return ALL_ITK_SOURCES.find(function (source) {
    return source.handle.toLowerCase() === normalizedHandle.toLowerCase();
  });
};

/**
 * Update source rate limit info
 */
var updateSourceRateLimit = exports.updateSourceRateLimit = function updateSourceRateLimit(sourceId, remaining, resetTime) {
  var source = ALL_ITK_SOURCES.find(function (s) {
    return s.id === sourceId;
  });
  if (source) {
    source.rateLimit = {
      remaining: remaining,
      resetTime: resetTime
    };
    source.lastChecked = new Date();
  }
};

/**
 * Check if source is rate limited
 */
var isSourceRateLimited = exports.isSourceRateLimited = function isSourceRateLimited(sourceId) {
  var source = ALL_ITK_SOURCES.find(function (s) {
    return s.id === sourceId;
  });
  if (!(source !== null && source !== void 0 && source.rateLimit)) return false;
  return source.rateLimit.remaining <= 0 && new Date() < source.rateLimit.resetTime;
};

/**
 * Get available sources (not rate limited)
 */
var getAvailableSources = exports.getAvailableSources = function getAvailableSources() {
  return getActiveSources().filter(function (source) {
    return !isSourceRateLimited(source.id);
  });
};

/**
 * Priority order for monitoring (Tier 1 first, then by reliability)
 */
var getMonitoringPriority = exports.getMonitoringPriority = function getMonitoringPriority() {
  return getAvailableSources().sort(function (a, b) {
    if (a.tier !== b.tier) {
      return a.tier - b.tier; // Lower tier number = higher priority
    }
    return b.reliability - a.reliability; // Higher reliability = higher priority
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,