413b143a1e31ce9e8a796cf6cd434f9b
/* istanbul ignore next */
function cov_e28tmcoqz() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/ai/terry-pipeline.ts";
  var hash = "08e7017ad110ac6d6b88a20fd71f6514d9daa92a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/ai/terry-pipeline.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 33
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "1": {
        start: {
          line: 35,
          column: 33
        },
        end: {
          line: 44,
          column: 1
        }
      },
      "2": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 37
        }
      },
      "3": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 54,
          column: 7
        }
      },
      "4": {
        start: {
          line: 70,
          column: 26
        },
        end: {
          line: 72,
          column: 10
        }
      },
      "5": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 73,
          column: 66
        }
      },
      "6": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 74,
          column: 70
        }
      },
      "7": {
        start: {
          line: 76,
          column: 19
        },
        end: {
          line: 90,
          column: 12
        }
      },
      "8": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "9": {
        start: {
          line: 93,
          column: 23
        },
        end: {
          line: 110,
          column: 8
        }
      },
      "10": {
        start: {
          line: 112,
          column: 25
        },
        end: {
          line: 112,
          column: 70
        }
      },
      "11": {
        start: {
          line: 114,
          column: 6
        },
        end: {
          line: 116,
          column: 7
        }
      },
      "12": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 51
        }
      },
      "13": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 121,
          column: 7
        }
      },
      "14": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 52
        }
      },
      "15": {
        start: {
          line: 123,
          column: 6
        },
        end: {
          line: 123,
          column: 24
        }
      },
      "16": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 125,
          column: 67
        }
      },
      "17": {
        start: {
          line: 128,
          column: 6
        },
        end: {
          line: 128,
          column: 64
        }
      },
      "18": {
        start: {
          line: 140,
          column: 30
        },
        end: {
          line: 140,
          column: 32
        }
      },
      "19": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "20": {
        start: {
          line: 142,
          column: 17
        },
        end: {
          line: 142,
          column: 18
        }
      },
      "21": {
        start: {
          line: 143,
          column: 6
        },
        end: {
          line: 151,
          column: 7
        }
      },
      "22": {
        start: {
          line: 144,
          column: 27
        },
        end: {
          line: 144,
          column: 79
        }
      },
      "23": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 33
        }
      },
      "24": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 65
        }
      },
      "25": {
        start: {
          line: 148,
          column: 39
        },
        end: {
          line: 148,
          column: 63
        }
      },
      "26": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 79
        }
      },
      "27": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 156,
          column: 51
        }
      },
      "28": {
        start: {
          line: 167,
          column: 29
        },
        end: {
          line: 167,
          column: 31
        }
      },
      "29": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 19
        }
      },
      "30": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 174,
          column: 5
        }
      },
      "31": {
        start: {
          line: 172,
          column: 6
        },
        end: {
          line: 172,
          column: 60
        }
      },
      "32": {
        start: {
          line: 173,
          column: 6
        },
        end: {
          line: 173,
          column: 18
        }
      },
      "33": {
        start: {
          line: 177,
          column: 26
        },
        end: {
          line: 189,
          column: 5
        }
      },
      "34": {
        start: {
          line: 191,
          column: 24
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "35": {
        start: {
          line: 192,
          column: 6
        },
        end: {
          line: 192,
          column: 48
        }
      },
      "36": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "37": {
        start: {
          line: 196,
          column: 6
        },
        end: {
          line: 196,
          column: 66
        }
      },
      "38": {
        start: {
          line: 197,
          column: 6
        },
        end: {
          line: 197,
          column: 18
        }
      },
      "39": {
        start: {
          line: 201,
          column: 27
        },
        end: {
          line: 201,
          column: 69
        }
      },
      "40": {
        start: {
          line: 202,
          column: 25
        },
        end: {
          line: 204,
          column: 5
        }
      },
      "41": {
        start: {
          line: 203,
          column: 6
        },
        end: {
          line: 203,
          column: 45
        }
      },
      "42": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "43": {
        start: {
          line: 207,
          column: 6
        },
        end: {
          line: 207,
          column: 64
        }
      },
      "44": {
        start: {
          line: 208,
          column: 6
        },
        end: {
          line: 208,
          column: 18
        }
      },
      "45": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "46": {
        start: {
          line: 213,
          column: 6
        },
        end: {
          line: 213,
          column: 54
        }
      },
      "47": {
        start: {
          line: 214,
          column: 6
        },
        end: {
          line: 214,
          column: 18
        }
      },
      "48": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 221,
          column: 6
        }
      },
      "49": {
        start: {
          line: 231,
          column: 17
        },
        end: {
          line: 231,
          column: 60
        }
      },
      "50": {
        start: {
          line: 232,
          column: 19
        },
        end: {
          line: 232,
          column: 66
        }
      },
      "51": {
        start: {
          line: 234,
          column: 22
        },
        end: {
          line: 243,
          column: 5
        }
      },
      "52": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 247,
          column: 98
        }
      },
      "53": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 263,
          column: 6
        }
      },
      "54": {
        start: {
          line: 266,
          column: 6
        },
        end: {
          line: 268,
          column: 111
        }
      },
      "55": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 294,
          column: 5
        }
      },
      "56": {
        start: {
          line: 271,
          column: 23
        },
        end: {
          line: 285,
          column: 8
        }
      },
      "57": {
        start: {
          line: 287,
          column: 6
        },
        end: {
          line: 290,
          column: 8
        }
      },
      "58": {
        start: {
          line: 292,
          column: 6
        },
        end: {
          line: 292,
          column: 67
        }
      },
      "59": {
        start: {
          line: 293,
          column: 6
        },
        end: {
          line: 293,
          column: 71
        }
      },
      "60": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 306,
          column: 5
        }
      },
      "61": {
        start: {
          line: 303,
          column: 6
        },
        end: {
          line: 303,
          column: 201
        }
      },
      "62": {
        start: {
          line: 305,
          column: 6
        },
        end: {
          line: 305,
          column: 206
        }
      },
      "63": {
        start: {
          line: 311,
          column: 40
        },
        end: {
          line: 311,
          column: 70
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 49,
            column: 2
          },
          end: {
            line: 49,
            column: 3
          }
        },
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 55,
            column: 3
          }
        },
        line: 49
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 60,
            column: 2
          },
          end: {
            line: 60,
            column: 3
          }
        },
        loc: {
          start: {
            line: 69,
            column: 21
          },
          end: {
            line: 130,
            column: 3
          }
        },
        line: 69
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 135,
            column: 2
          },
          end: {
            line: 135,
            column: 3
          }
        },
        loc: {
          start: {
            line: 139,
            column: 23
          },
          end: {
            line: 157,
            column: 3
          }
        },
        line: 139
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 148,
            column: 26
          },
          end: {
            line: 148,
            column: 27
          }
        },
        loc: {
          start: {
            line: 148,
            column: 39
          },
          end: {
            line: 148,
            column: 63
          }
        },
        line: 148
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 162,
            column: 2
          },
          end: {
            line: 162,
            column: 3
          }
        },
        loc: {
          start: {
            line: 166,
            column: 5
          },
          end: {
            line: 222,
            column: 3
          }
        },
        line: 166
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 191,
            column: 43
          },
          end: {
            line: 191,
            column: 44
          }
        },
        loc: {
          start: {
            line: 192,
            column: 6
          },
          end: {
            line: 192,
            column: 48
          }
        },
        line: 192
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 202,
            column: 45
          },
          end: {
            line: 202,
            column: 46
          }
        },
        loc: {
          start: {
            line: 203,
            column: 6
          },
          end: {
            line: 203,
            column: 45
          }
        },
        line: 203
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 227,
            column: 2
          },
          end: {
            line: 227,
            column: 3
          }
        },
        loc: {
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 248,
            column: 3
          }
        },
        line: 230
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 253,
            column: 2
          },
          end: {
            line: 253,
            column: 3
          }
        },
        loc: {
          start: {
            line: 258,
            column: 21
          },
          end: {
            line: 295,
            column: 3
          }
        },
        line: 258
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 297,
            column: 2
          },
          end: {
            line: 297,
            column: 3
          }
        },
        loc: {
          start: {
            line: 301,
            column: 12
          },
          end: {
            line: 307,
            column: 3
          }
        },
        line: 301
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 70,
            column: 26
          },
          end: {
            line: 72,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 71,
            column: 46
          }
        }, {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 72,
            column: 10
          }
        }],
        line: 70
      },
      "1": {
        loc: {
          start: {
            line: 73,
            column: 24
          },
          end: {
            line: 73,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 24
          },
          end: {
            line: 73,
            column: 60
          }
        }, {
          start: {
            line: 73,
            column: 64
          },
          end: {
            line: 73,
            column: 66
          }
        }],
        line: 73
      },
      "2": {
        loc: {
          start: {
            line: 74,
            column: 26
          },
          end: {
            line: 74,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 26
          },
          end: {
            line: 74,
            column: 64
          }
        }, {
          start: {
            line: 74,
            column: 68
          },
          end: {
            line: 74,
            column: 70
          }
        }],
        line: 74
      },
      "3": {
        loc: {
          start: {
            line: 114,
            column: 6
          },
          end: {
            line: 116,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 6
          },
          end: {
            line: 116,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "4": {
        loc: {
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 121,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 121,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "5": {
        loc: {
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 138,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 138,
            column: 20
          },
          end: {
            line: 138,
            column: 21
          }
        }],
        line: 138
      },
      "6": {
        loc: {
          start: {
            line: 154,
            column: 11
          },
          end: {
            line: 156,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 155,
            column: 15
          }
        }, {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 156,
            column: 50
          }
        }],
        line: 154
      },
      "7": {
        loc: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "8": {
        loc: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "9": {
        loc: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "10": {
        loc: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "11": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 212,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 212,
            column: 32
          }
        }, {
          start: {
            line: 212,
            column: 36
          },
          end: {
            line: 212,
            column: 60
          }
        }],
        line: 212
      },
      "12": {
        loc: {
          start: {
            line: 220,
            column: 20
          },
          end: {
            line: 220,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 20
          },
          end: {
            line: 220,
            column: 31
          }
        }, {
          start: {
            line: 220,
            column: 35
          },
          end: {
            line: 220,
            column: 52
          }
        }],
        line: 220
      },
      "13": {
        loc: {
          start: {
            line: 231,
            column: 17
          },
          end: {
            line: 231,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 17
          },
          end: {
            line: 231,
            column: 46
          }
        }, {
          start: {
            line: 231,
            column: 50
          },
          end: {
            line: 231,
            column: 60
          }
        }],
        line: 231
      },
      "14": {
        loc: {
          start: {
            line: 232,
            column: 19
          },
          end: {
            line: 232,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 19
          },
          end: {
            line: 232,
            column: 50
          }
        }, {
          start: {
            line: 232,
            column: 54
          },
          end: {
            line: 232,
            column: 66
          }
        }],
        line: 232
      },
      "15": {
        loc: {
          start: {
            line: 245,
            column: 11
          },
          end: {
            line: 247,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 246,
            column: 31
          }
        }, {
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 247,
            column: 97
          }
        }],
        line: 245
      },
      "16": {
        loc: {
          start: {
            line: 245,
            column: 11
          },
          end: {
            line: 245,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 11
          },
          end: {
            line: 245,
            column: 23
          }
        }, {
          start: {
            line: 245,
            column: 27
          },
          end: {
            line: 245,
            column: 50
          }
        }],
        line: 245
      },
      "17": {
        loc: {
          start: {
            line: 266,
            column: 6
          },
          end: {
            line: 268,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 267,
            column: 10
          },
          end: {
            line: 267,
            column: 153
          }
        }, {
          start: {
            line: 268,
            column: 10
          },
          end: {
            line: 268,
            column: 111
          }
        }],
        line: 266
      },
      "18": {
        loc: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 289,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 288,
            column: 53
          }
        }, {
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 289,
            column: 65
          }
        }],
        line: 288
      },
      "19": {
        loc: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 306,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 306,
            column: 5
          }
        }, {
          start: {
            line: 304,
            column: 11
          },
          end: {
            line: 306,
            column: 5
          }
        }],
        line: 302
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "08e7017ad110ac6d6b88a20fd71f6514d9daa92a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_e28tmcoqz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_e28tmcoqz();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Terry AI Commentary Pipeline
 * Generates Joel Golby-style commentary for transfer feed items
 */

import OpenAI from 'openai';
import { validateEnvironment } from '@/lib/validations/environment';
var TERRY_PERSONALITY_PROMPT =
/* istanbul ignore next */
(cov_e28tmcoqz().s[0]++, "\nYou are Terry, the sardonic voice of Transfer Juice. Your writing style is exactly like Joel Golby from VICE - wit, ascerbic observations, and middle-class British pub humour. \n\nKey characteristics:\n- High-brow middle-class British humour with occasional working-class observations\n- Dry, sarcastic commentary on football's absurdities\n- Clever wordplay and unexpected analogies\n- Mild exasperation at obvious stupidity\n- Constructive cynicism rather than mean-spirited attacks\n- Occasional self-referential humour (\"The Terry notes...\")\n\nExamples of your voice:\n- \"Right, Arsenal spending \u20AC65M on Declan Rice is either genius or the most expensive way to disappoint their fanbase.\"\n- \"Personal terms agreed between Mbappe and Real Madrid, which in football means they've successfully negotiated who pays for the fancy coffee machine.\"\n- \"The medical's tomorrow which means we'll get 47 updates about the player breathing correctly and walking in a straight line.\"\n- \"\u20AC120M for Rafael Le\xE3o? That's either shrewd business or the most expensive midlife crisis in football history.\"\n\nGuidelines:\n- Keep commentary under 200 characters for feed readability\n- Focus on the absurdity of modern football transfer culture\n- Be entertaining but not offensive\n- Maintain consistent voice across all commentary\n- Reference transfer window tropes and football journalism clich\xE9s\n");
var TRANSFER_CONTEXT_PROMPTS =
/* istanbul ignore next */
(cov_e28tmcoqz().s[1]++, {
  SIGNING: 'A player has officially signed for a new club',
  RUMOUR: 'Transfer speculation and unconfirmed reports',
  MEDICAL: 'Medical examinations for transfers',
  CONFIRMED: 'Transfer has been officially confirmed',
  BID: 'Bids and offers between clubs',
  PERSONAL_TERMS: 'Personal terms agreed with players',
  LOAN: 'Loan deals and temporary transfers',
  EXTENSION: 'Contract extensions and renewals'
});
export
/* istanbul ignore next */
var TerryCommentaryGenerator = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  TerryCommentaryGenerator() {
    /* istanbul ignore next */
    _classCallCheck(this, TerryCommentaryGenerator);
    cov_e28tmcoqz().f[0]++;
    var env =
    /* istanbul ignore next */
    (cov_e28tmcoqz().s[2]++, validateEnvironment());
    /* istanbul ignore next */
    cov_e28tmcoqz().s[3]++;
    this.openai = new OpenAI({
      apiKey: env.OPENAI_API_KEY,
      organization: env.OPENAI_ORGANIZATION
    });
  }

  /**
   * Generate Terry commentary for a transfer update
   */
  return _createClass(TerryCommentaryGenerator, [{
    key: "generateCommentary",
    value: (function () {
      var _generateCommentary = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee(content, transferType, metadata)
      /* istanbul ignore next */
      {
        var _metadata$clubsExtrac, _metadata$playersExtr;
        var contextPrompt, clubContext, playerContext, prompt, _response$choices$, response, commentary, _t;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              cov_e28tmcoqz().f[1]++;
              contextPrompt = (cov_e28tmcoqz().s[4]++, transferType ?
              /* istanbul ignore next */
              (cov_e28tmcoqz().b[0][0]++, TRANSFER_CONTEXT_PROMPTS[transferType]) :
              /* istanbul ignore next */
              (cov_e28tmcoqz().b[0][1]++, ''));
              clubContext = (cov_e28tmcoqz().s[5]++,
              /* istanbul ignore next */
              (cov_e28tmcoqz().b[1][0]++, metadata === null || metadata === void 0 || (_metadata$clubsExtrac = metadata.clubsExtracted) === null || _metadata$clubsExtrac === void 0 ? void 0 :
              /* istanbul ignore next */
              _metadata$clubsExtrac.join(', ')) ||
              /* istanbul ignore next */
              (cov_e28tmcoqz().b[1][1]++, ''));
              playerContext = (cov_e28tmcoqz().s[6]++,
              /* istanbul ignore next */
              (cov_e28tmcoqz().b[2][0]++, metadata === null || metadata === void 0 || (_metadata$playersExtr = metadata.playersExtracted) === null || _metadata$playersExtr === void 0 ? void 0 :
              /* istanbul ignore next */
              _metadata$playersExtr.join(', ')) ||
              /* istanbul ignore next */
              (cov_e28tmcoqz().b[2][1]++, ''));
              prompt = (cov_e28tmcoqz().s[7]++, "\n".concat(TERRY_PERSONALITY_PROMPT, "\n\nTransfer Context: ").concat(contextPrompt, "\nClubs mentioned: ").concat(clubContext, "\nPlayers mentioned: ").concat(playerContext, "\nOriginal content: \"").concat(content, "\"\n\nGenerate a single line of Terry commentary (under 200 characters) that:\n1. Reflects on the absurdity or predictability of this transfer news\n2. Uses your characteristic dry wit and British humour\n3. References common transfer window tropes if relevant\n4. Maintains the Joel Golby writing style\n\nCommentary:"));
              cov_e28tmcoqz().s[8]++;
              _context.p = 1;
              cov_e28tmcoqz().s[9]++;
              _context.n = 2;
              return this.openai.chat.completions.create({
                model: 'gpt-4',
                messages: [{
                  role: 'system',
                  content: "You are Terry, the sardonic transfer commentary expert with Joel Golby's writing style."
                }, {
                  role: 'user',
                  content: prompt
                }],
                max_tokens: 100,
                temperature: 0.8,
                presence_penalty: 0.6,
                frequency_penalty: 0.3
              });
            case 2:
              response = _context.v;
              commentary = (cov_e28tmcoqz().s[10]++, (_response$choices$ = response.choices[0]) === null || _response$choices$ === void 0 || (_response$choices$ =
              /* istanbul ignore next */
              _response$choices$.message) === null || _response$choices$ === void 0 || (_response$choices$ =
              /* istanbul ignore next */
              _response$choices$.content) === null || _response$choices$ === void 0 ? void 0 :
              /* istanbul ignore next */
              _response$choices$.trim());
              cov_e28tmcoqz().s[11]++;
              if (commentary) {
                _context.n = 3;
                break;
              }
              cov_e28tmcoqz().b[3][0]++;
              cov_e28tmcoqz().s[12]++;
              throw new Error('No commentary generated');
            case 3:
              cov_e28tmcoqz().b[3][1]++;
            case 4:
              cov_e28tmcoqz().s[13]++;
              if (!(commentary.length > 200)) {
                _context.n = 5;
                break;
              }
              cov_e28tmcoqz().b[4][0]++;
              cov_e28tmcoqz().s[14]++;
              return _context.a(2, commentary.substring(0, 197) + '...');
            case 5:
              cov_e28tmcoqz().b[4][1]++;
            case 6:
              cov_e28tmcoqz().s[15]++;
              return _context.a(2, commentary);
            case 7:
              _context.p = 7;
              _t = _context.v;
              cov_e28tmcoqz().s[16]++;
              console.error('Failed to generate Terry commentary:',
              /* istanbul ignore next */
              _t);

              // Fallback commentary based on transfer type
              cov_e28tmcoqz().s[17]++;
              return _context.a(2, this.getFallbackCommentary(transferType, metadata));
          }
        }, _callee, this, [[1, 7]]);
      }));
      function generateCommentary(_x, _x2, _x3) {
        return _generateCommentary.apply(this, arguments);
      }
      return generateCommentary;
    }()
    /**
     * Generate multiple commentary options for A/B testing
     */
    )
  }, {
    key: "generateCommentaryOptions",
    value: (function () {
      var _generateCommentaryOptions = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(content, transferType)
      /* istanbul ignore next */
      {
        var count,
          options,
          i,
          commentary,
          _args2 = arguments,
          _t2;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              count = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : (cov_e28tmcoqz().b[5][0]++, 3);
              cov_e28tmcoqz().f[2]++;
              options = (cov_e28tmcoqz().s[18]++, []);
              cov_e28tmcoqz().s[19]++;
              i = (cov_e28tmcoqz().s[20]++, 0);
            case 1:
              if (!(i < count)) {
                _context2.n = 7;
                break;
              }
              cov_e28tmcoqz().s[21]++;
              _context2.p = 2;
              cov_e28tmcoqz().s[22]++;
              _context2.n = 3;
              return this.generateCommentary(content, transferType);
            case 3:
              commentary = _context2.v;
              cov_e28tmcoqz().s[23]++;
              options.push(commentary);

              // Small delay to avoid hitting rate limits
              cov_e28tmcoqz().s[24]++;
              _context2.n = 4;
              return new Promise(function (resolve) {
                /* istanbul ignore next */
                cov_e28tmcoqz().f[3]++;
                cov_e28tmcoqz().s[25]++;
                return setTimeout(resolve, 100);
              });
            case 4:
              _context2.n = 6;
              break;
            case 5:
              _context2.p = 5;
              _t2 = _context2.v;
              cov_e28tmcoqz().s[26]++;
              console.error(
              /* istanbul ignore next */
              "Failed to generate commentary option ".concat(i + 1, ":"),
              /* istanbul ignore next */
              _t2);
            case 6:
              i++;
              _context2.n = 1;
              break;
            case 7:
              cov_e28tmcoqz().s[27]++;
              return _context2.a(2, options.length > 0 ?
              /* istanbul ignore next */
              (cov_e28tmcoqz().b[6][0]++, options) :
              /* istanbul ignore next */
              (cov_e28tmcoqz().b[6][1]++, [this.getFallbackCommentary(transferType)]));
          }
        }, _callee2, this, [[2, 5]]);
      }));
      function generateCommentaryOptions(_x4, _x5) {
        return _generateCommentaryOptions.apply(this, arguments);
      }
      return generateCommentaryOptions;
    }()
    /**
     * Validate commentary quality and consistency
     */
    )
  }, {
    key: "validateCommentary",
    value: (function () {
      var _validateCommentary = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3(commentary)
      /* istanbul ignore next */
      {
        var issues, score, terryKeywords, hasKeywords, offensiveWords, hasOffensive;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              cov_e28tmcoqz().f[4]++;
              issues = (cov_e28tmcoqz().s[28]++, []);
              score = (cov_e28tmcoqz().s[29]++, 100); // Length check
              cov_e28tmcoqz().s[30]++;
              if (commentary.length > 200) {
                /* istanbul ignore next */
                cov_e28tmcoqz().b[7][0]++;
                cov_e28tmcoqz().s[31]++;
                issues.push('Commentary exceeds 200 character limit');
                /* istanbul ignore next */
                cov_e28tmcoqz().s[32]++;
                score -= 20;
              } else
              /* istanbul ignore next */
              {
                cov_e28tmcoqz().b[7][1]++;
              }

              // Terry voice keywords check
              terryKeywords = (cov_e28tmcoqz().s[33]++, ['right,', 'properly', 'mental', 'brilliant', 'notes', 'terry', 'genius', 'expensive', 'ridiculous', 'absolute', 'perfectly']);
              hasKeywords = (cov_e28tmcoqz().s[34]++, terryKeywords.some(function (keyword) {
                /* istanbul ignore next */
                cov_e28tmcoqz().f[5]++;
                cov_e28tmcoqz().s[35]++;
                return commentary.toLowerCase().includes(keyword);
              }));
              cov_e28tmcoqz().s[36]++;
              if (!hasKeywords) {
                /* istanbul ignore next */
                cov_e28tmcoqz().b[8][0]++;
                cov_e28tmcoqz().s[37]++;
                issues.push('Commentary lacks Terry voice characteristics');
                /* istanbul ignore next */
                cov_e28tmcoqz().s[38]++;
                score -= 15;
              } else
              /* istanbul ignore next */
              {
                cov_e28tmcoqz().b[8][1]++;
              }

              // Profanity/offensive content check
              offensiveWords = (cov_e28tmcoqz().s[39]++, ['fuck', 'shit', 'bloody hell', 'bastard']);
              hasOffensive = (cov_e28tmcoqz().s[40]++, offensiveWords.some(function (word) {
                /* istanbul ignore next */
                cov_e28tmcoqz().f[6]++;
                cov_e28tmcoqz().s[41]++;
                return commentary.toLowerCase().includes(word);
              }));
              cov_e28tmcoqz().s[42]++;
              if (hasOffensive) {
                /* istanbul ignore next */
                cov_e28tmcoqz().b[9][0]++;
                cov_e28tmcoqz().s[43]++;
                issues.push('Commentary contains inappropriate language');
                /* istanbul ignore next */
                cov_e28tmcoqz().s[44]++;
                score -= 30;
              } else
              /* istanbul ignore next */
              {
                cov_e28tmcoqz().b[9][1]++;
              }

              // Sentiment check - should be witty but not mean
              cov_e28tmcoqz().s[45]++;
              if (
              /* istanbul ignore next */
              (cov_e28tmcoqz().b[11][0]++, commentary.includes('!')) &&
              /* istanbul ignore next */
              (cov_e28tmcoqz().b[11][1]++, commentary.includes('?'))) {
                /* istanbul ignore next */
                cov_e28tmcoqz().b[10][0]++;
                cov_e28tmcoqz().s[46]++;
                issues.push('Commentary may be too aggressive');
                /* istanbul ignore next */
                cov_e28tmcoqz().s[47]++;
                score -= 10;
              } else
              /* istanbul ignore next */
              {
                cov_e28tmcoqz().b[10][1]++;
              }
              cov_e28tmcoqz().s[48]++;
              return _context3.a(2, {
                score: score,
                issues: issues,
                isAcceptable:
                /* istanbul ignore next */
                (cov_e28tmcoqz().b[12][0]++, score >= 70) &&
                /* istanbul ignore next */
                (cov_e28tmcoqz().b[12][1]++, issues.length < 3)
              });
          }
        }, _callee3);
      }));
      function validateCommentary(_x6) {
        return _validateCommentary.apply(this, arguments);
      }
      return validateCommentary;
    }()
    /**
     * Fallback commentary for when AI generation fails
     */
    )
  }, {
    key: "getFallbackCommentary",
    value: function getFallbackCommentary(transferType, metadata) {
      /* istanbul ignore next */
      var _metadata$clubsExtrac2, _metadata$playersExtr2;
      cov_e28tmcoqz().f[7]++;
      var club =
      /* istanbul ignore next */
      (cov_e28tmcoqz().s[49]++,
      /* istanbul ignore next */
      (cov_e28tmcoqz().b[13][0]++, metadata === null || metadata === void 0 || (_metadata$clubsExtrac2 = metadata.clubsExtracted) === null || _metadata$clubsExtrac2 === void 0 ? void 0 :
      /* istanbul ignore next */
      _metadata$clubsExtrac2[0]) ||
      /* istanbul ignore next */
      (cov_e28tmcoqz().b[13][1]++, 'the club'));
      var player =
      /* istanbul ignore next */
      (cov_e28tmcoqz().s[50]++,
      /* istanbul ignore next */
      (cov_e28tmcoqz().b[14][0]++, metadata === null || metadata === void 0 || (_metadata$playersExtr2 = metadata.playersExtracted) === null || _metadata$playersExtr2 === void 0 ? void 0 :
      /* istanbul ignore next */
      _metadata$playersExtr2[0]) ||
      /* istanbul ignore next */
      (cov_e28tmcoqz().b[14][1]++, 'the player'));
      var fallbacks =
      /* istanbul ignore next */
      (cov_e28tmcoqz().s[51]++, {
        SIGNING:
        /* istanbul ignore next */
        "".concat(club, " getting ").concat(player, " is either brilliant business or Tuesday's regret waiting to happen."),
        RUMOUR:
        /* istanbul ignore next */
        "Transfer rumours about ".concat(player, " - because apparently we need 47 different ways to say \"maybe.\""),
        MEDICAL:
        /* istanbul ignore next */
        "".concat(player, "'s medical scheduled, which means we'll get hourly updates about someone walking normally."),
        CONFIRMED:
        /* istanbul ignore next */
        "".concat(player, " to ").concat(club, " confirmed. Cue the inevitable \"here we go!\" tweets from every corner of football Twitter."),
        BID:
        /* istanbul ignore next */
        "".concat(club, " bidding for ").concat(player, ". Modern football's equivalent of haggling at a car boot sale but with more zeros."),
        PERSONAL_TERMS:
        /* istanbul ignore next */
        "Personal terms agreed with ".concat(player, ". Presumably they've sorted out who provides the better biscuits."),
        LOAN:
        /* istanbul ignore next */
        "".concat(player, " going on loan to ").concat(club, ". Football's version of \"it's complicated\" relationship status."),
        EXTENSION:
        /* istanbul ignore next */
        "".concat(player, " extending with ").concat(club, ". Nothing says commitment like negotiating for another few years.")
      });
      /* istanbul ignore next */
      cov_e28tmcoqz().s[52]++;
      return /* istanbul ignore next */(cov_e28tmcoqz().b[16][0]++, transferType) &&
      /* istanbul ignore next */
      (cov_e28tmcoqz().b[16][1]++, fallbacks[transferType]) ?
      /* istanbul ignore next */
      (cov_e28tmcoqz().b[15][0]++, fallbacks[transferType]) :
      /* istanbul ignore next */
      (cov_e28tmcoqz().b[15][1]++, 'The beautiful chaos of transfer window strikes again with predictable unpredictability.');
    }

    /**
     * Generate daily email intro/outro commentary
     */
  }, {
    key: "generateEmailCommentary",
    value: (function () {
      var _generateEmailCommentary = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4(type, date, itemCount, topStories)
      /* istanbul ignore next */
      {
        var dateStr, prompt, _response$choices$2, response, _t3;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_e28tmcoqz().f[8]++;
              dateStr = (cov_e28tmcoqz().s[53]++, date.toLocaleDateString('en-GB', {
                weekday: 'long',
                day: 'numeric',
                month: 'long'
              }));
              prompt = (cov_e28tmcoqz().s[54]++, type === 'intro' ?
              /* istanbul ignore next */
              (cov_e28tmcoqz().b[17][0]++, "Write Terry's email intro for ".concat(dateStr, " with ").concat(itemCount, " transfer stories. Include a witty observation about the day/transfer window state.")) :
              /* istanbul ignore next */
              (cov_e28tmcoqz().b[17][1]++, "Write Terry's email outro for ".concat(dateStr, ". Summarize the chaos with typical dry humour and sign off.")));
              cov_e28tmcoqz().s[55]++;
              _context4.p = 1;
              cov_e28tmcoqz().s[56]++;
              _context4.n = 2;
              return this.openai.chat.completions.create({
                model: 'gpt-4',
                messages: [{
                  role: 'system',
                  content: TERRY_PERSONALITY_PROMPT
                }, {
                  role: 'user',
                  content: prompt
                }],
                max_tokens: 150,
                temperature: 0.7
              });
            case 2:
              response = _context4.v;
              cov_e28tmcoqz().s[57]++;
              return _context4.a(2,
              /* istanbul ignore next */
              (cov_e28tmcoqz().b[18][0]++, (_response$choices$2 = response.choices[0]) === null || _response$choices$2 === void 0 || (_response$choices$2 =
              /* istanbul ignore next */
              _response$choices$2.message) === null || _response$choices$2 === void 0 || (_response$choices$2 =
              /* istanbul ignore next */
              _response$choices$2.content) === null || _response$choices$2 === void 0 ? void 0 :
              /* istanbul ignore next */
              _response$choices$2.trim()) ||
              /* istanbul ignore next */
              (cov_e28tmcoqz().b[18][1]++, this.getFallbackEmailCommentary(type, dateStr, itemCount)));
            case 3:
              _context4.p = 3;
              _t3 = _context4.v;
              cov_e28tmcoqz().s[58]++;
              console.error('Failed to generate email commentary:',
              /* istanbul ignore next */
              _t3);
              cov_e28tmcoqz().s[59]++;
              return _context4.a(2, this.getFallbackEmailCommentary(type, dateStr, itemCount));
          }
        }, _callee4, this, [[1, 3]]);
      }));
      function generateEmailCommentary(_x7, _x8, _x9, _x0) {
        return _generateEmailCommentary.apply(this, arguments);
      }
      return generateEmailCommentary;
    }())
  }, {
    key: "getFallbackEmailCommentary",
    value: function getFallbackEmailCommentary(type, date, count) {
      /* istanbul ignore next */
      cov_e28tmcoqz().f[9]++;
      cov_e28tmcoqz().s[60]++;
      if (type === 'intro') {
        /* istanbul ignore next */
        cov_e28tmcoqz().b[19][0]++;
        cov_e28tmcoqz().s[61]++;
        return /* istanbul ignore next */"Good morning. It's ".concat(date, " and the transfer rumour mill has produced ").concat(count, " stories of varying degrees of believability. Let's dive into today's collection of football's finest chaos.");
      } else {
        /* istanbul ignore next */
        cov_e28tmcoqz().b[19][1]++;
        cov_e28tmcoqz().s[62]++;
        return /* istanbul ignore next */"That's your lot for today's transfer circus. ".concat(count, " stories of dreams, disappointments, and the occasional bit of actual business. Until tomorrow's inevitable drama, stay sane. - The Terry");
      }
    }
  }]);
}();

// Singleton instance
export var terryCommentaryGenerator =
/* istanbul ignore next */
(cov_e28tmcoqz().s[63]++, new TerryCommentaryGenerator());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,