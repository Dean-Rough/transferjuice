d7ee3da54bb70d90c6dd37c053728bd9
/* istanbul ignore next */
function cov_1u7h91iccc() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/database/sources.ts";
  var hash = "a01abf1a0e4dd93bc29c5c63947ac75b6b00a604";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/database/sources.ts",
    statementMap: {
      "0": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "1": {
        start: {
          line: 70,
          column: 47
        },
        end: {
          line: 70,
          column: 60
        }
      },
      "2": {
        start: {
          line: 72,
          column: 2
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "3": {
        start: {
          line: 89,
          column: 21
        },
        end: {
          line: 89,
          column: 66
        }
      },
      "4": {
        start: {
          line: 91,
          column: 2
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "5": {
        start: {
          line: 115,
          column: 2
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "6": {
        start: {
          line: 130,
          column: 2
        },
        end: {
          line: 144,
          column: 3
        }
      },
      "7": {
        start: {
          line: 131,
          column: 19
        },
        end: {
          line: 134,
          column: 6
        }
      },
      "8": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "9": {
        start: {
          line: 137,
          column: 6
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "10": {
        start: {
          line: 162,
          column: 17
        },
        end: {
          line: 169,
          column: 4
        }
      },
      "11": {
        start: {
          line: 171,
          column: 2
        },
        end: {
          line: 173,
          column: 3
        }
      },
      "12": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 172,
          column: 40
        }
      },
      "13": {
        start: {
          line: 176,
          column: 23
        },
        end: {
          line: 176,
          column: 51
        }
      },
      "14": {
        start: {
          line: 178,
          column: 2
        },
        end: {
          line: 199,
          column: 3
        }
      },
      "15": {
        start: {
          line: 179,
          column: 24
        },
        end: {
          line: 190,
          column: 6
        }
      },
      "16": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 198,
          column: 6
        }
      },
      "17": {
        start: {
          line: 201,
          column: 2
        },
        end: {
          line: 206,
          column: 4
        }
      },
      "18": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 43
        }
      },
      "19": {
        start: {
          line: 219,
          column: 18
        },
        end: {
          line: 232,
          column: 4
        }
      },
      "20": {
        start: {
          line: 234,
          column: 2
        },
        end: {
          line: 269,
          column: 3
        }
      },
      "21": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 235,
          column: 47
        }
      },
      "22": {
        start: {
          line: 235,
          column: 38
        },
        end: {
          line: 235,
          column: 47
        }
      },
      "23": {
        start: {
          line: 239,
          column: 6
        },
        end: {
          line: 240,
          column: 29
        }
      },
      "24": {
        start: {
          line: 239,
          column: 45
        },
        end: {
          line: 239,
          column: 70
        }
      },
      "25": {
        start: {
          line: 243,
          column: 6
        },
        end: {
          line: 245,
          column: 40
        }
      },
      "26": {
        start: {
          line: 244,
          column: 18
        },
        end: {
          line: 244,
          column: 74
        }
      },
      "27": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 268,
          column: 5
        }
      },
      "28": {
        start: {
          line: 249,
          column: 6
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "29": {
        start: {
          line: 256,
          column: 6
        },
        end: {
          line: 256,
          column: 23
        }
      },
      "30": {
        start: {
          line: 259,
          column: 9
        },
        end: {
          line: 268,
          column: 5
        }
      },
      "31": {
        start: {
          line: 260,
          column: 6
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "32": {
        start: {
          line: 267,
          column: 6
        },
        end: {
          line: 267,
          column: 22
        }
      },
      "33": {
        start: {
          line: 271,
          column: 2
        },
        end: {
          line: 271,
          column: 15
        }
      },
      "34": {
        start: {
          line: 280,
          column: 21
        },
        end: {
          line: 280,
          column: 78
        }
      },
      "35": {
        start: {
          line: 282,
          column: 17
        },
        end: {
          line: 290,
          column: 4
        }
      },
      "36": {
        start: {
          line: 292,
          column: 2
        },
        end: {
          line: 292,
          column: 22
        }
      },
      "37": {
        start: {
          line: 301,
          column: 2
        },
        end: {
          line: 303,
          column: 5
        }
      },
      "38": {
        start: {
          line: 310,
          column: 2
        },
        end: {
          line: 316,
          column: 5
        }
      }
    },
    fnMap: {
      "0": {
        name: "upsertITKSource",
        decl: {
          start: {
            line: 12,
            column: 22
          },
          end: {
            line: 12,
            column: 37
          }
        },
        loc: {
          start: {
            line: 25,
            column: 23
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 25
      },
      "1": {
        name: "getActiveITKSources",
        decl: {
          start: {
            line: 65,
            column: 22
          },
          end: {
            line: 65,
            column: 41
          }
        },
        loc: {
          start: {
            line: 69,
            column: 25
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 69
      },
      "2": {
        name: "getSourcesNeedingUpdate",
        decl: {
          start: {
            line: 86,
            column: 22
          },
          end: {
            line: 86,
            column: 45
          }
        },
        loc: {
          start: {
            line: 88,
            column: 24
          },
          end: {
            line: 101,
            column: 1
          }
        },
        line: 88
      },
      "3": {
        name: "updateSourceFetchStatus",
        decl: {
          start: {
            line: 106,
            column: 22
          },
          end: {
            line: 106,
            column: 45
          }
        },
        loc: {
          start: {
            line: 114,
            column: 17
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 114
      },
      "4": {
        name: "getSourcePerformanceStats",
        decl: {
          start: {
            line: 150,
            column: 22
          },
          end: {
            line: 150,
            column: 47
          }
        },
        loc: {
          start: {
            line: 161,
            column: 3
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 161
      },
      "5": {
        name: "updateSourceTiers",
        decl: {
          start: {
            line: 212,
            column: 22
          },
          end: {
            line: 212,
            column: 39
          }
        },
        loc: {
          start: {
            line: 215,
            column: 3
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 215
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 239,
            column: 30
          },
          end: {
            line: 239,
            column: 31
          }
        },
        loc: {
          start: {
            line: 239,
            column: 45
          },
          end: {
            line: 239,
            column: 70
          }
        },
        line: 239
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        },
        loc: {
          start: {
            line: 244,
            column: 18
          },
          end: {
            line: 244,
            column: 74
          }
        },
        line: 244
      },
      "8": {
        name: "deactivateInactiveSources",
        decl: {
          start: {
            line: 277,
            column: 22
          },
          end: {
            line: 277,
            column: 47
          }
        },
        loc: {
          start: {
            line: 279,
            column: 19
          },
          end: {
            line: 293,
            column: 1
          }
        },
        line: 279
      },
      "9": {
        name: "getSourceByUsername",
        decl: {
          start: {
            line: 298,
            column: 22
          },
          end: {
            line: 298,
            column: 41
          }
        },
        loc: {
          start: {
            line: 300,
            column: 29
          },
          end: {
            line: 304,
            column: 1
          }
        },
        line: 300
      },
      "10": {
        name: "getSourcesByRegion",
        decl: {
          start: {
            line: 309,
            column: 22
          },
          end: {
            line: 309,
            column: 40
          }
        },
        loc: {
          start: {
            line: 309,
            column: 79
          },
          end: {
            line: 317,
            column: 1
          }
        },
        line: 309
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 10
          },
          end: {
            line: 30,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 10
          },
          end: {
            line: 30,
            column: 24
          }
        }, {
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 30,
            column: 57
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 10
          },
          end: {
            line: 31,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 10
          },
          end: {
            line: 31,
            column: 33
          }
        }, {
          start: {
            line: 31,
            column: 37
          },
          end: {
            line: 31,
            column: 56
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 10
          },
          end: {
            line: 32,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 10
          },
          end: {
            line: 32,
            column: 40
          }
        }, {
          start: {
            line: 32,
            column: 44
          },
          end: {
            line: 32,
            column: 77
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 10
          },
          end: {
            line: 33,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 10
          },
          end: {
            line: 33,
            column: 21
          }
        }, {
          start: {
            line: 33,
            column: 25
          },
          end: {
            line: 33,
            column: 48
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 10
          },
          end: {
            line: 34,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 10
          },
          end: {
            line: 34,
            column: 39
          }
        }, {
          start: {
            line: 34,
            column: 43
          },
          end: {
            line: 34,
            column: 74
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 10
          },
          end: {
            line: 35,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 10
          },
          end: {
            line: 35,
            column: 30
          }
        }, {
          start: {
            line: 35,
            column: 34
          },
          end: {
            line: 35,
            column: 75
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 10
          },
          end: {
            line: 36,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 10
          },
          end: {
            line: 36,
            column: 26
          }
        }, {
          start: {
            line: 36,
            column: 30
          },
          end: {
            line: 36,
            column: 63
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 37,
            column: 10
          },
          end: {
            line: 39,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 10
          },
          end: {
            line: 37,
            column: 42
          }
        }, {
          start: {
            line: 37,
            column: 46
          },
          end: {
            line: 39,
            column: 7
          }
        }],
        line: 37
      },
      "8": {
        loc: {
          start: {
            line: 40,
            column: 10
          },
          end: {
            line: 42,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 10
          },
          end: {
            line: 40,
            column: 43
          }
        }, {
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 42,
            column: 7
          }
        }],
        line: 40
      },
      "9": {
        loc: {
          start: {
            line: 43,
            column: 10
          },
          end: {
            line: 43,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 10
          },
          end: {
            line: 43,
            column: 39
          }
        }, {
          start: {
            line: 43,
            column: 43
          },
          end: {
            line: 43,
            column: 74
          }
        }],
        line: 43
      },
      "10": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 21
          }
        }, {
          start: {
            line: 49,
            column: 25
          },
          end: {
            line: 49,
            column: 26
          }
        }],
        line: 49
      },
      "11": {
        loc: {
          start: {
            line: 50,
            column: 19
          },
          end: {
            line: 50,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 19
          },
          end: {
            line: 50,
            column: 35
          }
        }, {
          start: {
            line: 50,
            column: 39
          },
          end: {
            line: 50,
            column: 42
          }
        }],
        line: 50
      },
      "12": {
        loc: {
          start: {
            line: 51,
            column: 14
          },
          end: {
            line: 51,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 14
          },
          end: {
            line: 51,
            column: 25
          }
        }, {
          start: {
            line: 51,
            column: 29
          },
          end: {
            line: 51,
            column: 37
          }
        }],
        line: 51
      },
      "13": {
        loc: {
          start: {
            line: 52,
            column: 18
          },
          end: {
            line: 52,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 18
          },
          end: {
            line: 52,
            column: 33
          }
        }, {
          start: {
            line: 52,
            column: 37
          },
          end: {
            line: 52,
            column: 42
          }
        }],
        line: 52
      },
      "14": {
        loc: {
          start: {
            line: 70,
            column: 24
          },
          end: {
            line: 70,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 70,
            column: 41
          },
          end: {
            line: 70,
            column: 42
          }
        }],
        line: 70
      },
      "15": {
        loc: {
          start: {
            line: 70,
            column: 47
          },
          end: {
            line: 70,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 47
          },
          end: {
            line: 70,
            column: 54
          }
        }, {
          start: {
            line: 70,
            column: 58
          },
          end: {
            line: 70,
            column: 60
          }
        }],
        line: 70
      },
      "16": {
        loc: {
          start: {
            line: 75,
            column: 10
          },
          end: {
            line: 75,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 10
          },
          end: {
            line: 75,
            column: 14
          }
        }, {
          start: {
            line: 75,
            column: 18
          },
          end: {
            line: 75,
            column: 26
          }
        }],
        line: 75
      },
      "17": {
        loc: {
          start: {
            line: 76,
            column: 10
          },
          end: {
            line: 76,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 10
          },
          end: {
            line: 76,
            column: 16
          }
        }, {
          start: {
            line: 76,
            column: 20
          },
          end: {
            line: 76,
            column: 30
          }
        }],
        line: 76
      },
      "18": {
        loc: {
          start: {
            line: 87,
            column: 2
          },
          end: {
            line: 87,
            column: 23
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 87,
            column: 20
          },
          end: {
            line: 87,
            column: 23
          }
        }],
        line: 87
      },
      "19": {
        loc: {
          start: {
            line: 119,
            column: 10
          },
          end: {
            line: 119,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 10
          },
          end: {
            line: 119,
            column: 26
          }
        }, {
          start: {
            line: 119,
            column: 30
          },
          end: {
            line: 119,
            column: 63
          }
        }],
        line: 119
      },
      "20": {
        loc: {
          start: {
            line: 120,
            column: 10
          },
          end: {
            line: 122,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 10
          },
          end: {
            line: 120,
            column: 44
          }
        }, {
          start: {
            line: 120,
            column: 48
          },
          end: {
            line: 122,
            column: 7
          }
        }],
        line: 120
      },
      "21": {
        loc: {
          start: {
            line: 123,
            column: 10
          },
          end: {
            line: 125,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 10
          },
          end: {
            line: 123,
            column: 43
          }
        }, {
          start: {
            line: 123,
            column: 47
          },
          end: {
            line: 125,
            column: 7
          }
        }],
        line: 123
      },
      "22": {
        loc: {
          start: {
            line: 130,
            column: 2
          },
          end: {
            line: 144,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 2
          },
          end: {
            line: 144,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "23": {
        loc: {
          start: {
            line: 130,
            column: 6
          },
          end: {
            line: 130,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 6
          },
          end: {
            line: 130,
            column: 26
          }
        }, {
          start: {
            line: 130,
            column: 30
          },
          end: {
            line: 130,
            column: 63
          }
        }],
        line: 130
      },
      "24": {
        loc: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "25": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 136,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 136,
            column: 14
          }
        }, {
          start: {
            line: 136,
            column: 18
          },
          end: {
            line: 136,
            column: 40
          }
        }],
        line: 136
      },
      "26": {
        loc: {
          start: {
            line: 171,
            column: 2
          },
          end: {
            line: 173,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 2
          },
          end: {
            line: 173,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "27": {
        loc: {
          start: {
            line: 178,
            column: 2
          },
          end: {
            line: 199,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 2
          },
          end: {
            line: 199,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "28": {
        loc: {
          start: {
            line: 195,
            column: 9
          },
          end: {
            line: 195,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 9
          },
          end: {
            line: 195,
            column: 39
          }
        }, {
          start: {
            line: 195,
            column: 43
          },
          end: {
            line: 195,
            column: 44
          }
        }],
        line: 195
      },
      "29": {
        loc: {
          start: {
            line: 196,
            column: 9
          },
          end: {
            line: 196,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 9
          },
          end: {
            line: 196,
            column: 40
          }
        }, {
          start: {
            line: 196,
            column: 44
          },
          end: {
            line: 196,
            column: 45
          }
        }],
        line: 196
      },
      "30": {
        loc: {
          start: {
            line: 197,
            column: 9
          },
          end: {
            line: 197,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 9
          },
          end: {
            line: 197,
            column: 41
          }
        }, {
          start: {
            line: 197,
            column: 45
          },
          end: {
            line: 197,
            column: 46
          }
        }],
        line: 197
      },
      "31": {
        loc: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "32": {
        loc: {
          start: {
            line: 244,
            column: 18
          },
          end: {
            line: 244,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 18
          },
          end: {
            line: 244,
            column: 42
          }
        }, {
          start: {
            line: 244,
            column: 46
          },
          end: {
            line: 244,
            column: 74
          }
        }],
        line: 244
      },
      "33": {
        loc: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 268,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 268,
            column: 5
          }
        }, {
          start: {
            line: 259,
            column: 9
          },
          end: {
            line: 268,
            column: 5
          }
        }],
        line: 248
      },
      "34": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 248,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 248,
            column: 23
          }
        }, {
          start: {
            line: 248,
            column: 27
          },
          end: {
            line: 248,
            column: 45
          }
        }, {
          start: {
            line: 248,
            column: 49
          },
          end: {
            line: 248,
            column: 71
          }
        }],
        line: 248
      },
      "35": {
        loc: {
          start: {
            line: 259,
            column: 9
          },
          end: {
            line: 268,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 9
          },
          end: {
            line: 268,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "36": {
        loc: {
          start: {
            line: 259,
            column: 13
          },
          end: {
            line: 259,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 13
          },
          end: {
            line: 259,
            column: 28
          }
        }, {
          start: {
            line: 259,
            column: 32
          },
          end: {
            line: 259,
            column: 50
          }
        }, {
          start: {
            line: 259,
            column: 54
          },
          end: {
            line: 259,
            column: 76
          }
        }],
        line: 259
      },
      "37": {
        loc: {
          start: {
            line: 278,
            column: 2
          },
          end: {
            line: 278,
            column: 18
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 278,
            column: 17
          },
          end: {
            line: 278,
            column: 18
          }
        }],
        line: 278
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0, 0],
      "35": [0, 0],
      "36": [0, 0, 0],
      "37": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a01abf1a0e4dd93bc29c5c63947ac75b6b00a604"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1u7h91iccc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1u7h91iccc();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * ITK Source Data Access Layer
 * Database operations for ITK source management
 */

import { prisma } from "@/lib/prisma";
/**
 * Create or update ITK source
 */
export
/* istanbul ignore next */
function upsertITKSource(_x) {
  return _upsertITKSource.apply(this, arguments);
}

/**
 * Get active ITK sources
 */
/* istanbul ignore next */
function _upsertITKSource() {
  _upsertITKSource = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(data)
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_1u7h91iccc().f[0]++;
          cov_1u7h91iccc().s[0]++;
          _context.n = 1;
          return prisma.iTKSource.upsert({
            where: {
              username: data.username
            },
            update:
            /* istanbul ignore next */
            _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({
              name: data.name
            },
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[0][0]++, data.twitterId) &&
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[0][1]++, {
              twitterId: data.twitterId
            })),
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[1][0]++, data.tier !== undefined) &&
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[1][1]++, {
              tier: data.tier
            })),
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[2][0]++, data.reliability !== undefined) &&
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[2][1]++, {
              reliability: data.reliability
            })),
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[3][0]++, data.region) &&
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[3][1]++, {
              region: data.region
            })),
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[4][0]++, data.isVerified !== undefined) &&
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[4][1]++, {
              isVerified: data.isVerified
            })),
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[5][0]++, data.profileImageUrl) &&
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[5][1]++, {
              profileImageUrl: data.profileImageUrl
            })),
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[6][0]++, data.description) &&
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[6][1]++, {
              description: data.description
            })),
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[7][0]++, data.followerCount !== undefined) &&
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[7][1]++, {
              followerCount: data.followerCount
            })),
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[8][0]++, data.followingCount !== undefined) &&
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[8][1]++, {
              followingCount: data.followingCount
            })),
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[9][0]++, data.tweetCount !== undefined) &&
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[9][1]++, {
              tweetCount: data.tweetCount
            })),
            create: {
              username: data.username,
              name: data.name,
              twitterId: data.twitterId,
              tier:
              /* istanbul ignore next */
              (cov_1u7h91iccc().b[10][0]++, data.tier) ||
              /* istanbul ignore next */
              (cov_1u7h91iccc().b[10][1]++, 3),
              reliability:
              /* istanbul ignore next */
              (cov_1u7h91iccc().b[11][0]++, data.reliability) ||
              /* istanbul ignore next */
              (cov_1u7h91iccc().b[11][1]++, 0.5),
              region:
              /* istanbul ignore next */
              (cov_1u7h91iccc().b[12][0]++, data.region) ||
              /* istanbul ignore next */
              (cov_1u7h91iccc().b[12][1]++, "GLOBAL"),
              isVerified:
              /* istanbul ignore next */
              (cov_1u7h91iccc().b[13][0]++, data.isVerified) ||
              /* istanbul ignore next */
              (cov_1u7h91iccc().b[13][1]++, false),
              profileImageUrl: data.profileImageUrl,
              description: data.description,
              followerCount: data.followerCount,
              followingCount: data.followingCount,
              tweetCount: data.tweetCount
            }
          });
        case 1:
          return _context.a(2, _context.v);
      }
    }, _callee);
  }));
  return _upsertITKSource.apply(this, arguments);
}
export
/* istanbul ignore next */
function getActiveITKSources(_x2) {
  return _getActiveITKSources.apply(this, arguments);
}

/**
 * Get sources needing update
 */
/* istanbul ignore next */
function _getActiveITKSources() {
  _getActiveITKSources = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2(options)
  /* istanbul ignore next */
  {
    var _ref, tier, region, _ref$minReliability, minReliability;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_1u7h91iccc().f[1]++;
          _ref = (cov_1u7h91iccc().s[1]++,
          /* istanbul ignore next */
          (cov_1u7h91iccc().b[15][0]++, options) ||
          /* istanbul ignore next */
          (cov_1u7h91iccc().b[15][1]++, {})), tier = _ref.tier, region = _ref.region, _ref$minReliability = _ref.minReliability, minReliability = _ref$minReliability === void 0 ? (cov_1u7h91iccc().b[14][0]++, 0) : _ref$minReliability;
          cov_1u7h91iccc().s[2]++;
          _context2.n = 1;
          return prisma.iTKSource.findMany({
            where:
            /* istanbul ignore next */
            _objectSpread(_objectSpread(_objectSpread({
              isActive: true
            },
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[16][0]++, tier) &&
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[16][1]++, {
              tier: tier
            })),
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[17][0]++, region) &&
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[17][1]++, {
              region: region
            })), {}, {
              reliability: {
                gte: minReliability
              }
            }),
            orderBy: [{
              tier: "asc"
            }, {
              reliability: "desc"
            }]
          });
        case 1:
          return _context2.a(2, _context2.v);
      }
    }, _callee2);
  }));
  return _getActiveITKSources.apply(this, arguments);
}
export
/* istanbul ignore next */
function getSourcesNeedingUpdate() {
  return _getSourcesNeedingUpdate.apply(this, arguments);
}

/**
 * Update source fetch status
 */
/* istanbul ignore next */
function _getSourcesNeedingUpdate() {
  _getSourcesNeedingUpdate = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee3()
  /* istanbul ignore next */
  {
    var intervalSeconds,
      cutoffTime,
      _args3 = arguments;
    return _regenerator().w(function (_context3) {
      while (1) switch (_context3.n) {
        case 0:
          intervalSeconds = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : (cov_1u7h91iccc().b[18][0]++, 900);
          cov_1u7h91iccc().f[2]++;
          cutoffTime = (cov_1u7h91iccc().s[3]++, new Date(Date.now() - intervalSeconds * 1000));
          cov_1u7h91iccc().s[4]++;
          _context3.n = 1;
          return prisma.iTKSource.findMany({
            where: {
              isActive: true,
              OR: [{
                lastFetchedAt: null
              }, {
                lastFetchedAt: {
                  lt: cutoffTime
                }
              }]
            },
            orderBy: [{
              lastFetchedAt: "asc"
            },
            // Null values come first
            {
              tier: "asc"
            }]
          });
        case 1:
          return _context3.a(2, _context3.v);
      }
    }, _callee3);
  }));
  return _getSourcesNeedingUpdate.apply(this, arguments);
}
export
/* istanbul ignore next */
function updateSourceFetchStatus(_x3, _x4) {
  return _updateSourceFetchStatus.apply(this, arguments);
}

/**
 * Get source performance stats
 */
/* istanbul ignore next */
function _updateSourceFetchStatus() {
  _updateSourceFetchStatus = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee4(sourceId, data)
  /* istanbul ignore next */
  {
    var source;
    return _regenerator().w(function (_context4) {
      while (1) switch (_context4.n) {
        case 0:
          cov_1u7h91iccc().f[3]++;
          cov_1u7h91iccc().s[5]++;
          _context4.n = 1;
          return prisma.iTKSource.update({
            where: {
              id: sourceId
            },
            data:
            /* istanbul ignore next */
            _objectSpread(_objectSpread(_objectSpread({
              lastFetchedAt: data.lastFetchedAt
            },
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[19][0]++, data.lastTweetId) &&
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[19][1]++, {
              lastTweetId: data.lastTweetId
            })),
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[20][0]++, data.tweetsProcessed !== undefined) &&
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[20][1]++, {
              totalTweets: {
                increment: data.tweetsProcessed
              }
            })),
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[21][0]++, data.relevantTweets !== undefined) &&
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[21][1]++, {
              relevantTweets: {
                increment: data.relevantTweets
              }
            }))
          });
        case 1:
          cov_1u7h91iccc().s[6]++;
          if (!(
          /* istanbul ignore next */
          (cov_1u7h91iccc().b[23][0]++, data.tweetsProcessed) &&
          /* istanbul ignore next */
          (cov_1u7h91iccc().b[23][1]++, data.relevantTweets !== undefined))) {
            _context4.n = 6;
            break;
          }
          cov_1u7h91iccc().b[22][0]++;
          cov_1u7h91iccc().s[7]++;
          _context4.n = 2;
          return prisma.iTKSource.findUnique({
            where: {
              id: sourceId
            },
            select: {
              totalTweets: true,
              relevantTweets: true
            }
          });
        case 2:
          source = _context4.v;
          cov_1u7h91iccc().s[8]++;
          if (!(
          /* istanbul ignore next */
          (cov_1u7h91iccc().b[25][0]++, source) &&
          /* istanbul ignore next */
          (cov_1u7h91iccc().b[25][1]++, source.totalTweets > 0))) {
            _context4.n = 4;
            break;
          }
          cov_1u7h91iccc().b[24][0]++;
          cov_1u7h91iccc().s[9]++;
          _context4.n = 3;
          return prisma.iTKSource.update({
            where: {
              id: sourceId
            },
            data: {
              avgRelevance: source.relevantTweets / source.totalTweets
            }
          });
        case 3:
          _context4.n = 5;
          break;
        case 4:
          cov_1u7h91iccc().b[24][1]++;
        case 5:
          _context4.n = 7;
          break;
        case 6:
          cov_1u7h91iccc().b[22][1]++;
        case 7:
          return _context4.a(2);
      }
    }, _callee4);
  }));
  return _updateSourceFetchStatus.apply(this, arguments);
}
export
/* istanbul ignore next */
function getSourcePerformanceStats(_x5, _x6) {
  return _getSourcePerformanceStats.apply(this, arguments);
}

/**
 * Update source tier based on performance
 */
/* istanbul ignore next */
function _getSourcePerformanceStats() {
  _getSourcePerformanceStats = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee5(sourceId, since)
  /* istanbul ignore next */
  {
    var source, recentActivity, recentItems;
    return _regenerator().w(function (_context5) {
      while (1) switch (_context5.n) {
        case 0:
          cov_1u7h91iccc().f[4]++;
          cov_1u7h91iccc().s[10]++;
          _context5.n = 1;
          return prisma.iTKSource.findUnique({
            where: {
              id: sourceId
            },
            select: {
              totalTweets: true,
              relevantTweets: true,
              avgRelevance: true
            }
          });
        case 1:
          source = _context5.v;
          cov_1u7h91iccc().s[11]++;
          if (source) {
            _context5.n = 2;
            break;
          }
          cov_1u7h91iccc().b[26][0]++;
          cov_1u7h91iccc().s[12]++;
          throw new Error("Source not found");
        case 2:
          cov_1u7h91iccc().b[26][1]++;
        case 3:
          // Get recent activity if date provided
          recentActivity = (cov_1u7h91iccc().s[13]++, {
            tweets: 0,
            engagement: 0
          });
          cov_1u7h91iccc().s[14]++;
          if (!since) {
            _context5.n = 5;
            break;
          }
          cov_1u7h91iccc().b[27][0]++;
          cov_1u7h91iccc().s[15]++;
          _context5.n = 4;
          return prisma.feedItem.aggregate({
            where: {
              sourceId: sourceId,
              publishedAt: {
                gte: since
              }
            },
            _count: true,
            _sum: {
              originalLikes: true,
              originalShares: true,
              originalReplies: true
            }
          });
        case 4:
          recentItems = _context5.v;
          cov_1u7h91iccc().s[16]++;
          recentActivity = {
            tweets: recentItems._count,
            engagement: (
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[28][0]++, recentItems._sum.originalLikes) ||
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[28][1]++, 0)) + (
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[29][0]++, recentItems._sum.originalShares) ||
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[29][1]++, 0)) + (
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[30][0]++, recentItems._sum.originalReplies) ||
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[30][1]++, 0))
          };
          _context5.n = 6;
          break;
        case 5:
          cov_1u7h91iccc().b[27][1]++;
        case 6:
          cov_1u7h91iccc().s[17]++;
          return _context5.a(2, {
            totalTweets: source.totalTweets,
            relevantTweets: source.relevantTweets,
            avgRelevance: source.avgRelevance,
            recentActivity: recentActivity
          });
      }
    }, _callee5);
  }));
  return _getSourcePerformanceStats.apply(this, arguments);
}
export
/* istanbul ignore next */
function updateSourceTiers() {
  return _updateSourceTiers.apply(this, arguments);
}

/**
 * Deactivate inactive sources
 */
/* istanbul ignore next */
function _updateSourceTiers() {
  _updateSourceTiers = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee6()
  /* istanbul ignore next */
  {
    var stats, sources, _iterator, _step, source, avgRelevance, highPriorityRate, _t;
    return _regenerator().w(function (_context6) {
      while (1) switch (_context6.n) {
        case 0:
          cov_1u7h91iccc().f[5]++;
          stats = (cov_1u7h91iccc().s[18]++, {
            promoted: 0,
            demoted: 0
          }); // Get all active sources with recent performance
          cov_1u7h91iccc().s[19]++;
          _context6.n = 1;
          return prisma.iTKSource.findMany({
            where: {
              isActive: true
            },
            include: {
              feedItems: {
                where: {
                  publishedAt: {
                    gte: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)
                  } // Last 30 days
                },
                select: {
                  relevanceScore: true,
                  priority: true
                }
              }
            }
          });
        case 1:
          sources = _context6.v;
          cov_1u7h91iccc().s[20]++;
          _iterator = _createForOfIteratorHelper(sources);
          _context6.p = 2;
          _iterator.s();
        case 3:
          if ((_step = _iterator.n()).done) {
            _context6.n = 11;
            break;
          }
          source = _step.value;
          cov_1u7h91iccc().s[21]++;
          if (!(source.feedItems.length < 10)) {
            _context6.n = 4;
            break;
          }
          cov_1u7h91iccc().b[31][0]++;
          cov_1u7h91iccc().s[22]++;
          return _context6.a(3, 10);
        case 4:
          cov_1u7h91iccc().b[31][1]++;
        case 5:
          // Need minimum activity
          // Calculate recent performance
          avgRelevance = (cov_1u7h91iccc().s[23]++, source.feedItems.reduce(function (sum, item) {
            /* istanbul ignore next */
            cov_1u7h91iccc().f[6]++;
            cov_1u7h91iccc().s[24]++;
            return sum + item.relevanceScore;
          }, 0) / source.feedItems.length);
          highPriorityRate = (cov_1u7h91iccc().s[25]++, source.feedItems.filter(function (item) {
            /* istanbul ignore next */
            cov_1u7h91iccc().f[7]++;
            cov_1u7h91iccc().s[26]++;
            return /* istanbul ignore next */(cov_1u7h91iccc().b[32][0]++, item.priority === "HIGH") ||
            /* istanbul ignore next */
            (cov_1u7h91iccc().b[32][1]++, item.priority === "BREAKING");
          }).length / source.feedItems.length); // Promotion criteria
          cov_1u7h91iccc().s[27]++;
          if (!(
          /* istanbul ignore next */
          (cov_1u7h91iccc().b[34][0]++, source.tier > 1) &&
          /* istanbul ignore next */
          (cov_1u7h91iccc().b[34][1]++, avgRelevance > 0.8) &&
          /* istanbul ignore next */
          (cov_1u7h91iccc().b[34][2]++, highPriorityRate > 0.3))) {
            _context6.n = 7;
            break;
          }
          cov_1u7h91iccc().b[33][0]++;
          cov_1u7h91iccc().s[28]++;
          _context6.n = 6;
          return prisma.iTKSource.update({
            where: {
              id: source.id
            },
            data: {
              tier: source.tier - 1,
              reliability: Math.min(source.reliability + 0.05, 0.95)
            }
          });
        case 6:
          cov_1u7h91iccc().s[29]++;
          stats.promoted++;
          _context6.n = 10;
          break;
        case 7:
          cov_1u7h91iccc().b[33][1]++;
          cov_1u7h91iccc().s[30]++;
          if (!(
          /* istanbul ignore next */
          (cov_1u7h91iccc().b[36][0]++, source.tier < 3) &&
          /* istanbul ignore next */
          (cov_1u7h91iccc().b[36][1]++, avgRelevance < 0.5) &&
          /* istanbul ignore next */
          (cov_1u7h91iccc().b[36][2]++, highPriorityRate < 0.1))) {
            _context6.n = 9;
            break;
          }
          cov_1u7h91iccc().b[35][0]++;
          cov_1u7h91iccc().s[31]++;
          _context6.n = 8;
          return prisma.iTKSource.update({
            where: {
              id: source.id
            },
            data: {
              tier: source.tier + 1,
              reliability: Math.max(source.reliability - 0.05, 0.3)
            }
          });
        case 8:
          cov_1u7h91iccc().s[32]++;
          stats.demoted++;
          _context6.n = 10;
          break;
        case 9:
          cov_1u7h91iccc().b[35][1]++;
        case 10:
          _context6.n = 3;
          break;
        case 11:
          _context6.n = 13;
          break;
        case 12:
          _context6.p = 12;
          _t = _context6.v;
          _iterator.e(_t);
        case 13:
          _context6.p = 13;
          _iterator.f();
          return _context6.f(13);
        case 14:
          cov_1u7h91iccc().s[33]++;
          return _context6.a(2, stats);
      }
    }, _callee6, null, [[2, 12, 13, 14]]);
  }));
  return _updateSourceTiers.apply(this, arguments);
}
export
/* istanbul ignore next */
function deactivateInactiveSources() {
  return _deactivateInactiveSources.apply(this, arguments);
}

/**
 * Get source by username
 */
/* istanbul ignore next */
function _deactivateInactiveSources() {
  _deactivateInactiveSources = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee7()
  /* istanbul ignore next */
  {
    var inactiveDays,
      cutoffDate,
      result,
      _args7 = arguments;
    return _regenerator().w(function (_context7) {
      while (1) switch (_context7.n) {
        case 0:
          inactiveDays = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : (cov_1u7h91iccc().b[37][0]++, 7);
          cov_1u7h91iccc().f[8]++;
          cutoffDate = (cov_1u7h91iccc().s[34]++, new Date(Date.now() - inactiveDays * 24 * 60 * 60 * 1000));
          cov_1u7h91iccc().s[35]++;
          _context7.n = 1;
          return prisma.iTKSource.updateMany({
            where: {
              isActive: true,
              OR: [{
                lastFetchedAt: {
                  lt: cutoffDate
                }
              }, {
                lastFetchedAt: null
              }]
            },
            data: {
              isActive: false
            }
          });
        case 1:
          result = _context7.v;
          cov_1u7h91iccc().s[36]++;
          return _context7.a(2, result.count);
      }
    }, _callee7);
  }));
  return _deactivateInactiveSources.apply(this, arguments);
}
export
/* istanbul ignore next */
function getSourceByUsername(_x7) {
  return _getSourceByUsername.apply(this, arguments);
}

/**
 * Get sources by region
 */
/* istanbul ignore next */
function _getSourceByUsername() {
  _getSourceByUsername = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee8(username)
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context8) {
      while (1) switch (_context8.n) {
        case 0:
          cov_1u7h91iccc().f[9]++;
          cov_1u7h91iccc().s[37]++;
          _context8.n = 1;
          return prisma.iTKSource.findUnique({
            where: {
              username: username
            }
          });
        case 1:
          return _context8.a(2, _context8.v);
      }
    }, _callee8);
  }));
  return _getSourceByUsername.apply(this, arguments);
}
export
/* istanbul ignore next */
function getSourcesByRegion(_x8) {
  return _getSourcesByRegion.apply(this, arguments);
}
/* istanbul ignore next */
function _getSourcesByRegion() {
  _getSourcesByRegion = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee9(region)
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context9) {
      while (1) switch (_context9.n) {
        case 0:
          cov_1u7h91iccc().f[10]++;
          cov_1u7h91iccc().s[38]++;
          _context9.n = 1;
          return prisma.iTKSource.findMany({
            where: {
              region: region,
              isActive: true
            },
            orderBy: [{
              tier: "asc"
            }, {
              reliability: "desc"
            }]
          });
        case 1:
          return _context9.a(2, _context9.v);
      }
    }, _callee9);
  }));
  return _getSourcesByRegion.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,