50392ca0b46abbebb0b8a8dd3d103635
'use client';

/* istanbul ignore next */
function cov_uze86tfa8() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/components/layout/BreakingNewsTicker.tsx";
  var hash = "ed7180d5e5d6204939b1830360b50defb9a7a74e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/components/layout/BreakingNewsTicker.tsx",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 45
        },
        end: {
          line: 27,
          column: 1
        }
      },
      "1": {
        start: {
          line: 30,
          column: 36
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "2": {
        start: {
          line: 31,
          column: 42
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "3": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "4": {
        start: {
          line: 34,
          column: 21
        },
        end: {
          line: 36,
          column: 12
        }
      },
      "5": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 35,
          column: 70
        }
      },
      "6": {
        start: {
          line: 35,
          column: 32
        },
        end: {
          line: 35,
          column: 68
        }
      },
      "7": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 41
        }
      },
      "8": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 38,
          column: 40
        }
      },
      "9": {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 41,
          column: 63
        }
      },
      "10": {
        start: {
          line: 41,
          column: 51
        },
        end: {
          line: 41,
          column: 63
        }
      },
      "11": {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 97,
          column: 4
        }
      },
      "12": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 71,
          column: 22
        }
      },
      "13": {
        start: {
          line: 79,
          column: 25
        },
        end: {
          line: 79,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "BreakingNewsTicker",
        decl: {
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 29,
            column: 34
          }
        },
        loc: {
          start: {
            line: 29,
            column: 37
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        },
        loc: {
          start: {
            line: 33,
            column: 18
          },
          end: {
            line: 39,
            column: 3
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 33
          },
          end: {
            line: 34,
            column: 34
          }
        },
        loc: {
          start: {
            line: 34,
            column: 39
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 35,
            column: 23
          }
        },
        loc: {
          start: {
            line: 35,
            column: 32
          },
          end: {
            line: 35,
            column: 68
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 11
          },
          end: {
            line: 38,
            column: 12
          }
        },
        loc: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 40
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 36
          },
          end: {
            line: 59,
            column: 37
          }
        },
        loc: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 71,
            column: 22
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 79,
            column: 19
          },
          end: {
            line: 79,
            column: 20
          }
        },
        loc: {
          start: {
            line: 79,
            column: 25
          },
          end: {
            line: 79,
            column: 44
          }
        },
        line: 79
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 41,
            column: 2
          },
          end: {
            line: 41,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 2
          },
          end: {
            line: 41,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 6
          },
          end: {
            line: 41,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 6
          },
          end: {
            line: 41,
            column: 16
          }
        }, {
          start: {
            line: 41,
            column: 20
          },
          end: {
            line: 41,
            column: 49
          }
        }],
        line: 41
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ed7180d5e5d6204939b1830360b50defb9a7a74e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_uze86tfa8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_uze86tfa8();
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
import { useEffect, useState } from 'react';
/* istanbul ignore next */
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
var mockBreakingNews =
/* istanbul ignore next */
(cov_uze86tfa8().s[0]++, [{
  id: '1',
  text: 'ðŸš¨ BREAKING: Ten Hag reportedly spotted at Carrington despite sacking rumors',
  timestamp: new Date()
}, {
  id: '2',
  text: 'ðŸ”´ Liverpool close in on Â£60m midfielder from Real Madrid',
  timestamp: new Date(Date.now() - 3600000)
}, {
  id: '3',
  text: 'âš¡ Chelsea preparing fourth bid for striker after Â£150m spending spree',
  timestamp: new Date(Date.now() - 7200000)
}]);
export function BreakingNewsTicker() {
  /* istanbul ignore next */
  cov_uze86tfa8().f[0]++;
  var
    /* istanbul ignore next */
    _ref = (cov_uze86tfa8().s[1]++, useState(true)),
    /* istanbul ignore next */
    _ref2 = _slicedToArray(_ref, 2),
    /* istanbul ignore next */
    isVisible = _ref2[0],
    /* istanbul ignore next */
    setIsVisible = _ref2[1];
  var
    /* istanbul ignore next */
    _ref3 = (cov_uze86tfa8().s[2]++, useState(0)),
    /* istanbul ignore next */
    _ref4 = _slicedToArray(_ref3, 2),
    /* istanbul ignore next */
    currentIndex = _ref4[0],
    /* istanbul ignore next */
    setCurrentIndex = _ref4[1];
  /* istanbul ignore next */
  cov_uze86tfa8().s[3]++;
  useEffect(function () {
    /* istanbul ignore next */
    cov_uze86tfa8().f[1]++;
    var interval =
    /* istanbul ignore next */
    (cov_uze86tfa8().s[4]++, setInterval(function () {
      /* istanbul ignore next */
      cov_uze86tfa8().f[2]++;
      cov_uze86tfa8().s[5]++;
      setCurrentIndex(function (prev) {
        /* istanbul ignore next */
        cov_uze86tfa8().f[3]++;
        cov_uze86tfa8().s[6]++;
        return (prev + 1) % mockBreakingNews.length;
      });
    }, 5000));
    /* istanbul ignore next */
    cov_uze86tfa8().s[7]++;
    return function () {
      /* istanbul ignore next */
      cov_uze86tfa8().f[4]++;
      cov_uze86tfa8().s[8]++;
      return clearInterval(interval);
    };
  }, []);
  /* istanbul ignore next */
  cov_uze86tfa8().s[9]++;
  if (
  /* istanbul ignore next */
  (cov_uze86tfa8().b[1][0]++, !isVisible) ||
  /* istanbul ignore next */
  (cov_uze86tfa8().b[1][1]++, mockBreakingNews.length === 0)) {
    /* istanbul ignore next */
    cov_uze86tfa8().b[0][0]++;
    cov_uze86tfa8().s[10]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_uze86tfa8().b[0][1]++;
  }
  cov_uze86tfa8().s[11]++;
  return /*#__PURE__*/ /* istanbul ignore next */_jsx(
  /* istanbul ignore next */
  "div",
  /* istanbul ignore next */
  {
    className: "bg-red-600 text-white relative overflow-hidden",
    children: /*#__PURE__*/
    /* istanbul ignore next */
    _jsxs(
    /* istanbul ignore next */
    "div",
    /* istanbul ignore next */
    {
      className: "flex items-center",
      children: [/*#__PURE__*/
      /* istanbul ignore next */
      _jsxs(
      /* istanbul ignore next */
      "div",
      /* istanbul ignore next */
      {
        className: "bg-red-700 px-4 py-2 flex items-center gap-2 flex-shrink-0 z-10",
        children: [/*#__PURE__*/
        /* istanbul ignore next */
        _jsx(
        /* istanbul ignore next */
        "span",
        /* istanbul ignore next */
        {
          className: "animate-pulse",
          children: "\uD83D\uDEA8"
        }), /*#__PURE__*/
        /* istanbul ignore next */
        _jsx(
        /* istanbul ignore next */
        "span",
        /* istanbul ignore next */
        {
          className: "font-black text-sm",
          children: "BREAKING NEWS"
        })]
      }), /*#__PURE__*/
      /* istanbul ignore next */
      _jsx(
      /* istanbul ignore next */
      "div",
      /* istanbul ignore next */
      {
        className: "flex-1 relative h-10 overflow-hidden",
        children: /*#__PURE__*/
        /* istanbul ignore next */
        _jsx(
        /* istanbul ignore next */
        "div",
        /* istanbul ignore next */
        {
          className: "absolute inset-0 flex items-center",
          children: /*#__PURE__*/
          /* istanbul ignore next */
          _jsx(
          /* istanbul ignore next */
          "div",
          /* istanbul ignore next */
          {
            className: "flex transition-transform duration-500 ease-in-out",
            style: {
              transform:
              /* istanbul ignore next */
              "translateX(-".concat(currentIndex * 100, "%)")
            },
            children: mockBreakingNews.map(function (item) {
              /* istanbul ignore next */
              cov_uze86tfa8().f[5]++;
              cov_uze86tfa8().s[12]++;
              return /*#__PURE__*/ /* istanbul ignore next */_jsxs(
              /* istanbul ignore next */
              "div",
              /* istanbul ignore next */
              {
                className: "min-w-full px-4 flex items-center justify-between",
                children: [/*#__PURE__*/
                /* istanbul ignore next */
                _jsx(
                /* istanbul ignore next */
                "p",
                /* istanbul ignore next */
                {
                  className: "text-sm font-medium pr-4",
                  children: item.text
                }), /*#__PURE__*/
                /* istanbul ignore next */
                _jsx(
                /* istanbul ignore next */
                "time",
                /* istanbul ignore next */
                {
                  className: "text-xs opacity-75 data-mono flex-shrink-0",
                  children: item.timestamp.toLocaleTimeString('en-GB', {
                    hour: '2-digit',
                    minute: '2-digit'
                  })
                })]
              }, item.id);
            })
          })
        })
      }), /*#__PURE__*/
      /* istanbul ignore next */
      _jsx(
      /* istanbul ignore next */
      "button",
      /* istanbul ignore next */
      {
        onClick: function onClick() {
          /* istanbul ignore next */
          cov_uze86tfa8().f[6]++;
          cov_uze86tfa8().s[13]++;
          return setIsVisible(false);
        },
        className: "px-4 py-2 hover:bg-red-700 transition-colors z-10",
        /* istanbul ignore next */
        "aria-label": "Close breaking news",
        children: /*#__PURE__*/
        /* istanbul ignore next */
        _jsx(
        /* istanbul ignore next */
        "svg",
        /* istanbul ignore next */
        {
          className: "w-4 h-4",
          fill: "none",
          strokeLinecap: "round",
          strokeLinejoin: "round",
          strokeWidth: "2",
          viewBox: "0 0 24 24",
          stroke: "currentColor",
          children: /*#__PURE__*/
          /* istanbul ignore next */
          _jsx(
          /* istanbul ignore next */
          "path",
          /* istanbul ignore next */
          {
            d: "M6 18L18 6M6 6l12 12"
          })
        })
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,