2e67e42f5ab1a098bbfc4f6d965f6d4d
/* istanbul ignore next */ function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["className", "variant", "size", "loading", "children", "disabled"];
function cov_61ehi64v6() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/components/ui/Button.tsx";
  var hash = "356d3b4a30075846d7666e30cdec55bc6fa8a8d8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/components/ui/Button.tsx",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 105,
          column: 1
        }
      },
      "1": {
        start: {
          line: 29,
          column: 23
        },
        end: {
          line: 29,
          column: 42
        }
      },
      "2": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 318
        }
      },
      "3": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "4": {
        start: {
          line: 46,
          column: 24
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "5": {
        start: {
          line: 54,
          column: 30
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "6": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 103,
          column: 6
        }
      },
      "7": {
        start: {
          line: 107,
          column: 0
        },
        end: {
          line: 107,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 3
          }
        },
        loc: {
          start: {
            line: 28,
            column: 7
          },
          end: {
            line: 104,
            column: 3
          }
        },
        line: 28
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 6
          },
          end: {
            line: 20,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 20,
            column: 16
          },
          end: {
            line: 20,
            column: 25
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 6
          },
          end: {
            line: 21,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 21,
            column: 17
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 22,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 22,
            column: 16
          },
          end: {
            line: 22,
            column: 21
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 23
          },
          end: {
            line: 29,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 23
          },
          end: {
            line: 29,
            column: 31
          }
        }, {
          start: {
            line: 29,
            column: 35
          },
          end: {
            line: 29,
            column: 42
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 74,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 22
          }
        }, {
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 74,
            column: 29
          }
        }],
        line: 68
      },
      "5": {
        loc: {
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 74,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 18
          },
          end: {
            line: 71,
            column: 27
          }
        }, {
          start: {
            line: 72,
            column: 18
          },
          end: {
            line: 74,
            column: 29
          }
        }],
        line: 70
      },
      "6": {
        loc: {
          start: {
            line: 72,
            column: 18
          },
          end: {
            line: 74,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 20
          },
          end: {
            line: 73,
            column: 29
          }
        }, {
          start: {
            line: 74,
            column: 20
          },
          end: {
            line: 74,
            column: 29
          }
        }],
        line: 72
      },
      "7": {
        loc: {
          start: {
            line: 78,
            column: 9
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 9
          },
          end: {
            line: 78,
            column: 16
          }
        }, {
          start: {
            line: 79,
            column: 10
          },
          end: {
            line: 99,
            column: 16
          }
        }],
        line: 78
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "356d3b4a30075846d7666e30cdec55bc6fa8a8d8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_61ehi64v6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_61ehi64v6();
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }
import { forwardRef } from 'react';
import { clsx } from 'clsx';
/* istanbul ignore next */
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
var Button =
/* istanbul ignore next */
(cov_61ehi64v6().s[0]++, /*#__PURE__*/forwardRef(function (
/* istanbul ignore next */
_ref, ref) {
  /* istanbul ignore next */
  var className = _ref.className,
    _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? (cov_61ehi64v6().b[0][0]++, 'primary') : _ref$variant,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? (cov_61ehi64v6().b[1][0]++, 'md') : _ref$size,
    _ref$loading = _ref.loading,
    loading = _ref$loading === void 0 ? (cov_61ehi64v6().b[2][0]++, false) : _ref$loading,
    children = _ref.children,
    disabled = _ref.disabled,
    props = _objectWithoutProperties(_ref, _excluded);
  /* istanbul ignore next */
  cov_61ehi64v6().f[0]++;
  var isDisabled =
  /* istanbul ignore next */
  (cov_61ehi64v6().s[1]++,
  /* istanbul ignore next */
  (cov_61ehi64v6().b[3][0]++, disabled) ||
  /* istanbul ignore next */
  (cov_61ehi64v6().b[3][1]++, loading));
  var baseClasses =
  /* istanbul ignore next */
  (cov_61ehi64v6().s[2]++, 'inline-flex items-center justify-center rounded-full font-mono font-semibold tracking-wide transition-all duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-orange-500 focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:pointer-events-none disabled:opacity-50');
  var variantClasses =
  /* istanbul ignore next */
  (cov_61ehi64v6().s[3]++, {
    primary: 'bg-orange-600 text-white hover:bg-orange-700 transform hover:scale-105 active:scale-95',
    secondary: 'bg-secondary border border-border text-foreground hover:bg-muted hover:border-orange-500',
    ghost: 'text-muted-foreground hover:text-foreground hover:bg-muted',
    outline: 'border border-orange-500 text-orange-500 hover:bg-orange-500 hover:text-black',
    destructive: 'bg-red-600 text-white hover:bg-red-700',
    link: 'text-orange-500 underline-offset-4 hover:underline'
  });
  var sizeClasses =
  /* istanbul ignore next */
  (cov_61ehi64v6().s[4]++, {
    sm: 'h-9 px-4 text-sm',
    md: 'h-11 px-6 text-base',
    lg: 'h-13 px-8 text-lg',
    xl: 'h-16 px-10 text-xl',
    icon: 'h-10 w-10'
  });
  var combinedClassName =
  /* istanbul ignore next */
  (cov_61ehi64v6().s[5]++, clsx(baseClasses, variantClasses[variant], sizeClasses[size], className));
  /* istanbul ignore next */
  cov_61ehi64v6().s[6]++;
  return /*#__PURE__*/ /* istanbul ignore next */_jsxs(
  /* istanbul ignore next */
  "button",
  /* istanbul ignore next */
  _objectSpread(_objectSpread({
    className: combinedClassName,
    ref: ref,
    disabled: isDisabled,
    style: {
      minHeight: size === 'xl' ?
      /* istanbul ignore next */
      (cov_61ehi64v6().b[4][0]++, '4rem') :
      /* istanbul ignore next */
      (cov_61ehi64v6().b[4][1]++, size === 'lg' ?
      /* istanbul ignore next */
      (cov_61ehi64v6().b[5][0]++, '3.25rem') :
      /* istanbul ignore next */
      (cov_61ehi64v6().b[5][1]++, size === 'md' ?
      /* istanbul ignore next */
      (cov_61ehi64v6().b[6][0]++, '2.75rem') :
      /* istanbul ignore next */
      (cov_61ehi64v6().b[6][1]++, '2.25rem')))
    }
  }, props), {}, {
    children: [
    /* istanbul ignore next */
    (cov_61ehi64v6().b[7][0]++, loading) &&
    /* istanbul ignore next */
    (cov_61ehi64v6().b[7][1]++, /*#__PURE__*/
    /* istanbul ignore next */
    _jsxs(
    /* istanbul ignore next */
    "svg",
    /* istanbul ignore next */
    {
      className: "mr-2 h-4 w-4 animate-spin",
      fill: "none",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg",
      /* istanbul ignore next */
      "aria-hidden": "true",
      children: [/*#__PURE__*/
      /* istanbul ignore next */
      _jsx(
      /* istanbul ignore next */
      "circle",
      /* istanbul ignore next */
      {
        className: "opacity-25",
        cx: "12",
        cy: "12",
        r: "10",
        stroke: "currentColor",
        strokeWidth: "4"
      }), /*#__PURE__*/
      /* istanbul ignore next */
      _jsx(
      /* istanbul ignore next */
      "path",
      /* istanbul ignore next */
      {
        className: "opacity-75",
        d: "m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z",
        fill: "currentColor"
      })]
    })), children]
  }));
}));
/* istanbul ignore next */
cov_61ehi64v6().s[7]++;
Button.displayName = 'Button';
export { Button };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,