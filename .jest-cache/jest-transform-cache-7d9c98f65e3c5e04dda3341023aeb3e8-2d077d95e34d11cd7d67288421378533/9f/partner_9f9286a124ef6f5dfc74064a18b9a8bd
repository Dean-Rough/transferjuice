92219b31cd40340c755b04b5f3f6db62
/* istanbul ignore next */
function cov_1p82ucm69j() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/briefings/partner.ts";
  var hash = "580b886965db0618791b44bee6966c5005dfc790";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/briefings/partner.ts",
    statementMap: {
      "0": {
        start: {
          line: 19,
          column: 25
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "1": {
        start: {
          line: 24,
          column: 2
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "2": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 75
        }
      },
      "3": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 20
        }
      },
      "4": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 29,
          column: 69
        }
      },
      "5": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 59,
          column: 3
        }
      },
      "6": {
        start: {
          line: 33,
          column: 27
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "7": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "8": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 39,
          column: 58
        }
      },
      "9": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 40,
          column: 22
        }
      },
      "10": {
        start: {
          line: 44,
          column: 27
        },
        end: {
          line: 44,
          column: 69
        }
      },
      "11": {
        start: {
          line: 47,
          column: 28
        },
        end: {
          line: 47,
          column: 74
        }
      },
      "12": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 58
        }
      },
      "13": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 61
        }
      },
      "14": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 27
        }
      },
      "15": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 61
        }
      },
      "16": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 20
        }
      },
      "17": {
        start: {
          line: 69,
          column: 21
        },
        end: {
          line: 69,
          column: 57
        }
      },
      "18": {
        start: {
          line: 71,
          column: 2
        },
        end: {
          line: 93,
          column: 4
        }
      },
      "19": {
        start: {
          line: 100,
          column: 17
        },
        end: {
          line: 106,
          column: 3
        }
      },
      "20": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 65
        }
      },
      "21": {
        start: {
          line: 111,
          column: 27
        },
        end: {
          line: 119,
          column: 3
        }
      },
      "22": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 124,
          column: 59
        }
      },
      "23": {
        start: {
          line: 126,
          column: 2
        },
        end: {
          line: 126,
          column: 61
        }
      },
      "24": {
        start: {
          line: 139,
          column: 21
        },
        end: {
          line: 139,
          column: 66
        }
      },
      "25": {
        start: {
          line: 139,
          column: 47
        },
        end: {
          line: 139,
          column: 65
        }
      },
      "26": {
        start: {
          line: 140,
          column: 22
        },
        end: {
          line: 140,
          column: 68
        }
      },
      "27": {
        start: {
          line: 143,
          column: 2
        },
        end: {
          line: 152,
          column: 3
        }
      },
      "28": {
        start: {
          line: 144,
          column: 23
        },
        end: {
          line: 144,
          column: 68
        }
      },
      "29": {
        start: {
          line: 144,
          column: 49
        },
        end: {
          line: 144,
          column: 67
        }
      },
      "30": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "31": {
        start: {
          line: 146,
          column: 6
        },
        end: {
          line: 150,
          column: 8
        }
      },
      "32": {
        start: {
          line: 155,
          column: 2
        },
        end: {
          line: 159,
          column: 4
        }
      },
      "33": {
        start: {
          line: 169,
          column: 2
        },
        end: {
          line: 185,
          column: 3
        }
      },
      "34": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 182,
          column: 7
        }
      },
      "35": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 184,
          column: 66
        }
      },
      "36": {
        start: {
          line: 194,
          column: 19
        },
        end: {
          line: 203,
          column: 4
        }
      },
      "37": {
        start: {
          line: 205,
          column: 2
        },
        end: {
          line: 207,
          column: 3
        }
      },
      "38": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 206,
          column: 42
        }
      },
      "39": {
        start: {
          line: 210,
          column: 28
        },
        end: {
          line: 212,
          column: 3
        }
      },
      "40": {
        start: {
          line: 211,
          column: 17
        },
        end: {
          line: 211,
          column: 43
        }
      },
      "41": {
        start: {
          line: 215,
          column: 25
        },
        end: {
          line: 215,
          column: 52
        }
      },
      "42": {
        start: {
          line: 217,
          column: 2
        },
        end: {
          line: 222,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "mixPartnerContent",
        decl: {
          start: {
            line: 13,
            column: 22
          },
          end: {
            line: 13,
            column: 39
          }
        },
        loc: {
          start: {
            line: 17,
            column: 30
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "createPartnerSection",
        decl: {
          start: {
            line: 65,
            column: 15
          },
          end: {
            line: 65,
            column: 35
          }
        },
        loc: {
          start: {
            line: 67,
            column: 28
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 67
      },
      "2": {
        name: "generatePartnerIntro",
        decl: {
          start: {
            line: 99,
            column: 9
          },
          end: {
            line: 99,
            column: 29
          }
        },
        loc: {
          start: {
            line: 99,
            column: 59
          },
          end: {
            line: 127,
            column: 1
          }
        },
        line: 99
      },
      "3": {
        name: "insertPartnerSection",
        decl: {
          start: {
            line: 132,
            column: 9
          },
          end: {
            line: 132,
            column: 29
          }
        },
        loc: {
          start: {
            line: 135,
            column: 21
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 135
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 139,
            column: 40
          },
          end: {
            line: 139,
            column: 41
          }
        },
        loc: {
          start: {
            line: 139,
            column: 47
          },
          end: {
            line: 139,
            column: 65
          }
        },
        line: 139
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 144,
            column: 42
          },
          end: {
            line: 144,
            column: 43
          }
        },
        loc: {
          start: {
            line: 144,
            column: 49
          },
          end: {
            line: 144,
            column: 67
          }
        },
        line: 144
      },
      "6": {
        name: "savePartnerContentUsage",
        decl: {
          start: {
            line: 165,
            column: 15
          },
          end: {
            line: 165,
            column: 38
          }
        },
        loc: {
          start: {
            line: 168,
            column: 17
          },
          end: {
            line: 186,
            column: 1
          }
        },
        line: 168
      },
      "7": {
        name: "getPartnerContentAnalytics",
        decl: {
          start: {
            line: 191,
            column: 22
          },
          end: {
            line: 191,
            column: 48
          }
        },
        loc: {
          start: {
            line: 193,
            column: 36
          },
          end: {
            line: 223,
            column: 1
          }
        },
        line: 193
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 17
          },
          end: {
            line: 211,
            column: 43
          }
        },
        line: 211
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 124,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        }, {
          start: {
            line: 124,
            column: 9
          },
          end: {
            line: 124,
            column: 59
          }
        }],
        line: 122
      },
      "3": {
        loc: {
          start: {
            line: 140,
            column: 22
          },
          end: {
            line: 140,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 40
          },
          end: {
            line: 140,
            column: 50
          }
        }, {
          start: {
            line: 140,
            column: 53
          },
          end: {
            line: 140,
            column: 68
          }
        }],
        line: 140
      },
      "4": {
        loc: {
          start: {
            line: 143,
            column: 2
          },
          end: {
            line: 152,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 2
          },
          end: {
            line: 152,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "5": {
        loc: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "6": {
        loc: {
          start: {
            line: 205,
            column: 2
          },
          end: {
            line: 207,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 2
          },
          end: {
            line: 207,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "580b886965db0618791b44bee6966c5005dfc790"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1p82ucm69j = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1p82ucm69j();
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Partner Content Integration for Briefings
 * Mixes partner content during quiet transfer periods
 */

import { contentMixer } from "@/lib/partnerships/contentMixer";
import { prisma } from "@/lib/prisma";

/**
 * Mix partner content into briefing sections
 */
export
/* istanbul ignore next */
function mixPartnerContent(_x, _x2, _x3) {
  return _mixPartnerContent.apply(this, arguments);
}

/**
 * Create briefing section from partner content
 */
/* istanbul ignore next */
function _mixPartnerContent() {
  _mixPartnerContent = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(sections, feedItems, timestamp)
  /* istanbul ignore next */
  {
    var mixingDecision, partnerContent, partnerSection, updatedSections, _t;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_1p82ucm69j().f[0]++;
          // Check if we should mix content
          mixingDecision = (cov_1p82ucm69j().s[0]++, contentMixer.shouldMixPartnerContent(feedItems, timestamp));
          cov_1p82ucm69j().s[1]++;
          if (mixingDecision.shouldMixContent) {
            _context.n = 1;
            break;
          }
          cov_1p82ucm69j().b[0][0]++;
          cov_1p82ucm69j().s[2]++;
          console.log(
          /* istanbul ignore next */
          "\uD83D\uDCF0 Partner content not needed: ".concat(mixingDecision.reason));
          cov_1p82ucm69j().s[3]++;
          return _context.a(2, sections);
        case 1:
          cov_1p82ucm69j().b[0][1]++;
        case 2:
          cov_1p82ucm69j().s[4]++;
          console.log(
          /* istanbul ignore next */
          "\uD83D\uDCF0 Mixing partner content: ".concat(mixingDecision.reason));
          cov_1p82ucm69j().s[5]++;
          _context.p = 3;
          cov_1p82ucm69j().s[6]++;
          _context.n = 4;
          return contentMixer.getSuggestedContent(feedItems, ["entertainment", "analysis"] // Prefer these during quiet periods
          );
        case 4:
          partnerContent = _context.v;
          cov_1p82ucm69j().s[7]++;
          if (partnerContent) {
            _context.n = 5;
            break;
          }
          cov_1p82ucm69j().b[1][0]++;
          cov_1p82ucm69j().s[8]++;
          console.log("📰 No suitable partner content found");
          cov_1p82ucm69j().s[9]++;
          return _context.a(2, sections);
        case 5:
          cov_1p82ucm69j().b[1][1]++;
        case 6:
          cov_1p82ucm69j().s[10]++;
          _context.n = 7;
          return createPartnerSection(partnerContent);
        case 7:
          partnerSection = _context.v;
          // Insert partner section strategically
          updatedSections = (cov_1p82ucm69j().s[11]++, insertPartnerSection(sections, partnerSection)); // Track that we used this content
          cov_1p82ucm69j().s[12]++;
          contentMixer.trackPartnerContentAdded(partnerContent);

          // Save to database for tracking
          cov_1p82ucm69j().s[13]++;
          _context.n = 8;
          return savePartnerContentUsage(partnerContent, timestamp);
        case 8:
          cov_1p82ucm69j().s[14]++;
          return _context.a(2, updatedSections);
        case 9:
          _context.p = 9;
          _t = _context.v;
          cov_1p82ucm69j().s[15]++;
          console.error("❌ Failed to mix partner content:",
          /* istanbul ignore next */
          _t);
          cov_1p82ucm69j().s[16]++;
          return _context.a(2, sections);
      }
    }, _callee, null, [[3, 9]]);
  }));
  return _mixPartnerContent.apply(this, arguments);
}
/* istanbul ignore next */
function createPartnerSection(_x4) {
  return _createPartnerSection.apply(this, arguments);
}
/**
 * Generate Terry's intro to partner content
 */
/* istanbul ignore next */
function _createPartnerSection() {
  _createPartnerSection = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2(partnerContent)
  /* istanbul ignore next */
  {
    var terryIntro;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_1p82ucm69j().f[1]++;
          // Generate Terry's introduction to the partner content
          terryIntro = (cov_1p82ucm69j().s[17]++, generatePartnerIntro(partnerContent));
          cov_1p82ucm69j().s[18]++;
          return _context2.a(2, {
            id:
            /* istanbul ignore next */
            "partner-".concat(partnerContent.id),
            type: "partner",
            title: "Meanwhile, In Football Land...",
            content:
            /* istanbul ignore next */
            "\n      ".concat(terryIntro, "\n      <blockquote class=\"partner-content\">\n        <h4>").concat(partnerContent.title, "</h4>\n        <p>").concat(partnerContent.content, "</p>\n        <cite>").concat(partnerContent.source.attribution_format.replace("{source}", partnerContent.source.name).replace("{website}",
            /* istanbul ignore next */
            "<a href=\"".concat(partnerContent.url, "\" target=\"_blank\" rel=\"noopener noreferrer\">").concat(partnerContent.url, "</a>")), "</cite>\n      </blockquote>\n    "),
            metadata: {
              partnerAttribution: partnerContent.source.attribution_format.replace("{source}", partnerContent.source.name).replace("{website}", partnerContent.url)
            }
          });
      }
    }, _callee2);
  }));
  return _createPartnerSection.apply(this, arguments);
}
function generatePartnerIntro(partnerContent) {
  /* istanbul ignore next */
  cov_1p82ucm69j().f[2]++;
  var intros =
  /* istanbul ignore next */
  (cov_1p82ucm69j().s[19]++, ["Right, while we wait for actual transfer news to materialize from the ether,", "In the brief respite from ITK nonsense,", "During this moment of blessed transfer silence,", "While the rumour mill takes a quick breather,", "As we endure another quiet spell in the chaos,"]);
  var intro =
  /* istanbul ignore next */
  (cov_1p82ucm69j().s[20]++, intros[Math.floor(Math.random() * intros.length)]);

  // Add source-specific commentary
  var sourceCommentary =
  /* istanbul ignore next */
  (cov_1p82ucm69j().s[21]++, {
    "the-upshot-podcast": "the lads at The Upshot have uncovered another absolute belter:",
    sportbible: "SportBible's found something properly mental:",
    "planet-football": "Planet Football's dug up this gem:",
    "football-culture-movement": "Football Culture Movement's gone deep on this one:",
    "athletico-mince": "Bob Mortimer's been at it again:"
  });
  var commentary =
  /* istanbul ignore next */
  (cov_1p82ucm69j().s[22]++,
  /* istanbul ignore next */
  (cov_1p82ucm69j().b[2][0]++, sourceCommentary[partnerContent.source.id]) ||
  /* istanbul ignore next */
  (cov_1p82ucm69j().b[2][1]++, "".concat(partnerContent.source.name, " has this to share:")));
  /* istanbul ignore next */
  cov_1p82ucm69j().s[23]++;
  return /* istanbul ignore next */"<p class=\"terry-intro\">".concat(intro, " ").concat(commentary, "</p>");
}

/**
 * Insert partner section into briefing
 */
function insertPartnerSection(sections, partnerSection) {
  /* istanbul ignore next */
  cov_1p82ucm69j().f[3]++;
  // Find optimal position for partner content
  // Usually after main transfer news but before outro

  var outroIndex =
  /* istanbul ignore next */
  (cov_1p82ucm69j().s[24]++, sections.findIndex(function (s) {
    /* istanbul ignore next */
    cov_1p82ucm69j().f[4]++;
    cov_1p82ucm69j().s[25]++;
    return s.type === "outro";
  }));
  var insertIndex =
  /* istanbul ignore next */
  (cov_1p82ucm69j().s[26]++, outroIndex > -1 ?
  /* istanbul ignore next */
  (cov_1p82ucm69j().b[3][0]++, outroIndex) :
  /* istanbul ignore next */
  (cov_1p82ucm69j().b[3][1]++, sections.length));

  // If we have very few sections, insert after intro
  /* istanbul ignore next */
  cov_1p82ucm69j().s[27]++;
  if (sections.length <= 3) {
    /* istanbul ignore next */
    cov_1p82ucm69j().b[4][0]++;
    var introIndex =
    /* istanbul ignore next */
    (cov_1p82ucm69j().s[28]++, sections.findIndex(function (s) {
      /* istanbul ignore next */
      cov_1p82ucm69j().f[5]++;
      cov_1p82ucm69j().s[29]++;
      return s.type === "intro";
    }));
    /* istanbul ignore next */
    cov_1p82ucm69j().s[30]++;
    if (introIndex > -1) {
      /* istanbul ignore next */
      cov_1p82ucm69j().b[5][0]++;
      cov_1p82ucm69j().s[31]++;
      return /* istanbul ignore next */[].concat(_toConsumableArray(sections.slice(0, introIndex + 1)), [partnerSection], _toConsumableArray(sections.slice(introIndex + 1)));
    } else
    /* istanbul ignore next */
    {
      cov_1p82ucm69j().b[5][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1p82ucm69j().b[4][1]++;
  }

  // Otherwise insert before outro
  cov_1p82ucm69j().s[32]++;
  return /* istanbul ignore next */[].concat(_toConsumableArray(sections.slice(0, insertIndex)), [partnerSection], _toConsumableArray(sections.slice(insertIndex)));
}

/**
 * Save partner content usage to database
 */
/* istanbul ignore next */
function savePartnerContentUsage(_x5, _x6) {
  return _savePartnerContentUsage.apply(this, arguments);
}
/**
 * Get partner content analytics for a briefing
 */
/* istanbul ignore next */
function _savePartnerContentUsage() {
  _savePartnerContentUsage = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee3(partnerContent, briefingTimestamp)
  /* istanbul ignore next */
  {
    var _t2;
    return _regenerator().w(function (_context3) {
      while (1) switch (_context3.n) {
        case 0:
          cov_1p82ucm69j().f[6]++;
          cov_1p82ucm69j().s[33]++;
          _context3.p = 1;
          cov_1p82ucm69j().s[34]++;
          _context3.n = 2;
          return prisma.partnerContent.create({
            data: {
              sourceId: partnerContent.source.id,
              title: partnerContent.title,
              content: partnerContent.content,
              url: partnerContent.url,
              publishedAt: partnerContent.publishedAt,
              category: partnerContent.category,
              tags: partnerContent.tags,
              usedAt: new Date()
              // We'll link to briefing once it's created
            }
          });
        case 2:
          _context3.n = 4;
          break;
        case 3:
          _context3.p = 3;
          _t2 = _context3.v;
          cov_1p82ucm69j().s[35]++;
          console.error("Failed to save partner content usage:",
          /* istanbul ignore next */
          _t2);
        case 4:
          return _context3.a(2);
      }
    }, _callee3, null, [[1, 3]]);
  }));
  return _savePartnerContentUsage.apply(this, arguments);
}
export
/* istanbul ignore next */
function getPartnerContentAnalytics(_x7) {
  return _getPartnerContentAnalytics.apply(this, arguments);
}

// Type definitions
/* istanbul ignore next */
function _getPartnerContentAnalytics() {
  _getPartnerContentAnalytics = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee4(briefingId)
  /* istanbul ignore next */
  {
    var briefing, hasPartnerContent, mixerAnalytics;
    return _regenerator().w(function (_context4) {
      while (1) switch (_context4.n) {
        case 0:
          cov_1p82ucm69j().f[7]++;
          cov_1p82ucm69j().s[36]++;
          _context4.n = 1;
          return prisma.briefing.findUnique({
            where: {
              id: briefingId
            },
            include: {
              _count: {
                select: {
                  feedItems: true
                }
              }
            }
          });
        case 1:
          briefing = _context4.v;
          cov_1p82ucm69j().s[37]++;
          if (briefing) {
            _context4.n = 2;
            break;
          }
          cov_1p82ucm69j().b[6][0]++;
          cov_1p82ucm69j().s[38]++;
          throw new Error("Briefing not found");
        case 2:
          cov_1p82ucm69j().b[6][1]++;
        case 3:
          // Check if briefing has partner content
          hasPartnerContent = (cov_1p82ucm69j().s[39]++, briefing.content.some(function (section) {
            /* istanbul ignore next */
            cov_1p82ucm69j().f[8]++;
            cov_1p82ucm69j().s[40]++;
            return section.type === "partner";
          })); // Get mixing analytics from content mixer
          mixerAnalytics = (cov_1p82ucm69j().s[41]++, contentMixer.getAnalytics());
          cov_1p82ucm69j().s[42]++;
          return _context4.a(2, {
            hasPartnerContent: hasPartnerContent,
            feedItemCount: briefing._count.feedItems,
            wasQuietPeriod: briefing._count.feedItems < 5,
            partnerContentStats: mixerAnalytics
          });
      }
    }, _callee4);
  }));
  return _getPartnerContentAnalytics.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,