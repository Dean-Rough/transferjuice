c7c928733161c38c00b6f886e4cbb846
'use client';

/* istanbul ignore next */
function cov_adzpj6a4j() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/components/feed/TerryCommentary.tsx";
  var hash = "540fb4e78a171bd661a3702c2c5e0e5c4f18cc8c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/components/feed/TerryCommentary.tsx",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 38
        },
        end: {
          line: 16,
          column: 53
        }
      },
      "1": {
        start: {
          line: 18,
          column: 25
        },
        end: {
          line: 18,
          column: 64
        }
      },
      "2": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 18
        }
      },
      "3": {
        start: {
          line: 24,
          column: 2
        },
        end: {
          line: 63,
          column: 4
        }
      },
      "4": {
        start: {
          line: 37,
          column: 25
        },
        end: {
          line: 37,
          column: 51
        }
      },
      "5": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 57,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "TerryCommentary",
        decl: {
          start: {
            line: 11,
            column: 16
          },
          end: {
            line: 11,
            column: 31
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 37,
            column: 19
          },
          end: {
            line: 37,
            column: 20
          }
        },
        loc: {
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 37,
            column: 51
          }
        },
        line: 37
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 49,
            column: 31
          },
          end: {
            line: 49,
            column: 32
          }
        },
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 57,
            column: 14
          }
        },
        line: 50
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 13,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 14
          },
          end: {
            line: 13,
            column: 16
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 14,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 17
          },
          end: {
            line: 14,
            column: 21
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 18,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 18,
            column: 37
          }
        }, {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 18,
            column: 64
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 22,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 44
          }
        }, {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 18
          }
        }],
        line: 20
      },
      "4": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 18
          }
        }, {
          start: {
            line: 20,
            column: 22
          },
          end: {
            line: 20,
            column: 33
          }
        }],
        line: 20
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 7
          },
          end: {
            line: 43,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 7
          },
          end: {
            line: 35,
            column: 21
          }
        }, {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 42,
            column: 17
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 11
          },
          end: {
            line: 41,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 41,
            column: 36
          }
        }, {
          start: {
            line: 41,
            column: 39
          },
          end: {
            line: 41,
            column: 51
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 55,
            column: 33
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 20
          },
          end: {
            line: 54,
            column: 41
          }
        }, {
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 55,
            column: 33
          }
        }],
        line: 53
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "540fb4e78a171bd661a3702c2c5e0e5c4f18cc8c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_adzpj6a4j = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_adzpj6a4j();
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
import { useState } from 'react';
/* istanbul ignore next */
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export function TerryCommentary(
/* istanbul ignore next */
_ref) {
  /* istanbul ignore next */
  var commentary = _ref.commentary,
    _ref$className = _ref.className,
    className = _ref$className === void 0 ? (cov_adzpj6a4j().b[0][0]++, '') : _ref$className,
    _ref$isExpandable = _ref.isExpandable,
    isExpandable = _ref$isExpandable === void 0 ? (cov_adzpj6a4j().b[1][0]++, true) : _ref$isExpandable;
  /* istanbul ignore next */
  cov_adzpj6a4j().f[0]++;
  var
    /* istanbul ignore next */
    _ref2 = (cov_adzpj6a4j().s[0]++, useState(false)),
    /* istanbul ignore next */
    _ref3 = _slicedToArray(_ref2, 2),
    /* istanbul ignore next */
    isExpanded = _ref3[0],
    /* istanbul ignore next */
    setIsExpanded = _ref3[1];
  var shouldTruncate =
  /* istanbul ignore next */
  (cov_adzpj6a4j().s[1]++,
  /* istanbul ignore next */
  (cov_adzpj6a4j().b[2][0]++, isExpandable) &&
  /* istanbul ignore next */
  (cov_adzpj6a4j().b[2][1]++, commentary.length > 200));
  var displayCommentary =
  /* istanbul ignore next */
  (cov_adzpj6a4j().s[2]++,
  /* istanbul ignore next */
  (cov_adzpj6a4j().b[4][0]++, shouldTruncate) &&
  /* istanbul ignore next */
  (cov_adzpj6a4j().b[4][1]++, !isExpanded) ?
  /* istanbul ignore next */
  (cov_adzpj6a4j().b[3][0]++, "".concat(commentary.substring(0, 200), "...")) :
  /* istanbul ignore next */
  (cov_adzpj6a4j().b[3][1]++, commentary));
  /* istanbul ignore next */
  cov_adzpj6a4j().s[3]++;
  return /*#__PURE__*/ /* istanbul ignore next */_jsxs(
  /* istanbul ignore next */
  "div",
  /* istanbul ignore next */
  {
    className:
    /* istanbul ignore next */
    "terry-bubble relative ".concat(className),
    /* istanbul ignore next */
    "data-testid": "terry-commentary",
    children: [/*#__PURE__*/
    /* istanbul ignore next */
    _jsx(
    /* istanbul ignore next */
    "blockquote",
    /* istanbul ignore next */
    {
      className: "text-lg leading-relaxed",
      children: displayCommentary
    }),
    /* istanbul ignore next */
    (cov_adzpj6a4j().b[5][0]++, shouldTruncate) &&
    /* istanbul ignore next */
    (cov_adzpj6a4j().b[5][1]++, /*#__PURE__*/
    /* istanbul ignore next */
    _jsx(
    /* istanbul ignore next */
    "button",
    /* istanbul ignore next */
    {
      onClick: function onClick() {
        /* istanbul ignore next */
        cov_adzpj6a4j().f[1]++;
        cov_adzpj6a4j().s[4]++;
        return setIsExpanded(!isExpanded);
      },
      className: "mt-2 text-brand-orange-500 hover:text-brand-orange-400 text-xs font-medium",
      /* istanbul ignore next */
      "data-testid": "terry-expand-button",
      children: isExpanded ?
      /* istanbul ignore next */
      (cov_adzpj6a4j().b[6][0]++, 'Less Terry') :
      /* istanbul ignore next */
      (cov_adzpj6a4j().b[6][1]++, 'More Terry')
    })), /*#__PURE__*/
    /* istanbul ignore next */
    _jsxs(
    /* istanbul ignore next */
    "div",
    /* istanbul ignore next */
    {
      className: "flex items-center justify-end mt-2 space-x-1",
      children: [/*#__PURE__*/
      /* istanbul ignore next */
      _jsx(
      /* istanbul ignore next */
      "span",
      /* istanbul ignore next */
      {
        className: "text-xs text-gray-400",
        children: "Voice Score:"
      }), /*#__PURE__*/
      /* istanbul ignore next */
      _jsx(
      /* istanbul ignore next */
      "div",
      /* istanbul ignore next */
      {
        className: "flex space-x-px",
        children: [1, 2, 3, 4, 5].map(function (dot) {
          /* istanbul ignore next */
          cov_adzpj6a4j().f[2]++;
          cov_adzpj6a4j().s[5]++;
          return /*#__PURE__*/ /* istanbul ignore next */_jsx(
          /* istanbul ignore next */
          "div",
          /* istanbul ignore next */
          {
            className:
            /* istanbul ignore next */
            "w-1 h-1 rounded-full ".concat(dot <= 4 // Mock 4/5 consistency score
            ?
            /* istanbul ignore next */
            (cov_adzpj6a4j().b[7][0]++, 'bg-brand-orange-500') :
            /* istanbul ignore next */
            (cov_adzpj6a4j().b[7][1]++, 'bg-gray-600'))
          }, dot);
        })
      }), /*#__PURE__*/
      /* istanbul ignore next */
      _jsx(
      /* istanbul ignore next */
      "span",
      /* istanbul ignore next */
      {
        className: "text-xs text-brand-orange-400",
        children: "92%"
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,