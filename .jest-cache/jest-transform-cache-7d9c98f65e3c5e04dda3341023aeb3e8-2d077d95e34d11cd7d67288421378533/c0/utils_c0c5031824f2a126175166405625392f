25fbb137f4557250637d0074cb5cdaed
/* istanbul ignore next */
function cov_4bvhw69wg() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/validations/utils.ts";
  var hash = "d70bf53522f1b759867f672251defc1111892333";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/validations/utils.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 49
        }
      },
      "1": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "2": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 22,
          column: 4
        }
      },
      "3": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 34
        }
      },
      "4": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 31,
          column: 4
        }
      },
      "5": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 30
        }
      },
      "6": {
        start: {
          line: 38,
          column: 2
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "7": {
        start: {
          line: 39,
          column: 17
        },
        end: {
          line: 39,
          column: 37
        }
      },
      "8": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 40,
          column: 43
        }
      },
      "9": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 40
        }
      },
      "10": {
        start: {
          line: 51,
          column: 2
        },
        end: {
          line: 53,
          column: 3
        }
      },
      "11": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 16
        }
      },
      "12": {
        start: {
          line: 55,
          column: 17
        },
        end: {
          line: 55,
          column: 53
        }
      },
      "13": {
        start: {
          line: 56,
          column: 2
        },
        end: {
          line: 56,
          column: 61
        }
      },
      "14": {
        start: {
          line: 66,
          column: 17
        },
        end: {
          line: 66,
          column: 39
        }
      },
      "15": {
        start: {
          line: 68,
          column: 2
        },
        end: {
          line: 70,
          column: 3
        }
      },
      "16": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 48
        }
      },
      "17": {
        start: {
          line: 72,
          column: 23
        },
        end: {
          line: 72,
          column: 56
        }
      },
      "18": {
        start: {
          line: 73,
          column: 2
        },
        end: {
          line: 73,
          column: 72
        }
      },
      "19": {
        start: {
          line: 80,
          column: 2
        },
        end: {
          line: 90,
          column: 4
        }
      },
      "20": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "21": {
        start: {
          line: 82,
          column: 6
        },
        end: {
          line: 82,
          column: 32
        }
      },
      "22": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 87,
          column: 7
        }
      },
      "23": {
        start: {
          line: 85,
          column: 32
        },
        end: {
          line: 85,
          column: 61
        }
      },
      "24": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 80
        }
      },
      "25": {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 18
        }
      },
      "26": {
        start: {
          line: 97,
          column: 2
        },
        end: {
          line: 112,
          column: 4
        }
      },
      "27": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "28": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 101,
          column: 34
        }
      },
      "29": {
        start: {
          line: 103,
          column: 6
        },
        end: {
          line: 109,
          column: 7
        }
      },
      "30": {
        start: {
          line: 104,
          column: 32
        },
        end: {
          line: 104,
          column: 61
        }
      },
      "31": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 108,
          column: 10
        }
      },
      "32": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 110,
          column: 18
        }
      },
      "33": {
        start: {
          line: 119,
          column: 25
        },
        end: {
          line: 119,
          column: 43
        }
      },
      "34": {
        start: {
          line: 120,
          column: 31
        },
        end: {
          line: 120,
          column: 34
        }
      },
      "35": {
        start: {
          line: 125,
          column: 25
        },
        end: {
          line: 127,
          column: 15
        }
      },
      "36": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 24
        }
      },
      "37": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 34
        }
      },
      "38": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 137,
          column: 6
        }
      },
      "39": {
        start: {
          line: 132,
          column: 6
        },
        end: {
          line: 136,
          column: 17
        }
      },
      "40": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 147,
          column: 6
        }
      },
      "41": {
        start: {
          line: 155,
          column: 2
        },
        end: {
          line: 155,
          column: 42
        }
      },
      "42": {
        start: {
          line: 162,
          column: 40
        },
        end: {
          line: 162,
          column: 42
        }
      },
      "43": {
        start: {
          line: 164,
          column: 2
        },
        end: {
          line: 181,
          column: 3
        }
      },
      "44": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "45": {
        start: {
          line: 167,
          column: 23
        },
        end: {
          line: 167,
          column: 39
        }
      },
      "46": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 170,
          column: 7
        }
      },
      "47": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 28
        }
      },
      "48": {
        start: {
          line: 171,
          column: 6
        },
        end: {
          line: 171,
          column: 48
        }
      },
      "49": {
        start: {
          line: 172,
          column: 11
        },
        end: {
          line: 180,
          column: 5
        }
      },
      "50": {
        start: {
          line: 174,
          column: 6
        },
        end: {
          line: 176,
          column: 7
        }
      },
      "51": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 32
        }
      },
      "52": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 177,
          column: 43
        }
      },
      "53": {
        start: {
          line: 179,
          column: 6
        },
        end: {
          line: 179,
          column: 24
        }
      },
      "54": {
        start: {
          line: 183,
          column: 2
        },
        end: {
          line: 183,
          column: 14
        }
      },
      "55": {
        start: {
          line: 192,
          column: 40
        },
        end: {
          line: 192,
          column: 42
        }
      },
      "56": {
        start: {
          line: 194,
          column: 2
        },
        end: {
          line: 204,
          column: 3
        }
      },
      "57": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 203,
          column: 5
        }
      },
      "58": {
        start: {
          line: 197,
          column: 6
        },
        end: {
          line: 199,
          column: 7
        }
      },
      "59": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 32
        }
      },
      "60": {
        start: {
          line: 200,
          column: 6
        },
        end: {
          line: 200,
          column: 43
        }
      },
      "61": {
        start: {
          line: 202,
          column: 6
        },
        end: {
          line: 202,
          column: 24
        }
      },
      "62": {
        start: {
          line: 206,
          column: 2
        },
        end: {
          line: 206,
          column: 14
        }
      },
      "63": {
        start: {
          line: 213,
          column: 2
        },
        end: {
          line: 215,
          column: 3
        }
      },
      "64": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 15
        }
      },
      "65": {
        start: {
          line: 217,
          column: 2
        },
        end: {
          line: 219,
          column: 3
        }
      },
      "66": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 218,
          column: 41
        }
      },
      "67": {
        start: {
          line: 221,
          column: 43
        },
        end: {
          line: 221,
          column: 45
        }
      },
      "68": {
        start: {
          line: 222,
          column: 2
        },
        end: {
          line: 226,
          column: 3
        }
      },
      "69": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "70": {
        start: {
          line: 224,
          column: 6
        },
        end: {
          line: 224,
          column: 44
        }
      },
      "71": {
        start: {
          line: 228,
          column: 2
        },
        end: {
          line: 228,
          column: 22
        }
      },
      "72": {
        start: {
          line: 238,
          column: 17
        },
        end: {
          line: 238,
          column: 38
        }
      },
      "73": {
        start: {
          line: 240,
          column: 2
        },
        end: {
          line: 251,
          column: 3
        }
      },
      "74": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 241,
          column: 54
        }
      },
      "75": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 242,
          column: 22
        }
      },
      "76": {
        start: {
          line: 244,
          column: 19
        },
        end: {
          line: 244,
          column: 55
        }
      },
      "77": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 245,
          column: 59
        }
      },
      "78": {
        start: {
          line: 245,
          column: 30
        },
        end: {
          line: 245,
          column: 57
        }
      },
      "79": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 247,
          column: 22
        }
      },
      "80": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 248,
          column: 76
        }
      },
      "81": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 250,
          column: 20
        }
      },
      "82": {
        start: {
          line: 253,
          column: 2
        },
        end: {
          line: 253,
          column: 21
        }
      },
      "83": {
        start: {
          line: 260,
          column: 2
        },
        end: {
          line: 264,
          column: 5
        }
      },
      "84": {
        start: {
          line: 271,
          column: 2
        },
        end: {
          line: 274,
          column: 5
        }
      },
      "85": {
        start: {
          line: 281,
          column: 2
        },
        end: {
          line: 297,
          column: 6
        }
      },
      "86": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "87": {
        start: {
          line: 289,
          column: 10
        },
        end: {
          line: 289,
          column: 58
        }
      },
      "88": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 20
        }
      },
      "89": {
        start: {
          line: 307,
          column: 20
        },
        end: {
          line: 307,
          column: 37
        }
      },
      "90": {
        start: {
          line: 308,
          column: 38
        },
        end: {
          line: 308,
          column: 40
        }
      },
      "91": {
        start: {
          line: 310,
          column: 2
        },
        end: {
          line: 314,
          column: 3
        }
      },
      "92": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 313,
          column: 5
        }
      },
      "93": {
        start: {
          line: 312,
          column: 6
        },
        end: {
          line: 312,
          column: 35
        }
      },
      "94": {
        start: {
          line: 316,
          column: 2
        },
        end: {
          line: 316,
          column: 30
        }
      },
      "95": {
        start: {
          line: 326,
          column: 20
        },
        end: {
          line: 326,
          column: 37
        }
      },
      "96": {
        start: {
          line: 327,
          column: 17
        },
        end: {
          line: 327,
          column: 33
        }
      },
      "97": {
        start: {
          line: 329,
          column: 2
        },
        end: {
          line: 331,
          column: 3
        }
      },
      "98": {
        start: {
          line: 330,
          column: 4
        },
        end: {
          line: 330,
          column: 23
        }
      },
      "99": {
        start: {
          line: 333,
          column: 2
        },
        end: {
          line: 333,
          column: 30
        }
      },
      "100": {
        start: {
          line: 339,
          column: 32
        },
        end: {
          line: 347,
          column: 2
        }
      },
      "101": {
        start: {
          line: 352,
          column: 33
        },
        end: {
          line: 360,
          column: 2
        }
      },
      "102": {
        start: {
          line: 366,
          column: 2
        },
        end: {
          line: 374,
          column: 6
        }
      },
      "103": {
        start: {
          line: 370,
          column: 15
        },
        end: {
          line: 370,
          column: 77
        }
      },
      "104": {
        start: {
          line: 370,
          column: 44
        },
        end: {
          line: 370,
          column: 76
        }
      },
      "105": {
        start: {
          line: 381,
          column: 2
        },
        end: {
          line: 381,
          column: 60
        }
      },
      "106": {
        start: {
          line: 387,
          column: 35
        },
        end: {
          line: 414,
          column: 3
        }
      },
      "107": {
        start: {
          line: 392,
          column: 24
        },
        end: {
          line: 392,
          column: 50
        }
      },
      "108": {
        start: {
          line: 396,
          column: 24
        },
        end: {
          line: 396,
          column: 43
        }
      },
      "109": {
        start: {
          line: 397,
          column: 25
        },
        end: {
          line: 397,
          column: 44
        }
      },
      "110": {
        start: {
          line: 400,
          column: 6
        },
        end: {
          line: 400,
          column: 46
        }
      },
      "111": {
        start: {
          line: 400,
          column: 33
        },
        end: {
          line: 400,
          column: 46
        }
      },
      "112": {
        start: {
          line: 403,
          column: 6
        },
        end: {
          line: 403,
          column: 50
        }
      },
      "113": {
        start: {
          line: 403,
          column: 37
        },
        end: {
          line: 403,
          column: 50
        }
      },
      "114": {
        start: {
          line: 406,
          column: 26
        },
        end: {
          line: 406,
          column: 47
        }
      },
      "115": {
        start: {
          line: 407,
          column: 6
        },
        end: {
          line: 409,
          column: 7
        }
      },
      "116": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 408,
          column: 64
        }
      },
      "117": {
        start: {
          line: 408,
          column: 51
        },
        end: {
          line: 408,
          column: 64
        }
      },
      "118": {
        start: {
          line: 411,
          column: 6
        },
        end: {
          line: 411,
          column: 18
        }
      },
      "119": {
        start: {
          line: 417,
          column: 29
        },
        end: {
          line: 435,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "validateEmail",
        decl: {
          start: {
            line: 11,
            column: 16
          },
          end: {
            line: 11,
            column: 29
          }
        },
        loc: {
          start: {
            line: 11,
            column: 54
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "createValidator",
        decl: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 31
          }
        },
        loc: {
          start: {
            line: 19,
            column: 67
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 10
          }
        },
        loc: {
          start: {
            line: 20,
            column: 72
          },
          end: {
            line: 22,
            column: 3
          }
        },
        line: 20
      },
      "3": {
        name: "createStrictValidator",
        decl: {
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 37
          }
        },
        loc: {
          start: {
            line: 28,
            column: 73
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 10
          }
        },
        loc: {
          start: {
            line: 29,
            column: 40
          },
          end: {
            line: 31,
            column: 3
          }
        },
        line: 29
      },
      "5": {
        name: "formatValidationErrors",
        decl: {
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 38
          }
        },
        loc: {
          start: {
            line: 37,
            column: 68
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 37
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 38,
            column: 26
          },
          end: {
            line: 38,
            column: 27
          }
        },
        loc: {
          start: {
            line: 38,
            column: 37
          },
          end: {
            line: 42,
            column: 3
          }
        },
        line: 38
      },
      "7": {
        name: "getValidationErrorMessage",
        decl: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 41
          }
        },
        loc: {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 50
      },
      "8": {
        name: "validateOrError",
        decl: {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 62,
            column: 31
          }
        },
        loc: {
          start: {
            line: 65,
            column: 75
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 65
      },
      "9": {
        name: "validateRequestBody",
        decl: {
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 79,
            column: 35
          }
        },
        loc: {
          start: {
            line: 79,
            column: 71
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 79
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 80,
            column: 9
          },
          end: {
            line: 80,
            column: 10
          }
        },
        loc: {
          start: {
            line: 80,
            column: 40
          },
          end: {
            line: 90,
            column: 3
          }
        },
        line: 80
      },
      "11": {
        name: "validateQueryParams",
        decl: {
          start: {
            line: 96,
            column: 16
          },
          end: {
            line: 96,
            column: 35
          }
        },
        loc: {
          start: {
            line: 96,
            column: 71
          },
          end: {
            line: 113,
            column: 1
          }
        },
        line: 96
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 97,
            column: 9
          },
          end: {
            line: 97,
            column: 10
          }
        },
        loc: {
          start: {
            line: 99,
            column: 19
          },
          end: {
            line: 112,
            column: 3
          }
        },
        line: 99
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 123,
            column: 2
          },
          end: {
            line: 123,
            column: 3
          }
        },
        loc: {
          start: {
            line: 123,
            column: 54
          },
          end: {
            line: 138,
            column: 3
          }
        },
        line: 123
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 131,
            column: 29
          },
          end: {
            line: 131,
            column: 30
          }
        },
        loc: {
          start: {
            line: 132,
            column: 6
          },
          end: {
            line: 136,
            column: 17
          }
        },
        line: 132
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 140,
            column: 2
          },
          end: {
            line: 140,
            column: 3
          }
        },
        loc: {
          start: {
            line: 140,
            column: 11
          },
          end: {
            line: 148,
            column: 3
          }
        },
        line: 140
      },
      "16": {
        name: "isValidationError",
        decl: {
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 154,
            column: 33
          }
        },
        loc: {
          start: {
            line: 154,
            column: 76
          },
          end: {
            line: 156,
            column: 1
          }
        },
        line: 154
      },
      "17": {
        name: "transformFormData",
        decl: {
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 161,
            column: 33
          }
        },
        loc: {
          start: {
            line: 161,
            column: 79
          },
          end: {
            line: 184,
            column: 1
          }
        },
        line: 161
      },
      "18": {
        name: "transformQueryParams",
        decl: {
          start: {
            line: 189,
            column: 16
          },
          end: {
            line: 189,
            column: 36
          }
        },
        loc: {
          start: {
            line: 191,
            column: 27
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 191
      },
      "19": {
        name: "removeUndefined",
        decl: {
          start: {
            line: 212,
            column: 16
          },
          end: {
            line: 212,
            column: 31
          }
        },
        loc: {
          start: {
            line: 212,
            column: 46
          },
          end: {
            line: 229,
            column: 1
          }
        },
        line: 212
      },
      "20": {
        name: "validateEnvironmentVariables",
        decl: {
          start: {
            line: 234,
            column: 16
          },
          end: {
            line: 234,
            column: 44
          }
        },
        loc: {
          start: {
            line: 237,
            column: 14
          },
          end: {
            line: 254,
            column: 1
          }
        },
        line: 237
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 245,
            column: 19
          },
          end: {
            line: 245,
            column: 20
          }
        },
        loc: {
          start: {
            line: 245,
            column: 30
          },
          end: {
            line: 245,
            column: 57
          }
        },
        line: 245
      },
      "22": {
        name: "createPaginationSchema",
        decl: {
          start: {
            line: 259,
            column: 16
          },
          end: {
            line: 259,
            column: 38
          }
        },
        loc: {
          start: {
            line: 259,
            column: 55
          },
          end: {
            line: 265,
            column: 1
          }
        },
        line: 259
      },
      "23": {
        name: "createSortSchema",
        decl: {
          start: {
            line: 270,
            column: 16
          },
          end: {
            line: 270,
            column: 32
          }
        },
        loc: {
          start: {
            line: 270,
            column: 73
          },
          end: {
            line: 275,
            column: 1
          }
        },
        line: 270
      },
      "24": {
        name: "createDateRangeSchema",
        decl: {
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 280,
            column: 37
          }
        },
        loc: {
          start: {
            line: 280,
            column: 40
          },
          end: {
            line: 298,
            column: 1
          }
        },
        line: 280
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 287,
            column: 6
          },
          end: {
            line: 287,
            column: 7
          }
        },
        loc: {
          start: {
            line: 287,
            column: 16
          },
          end: {
            line: 292,
            column: 7
          }
        },
        line: 287
      },
      "26": {
        name: "validateAndPick",
        decl: {
          start: {
            line: 303,
            column: 16
          },
          end: {
            line: 303,
            column: 31
          }
        },
        loc: {
          start: {
            line: 306,
            column: 63
          },
          end: {
            line: 317,
            column: 1
          }
        },
        line: 306
      },
      "27": {
        name: "validateAndOmit",
        decl: {
          start: {
            line: 322,
            column: 16
          },
          end: {
            line: 322,
            column: 31
          }
        },
        loc: {
          start: {
            line: 325,
            column: 63
          },
          end: {
            line: 334,
            column: 1
          }
        },
        line: 325
      },
      "28": {
        name: "createUrlSchema",
        decl: {
          start: {
            line: 365,
            column: 16
          },
          end: {
            line: 365,
            column: 31
          }
        },
        loc: {
          start: {
            line: 365,
            column: 73
          },
          end: {
            line: 375,
            column: 1
          }
        },
        line: 365
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 370,
            column: 6
          },
          end: {
            line: 370,
            column: 7
          }
        },
        loc: {
          start: {
            line: 370,
            column: 15
          },
          end: {
            line: 370,
            column: 77
          }
        },
        line: 370
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 370,
            column: 30
          },
          end: {
            line: 370,
            column: 31
          }
        },
        loc: {
          start: {
            line: 370,
            column: 44
          },
          end: {
            line: 370,
            column: 76
          }
        },
        line: 370
      },
      "31": {
        name: "createEnumSchema",
        decl: {
          start: {
            line: 380,
            column: 16
          },
          end: {
            line: 380,
            column: 32
          }
        },
        loc: {
          start: {
            line: 380,
            column: 73
          },
          end: {
            line: 382,
            column: 1
          }
        },
        line: 380
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 392,
            column: 13
          },
          end: {
            line: 392,
            column: 14
          }
        },
        loc: {
          start: {
            line: 392,
            column: 24
          },
          end: {
            line: 392,
            column: 50
          }
        },
        line: 392
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 394,
            column: 4
          },
          end: {
            line: 394,
            column: 5
          }
        },
        loc: {
          start: {
            line: 394,
            column: 15
          },
          end: {
            line: 412,
            column: 5
          }
        },
        line: 394
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 40,
            column: 20
          },
          end: {
            line: 40,
            column: 43
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 40,
            column: 38
          }
        }, {
          start: {
            line: 40,
            column: 41
          },
          end: {
            line: 40,
            column: 43
          }
        }],
        line: 40
      },
      "1": {
        loc: {
          start: {
            line: 51,
            column: 2
          },
          end: {
            line: 53,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 2
          },
          end: {
            line: 53,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "2": {
        loc: {
          start: {
            line: 56,
            column: 9
          },
          end: {
            line: 56,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 31
          },
          end: {
            line: 56,
            column: 40
          }
        }, {
          start: {
            line: 56,
            column: 43
          },
          end: {
            line: 56,
            column: 60
          }
        }],
        line: 56
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 2
          },
          end: {
            line: 70,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 2
          },
          end: {
            line: 70,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 73,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 73,
            column: 46
          }
        }, {
          start: {
            line: 73,
            column: 50
          },
          end: {
            line: 73,
            column: 69
          }
        }],
        line: 73
      },
      "5": {
        loc: {
          start: {
            line: 84,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "6": {
        loc: {
          start: {
            line: 103,
            column: 6
          },
          end: {
            line: 109,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 6
          },
          end: {
            line: 109,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "7": {
        loc: {
          start: {
            line: 123,
            column: 31
          },
          end: {
            line: 123,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 123,
            column: 50
          },
          end: {
            line: 123,
            column: 52
          }
        }],
        line: 123
      },
      "8": {
        loc: {
          start: {
            line: 125,
            column: 25
          },
          end: {
            line: 127,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 126,
            column: 109
          }
        }, {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 127,
            column: 15
          }
        }],
        line: 125
      },
      "9": {
        loc: {
          start: {
            line: 132,
            column: 6
          },
          end: {
            line: 136,
            column: 17
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 10
          },
          end: {
            line: 133,
            column: 78
          }
        }, {
          start: {
            line: 134,
            column: 10
          },
          end: {
            line: 136,
            column: 17
          }
        }],
        line: 132
      },
      "10": {
        loc: {
          start: {
            line: 134,
            column: 10
          },
          end: {
            line: 136,
            column: 17
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 93
          }
        }, {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 136,
            column: 17
          }
        }],
        line: 134
      },
      "11": {
        loc: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        }, {
          start: {
            line: 172,
            column: 11
          },
          end: {
            line: 180,
            column: 5
          }
        }],
        line: 165
      },
      "12": {
        loc: {
          start: {
            line: 168,
            column: 6
          },
          end: {
            line: 170,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 6
          },
          end: {
            line: 170,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "13": {
        loc: {
          start: {
            line: 172,
            column: 11
          },
          end: {
            line: 180,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 11
          },
          end: {
            line: 180,
            column: 5
          }
        }, {
          start: {
            line: 178,
            column: 11
          },
          end: {
            line: 180,
            column: 5
          }
        }],
        line: 172
      },
      "14": {
        loc: {
          start: {
            line: 174,
            column: 6
          },
          end: {
            line: 176,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 6
          },
          end: {
            line: 176,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "15": {
        loc: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        }, {
          start: {
            line: 201,
            column: 11
          },
          end: {
            line: 203,
            column: 5
          }
        }],
        line: 195
      },
      "16": {
        loc: {
          start: {
            line: 197,
            column: 6
          },
          end: {
            line: 199,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 6
          },
          end: {
            line: 199,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "17": {
        loc: {
          start: {
            line: 213,
            column: 2
          },
          end: {
            line: 215,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 2
          },
          end: {
            line: 215,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "18": {
        loc: {
          start: {
            line: 213,
            column: 6
          },
          end: {
            line: 213,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 6
          },
          end: {
            line: 213,
            column: 18
          }
        }, {
          start: {
            line: 213,
            column: 22
          },
          end: {
            line: 213,
            column: 45
          }
        }],
        line: 213
      },
      "19": {
        loc: {
          start: {
            line: 217,
            column: 2
          },
          end: {
            line: 219,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 2
          },
          end: {
            line: 219,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "20": {
        loc: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 225,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "21": {
        loc: {
          start: {
            line: 236,
            column: 2
          },
          end: {
            line: 236,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 236,
            column: 44
          },
          end: {
            line: 236,
            column: 55
          }
        }],
        line: 236
      },
      "22": {
        loc: {
          start: {
            line: 240,
            column: 2
          },
          end: {
            line: 251,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 2
          },
          end: {
            line: 251,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "23": {
        loc: {
          start: {
            line: 259,
            column: 39
          },
          end: {
            line: 259,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 259,
            column: 50
          },
          end: {
            line: 259,
            column: 53
          }
        }],
        line: 259
      },
      "24": {
        loc: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "25": {
        loc: {
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 288,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 288,
            column: 21
          }
        }, {
          start: {
            line: 288,
            column: 25
          },
          end: {
            line: 288,
            column: 32
          }
        }],
        line: 288
      },
      "26": {
        loc: {
          start: {
            line: 311,
            column: 4
          },
          end: {
            line: 313,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 4
          },
          end: {
            line: 313,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "27": {
        loc: {
          start: {
            line: 365,
            column: 32
          },
          end: {
            line: 365,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 365,
            column: 54
          },
          end: {
            line: 365,
            column: 71
          }
        }],
        line: 365
      },
      "28": {
        loc: {
          start: {
            line: 400,
            column: 6
          },
          end: {
            line: 400,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 400,
            column: 6
          },
          end: {
            line: 400,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 400
      },
      "29": {
        loc: {
          start: {
            line: 403,
            column: 6
          },
          end: {
            line: 403,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 6
          },
          end: {
            line: 403,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "30": {
        loc: {
          start: {
            line: 408,
            column: 8
          },
          end: {
            line: 408,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 8
          },
          end: {
            line: 408,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "31": {
        loc: {
          start: {
            line: 408,
            column: 12
          },
          end: {
            line: 408,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 408,
            column: 12
          },
          end: {
            line: 408,
            column: 29
          }
        }, {
          start: {
            line: 408,
            column: 33
          },
          end: {
            line: 408,
            column: 49
          }
        }],
        line: 408
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0],
      "22": [0, 0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d70bf53522f1b759867f672251defc1111892333"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4bvhw69wg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4bvhw69wg();
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }
function _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
import { z } from "zod";

/**
 * Validation Utilities
 * Common utilities for working with Zod schemas across the application
 */

/**
 * Simple email validation function for testing
 */
export function validateEmail(email) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[0]++;
  var emailRegex =
  /* istanbul ignore next */
  (cov_4bvhw69wg().s[0]++, /^[^\s@]+@[^\s@]+\.[^\s@]+$/);
  /* istanbul ignore next */
  cov_4bvhw69wg().s[1]++;
  return emailRegex.test(email);
}

/**
 * Creates a safe validator function that returns validation results
 */
export function createValidator(schema) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[1]++;
  cov_4bvhw69wg().s[2]++;
  return function (data) {
    /* istanbul ignore next */
    cov_4bvhw69wg().f[2]++;
    cov_4bvhw69wg().s[3]++;
    return schema.safeParse(data);
  };
}

/**
 * Creates a validator that throws on validation failure
 */
export function createStrictValidator(schema) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[3]++;
  cov_4bvhw69wg().s[4]++;
  return function (data) {
    /* istanbul ignore next */
    cov_4bvhw69wg().f[4]++;
    cov_4bvhw69wg().s[5]++;
    return schema.parse(data);
  };
}

/**
 * Formats Zod validation errors into user-friendly messages
 */
export function formatValidationErrors(error) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[5]++;
  cov_4bvhw69wg().s[6]++;
  return error.issues.map(function (issue) {
    /* istanbul ignore next */
    cov_4bvhw69wg().f[6]++;
    var path =
    /* istanbul ignore next */
    (cov_4bvhw69wg().s[7]++, issue.path.join("."));
    var pathStr =
    /* istanbul ignore next */
    (cov_4bvhw69wg().s[8]++, path ?
    /* istanbul ignore next */
    (cov_4bvhw69wg().b[0][0]++, "".concat(path, ": ")) :
    /* istanbul ignore next */
    (cov_4bvhw69wg().b[0][1]++, ""));
    /* istanbul ignore next */
    cov_4bvhw69wg().s[9]++;
    return /* istanbul ignore next */"".concat(pathStr).concat(issue.message);
  });
}

/**
 * Creates a formatted error message from validation result
 */
export function getValidationErrorMessage(result) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[7]++;
  cov_4bvhw69wg().s[10]++;
  if (result.success) {
    /* istanbul ignore next */
    cov_4bvhw69wg().b[1][0]++;
    cov_4bvhw69wg().s[11]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_4bvhw69wg().b[1][1]++;
  }
  var errors =
  /* istanbul ignore next */
  (cov_4bvhw69wg().s[12]++, formatValidationErrors(result.error));
  /* istanbul ignore next */
  cov_4bvhw69wg().s[13]++;
  return errors.length === 1 ?
  /* istanbul ignore next */
  (cov_4bvhw69wg().b[2][0]++, errors[0]) :
  /* istanbul ignore next */
  (cov_4bvhw69wg().b[2][1]++, errors.join("; "));
}

/**
 * Validates data and returns either the parsed result or formatted error
 */
export function validateOrError(schema, data) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[8]++;
  var result =
  /* istanbul ignore next */
  (cov_4bvhw69wg().s[14]++, schema.safeParse(data));
  /* istanbul ignore next */
  cov_4bvhw69wg().s[15]++;
  if (result.success) {
    /* istanbul ignore next */
    cov_4bvhw69wg().b[3][0]++;
    cov_4bvhw69wg().s[16]++;
    return {
      success: true,
      data: result.data
    };
  } else
  /* istanbul ignore next */
  {
    cov_4bvhw69wg().b[3][1]++;
  }
  var errorMessage =
  /* istanbul ignore next */
  (cov_4bvhw69wg().s[17]++, getValidationErrorMessage(result));
  /* istanbul ignore next */
  cov_4bvhw69wg().s[18]++;
  return {
    success: false,
    error:
    /* istanbul ignore next */
    (cov_4bvhw69wg().b[4][0]++, errorMessage) ||
    /* istanbul ignore next */
    (cov_4bvhw69wg().b[4][1]++, "Validation failed")
  };
}

/**
 * Middleware helper for validating API request bodies
 */
export function validateRequestBody(schema) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[9]++;
  cov_4bvhw69wg().s[19]++;
  return function (data) {
    /* istanbul ignore next */
    cov_4bvhw69wg().f[10]++;
    cov_4bvhw69wg().s[20]++;
    try {
      /* istanbul ignore next */
      cov_4bvhw69wg().s[21]++;
      return schema.parse(data);
    } catch (error) {
      /* istanbul ignore next */
      cov_4bvhw69wg().s[22]++;
      if (error instanceof z.ZodError) {
        /* istanbul ignore next */
        cov_4bvhw69wg().b[5][0]++;
        var formattedErrors =
        /* istanbul ignore next */
        (cov_4bvhw69wg().s[23]++, formatValidationErrors(error));
        /* istanbul ignore next */
        cov_4bvhw69wg().s[24]++;
        throw new ValidationError("Request validation failed", formattedErrors);
      } else
      /* istanbul ignore next */
      {
        cov_4bvhw69wg().b[5][1]++;
      }
      cov_4bvhw69wg().s[25]++;
      throw error;
    }
  };
}

/**
 * Middleware helper for validating query parameters
 */
export function validateQueryParams(schema) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[11]++;
  cov_4bvhw69wg().s[26]++;
  return function (params) {
    /* istanbul ignore next */
    cov_4bvhw69wg().f[12]++;
    cov_4bvhw69wg().s[27]++;
    try {
      /* istanbul ignore next */
      cov_4bvhw69wg().s[28]++;
      return schema.parse(params);
    } catch (error) {
      /* istanbul ignore next */
      cov_4bvhw69wg().s[29]++;
      if (error instanceof z.ZodError) {
        /* istanbul ignore next */
        cov_4bvhw69wg().b[6][0]++;
        var formattedErrors =
        /* istanbul ignore next */
        (cov_4bvhw69wg().s[30]++, formatValidationErrors(error));
        /* istanbul ignore next */
        cov_4bvhw69wg().s[31]++;
        throw new ValidationError("Query parameter validation failed", formattedErrors);
      } else
      /* istanbul ignore next */
      {
        cov_4bvhw69wg().b[6][1]++;
      }
      cov_4bvhw69wg().s[32]++;
      throw error;
    }
  };
}

/**
 * Custom validation error class (Terry-approved)
 */
export
/* istanbul ignore next */
var ValidationError = /*#__PURE__*/function (_Error) {
  function
  /* istanbul ignore next */
  ValidationError(message) {
    /* istanbul ignore next */
    var _this;
    var errors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_4bvhw69wg().b[7][0]++, []);
    /* istanbul ignore next */
    _classCallCheck(this, ValidationError);
    cov_4bvhw69wg().f[13]++;
    // Add some Terry flair to error messages
    var terryMessage =
    /* istanbul ignore next */
    (cov_4bvhw69wg().s[35]++, message.includes("validation") ?
    /* istanbul ignore next */
    (cov_4bvhw69wg().b[8][0]++, "".concat(message, " (The Terry suggests checking your input, because something has gone magnificently wrong)")) :
    /* istanbul ignore next */
    (cov_4bvhw69wg().b[8][1]++, message));
    /* istanbul ignore next */
    cov_4bvhw69wg().s[36]++;
    /* istanbul ignore next */
    _this = _callSuper(this, ValidationError, [terryMessage]);
    /* istanbul ignore next */
    _defineProperty(_this, "code", (cov_4bvhw69wg().s[33]++, "VALIDATION_ERROR"));
    /* istanbul ignore next */
    _defineProperty(_this, "statusCode", (cov_4bvhw69wg().s[34]++, 400));
    /* istanbul ignore next */
    cov_4bvhw69wg().s[37]++;
    /* istanbul ignore next */
    _this.name = "ValidationError";
    /* istanbul ignore next */
    cov_4bvhw69wg().s[38]++;
    /* istanbul ignore next */
    _this.errors = errors.map(function (error) {
      /* istanbul ignore next */
      cov_4bvhw69wg().f[14]++;
      cov_4bvhw69wg().s[39]++;
      return error.includes("required") ?
      /* istanbul ignore next */
      (cov_4bvhw69wg().b[9][0]++, "".concat(error, " - apparently this field is more important than we thought")) :
      /* istanbul ignore next */
      (cov_4bvhw69wg().b[9][1]++, error.includes("invalid") ?
      /* istanbul ignore next */
      (cov_4bvhw69wg().b[10][0]++, "".concat(error, " - which is the digital equivalent of bringing a spoon to a knife fight")) :
      /* istanbul ignore next */
      (cov_4bvhw69wg().b[10][1]++, error));
    });
    /* istanbul ignore next */
    return _this;
  }
  _inherits(ValidationError, _Error);
  return _createClass(ValidationError, [{
    key: "toJSON",
    value: function toJSON() {
      /* istanbul ignore next */
      cov_4bvhw69wg().f[15]++;
      cov_4bvhw69wg().s[40]++;
      return {
        name: this.name,
        message: this.message,
        code: this.code,
        statusCode: this.statusCode,
        errors: this.errors
      };
    }
  }]);
}(/*#__PURE__*/_wrapNativeSuper(Error));

/**
 * Type guard to check if an error is a ValidationError
 */
export function isValidationError(error) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[16]++;
  cov_4bvhw69wg().s[41]++;
  return error instanceof ValidationError;
}

/**
 * Transforms raw form data into properly typed objects
 */
export function transformFormData(formData) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[17]++;
  var data =
  /* istanbul ignore next */
  (cov_4bvhw69wg().s[42]++, {});
  /* istanbul ignore next */
  cov_4bvhw69wg().s[43]++;
  var _iterator = _createForOfIteratorHelper(formData.entries()),
    _step;
  /* istanbul ignore next */
  try {
    for (
    /* istanbul ignore next */
    _iterator.s();
    /* istanbul ignore next */
    !(_step = _iterator.n()).done;) {
      /* istanbul ignore next */
      var _step$value = _slicedToArray(_step.value, 2),
        key = _step$value[0],
        value = _step$value[1];
      /* istanbul ignore next */
      cov_4bvhw69wg().s[44]++;
      if (key.endsWith("[]")) {
        /* istanbul ignore next */
        cov_4bvhw69wg().b[11][0]++;
        // Handle array fields
        var arrayKey =
        /* istanbul ignore next */
        (cov_4bvhw69wg().s[45]++, key.slice(0, -2));
        /* istanbul ignore next */
        cov_4bvhw69wg().s[46]++;
        if (!data[arrayKey]) {
          /* istanbul ignore next */
          cov_4bvhw69wg().b[12][0]++;
          cov_4bvhw69wg().s[47]++;
          data[arrayKey] = [];
        } else
        /* istanbul ignore next */
        {
          cov_4bvhw69wg().b[12][1]++;
        }
        cov_4bvhw69wg().s[48]++;
        data[arrayKey].push(value);
      } else {
        /* istanbul ignore next */
        cov_4bvhw69wg().b[11][1]++;
        cov_4bvhw69wg().s[49]++;
        if (data[key]) {
          /* istanbul ignore next */
          cov_4bvhw69wg().b[13][0]++;
          cov_4bvhw69wg().s[50]++;
          // Convert single value to array if key already exists
          if (!Array.isArray(data[key])) {
            /* istanbul ignore next */
            cov_4bvhw69wg().b[14][0]++;
            cov_4bvhw69wg().s[51]++;
            data[key] = [data[key]];
          } else
          /* istanbul ignore next */
          {
            cov_4bvhw69wg().b[14][1]++;
          }
          cov_4bvhw69wg().s[52]++;
          data[key].push(value);
        } else {
          /* istanbul ignore next */
          cov_4bvhw69wg().b[13][1]++;
          cov_4bvhw69wg().s[53]++;
          data[key] = value;
        }
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  /* istanbul ignore next */
  cov_4bvhw69wg().s[54]++;
  return data;
}

/**
 * Transforms query string parameters to proper types
 */
export function transformQueryParams(params) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[18]++;
  var data =
  /* istanbul ignore next */
  (cov_4bvhw69wg().s[55]++, {});
  /* istanbul ignore next */
  cov_4bvhw69wg().s[56]++;
  var _iterator2 = _createForOfIteratorHelper(params.entries()),
    _step2;
  /* istanbul ignore next */
  try {
    for (
    /* istanbul ignore next */
    _iterator2.s();
    /* istanbul ignore next */
    !(_step2 = _iterator2.n()).done;) {
      /* istanbul ignore next */
      var _step2$value = _slicedToArray(_step2.value, 2),
        key = _step2$value[0],
        value = _step2$value[1];
      /* istanbul ignore next */
      cov_4bvhw69wg().s[57]++;
      if (data[key]) {
        /* istanbul ignore next */
        cov_4bvhw69wg().b[15][0]++;
        cov_4bvhw69wg().s[58]++;
        // Convert to array if key already exists
        if (!Array.isArray(data[key])) {
          /* istanbul ignore next */
          cov_4bvhw69wg().b[16][0]++;
          cov_4bvhw69wg().s[59]++;
          data[key] = [data[key]];
        } else
        /* istanbul ignore next */
        {
          cov_4bvhw69wg().b[16][1]++;
        }
        cov_4bvhw69wg().s[60]++;
        data[key].push(value);
      } else {
        /* istanbul ignore next */
        cov_4bvhw69wg().b[15][1]++;
        cov_4bvhw69wg().s[61]++;
        data[key] = value;
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  /* istanbul ignore next */
  cov_4bvhw69wg().s[62]++;
  return data;
}

/**
 * Recursively removes undefined values from objects
 */
export function removeUndefined(obj) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[19]++;
  cov_4bvhw69wg().s[63]++;
  if (
  /* istanbul ignore next */
  (cov_4bvhw69wg().b[18][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_4bvhw69wg().b[18][1]++,
  /* istanbul ignore next */
  _typeof(obj) !== "object")) {
    /* istanbul ignore next */
    cov_4bvhw69wg().b[17][0]++;
    cov_4bvhw69wg().s[64]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_4bvhw69wg().b[17][1]++;
  }
  cov_4bvhw69wg().s[65]++;
  if (Array.isArray(obj)) {
    /* istanbul ignore next */
    cov_4bvhw69wg().b[19][0]++;
    cov_4bvhw69wg().s[66]++;
    return obj.map(removeUndefined);
  } else
  /* istanbul ignore next */
  {
    cov_4bvhw69wg().b[19][1]++;
  }
  var cleaned =
  /* istanbul ignore next */
  (cov_4bvhw69wg().s[67]++, {});
  /* istanbul ignore next */
  cov_4bvhw69wg().s[68]++;
  for (
  /* istanbul ignore next */
  var _i = 0, _Object$entries = Object.entries(obj);
  /* istanbul ignore next */
  _i < _Object$entries.length;
  /* istanbul ignore next */
  _i++) {
    var
      /* istanbul ignore next */
      _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
      /* istanbul ignore next */
      key = _Object$entries$_i[0],
      /* istanbul ignore next */
      value = _Object$entries$_i[1];
    /* istanbul ignore next */
    cov_4bvhw69wg().s[69]++;
    if (value !== undefined) {
      /* istanbul ignore next */
      cov_4bvhw69wg().b[20][0]++;
      cov_4bvhw69wg().s[70]++;
      cleaned[key] = removeUndefined(value);
    } else
    /* istanbul ignore next */
    {
      cov_4bvhw69wg().b[20][1]++;
    }
  }
  /* istanbul ignore next */
  cov_4bvhw69wg().s[71]++;
  return cleaned;
}

/**
 * Validates environment variables at startup
 */
export function validateEnvironmentVariables(schema) {
  /* istanbul ignore next */
  var env = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_4bvhw69wg().b[21][0]++, process.env);
  /* istanbul ignore next */
  cov_4bvhw69wg().f[20]++;
  var result =
  /* istanbul ignore next */
  (cov_4bvhw69wg().s[72]++, schema.safeParse(env));
  /* istanbul ignore next */
  cov_4bvhw69wg().s[73]++;
  if (!result.success) {
    /* istanbul ignore next */
    cov_4bvhw69wg().b[22][0]++;
    cov_4bvhw69wg().s[74]++;
    console.error("❌ Environment validation failed:");
    /* istanbul ignore next */
    cov_4bvhw69wg().s[75]++;
    console.error("");
    var errors =
    /* istanbul ignore next */
    (cov_4bvhw69wg().s[76]++, formatValidationErrors(result.error));
    /* istanbul ignore next */
    cov_4bvhw69wg().s[77]++;
    errors.forEach(function (error) {
      /* istanbul ignore next */
      cov_4bvhw69wg().f[21]++;
      cov_4bvhw69wg().s[78]++;
      return console.error(
      /* istanbul ignore next */
      "  ".concat(error));
    });
    /* istanbul ignore next */
    cov_4bvhw69wg().s[79]++;
    console.error("");
    /* istanbul ignore next */
    cov_4bvhw69wg().s[80]++;
    console.error("Please check your environment variables and try again.");
    /* istanbul ignore next */
    cov_4bvhw69wg().s[81]++;
    process.exit(1);
  } else
  /* istanbul ignore next */
  {
    cov_4bvhw69wg().b[22][1]++;
  }
  cov_4bvhw69wg().s[82]++;
  return result.data;
}

/**
 * Creates a schema for API pagination
 */
export function createPaginationSchema() {
  /* istanbul ignore next */
  var maxLimit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_4bvhw69wg().b[23][0]++, 100);
  /* istanbul ignore next */
  cov_4bvhw69wg().f[22]++;
  cov_4bvhw69wg().s[83]++;
  return z.object({
    page: z.coerce.number().min(1)[
    /* istanbul ignore next */
    "default"](1),
    limit: z.coerce.number().min(1).max(maxLimit)[
    /* istanbul ignore next */
    "default"](10),
    offset: z.coerce.number().min(0).optional()
  });
}

/**
 * Creates a schema for API sorting
 */
export function createSortSchema(fields) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[23]++;
  cov_4bvhw69wg().s[84]++;
  return z.object({
    field: z[
    /* istanbul ignore next */
    "enum"](fields),
    order: z[
    /* istanbul ignore next */
    "enum"](["asc", "desc"])[
    /* istanbul ignore next */
    "default"]("desc")
  });
}

/**
 * Creates a schema for date range queries
 */
export function createDateRangeSchema() {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[24]++;
  cov_4bvhw69wg().s[85]++;
  return z.object({
    from: z.string().datetime().optional(),
    to: z.string().datetime().optional()
  }).refine(function (data) {
    /* istanbul ignore next */
    cov_4bvhw69wg().f[25]++;
    cov_4bvhw69wg().s[86]++;
    if (
    /* istanbul ignore next */
    (cov_4bvhw69wg().b[25][0]++, data.from) &&
    /* istanbul ignore next */
    (cov_4bvhw69wg().b[25][1]++, data.to)) {
      /* istanbul ignore next */
      cov_4bvhw69wg().b[24][0]++;
      cov_4bvhw69wg().s[87]++;
      return new Date(data.from) <= new Date(data.to);
    } else
    /* istanbul ignore next */
    {
      cov_4bvhw69wg().b[24][1]++;
    }
    cov_4bvhw69wg().s[88]++;
    return true;
  }, {
    message: "End date must be after start date",
    path: ["to"]
  });
}

/**
 * Type-safe object pick utility with validation
 */
export function validateAndPick(schema, obj, keys) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[26]++;
  var validated =
  /* istanbul ignore next */
  (cov_4bvhw69wg().s[89]++, schema.parse(obj));
  var picked =
  /* istanbul ignore next */
  (cov_4bvhw69wg().s[90]++, {});
  /* istanbul ignore next */
  cov_4bvhw69wg().s[91]++;
  var _iterator3 = _createForOfIteratorHelper(keys),
    _step3;
  /* istanbul ignore next */
  try {
    for (
    /* istanbul ignore next */
    _iterator3.s();
    /* istanbul ignore next */
    !(_step3 = _iterator3.n()).done;) {
      /* istanbul ignore next */
      var key = _step3.value;
      /* istanbul ignore next */
      cov_4bvhw69wg().s[92]++;
      if (key in validated) {
        /* istanbul ignore next */
        cov_4bvhw69wg().b[26][0]++;
        cov_4bvhw69wg().s[93]++;
        picked[key] = validated[key];
      } else
      /* istanbul ignore next */
      {
        cov_4bvhw69wg().b[26][1]++;
      }
    }
  } catch (err) {
    _iterator3.e(err);
  } finally {
    _iterator3.f();
  }
  /* istanbul ignore next */
  cov_4bvhw69wg().s[94]++;
  return picked;
}

/**
 * Type-safe object omit utility with validation
 */
export function validateAndOmit(schema, obj, keys) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[27]++;
  var validated =
  /* istanbul ignore next */
  (cov_4bvhw69wg().s[95]++, schema.parse(obj));
  var result =
  /* istanbul ignore next */
  (cov_4bvhw69wg().s[96]++, _objectSpread({}, validated));
  /* istanbul ignore next */
  cov_4bvhw69wg().s[97]++;
  var _iterator4 = _createForOfIteratorHelper(keys),
    _step4;
  /* istanbul ignore next */
  try {
    for (
    /* istanbul ignore next */
    _iterator4.s();
    /* istanbul ignore next */
    !(_step4 = _iterator4.n()).done;) {
      /* istanbul ignore next */
      var key = _step4.value;
      /* istanbul ignore next */
      cov_4bvhw69wg().s[98]++;
      delete result[key];
    }
  } catch (err) {
    _iterator4.e(err);
  } finally {
    _iterator4.f();
  }
  /* istanbul ignore next */
  cov_4bvhw69wg().s[99]++;
  return result;
}

/**
 * Schema for validating file uploads
 */
export var FileUploadSchema =
/* istanbul ignore next */
(cov_4bvhw69wg().s[100]++, z.object({
  name: z.string().min(1).max(255),
  size: z.number().min(1).max(10 * 1024 * 1024),
  // 10MB max
  type: z.string().min(1),
  lastModified: z.number().min(0)
}));

/**
 * Schema for validating image uploads specifically
 */
export var ImageUploadSchema =
/* istanbul ignore next */
(cov_4bvhw69wg().s[101]++, FileUploadSchema.extend({
  type: z.string().regex(/^image\/(jpeg|jpg|png|gif|webp)$/i, "Must be a valid image format"),
  size: z.number().min(1).max(5 * 1024 * 1024) // 5MB max for images
}));

/**
 * Schema for validating URLs with specific protocols
 */
export function createUrlSchema() {
  /* istanbul ignore next */
  var protocols = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_4bvhw69wg().b[27][0]++, ["http", "https"]);
  /* istanbul ignore next */
  cov_4bvhw69wg().f[28]++;
  cov_4bvhw69wg().s[102]++;
  return z.string().url().refine(function (url) {
    /* istanbul ignore next */
    cov_4bvhw69wg().f[29]++;
    cov_4bvhw69wg().s[103]++;
    return protocols.some(function (protocol) {
      /* istanbul ignore next */
      cov_4bvhw69wg().f[30]++;
      cov_4bvhw69wg().s[104]++;
      return url.startsWith(
      /* istanbul ignore next */
      "".concat(protocol, "://"));
    });
  }, {
    message:
    /* istanbul ignore next */
    "URL must use one of these protocols: ".concat(protocols.join(", "))
  });
}

/**
 * Utility to create enum schemas from arrays
 */
export function createEnumSchema(values) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[31]++;
  cov_4bvhw69wg().s[105]++;
  return z[
  /* istanbul ignore next */
  "enum"](values);
}

/**
 * Advanced email validation schema
 */
export var AdvancedEmailSchema =
/* istanbul ignore next */
(cov_4bvhw69wg().s[106]++, z.string().email().min(5).max(254).transform(function (email) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[32]++;
  cov_4bvhw69wg().s[107]++;
  return email.toLowerCase().trim();
}).refine(function (email) {
  /* istanbul ignore next */
  cov_4bvhw69wg().f[33]++;
  // Additional validation rules
  var localPart =
  /* istanbul ignore next */
  (cov_4bvhw69wg().s[108]++, email.split("@")[0]);
  var domainPart =
  /* istanbul ignore next */
  (cov_4bvhw69wg().s[109]++, email.split("@")[1]);

  // Check local part isn't too long
  /* istanbul ignore next */
  cov_4bvhw69wg().s[110]++;
  if (localPart.length > 64) {
    /* istanbul ignore next */
    cov_4bvhw69wg().b[28][0]++;
    cov_4bvhw69wg().s[111]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_4bvhw69wg().b[28][1]++;
  }

  // Check for valid domain structure
  cov_4bvhw69wg().s[112]++;
  if (!domainPart.includes(".")) {
    /* istanbul ignore next */
    cov_4bvhw69wg().b[29][0]++;
    cov_4bvhw69wg().s[113]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_4bvhw69wg().b[29][1]++;
  }

  // Check domain parts
  var domainParts =
  /* istanbul ignore next */
  (cov_4bvhw69wg().s[114]++, domainPart.split("."));
  /* istanbul ignore next */
  cov_4bvhw69wg().s[115]++;
  var _iterator5 = _createForOfIteratorHelper(domainParts),
    _step5;
  /* istanbul ignore next */
  try {
    for (
    /* istanbul ignore next */
    _iterator5.s();
    /* istanbul ignore next */
    !(_step5 = _iterator5.n()).done;) {
      /* istanbul ignore next */
      var part = _step5.value;
      /* istanbul ignore next */
      cov_4bvhw69wg().s[116]++;
      if (
      /* istanbul ignore next */
      (cov_4bvhw69wg().b[31][0]++, part.length === 0) ||
      /* istanbul ignore next */
      (cov_4bvhw69wg().b[31][1]++, part.length > 63)) {
        /* istanbul ignore next */
        cov_4bvhw69wg().b[30][0]++;
        cov_4bvhw69wg().s[117]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_4bvhw69wg().b[30][1]++;
      }
    }
  } catch (err) {
    _iterator5.e(err);
  } finally {
    _iterator5.f();
  }
  /* istanbul ignore next */
  cov_4bvhw69wg().s[118]++;
  return true;
}, {
  message: "Invalid email format"
}));

// Export commonly used schema combinations
export var CommonSchemas =
/* istanbul ignore next */
(cov_4bvhw69wg().s[119]++, {
  id: z.string().min(1),
  slug: z.string().min(1).regex(/^[a-z0-9-]+$/, "Slug can only contain lowercase letters, numbers, and hyphens"),
  url: createUrlSchema(),
  email: AdvancedEmailSchema,
  phoneNumber: z.string().regex(/^\+?[1-9]\d{1,14}$/, "Invalid phone number format"),
  timestamp: z.string().datetime(),
  uuid: z.string().uuid(),
  pagination: createPaginationSchema(),
  dateRange: createDateRangeSchema()
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,