6d3a806337ec049e8e5671cccc20e3e3
/* istanbul ignore next */
function cov_15t2vkp4yj() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/app/api/briefings/[timestamp]/route.ts";
  var hash = "c246a1831af501e78625fb6903da24c75cc880be";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/app/api/briefings/[timestamp]/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 111,
          column: 1
        }
      },
      "1": {
        start: {
          line: 8,
          column: 35
        },
        end: {
          line: 8,
          column: 55
        }
      },
      "2": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "3": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 16
        }
      },
      "4": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "5": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 110,
          column: 4
        }
      },
      "6": {
        start: {
          line: 114,
          column: 24
        },
        end: {
          line: 119,
          column: 3
        }
      },
      "7": {
        start: {
          line: 125,
          column: 2
        },
        end: {
          line: 170,
          column: 3
        }
      },
      "8": {
        start: {
          line: 127,
          column: 31
        },
        end: {
          line: 127,
          column: 70
        }
      },
      "9": {
        start: {
          line: 138,
          column: 21
        },
        end: {
          line: 138,
          column: 56
        }
      },
      "10": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "11": {
        start: {
          line: 141,
          column: 6
        },
        end: {
          line: 144,
          column: 8
        }
      },
      "12": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 156,
          column: 6
        }
      },
      "13": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "14": {
        start: {
          line: 159,
          column: 6
        },
        end: {
          line: 162,
          column: 8
        }
      },
      "15": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 165,
          column: 53
        }
      },
      "16": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 169,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 24
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 64
          },
          end: {
            line: 111,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "GET",
        decl: {
          start: {
            line: 121,
            column: 22
          },
          end: {
            line: 121,
            column: 25
          }
        },
        loc: {
          start: {
            line: 124,
            column: 2
          },
          end: {
            line: 171,
            column: 1
          }
        },
        line: 124
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 2
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 2
          },
          end: {
            line: 12,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 6
          },
          end: {
            line: 10,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 6
          },
          end: {
            line: 10,
            column: 11
          }
        }, {
          start: {
            line: 10,
            column: 15
          },
          end: {
            line: 10,
            column: 21
          }
        }, {
          start: {
            line: 10,
            column: 25
          },
          end: {
            line: 10,
            column: 29
          }
        }, {
          start: {
            line: 10,
            column: 33
          },
          end: {
            line: 10,
            column: 38
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "3": {
        loc: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c246a1831af501e78625fb6903da24c75cc880be"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15t2vkp4yj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15t2vkp4yj();
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
import { NextResponse } from "next/server";
import { z } from "zod";
/* istanbul ignore next */
// Mock data for development - replace with database query
cov_15t2vkp4yj().s[0]++;
var getMockBriefing = function getMockBriefing(timestamp) {
  /* istanbul ignore next */
  cov_15t2vkp4yj().f[0]++;
  // Parse timestamp format: YYYY-MM-DD-HH
  var
    /* istanbul ignore next */
    _ref = (cov_15t2vkp4yj().s[1]++, timestamp.split("-")),
    /* istanbul ignore next */
    _ref2 = _slicedToArray(_ref, 4),
    /* istanbul ignore next */
    year = _ref2[0],
    /* istanbul ignore next */
    month = _ref2[1],
    /* istanbul ignore next */
    day = _ref2[2],
    /* istanbul ignore next */
    hour = _ref2[3];
  /* istanbul ignore next */
  cov_15t2vkp4yj().s[2]++;
  if (
  /* istanbul ignore next */
  (cov_15t2vkp4yj().b[1][0]++, !year) ||
  /* istanbul ignore next */
  (cov_15t2vkp4yj().b[1][1]++, !month) ||
  /* istanbul ignore next */
  (cov_15t2vkp4yj().b[1][2]++, !day) ||
  /* istanbul ignore next */
  (cov_15t2vkp4yj().b[1][3]++, !hour)) {
    /* istanbul ignore next */
    cov_15t2vkp4yj().b[0][0]++;
    cov_15t2vkp4yj().s[3]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_15t2vkp4yj().b[0][1]++;
  }
  var date =
  /* istanbul ignore next */
  (cov_15t2vkp4yj().s[4]++, new Date(parseInt(year), parseInt(month) - 1, parseInt(day), parseInt(hour)));

  // Mock briefing data
  /* istanbul ignore next */
  cov_15t2vkp4yj().s[5]++;
  return {
    id:
    /* istanbul ignore next */
    "briefing-".concat(timestamp),
    slug: timestamp,
    timestamp: date,
    title: {
      day: date.toLocaleDateString("en-US", {
        weekday: "long"
      }),
      hour:
      /* istanbul ignore next */
      "".concat(hour, ":00"),
      month: date.toLocaleDateString("en-US", {
        month: "short"
      }),
      year: year,
      funny: "Arsenal's £100m Gamble on a Man Who Can't Tie His Boots",
      full:
      /* istanbul ignore next */
      "".concat(date.toLocaleDateString("en-US", {
        weekday: "long"
      }), " ").concat(hour, ":00 Briefing ").concat(date.toLocaleDateString("en-US", {
        month: "short"
      }), " ").concat(year, " - Arsenal's \xA3100m Gamble on a Man Who Can't Tie His Boots")
    },
    summary: "The Terry dissects Arsenal's latest transfer masterclass, Fabrizio's caffeine addiction reaches new heights, and we discover why Chelsea's scouting department might be using a Magic 8-Ball.",
    metaDescription: "Arsenal transfer chaos, Fabrizio Romano updates, and Chelsea's questionable scouting decisions - The Terry brings you the latest transfer madness.",
    sections: [{
      id: "lead-1",
      type: "lead",
      title: "Lead Story",
      content:
      /* istanbul ignore next */
      "<p>Right, so Arsenal have apparently decided that what they really need to complete their title charge is a striker who, according to multiple sources, <a href=\"https://twitter.com/FabrizioRomano/status/example\">struggles with basic motor functions</a>. The \xA3100 million man in question - let's call him \"Mystery Boot Struggler\" - has reportedly been spotted at London Colney attempting to tie his laces for a solid 45 minutes.</p>\n        \n        <p>Fabrizio Romano, who at this point must be surviving on a diet consisting entirely of espresso and Twitter notifications, has been posting \"Here we go soon maybe possibly\" every 37 seconds. The man's dedication to transfer chaos is honestly both inspiring and deeply concerning.</p>",
      order: 1,
      playerMentions: ["Mystery Boot Struggler"]
    }, {
      id: "partner-1",
      type: "partner",
      title: "Meanwhile in Football Culture",
      content:
      /* istanbul ignore next */
      "<p>Speaking of transfer chaos, I was reminded of that brilliant piece by <a href=\"https://theupshot.com/arsenal-history\">The Upshot about Arsenal's history of panic buys</a>. They traced the lineage from Squillaci to Willian, and honestly, it reads like a horror anthology.</p>",
      order: 2,
      partnerSources: ["The Upshot"]
    }, {
      id: "bullshit-1",
      type: "bullshit_corner",
      title: "Bullshit Corner",
      content:
      /* istanbul ignore next */
      "<p>\uD83D\uDCA9 <strong>Today's Nonsense Champion: El Chiringuito</strong></p>\n        \n        <p>They're claiming Messi is coming out of retirement to play for Stoke City because \"he wants a real challenge.\" I mean, fair play for the ambition, but even Terry's comedy has limits.</p>",
      order: 3
    }],
    polaroids: [],
    tags: {
      clubs: ["Arsenal", "Chelsea"],
      players: ["Mystery Boot Struggler"],
      leagues: ["Premier League"],
      sources: ["FabrizioRomano", "ElChiringuito"]
    },
    metadata: {
      estimatedReadTime: 5,
      wordCount: 1247,
      terryScore: 92,
      shareCount: {
        twitter: 0,
        facebook: 0,
        whatsapp: 0,
        email: 0
      },
      viewCount: 0
    },
    sharing: {
      url:
      /* istanbul ignore next */
      "https://transferjuice.com/briefings/".concat(timestamp),
      shortUrl:
      /* istanbul ignore next */
      "https://tjuice.co/b/".concat(timestamp),
      title: "Arsenal's £100m Gamble on a Man Who Can't Tie His Boots",
      description: "The Terry dissects Arsenal's latest transfer masterclass",
      shareCount: {
        twitter: 0,
        facebook: 0,
        whatsapp: 0,
        email: 0
      }
    },
    openGraph: {
      title: "Arsenal's £100m Gamble on a Man Who Can't Tie His Boots - Transfer Juice",
      description: "The Terry dissects Arsenal's latest transfer masterclass, Fabrizio's caffeine addiction, and Chelsea's Magic 8-Ball scouting.",
      image: "https://transferjuice.com/og/briefing-default.jpg",
      url:
      /* istanbul ignore next */
      "https://transferjuice.com/briefings/".concat(timestamp)
    },
    status: "published",
    publishedAt: date,
    createdAt: date,
    updatedAt: date
  };
};

// Timestamp validation schema
var timestampSchema =
/* istanbul ignore next */
(cov_15t2vkp4yj().s[6]++, z.string().regex(/^\d{4}-\d{2}-\d{2}-\d{2}$/, "Timestamp must be in format YYYY-MM-DD-HH"));
export
/* istanbul ignore next */
function GET(_x, _x2) {
  return _GET.apply(this, arguments);
}
/* istanbul ignore next */
function _GET() {
  _GET = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(request,
  /* istanbul ignore next */
  _ref3)
  /* istanbul ignore next */
  {
    var params, validatedTimestamp, briefing, _t;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          params = _ref3.params;
          cov_15t2vkp4yj().f[1]++;
          cov_15t2vkp4yj().s[7]++;
          _context.p = 1;
          // Validate timestamp format
          validatedTimestamp = (cov_15t2vkp4yj().s[8]++, timestampSchema.parse(params.timestamp)); // TODO: Replace with actual database query
          // const briefing = await prisma.briefing.findUnique({
          //   where: { slug: validatedTimestamp },
          //   include: {
          //     sections: { orderBy: { order: 'asc' } },
          //     playerMentions: true,
          //   },
          // });
          briefing = (cov_15t2vkp4yj().s[9]++, getMockBriefing(validatedTimestamp));
          cov_15t2vkp4yj().s[10]++;
          if (briefing) {
            _context.n = 2;
            break;
          }
          cov_15t2vkp4yj().b[2][0]++;
          cov_15t2vkp4yj().s[11]++;
          return _context.a(2, NextResponse.json({
            error: "Briefing not found"
          }, {
            status: 404
          }));
        case 2:
          cov_15t2vkp4yj().b[2][1]++;
        case 3:
          cov_15t2vkp4yj().s[12]++;
          return _context.a(2, NextResponse.json({
            briefing: briefing
          }, {
            status: 200,
            headers: {
              "Cache-Control": "public, s-maxage=300, stale-while-revalidate=600"
            }
          }));
        case 4:
          _context.p = 4;
          _t = _context.v;
          cov_15t2vkp4yj().s[13]++;
          if (!(
          /* istanbul ignore next */
          _t instanceof z.ZodError)) {
            _context.n = 5;
            break;
          }
          cov_15t2vkp4yj().b[3][0]++;
          cov_15t2vkp4yj().s[14]++;
          return _context.a(2, NextResponse.json({
            error: "Invalid timestamp format. Use YYYY-MM-DD-HH"
          }, {
            status: 400
          }));
        case 5:
          cov_15t2vkp4yj().b[3][1]++;
        case 6:
          cov_15t2vkp4yj().s[15]++;
          console.error("Error fetching briefing:",
          /* istanbul ignore next */
          _t);
          cov_15t2vkp4yj().s[16]++;
          return _context.a(2, NextResponse.json({
            error: "Internal server error"
          }, {
            status: 500
          }));
      }
    }, _callee, null, [[1, 4]]);
  }));
  return _GET.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,