779f697b10688041ae3f1ee689a8ffa3
/* istanbul ignore next */
function cov_f9uqurenz() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/ai/quality-validator.ts";
  var hash = "b5ceef7d2089fa8e009868eacec56dbfddfa89ce";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/ai/quality-validator.ts",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 34
        },
        end: {
          line: 35,
          column: 2
        }
      },
      "1": {
        start: {
          line: 37,
          column: 38
        },
        end: {
          line: 53,
          column: 2
        }
      },
      "2": {
        start: {
          line: 71,
          column: 40
        },
        end: {
          line: 78,
          column: 3
        }
      },
      "3": {
        start: {
          line: 81,
          column: 37
        },
        end: {
          line: 102,
          column: 3
        }
      },
      "4": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 111,
          column: 6
        }
      },
      "5": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 115,
          column: 7
        }
      },
      "6": {
        start: {
          line: 122,
          column: 22
        },
        end: {
          line: 122,
          column: 32
        }
      },
      "7": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "8": {
        start: {
          line: 133,
          column: 10
        },
        end: {
          line: 140,
          column: 8
        }
      },
      "9": {
        start: {
          line: 142,
          column: 21
        },
        end: {
          line: 149,
          column: 7
        }
      },
      "10": {
        start: {
          line: 152,
          column: 27
        },
        end: {
          line: 152,
          column: 61
        }
      },
      "11": {
        start: {
          line: 155,
          column: 21
        },
        end: {
          line: 155,
          column: 67
        }
      },
      "12": {
        start: {
          line: 158,
          column: 34
        },
        end: {
          line: 161,
          column: 7
        }
      },
      "13": {
        start: {
          line: 164,
          column: 37
        },
        end: {
          line: 164,
          column: 66
        }
      },
      "14": {
        start: {
          line: 167,
          column: 30
        },
        end: {
          line: 167,
          column: 75
        }
      },
      "15": {
        start: {
          line: 169,
          column: 39
        },
        end: {
          line: 179,
          column: 7
        }
      },
      "16": {
        start: {
          line: 181,
          column: 6
        },
        end: {
          line: 181,
          column: 50
        }
      },
      "17": {
        start: {
          line: 183,
          column: 6
        },
        end: {
          line: 185,
          column: 8
        }
      },
      "18": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 195,
          column: 79
        }
      },
      "19": {
        start: {
          line: 195,
          column: 56
        },
        end: {
          line: 195,
          column: 65
        }
      },
      "20": {
        start: {
          line: 197,
          column: 21
        },
        end: {
          line: 223,
          column: 6
        }
      },
      "21": {
        start: {
          line: 225,
          column: 19
        },
        end: {
          line: 225,
          column: 76
        }
      },
      "22": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 235,
          column: 6
        }
      },
      "23": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 244,
          column: 79
        }
      },
      "24": {
        start: {
          line: 244,
          column: 56
        },
        end: {
          line: 244,
          column: 65
        }
      },
      "25": {
        start: {
          line: 246,
          column: 21
        },
        end: {
          line: 272,
          column: 6
        }
      },
      "26": {
        start: {
          line: 274,
          column: 19
        },
        end: {
          line: 274,
          column: 76
        }
      },
      "27": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 283,
          column: 6
        }
      },
      "28": {
        start: {
          line: 292,
          column: 20
        },
        end: {
          line: 292,
          column: 79
        }
      },
      "29": {
        start: {
          line: 292,
          column: 56
        },
        end: {
          line: 292,
          column: 65
        }
      },
      "30": {
        start: {
          line: 293,
          column: 43
        },
        end: {
          line: 293,
          column: 45
        }
      },
      "31": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 306,
          column: 5
        }
      },
      "32": {
        start: {
          line: 297,
          column: 22
        },
        end: {
          line: 297,
          column: 51
        }
      },
      "33": {
        start: {
          line: 298,
          column: 6
        },
        end: {
          line: 305,
          column: 7
        }
      },
      "34": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 304,
          column: 11
        }
      },
      "35": {
        start: {
          line: 309,
          column: 21
        },
        end: {
          line: 332,
          column: 6
        }
      },
      "36": {
        start: {
          line: 334,
          column: 21
        },
        end: {
          line: 334,
          column: 78
        }
      },
      "37": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 335,
          column: 44
        }
      },
      "38": {
        start: {
          line: 337,
          column: 18
        },
        end: {
          line: 340,
          column: 5
        }
      },
      "39": {
        start: {
          line: 342,
          column: 4
        },
        end: {
          line: 349,
          column: 6
        }
      },
      "40": {
        start: {
          line: 358,
          column: 20
        },
        end: {
          line: 358,
          column: 79
        }
      },
      "41": {
        start: {
          line: 358,
          column: 56
        },
        end: {
          line: 358,
          column: 65
        }
      },
      "42": {
        start: {
          line: 360,
          column: 21
        },
        end: {
          line: 384,
          column: 6
        }
      },
      "43": {
        start: {
          line: 386,
          column: 19
        },
        end: {
          line: 386,
          column: 76
        }
      },
      "44": {
        start: {
          line: 388,
          column: 4
        },
        end: {
          line: 396,
          column: 6
        }
      },
      "45": {
        start: {
          line: 405,
          column: 43
        },
        end: {
          line: 405,
          column: 45
        }
      },
      "46": {
        start: {
          line: 406,
          column: 16
        },
        end: {
          line: 406,
          column: 19
        }
      },
      "47": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 417,
          column: 5
        }
      },
      "48": {
        start: {
          line: 410,
          column: 6
        },
        end: {
          line: 415,
          column: 9
        }
      },
      "49": {
        start: {
          line: 416,
          column: 6
        },
        end: {
          line: 416,
          column: 18
        }
      },
      "50": {
        start: {
          line: 419,
          column: 4
        },
        end: {
          line: 427,
          column: 5
        }
      },
      "51": {
        start: {
          line: 420,
          column: 6
        },
        end: {
          line: 425,
          column: 9
        }
      },
      "52": {
        start: {
          line: 426,
          column: 6
        },
        end: {
          line: 426,
          column: 17
        }
      },
      "53": {
        start: {
          line: 430,
          column: 27
        },
        end: {
          line: 432,
          column: 5
        }
      },
      "54": {
        start: {
          line: 431,
          column: 13
        },
        end: {
          line: 431,
          column: 29
        }
      },
      "55": {
        start: {
          line: 434,
          column: 6
        },
        end: {
          line: 434,
          column: 67
        }
      },
      "56": {
        start: {
          line: 435,
          column: 4
        },
        end: {
          line: 443,
          column: 5
        }
      },
      "57": {
        start: {
          line: 436,
          column: 6
        },
        end: {
          line: 441,
          column: 9
        }
      },
      "58": {
        start: {
          line: 442,
          column: 6
        },
        end: {
          line: 442,
          column: 18
        }
      },
      "59": {
        start: {
          line: 445,
          column: 4
        },
        end: {
          line: 452,
          column: 6
        }
      },
      "60": {
        start: {
          line: 461,
          column: 43
        },
        end: {
          line: 461,
          column: 45
        }
      },
      "61": {
        start: {
          line: 462,
          column: 16
        },
        end: {
          line: 462,
          column: 19
        }
      },
      "62": {
        start: {
          line: 465,
          column: 32
        },
        end: {
          line: 465,
          column: 78
        }
      },
      "63": {
        start: {
          line: 466,
          column: 4
        },
        end: {
          line: 474,
          column: 5
        }
      },
      "64": {
        start: {
          line: 467,
          column: 6
        },
        end: {
          line: 472,
          column: 9
        }
      },
      "65": {
        start: {
          line: 473,
          column: 6
        },
        end: {
          line: 473,
          column: 18
        }
      },
      "66": {
        start: {
          line: 477,
          column: 4
        },
        end: {
          line: 485,
          column: 5
        }
      },
      "67": {
        start: {
          line: 478,
          column: 6
        },
        end: {
          line: 483,
          column: 9
        }
      },
      "68": {
        start: {
          line: 484,
          column: 6
        },
        end: {
          line: 484,
          column: 18
        }
      },
      "69": {
        start: {
          line: 487,
          column: 4
        },
        end: {
          line: 494,
          column: 6
        }
      },
      "70": {
        start: {
          line: 501,
          column: 20
        },
        end: {
          line: 508,
          column: 5
        }
      },
      "71": {
        start: {
          line: 510,
          column: 21
        },
        end: {
          line: 510,
          column: 22
        }
      },
      "72": {
        start: {
          line: 511,
          column: 22
        },
        end: {
          line: 511,
          column: 23
        }
      },
      "73": {
        start: {
          line: 513,
          column: 4
        },
        end: {
          line: 517,
          column: 5
        }
      },
      "74": {
        start: {
          line: 514,
          column: 21
        },
        end: {
          line: 514,
          column: 44
        }
      },
      "75": {
        start: {
          line: 515,
          column: 6
        },
        end: {
          line: 515,
          column: 41
        }
      },
      "76": {
        start: {
          line: 516,
          column: 6
        },
        end: {
          line: 516,
          column: 28
        }
      },
      "77": {
        start: {
          line: 519,
          column: 4
        },
        end: {
          line: 519,
          column: 48
        }
      },
      "78": {
        start: {
          line: 530,
          column: 32
        },
        end: {
          line: 534,
          column: 5
        }
      },
      "79": {
        start: {
          line: 532,
          column: 8
        },
        end: {
          line: 533,
          column: 67
        }
      },
      "80": {
        start: {
          line: 533,
          column: 37
        },
        end: {
          line: 533,
          column: 66
        }
      },
      "81": {
        start: {
          line: 536,
          column: 4
        },
        end: {
          line: 536,
          column: 42
        }
      },
      "82": {
        start: {
          line: 536,
          column: 29
        },
        end: {
          line: 536,
          column: 42
        }
      },
      "83": {
        start: {
          line: 539,
          column: 22
        },
        end: {
          line: 539,
          column: 54
        }
      },
      "84": {
        start: {
          line: 540,
          column: 4
        },
        end: {
          line: 540,
          column: 37
        }
      },
      "85": {
        start: {
          line: 551,
          column: 30
        },
        end: {
          line: 553,
          column: 5
        }
      },
      "86": {
        start: {
          line: 552,
          column: 6
        },
        end: {
          line: 552,
          column: 65
        }
      },
      "87": {
        start: {
          line: 552,
          column: 35
        },
        end: {
          line: 552,
          column: 64
        }
      },
      "88": {
        start: {
          line: 555,
          column: 4
        },
        end: {
          line: 555,
          column: 39
        }
      },
      "89": {
        start: {
          line: 555,
          column: 27
        },
        end: {
          line: 555,
          column: 39
        }
      },
      "90": {
        start: {
          line: 558,
          column: 4
        },
        end: {
          line: 558,
          column: 58
        }
      },
      "91": {
        start: {
          line: 568,
          column: 31
        },
        end: {
          line: 568,
          column: 33
        }
      },
      "92": {
        start: {
          line: 569,
          column: 31
        },
        end: {
          line: 569,
          column: 33
        }
      },
      "93": {
        start: {
          line: 571,
          column: 4
        },
        end: {
          line: 581,
          column: 5
        }
      },
      "94": {
        start: {
          line: 572,
          column: 6
        },
        end: {
          line: 580,
          column: 7
        }
      },
      "95": {
        start: {
          line: 573,
          column: 24
        },
        end: {
          line: 573,
          column: 65
        }
      },
      "96": {
        start: {
          line: 575,
          column: 8
        },
        end: {
          line: 579,
          column: 9
        }
      },
      "97": {
        start: {
          line: 576,
          column: 10
        },
        end: {
          line: 576,
          column: 33
        }
      },
      "98": {
        start: {
          line: 578,
          column: 10
        },
        end: {
          line: 578,
          column: 33
        }
      },
      "99": {
        start: {
          line: 583,
          column: 4
        },
        end: {
          line: 583,
          column: 34
        }
      },
      "100": {
        start: {
          line: 593,
          column: 65
        },
        end: {
          line: 593,
          column: 67
        }
      },
      "101": {
        start: {
          line: 596,
          column: 4
        },
        end: {
          line: 604,
          column: 5
        }
      },
      "102": {
        start: {
          line: 597,
          column: 6
        },
        end: {
          line: 603,
          column: 7
        }
      },
      "103": {
        start: {
          line: 598,
          column: 8
        },
        end: {
          line: 602,
          column: 11
        }
      },
      "104": {
        start: {
          line: 607,
          column: 4
        },
        end: {
          line: 614,
          column: 5
        }
      },
      "105": {
        start: {
          line: 608,
          column: 6
        },
        end: {
          line: 613,
          column: 9
        }
      },
      "106": {
        start: {
          line: 617,
          column: 4
        },
        end: {
          line: 624,
          column: 5
        }
      },
      "107": {
        start: {
          line: 618,
          column: 6
        },
        end: {
          line: 623,
          column: 9
        }
      },
      "108": {
        start: {
          line: 626,
          column: 4
        },
        end: {
          line: 626,
          column: 27
        }
      },
      "109": {
        start: {
          line: 633,
          column: 20
        },
        end: {
          line: 633,
          column: 76
        }
      },
      "110": {
        start: {
          line: 633,
          column: 56
        },
        end: {
          line: 633,
          column: 65
        }
      },
      "111": {
        start: {
          line: 634,
          column: 22
        },
        end: {
          line: 636,
          column: 41
        }
      },
      "112": {
        start: {
          line: 636,
          column: 21
        },
        end: {
          line: 636,
          column: 40
        }
      },
      "113": {
        start: {
          line: 637,
          column: 18
        },
        end: {
          line: 637,
          column: 66
        }
      },
      "114": {
        start: {
          line: 637,
          column: 53
        },
        end: {
          line: 637,
          column: 65
        }
      },
      "115": {
        start: {
          line: 639,
          column: 4
        },
        end: {
          line: 639,
          column: 70
        }
      },
      "116": {
        start: {
          line: 646,
          column: 4
        },
        end: {
          line: 659,
          column: 5
        }
      },
      "117": {
        start: {
          line: 647,
          column: 23
        },
        end: {
          line: 651,
          column: 8
        }
      },
      "118": {
        start: {
          line: 653,
          column: 6
        },
        end: {
          line: 653,
          column: 29
        }
      },
      "119": {
        start: {
          line: 655,
          column: 6
        },
        end: {
          line: 658,
          column: 8
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 104,
            column: 2
          },
          end: {
            line: 104,
            column: 3
          }
        },
        loc: {
          start: {
            line: 104,
            column: 39
          },
          end: {
            line: 116,
            column: 3
          }
        },
        line: 104
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 121,
            column: 2
          },
          end: {
            line: 121,
            column: 3
          }
        },
        loc: {
          start: {
            line: 121,
            column: 79
          },
          end: {
            line: 187,
            column: 3
          }
        },
        line: 121
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 192,
            column: 2
          },
          end: {
            line: 192,
            column: 3
          }
        },
        loc: {
          start: {
            line: 194,
            column: 27
          },
          end: {
            line: 236,
            column: 3
          }
        },
        line: 194
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 195,
            column: 49
          },
          end: {
            line: 195,
            column: 50
          }
        },
        loc: {
          start: {
            line: 195,
            column: 56
          },
          end: {
            line: 195,
            column: 65
          }
        },
        line: 195
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 241,
            column: 2
          },
          end: {
            line: 241,
            column: 3
          }
        },
        loc: {
          start: {
            line: 243,
            column: 27
          },
          end: {
            line: 284,
            column: 3
          }
        },
        line: 243
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 244,
            column: 49
          },
          end: {
            line: 244,
            column: 50
          }
        },
        loc: {
          start: {
            line: 244,
            column: 56
          },
          end: {
            line: 244,
            column: 65
          }
        },
        line: 244
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 289,
            column: 2
          },
          end: {
            line: 289,
            column: 3
          }
        },
        loc: {
          start: {
            line: 291,
            column: 27
          },
          end: {
            line: 350,
            column: 3
          }
        },
        line: 291
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 292,
            column: 49
          },
          end: {
            line: 292,
            column: 50
          }
        },
        loc: {
          start: {
            line: 292,
            column: 56
          },
          end: {
            line: 292,
            column: 65
          }
        },
        line: 292
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 355,
            column: 2
          },
          end: {
            line: 355,
            column: 3
          }
        },
        loc: {
          start: {
            line: 357,
            column: 27
          },
          end: {
            line: 397,
            column: 3
          }
        },
        line: 357
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 358,
            column: 49
          },
          end: {
            line: 358,
            column: 50
          }
        },
        loc: {
          start: {
            line: 358,
            column: 56
          },
          end: {
            line: 358,
            column: 65
          }
        },
        line: 358
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 402,
            column: 2
          },
          end: {
            line: 402,
            column: 3
          }
        },
        loc: {
          start: {
            line: 404,
            column: 27
          },
          end: {
            line: 453,
            column: 3
          }
        },
        line: 404
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 431,
            column: 6
          },
          end: {
            line: 431,
            column: 7
          }
        },
        loc: {
          start: {
            line: 431,
            column: 13
          },
          end: {
            line: 431,
            column: 29
          }
        },
        line: 431
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 458,
            column: 2
          },
          end: {
            line: 458,
            column: 3
          }
        },
        loc: {
          start: {
            line: 460,
            column: 27
          },
          end: {
            line: 495,
            column: 3
          }
        },
        line: 460
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 500,
            column: 2
          },
          end: {
            line: 500,
            column: 3
          }
        },
        loc: {
          start: {
            line: 500,
            column: 64
          },
          end: {
            line: 520,
            column: 3
          }
        },
        line: 500
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 525,
            column: 2
          },
          end: {
            line: 525,
            column: 3
          }
        },
        loc: {
          start: {
            line: 528,
            column: 13
          },
          end: {
            line: 541,
            column: 3
          }
        },
        line: 528
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 531,
            column: 6
          },
          end: {
            line: 531,
            column: 7
          }
        },
        loc: {
          start: {
            line: 532,
            column: 8
          },
          end: {
            line: 533,
            column: 67
          }
        },
        line: 532
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 533,
            column: 26
          },
          end: {
            line: 533,
            column: 27
          }
        },
        loc: {
          start: {
            line: 533,
            column: 37
          },
          end: {
            line: 533,
            column: 66
          }
        },
        line: 533
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 546,
            column: 2
          },
          end: {
            line: 546,
            column: 3
          }
        },
        loc: {
          start: {
            line: 549,
            column: 13
          },
          end: {
            line: 559,
            column: 3
          }
        },
        line: 549
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 551,
            column: 42
          },
          end: {
            line: 551,
            column: 43
          }
        },
        loc: {
          start: {
            line: 552,
            column: 6
          },
          end: {
            line: 552,
            column: 65
          }
        },
        line: 552
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 552,
            column: 24
          },
          end: {
            line: 552,
            column: 25
          }
        },
        loc: {
          start: {
            line: 552,
            column: 35
          },
          end: {
            line: 552,
            column: 64
          }
        },
        line: 552
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 564,
            column: 2
          },
          end: {
            line: 564,
            column: 3
          }
        },
        loc: {
          start: {
            line: 567,
            column: 4
          },
          end: {
            line: 584,
            column: 3
          }
        },
        line: 567
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 589,
            column: 2
          },
          end: {
            line: 589,
            column: 3
          }
        },
        loc: {
          start: {
            line: 592,
            column: 41
          },
          end: {
            line: 627,
            column: 3
          }
        },
        line: 592
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 632,
            column: 2
          },
          end: {
            line: 632,
            column: 3
          }
        },
        loc: {
          start: {
            line: 632,
            column: 79
          },
          end: {
            line: 640,
            column: 3
          }
        },
        line: 632
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 633,
            column: 49
          },
          end: {
            line: 633,
            column: 50
          }
        },
        loc: {
          start: {
            line: 633,
            column: 56
          },
          end: {
            line: 633,
            column: 65
          }
        },
        line: 633
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 636,
            column: 14
          },
          end: {
            line: 636,
            column: 15
          }
        },
        loc: {
          start: {
            line: 636,
            column: 21
          },
          end: {
            line: 636,
            column: 40
          }
        },
        line: 636
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 637,
            column: 46
          },
          end: {
            line: 637,
            column: 47
          }
        },
        loc: {
          start: {
            line: 637,
            column: 53
          },
          end: {
            line: 637,
            column: 65
          }
        },
        line: 637
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 645,
            column: 2
          },
          end: {
            line: 645,
            column: 3
          }
        },
        loc: {
          start: {
            line: 645,
            column: 77
          },
          end: {
            line: 660,
            column: 3
          }
        },
        line: 645
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 184,
            column: 38
          },
          end: {
            line: 184,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 184,
            column: 63
          },
          end: {
            line: 184,
            column: 76
          }
        }, {
          start: {
            line: 184,
            column: 79
          },
          end: {
            line: 184,
            column: 94
          }
        }],
        line: 184
      },
      "1": {
        loc: {
          start: {
            line: 225,
            column: 30
          },
          end: {
            line: 225,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 30
          },
          end: {
            line: 225,
            column: 67
          }
        }, {
          start: {
            line: 225,
            column: 71
          },
          end: {
            line: 225,
            column: 75
          }
        }],
        line: 225
      },
      "2": {
        loc: {
          start: {
            line: 229,
            column: 13
          },
          end: {
            line: 229,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 13
          },
          end: {
            line: 229,
            column: 25
          }
        }, {
          start: {
            line: 229,
            column: 29
          },
          end: {
            line: 229,
            column: 30
          }
        }],
        line: 229
      },
      "3": {
        loc: {
          start: {
            line: 231,
            column: 9
          },
          end: {
            line: 231,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 9
          },
          end: {
            line: 231,
            column: 21
          }
        }, {
          start: {
            line: 231,
            column: 25
          },
          end: {
            line: 231,
            column: 26
          }
        }],
        line: 231
      },
      "4": {
        loc: {
          start: {
            line: 232,
            column: 14
          },
          end: {
            line: 232,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 14
          },
          end: {
            line: 232,
            column: 27
          }
        }, {
          start: {
            line: 232,
            column: 31
          },
          end: {
            line: 232,
            column: 33
          }
        }],
        line: 232
      },
      "5": {
        loc: {
          start: {
            line: 274,
            column: 30
          },
          end: {
            line: 274,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 274,
            column: 30
          },
          end: {
            line: 274,
            column: 67
          }
        }, {
          start: {
            line: 274,
            column: 71
          },
          end: {
            line: 274,
            column: 75
          }
        }],
        line: 274
      },
      "6": {
        loc: {
          start: {
            line: 278,
            column: 22
          },
          end: {
            line: 278,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 22
          },
          end: {
            line: 278,
            column: 34
          }
        }, {
          start: {
            line: 278,
            column: 38
          },
          end: {
            line: 278,
            column: 39
          }
        }],
        line: 278
      },
      "7": {
        loc: {
          start: {
            line: 279,
            column: 15
          },
          end: {
            line: 279,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 15
          },
          end: {
            line: 279,
            column: 27
          }
        }, {
          start: {
            line: 279,
            column: 31
          },
          end: {
            line: 279,
            column: 32
          }
        }],
        line: 279
      },
      "8": {
        loc: {
          start: {
            line: 280,
            column: 14
          },
          end: {
            line: 280,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 14
          },
          end: {
            line: 280,
            column: 27
          }
        }, {
          start: {
            line: 280,
            column: 31
          },
          end: {
            line: 280,
            column: 33
          }
        }],
        line: 280
      },
      "9": {
        loc: {
          start: {
            line: 298,
            column: 6
          },
          end: {
            line: 305,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 6
          },
          end: {
            line: 305,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "10": {
        loc: {
          start: {
            line: 334,
            column: 32
          },
          end: {
            line: 334,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 32
          },
          end: {
            line: 334,
            column: 69
          }
        }, {
          start: {
            line: 334,
            column: 73
          },
          end: {
            line: 334,
            column: 77
          }
        }],
        line: 334
      },
      "11": {
        loc: {
          start: {
            line: 335,
            column: 20
          },
          end: {
            line: 335,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 335,
            column: 20
          },
          end: {
            line: 335,
            column: 35
          }
        }, {
          start: {
            line: 335,
            column: 39
          },
          end: {
            line: 335,
            column: 41
          }
        }],
        line: 335
      },
      "12": {
        loc: {
          start: {
            line: 338,
            column: 6
          },
          end: {
            line: 338,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 6
          },
          end: {
            line: 338,
            column: 20
          }
        }, {
          start: {
            line: 338,
            column: 24
          },
          end: {
            line: 338,
            column: 27
          }
        }],
        line: 338
      },
      "13": {
        loc: {
          start: {
            line: 339,
            column: 6
          },
          end: {
            line: 339,
            column: 36
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 339,
            column: 28
          },
          end: {
            line: 339,
            column: 31
          }
        }, {
          start: {
            line: 339,
            column: 34
          },
          end: {
            line: 339,
            column: 36
          }
        }],
        line: 339
      },
      "14": {
        loc: {
          start: {
            line: 386,
            column: 30
          },
          end: {
            line: 386,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 386,
            column: 30
          },
          end: {
            line: 386,
            column: 67
          }
        }, {
          start: {
            line: 386,
            column: 71
          },
          end: {
            line: 386,
            column: 75
          }
        }],
        line: 386
      },
      "15": {
        loc: {
          start: {
            line: 390,
            column: 13
          },
          end: {
            line: 390,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 13
          },
          end: {
            line: 390,
            column: 25
          }
        }, {
          start: {
            line: 390,
            column: 29
          },
          end: {
            line: 390,
            column: 30
          }
        }],
        line: 390
      },
      "16": {
        loc: {
          start: {
            line: 392,
            column: 9
          },
          end: {
            line: 392,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 392,
            column: 9
          },
          end: {
            line: 392,
            column: 21
          }
        }, {
          start: {
            line: 392,
            column: 25
          },
          end: {
            line: 392,
            column: 26
          }
        }],
        line: 392
      },
      "17": {
        loc: {
          start: {
            line: 393,
            column: 14
          },
          end: {
            line: 393,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 393,
            column: 14
          },
          end: {
            line: 393,
            column: 27
          }
        }, {
          start: {
            line: 393,
            column: 31
          },
          end: {
            line: 393,
            column: 33
          }
        }],
        line: 393
      },
      "18": {
        loc: {
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 417,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 417,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 409
      },
      "19": {
        loc: {
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 427,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 427,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 419
      },
      "20": {
        loc: {
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 443,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 443,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 435
      },
      "21": {
        loc: {
          start: {
            line: 466,
            column: 4
          },
          end: {
            line: 474,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 4
          },
          end: {
            line: 474,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "22": {
        loc: {
          start: {
            line: 477,
            column: 4
          },
          end: {
            line: 485,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 477,
            column: 4
          },
          end: {
            line: 485,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 477
      },
      "23": {
        loc: {
          start: {
            line: 532,
            column: 8
          },
          end: {
            line: 533,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 532,
            column: 8
          },
          end: {
            line: 532,
            column: 21
          }
        }, {
          start: {
            line: 533,
            column: 8
          },
          end: {
            line: 533,
            column: 67
          }
        }],
        line: 532
      },
      "24": {
        loc: {
          start: {
            line: 536,
            column: 4
          },
          end: {
            line: 536,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 536,
            column: 4
          },
          end: {
            line: 536,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 536
      },
      "25": {
        loc: {
          start: {
            line: 539,
            column: 22
          },
          end: {
            line: 539,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 539,
            column: 47
          },
          end: {
            line: 539,
            column: 49
          }
        }, {
          start: {
            line: 539,
            column: 52
          },
          end: {
            line: 539,
            column: 54
          }
        }],
        line: 539
      },
      "26": {
        loc: {
          start: {
            line: 555,
            column: 4
          },
          end: {
            line: 555,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 555,
            column: 4
          },
          end: {
            line: 555,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 555
      },
      "27": {
        loc: {
          start: {
            line: 575,
            column: 8
          },
          end: {
            line: 579,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 575,
            column: 8
          },
          end: {
            line: 579,
            column: 9
          }
        }, {
          start: {
            line: 577,
            column: 15
          },
          end: {
            line: 579,
            column: 9
          }
        }],
        line: 575
      },
      "28": {
        loc: {
          start: {
            line: 575,
            column: 12
          },
          end: {
            line: 575,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 575,
            column: 12
          },
          end: {
            line: 575,
            column: 41
          }
        }, {
          start: {
            line: 575,
            column: 45
          },
          end: {
            line: 575,
            column: 70
          }
        }],
        line: 575
      },
      "29": {
        loc: {
          start: {
            line: 597,
            column: 6
          },
          end: {
            line: 603,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 597,
            column: 6
          },
          end: {
            line: 603,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 597
      },
      "30": {
        loc: {
          start: {
            line: 607,
            column: 4
          },
          end: {
            line: 614,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 607,
            column: 4
          },
          end: {
            line: 614,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 607
      },
      "31": {
        loc: {
          start: {
            line: 617,
            column: 4
          },
          end: {
            line: 624,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 617,
            column: 4
          },
          end: {
            line: 624,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 617
      },
      "32": {
        loc: {
          start: {
            line: 639,
            column: 11
          },
          end: {
            line: 639,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 639,
            column: 34
          },
          end: {
            line: 639,
            column: 65
          }
        }, {
          start: {
            line: 639,
            column: 68
          },
          end: {
            line: 639,
            column: 69
          }
        }],
        line: 639
      },
      "33": {
        loc: {
          start: {
            line: 657,
            column: 55
          },
          end: {
            line: 657,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 657,
            column: 80
          },
          end: {
            line: 657,
            column: 93
          }
        }, {
          start: {
            line: 657,
            column: 96
          },
          end: {
            line: 657,
            column: 111
          }
        }],
        line: 657
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b5ceef7d2089fa8e009868eacec56dbfddfa89ce"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_f9uqurenz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_f9uqurenz();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Content Quality Validator
 * Multi-layered validation system for AI-generated content with human review triggers
 */

// TODO: Fix circular dependency with terry-style
// import { applyTerryStyle } from '@/lib/terry-style';
import OpenAI from 'openai';
import { z } from 'zod';
// Quality validation schemas
export var QualityCheckSchema =
/* istanbul ignore next */
(cov_f9uqurenz().s[0]++, z.object({
  category: z[
  /* istanbul ignore next */
  "enum"](['factual_accuracy', 'brand_voice', 'content_safety', 'legal_compliance', 'editorial_quality', 'accessibility']),
  score: z.number().min(0).max(100),
  passed: z[
  /* istanbul ignore next */
  "boolean"](),
  issues: z.array(z.object({
    severity: z[
    /* istanbul ignore next */
    "enum"](['low', 'medium', 'high', 'critical']),
    type: z.string(),
    description: z.string(),
    line: z.number().optional(),
    suggestion: z.string().optional()
  })),
  checkedAt: z.date(),
  checker: z[
  /* istanbul ignore next */
  "enum"](['ai', 'human', 'automated'])
}));
export var ValidationResultSchema =
/* istanbul ignore next */
(cov_f9uqurenz().s[1]++, z.object({
  overallScore: z.number().min(0).max(100),
  passed: z[
  /* istanbul ignore next */
  "boolean"](),
  requiresHumanReview: z[
  /* istanbul ignore next */
  "boolean"](),
  blockers: z.array(z.string()),
  // Critical issues preventing publication
  warnings: z.array(z.string()),
  // Non-blocking issues
  checks: z.array(QualityCheckSchema),
  recommendations: z.array(z.object({
    type: z[
    /* istanbul ignore next */
    "enum"](['improvement', 'fix_required', 'suggestion']),
    description: z.string(),
    priority: z[
    /* istanbul ignore next */
    "enum"](['low', 'medium', 'high'])
  })),
  validatedAt: z.date(),
  validationTime: z.number()
}));
export
/* istanbul ignore next */
var ContentQualityValidator = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  ContentQualityValidator(config) {
    /* istanbul ignore next */
    _classCallCheck(this, ContentQualityValidator);
    // Quality thresholds
    _defineProperty(this, "QUALITY_THRESHOLDS", (cov_f9uqurenz().s[2]++, {
      factualAccuracy: {
        min: 85,
        human: 75
      },
      brandVoice: {
        min: 80,
        human: 70
      },
      contentSafety: {
        min: 95,
        human: 90
      },
      legalCompliance: {
        min: 90,
        human: 85
      },
      editorialQuality: {
        min: 80,
        human: 70
      },
      accessibility: {
        min: 85,
        human: 80
      }
    }));
    /* istanbul ignore next */
    // Content safety patterns to check
    _defineProperty(this, "SAFETY_PATTERNS", (cov_f9uqurenz().s[3]++, [{
      pattern: /\b(libel|defamation|slander)\b/i,
      severity: 'critical',
      description: 'Potential legal issues'
    }, {
      pattern: /\b(racist|sexist|homophobic)\b/i,
      severity: 'critical',
      description: 'Discriminatory language'
    }, {
      pattern: /\b(fuck|shit|cunt)\b/i,
      severity: 'medium',
      description: 'Profanity detected'
    }, {
      pattern: /\$\d+/g,
      severity: 'low',
      description: 'Consider using £ for UK audience'
    }]));
    /* istanbul ignore next */
    cov_f9uqurenz().f[0]++;
    cov_f9uqurenz().s[4]++;
    this.config =
    /* istanbul ignore next */
    _objectSpread({
      model: 'gpt-4.1',
      strictMode: false,
      autoReviewThreshold: 85,
      terryMinimumScore: 75
    }, config);
    /* istanbul ignore next */
    cov_f9uqurenz().s[5]++;
    this.openai = new OpenAI({
      apiKey: this.config.openaiApiKey
    });
  }

  /**
   * Perform comprehensive content validation
   */
  return _createClass(ContentQualityValidator, [{
    key: "validateContent",
    value: (function () {
      var _validateContent = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee(article)
      /* istanbul ignore next */
      {
        var startTime, _ref, _ref2, factualCheck, brandVoiceCheck, safetyCheck, legalCheck, editorialCheck, accessibilityCheck, checks, overallScore, passed, requiresHumanReview, _ref3, blockers, warnings, recommendations, result, _t;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              cov_f9uqurenz().f[1]++;
              startTime = (cov_f9uqurenz().s[6]++, Date.now());
              cov_f9uqurenz().s[7]++;
              _context.p = 1;
              cov_f9uqurenz().s[8]++;
              _context.n = 2;
              return Promise.all([this.checkFactualAccuracy(article), this.checkBrandVoice(article), this.checkContentSafety(article), this.checkLegalCompliance(article), this.checkEditorialQuality(article), this.checkAccessibility(article)]);
            case 2:
              _ref = _context.v;
              _ref2 = _slicedToArray(_ref, 6);
              factualCheck = _ref2[0];
              brandVoiceCheck = _ref2[1];
              safetyCheck = _ref2[2];
              legalCheck = _ref2[3];
              editorialCheck = _ref2[4];
              accessibilityCheck = _ref2[5];
              checks = (cov_f9uqurenz().s[9]++, [factualCheck, brandVoiceCheck, safetyCheck, legalCheck, editorialCheck, accessibilityCheck]); // Calculate overall score
              overallScore = (cov_f9uqurenz().s[10]++, this.calculateOverallScore(checks)); // Determine if content passes validation
              passed = (cov_f9uqurenz().s[11]++, this.determinePassStatus(checks, overallScore)); // Check if human review is required
              requiresHumanReview = (cov_f9uqurenz().s[12]++, this.requiresHumanReview(checks, overallScore)); // Extract blockers and warnings
              _ref3 = (cov_f9uqurenz().s[13]++, this.categorizeIssues(checks)), blockers = _ref3.blockers, warnings = _ref3.warnings; // Generate recommendations
              recommendations = (cov_f9uqurenz().s[14]++, this.generateRecommendations(checks, article));
              result = (cov_f9uqurenz().s[15]++, {
                overallScore: overallScore,
                passed: passed,
                requiresHumanReview: requiresHumanReview,
                blockers: blockers,
                warnings: warnings,
                checks: checks,
                recommendations: recommendations,
                validatedAt: new Date(),
                validationTime: Date.now() - startTime
              });
              cov_f9uqurenz().s[16]++;
              return _context.a(2, ValidationResultSchema.parse(result));
            case 3:
              _context.p = 3;
              _t = _context.v;
              cov_f9uqurenz().s[17]++;
              throw new Error(
              /* istanbul ignore next */
              "Content validation failed: ".concat(
              /* istanbul ignore next */
              _t instanceof Error ?
              /* istanbul ignore next */
              (cov_f9uqurenz().b[0][0]++,
              /* istanbul ignore next */
              _t.message) :
              /* istanbul ignore next */
              (cov_f9uqurenz().b[0][1]++, 'Unknown error')));
            case 4:
              return _context.a(2);
          }
        }, _callee, this, [[1, 3]]);
      }));
      function validateContent(_x) {
        return _validateContent.apply(this, arguments);
      }
      return validateContent;
    }()
    /**
     * Check factual accuracy using AI
     */
    )
  }, {
    key: "checkFactualAccuracy",
    value: (function () {
      var _checkFactualAccuracy = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(article)
      /* istanbul ignore next */
      {
        var _response$choices$;
        var content, response, result;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              cov_f9uqurenz().f[2]++;
              content = (cov_f9uqurenz().s[18]++, article.content.sections.map(function (s) {
                /* istanbul ignore next */
                cov_f9uqurenz().f[3]++;
                cov_f9uqurenz().s[19]++;
                return s.content;
              }).join('\n\n'));
              cov_f9uqurenz().s[20]++;
              _context2.n = 1;
              return this.openai.chat.completions.create({
                model: this.config.model,
                messages: [{
                  role: 'system',
                  content:
                  /* istanbul ignore next */
                  "You are a fact-checking expert for football transfer news. Check content for factual accuracy.\n\nReturn JSON with:\n- score: 0-100 (factual accuracy)\n- issues: array of {severity, type, description, suggestion}\n\nFocus on:\n- Transfer fee accuracy\n- Player/club name accuracy  \n- Timeline consistency\n- Contradictory statements\n- Unverifiable claims"
                }, {
                  role: 'user',
                  content:
                  /* istanbul ignore next */
                  "Check this transfer article for factual accuracy:\n\n".concat(content)
                }],
                max_tokens: 800,
                temperature: 0.2,
                response_format: {
                  type: 'json_object'
                }
              });
            case 1:
              response = _context2.v;
              result = (cov_f9uqurenz().s[21]++, JSON.parse(
              /* istanbul ignore next */
              (cov_f9uqurenz().b[1][0]++, (_response$choices$ = response.choices[0]) === null || _response$choices$ === void 0 || (_response$choices$ =
              /* istanbul ignore next */
              _response$choices$.message) === null || _response$choices$ === void 0 ? void 0 :
              /* istanbul ignore next */
              _response$choices$.content) ||
              /* istanbul ignore next */
              (cov_f9uqurenz().b[1][1]++, '{}')));
              cov_f9uqurenz().s[22]++;
              return _context2.a(2, {
                category: 'factual_accuracy',
                score:
                /* istanbul ignore next */
                (cov_f9uqurenz().b[2][0]++, result.score) ||
                /* istanbul ignore next */
                (cov_f9uqurenz().b[2][1]++, 0),
                passed: (
                /* istanbul ignore next */
                (cov_f9uqurenz().b[3][0]++, result.score) ||
                /* istanbul ignore next */
                (cov_f9uqurenz().b[3][1]++, 0)) >= this.QUALITY_THRESHOLDS.factualAccuracy.min,
                issues:
                /* istanbul ignore next */
                (cov_f9uqurenz().b[4][0]++, result.issues) ||
                /* istanbul ignore next */
                (cov_f9uqurenz().b[4][1]++, []),
                checkedAt: new Date(),
                checker: 'ai'
              });
          }
        }, _callee2, this);
      }));
      function checkFactualAccuracy(_x2) {
        return _checkFactualAccuracy.apply(this, arguments);
      }
      return checkFactualAccuracy;
    }()
    /**
     * Check brand voice consistency
     */
    )
  }, {
    key: "checkBrandVoice",
    value: (function () {
      var _checkBrandVoice = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3(article)
      /* istanbul ignore next */
      {
        var _response$choices$2;
        var content, response, result;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              cov_f9uqurenz().f[4]++;
              content = (cov_f9uqurenz().s[23]++, article.content.sections.map(function (s) {
                /* istanbul ignore next */
                cov_f9uqurenz().f[5]++;
                cov_f9uqurenz().s[24]++;
                return s.content;
              }).join('\n\n'));
              cov_f9uqurenz().s[25]++;
              _context3.n = 1;
              return this.openai.chat.completions.create({
                model: this.config.model,
                messages: [{
                  role: 'system',
                  content:
                  /* istanbul ignore next */
                  "You are evaluating content for Terry/Joel Golby brand voice consistency.\n\nTerry's voice characteristics:\n- Acerbic, witty, emotionally intelligent\n- Parenthetical asides\n- Specific, absurd details\n- Weaponised irritation with empathy\n- Balance of chaos and competence\n\nReturn JSON with:\n- score: 0-100 (brand voice consistency)\n- issues: array of issues where voice is off-brand"
                }, {
                  role: 'user',
                  content:
                  /* istanbul ignore next */
                  "Evaluate this content for Terry brand voice:\n\n".concat(content)
                }],
                max_tokens: 600,
                temperature: 0.3,
                response_format: {
                  type: 'json_object'
                }
              });
            case 1:
              response = _context3.v;
              result = (cov_f9uqurenz().s[26]++, JSON.parse(
              /* istanbul ignore next */
              (cov_f9uqurenz().b[5][0]++, (_response$choices$2 = response.choices[0]) === null || _response$choices$2 === void 0 || (_response$choices$2 =
              /* istanbul ignore next */
              _response$choices$2.message) === null || _response$choices$2 === void 0 ? void 0 :
              /* istanbul ignore next */
              _response$choices$2.content) ||
              /* istanbul ignore next */
              (cov_f9uqurenz().b[5][1]++, '{}')));
              cov_f9uqurenz().s[27]++;
              return _context3.a(2, {
                category: 'brand_voice',
                score: Math.max(
                /* istanbul ignore next */
                (cov_f9uqurenz().b[6][0]++, result.score) ||
                /* istanbul ignore next */
                (cov_f9uqurenz().b[6][1]++, 0), article.content.terryScore),
                passed: (
                /* istanbul ignore next */
                (cov_f9uqurenz().b[7][0]++, result.score) ||
                /* istanbul ignore next */
                (cov_f9uqurenz().b[7][1]++, 0)) >= this.QUALITY_THRESHOLDS.brandVoice.min,
                issues:
                /* istanbul ignore next */
                (cov_f9uqurenz().b[8][0]++, result.issues) ||
                /* istanbul ignore next */
                (cov_f9uqurenz().b[8][1]++, []),
                checkedAt: new Date(),
                checker: 'ai'
              });
          }
        }, _callee3, this);
      }));
      function checkBrandVoice(_x3) {
        return _checkBrandVoice.apply(this, arguments);
      }
      return checkBrandVoice;
    }()
    /**
     * Check content safety
     */
    )
  }, {
    key: "checkContentSafety",
    value: (function () {
      var _checkContentSafety = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4(article)
      /* istanbul ignore next */
      {
        var _response$choices$3;
        var content, issues, _iterator, _step, safety, matches, response, aiResult, score;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_f9uqurenz().f[6]++;
              content = (cov_f9uqurenz().s[28]++, article.content.sections.map(function (s) {
                /* istanbul ignore next */
                cov_f9uqurenz().f[7]++;
                cov_f9uqurenz().s[29]++;
                return s.content;
              }).join('\n\n'));
              issues = (cov_f9uqurenz().s[30]++, []); // Run pattern-based safety checks
              cov_f9uqurenz().s[31]++;
              _iterator = _createForOfIteratorHelper(this.SAFETY_PATTERNS);
              try {
                for (
                /* istanbul ignore next */
                _iterator.s();
                /* istanbul ignore next */
                !(_step = _iterator.n()).done;) {
                  /* istanbul ignore next */
                  safety = _step.value;
                  /* istanbul ignore next */
                  matches = (cov_f9uqurenz().s[32]++, content.match(safety.pattern));
                  /* istanbul ignore next */
                  cov_f9uqurenz().s[33]++;
                  if (matches) {
                    /* istanbul ignore next */
                    cov_f9uqurenz().b[9][0]++;
                    cov_f9uqurenz().s[34]++;
                    issues.push({
                      severity: safety.severity,
                      type: 'safety_pattern',
                      description: safety.description,
                      suggestion: 'Review and modify flagged content'
                    });
                  } else
                  /* istanbul ignore next */
                  {
                    cov_f9uqurenz().b[9][1]++;
                  }
                }

                // AI-based safety check
              } catch (err) {
                _iterator.e(err);
              } finally {
                _iterator.f();
              }
              cov_f9uqurenz().s[35]++;
              _context4.n = 1;
              return this.openai.chat.completions.create({
                model: this.config.model,
                messages: [{
                  role: 'system',
                  content:
                  /* istanbul ignore next */
                  "Check content for safety issues. Return JSON with:\n- score: 0-100 (safety rating)\n- issues: array of safety concerns\n\nCheck for:\n- Discriminatory language\n- Potential legal issues  \n- Inappropriate content\n- Harmful misinformation"
                }, {
                  role: 'user',
                  content:
                  /* istanbul ignore next */
                  "Safety check this content:\n\n".concat(content)
                }],
                max_tokens: 400,
                temperature: 0.1,
                response_format: {
                  type: 'json_object'
                }
              });
            case 1:
              response = _context4.v;
              aiResult = (cov_f9uqurenz().s[36]++, JSON.parse(
              /* istanbul ignore next */
              (cov_f9uqurenz().b[10][0]++, (_response$choices$3 = response.choices[0]) === null || _response$choices$3 === void 0 || (_response$choices$3 =
              /* istanbul ignore next */
              _response$choices$3.message) === null || _response$choices$3 === void 0 ? void 0 :
              /* istanbul ignore next */
              _response$choices$3.content) ||
              /* istanbul ignore next */
              (cov_f9uqurenz().b[10][1]++, '{}')));
              cov_f9uqurenz().s[37]++;
              /* istanbul ignore next */
              issues.push.apply(issues,
              /* istanbul ignore next */
              _toConsumableArray(
              /* istanbul ignore next */
              (cov_f9uqurenz().b[11][0]++, aiResult.issues) ||
              /* istanbul ignore next */
              (cov_f9uqurenz().b[11][1]++, [])));
              score = (cov_f9uqurenz().s[38]++, Math.min(
              /* istanbul ignore next */
              (cov_f9uqurenz().b[12][0]++, aiResult.score) ||
              /* istanbul ignore next */
              (cov_f9uqurenz().b[12][1]++, 100), issues.length === 0 ?
              /* istanbul ignore next */
              (cov_f9uqurenz().b[13][0]++, 100) :
              /* istanbul ignore next */
              (cov_f9uqurenz().b[13][1]++, 90)));
              cov_f9uqurenz().s[39]++;
              return _context4.a(2, {
                category: 'content_safety',
                score: score,
                passed: score >= this.QUALITY_THRESHOLDS.contentSafety.min,
                issues: issues,
                checkedAt: new Date(),
                checker: 'ai'
              });
          }
        }, _callee4, this);
      }));
      function checkContentSafety(_x4) {
        return _checkContentSafety.apply(this, arguments);
      }
      return checkContentSafety;
    }()
    /**
     * Check legal compliance
     */
    )
  }, {
    key: "checkLegalCompliance",
    value: (function () {
      var _checkLegalCompliance = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee5(article)
      /* istanbul ignore next */
      {
        var _response$choices$4;
        var content, response, result;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              cov_f9uqurenz().f[8]++;
              content = (cov_f9uqurenz().s[40]++, article.content.sections.map(function (s) {
                /* istanbul ignore next */
                cov_f9uqurenz().f[9]++;
                cov_f9uqurenz().s[41]++;
                return s.content;
              }).join('\n\n'));
              cov_f9uqurenz().s[42]++;
              _context5.n = 1;
              return this.openai.chat.completions.create({
                model: this.config.model,
                messages: [{
                  role: 'system',
                  content:
                  /* istanbul ignore next */
                  "Check content for legal compliance issues. Return JSON with:\n- score: 0-100 (legal safety)\n- issues: array of potential legal issues\n\nFocus on:\n- Potential libel/defamation\n- Unsubstantiated claims about individuals\n- Copyright concerns\n- Privacy violations\n- Misleading statements"
                }, {
                  role: 'user',
                  content:
                  /* istanbul ignore next */
                  "Legal compliance check:\n\n".concat(content)
                }],
                max_tokens: 500,
                temperature: 0.1,
                response_format: {
                  type: 'json_object'
                }
              });
            case 1:
              response = _context5.v;
              result = (cov_f9uqurenz().s[43]++, JSON.parse(
              /* istanbul ignore next */
              (cov_f9uqurenz().b[14][0]++, (_response$choices$4 = response.choices[0]) === null || _response$choices$4 === void 0 || (_response$choices$4 =
              /* istanbul ignore next */
              _response$choices$4.message) === null || _response$choices$4 === void 0 ? void 0 :
              /* istanbul ignore next */
              _response$choices$4.content) ||
              /* istanbul ignore next */
              (cov_f9uqurenz().b[14][1]++, '{}')));
              cov_f9uqurenz().s[44]++;
              return _context5.a(2, {
                category: 'legal_compliance',
                score:
                /* istanbul ignore next */
                (cov_f9uqurenz().b[15][0]++, result.score) ||
                /* istanbul ignore next */
                (cov_f9uqurenz().b[15][1]++, 0),
                passed: (
                /* istanbul ignore next */
                (cov_f9uqurenz().b[16][0]++, result.score) ||
                /* istanbul ignore next */
                (cov_f9uqurenz().b[16][1]++, 0)) >= this.QUALITY_THRESHOLDS.legalCompliance.min,
                issues:
                /* istanbul ignore next */
                (cov_f9uqurenz().b[17][0]++, result.issues) ||
                /* istanbul ignore next */
                (cov_f9uqurenz().b[17][1]++, []),
                checkedAt: new Date(),
                checker: 'ai'
              });
          }
        }, _callee5, this);
      }));
      function checkLegalCompliance(_x5) {
        return _checkLegalCompliance.apply(this, arguments);
      }
      return checkLegalCompliance;
    }()
    /**
     * Check editorial quality
     */
    )
  }, {
    key: "checkEditorialQuality",
    value: (function () {
      var _checkEditorialQuality = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee6(article)
      /* istanbul ignore next */
      {
        var issues, score, sectionLengths, imbalanced;
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.n) {
            case 0:
              cov_f9uqurenz().f[10]++;
              issues = (cov_f9uqurenz().s[45]++, []);
              score = (cov_f9uqurenz().s[46]++, 100); // Basic quality checks
              cov_f9uqurenz().s[47]++;
              if (article.content.wordCount < 300) {
                /* istanbul ignore next */
                cov_f9uqurenz().b[18][0]++;
                cov_f9uqurenz().s[48]++;
                issues.push({
                  severity: 'medium',
                  type: 'length',
                  description: 'Article may be too short for substantive coverage',
                  suggestion: 'Consider adding more detail or context'
                });
                /* istanbul ignore next */
                cov_f9uqurenz().s[49]++;
                score -= 15;
              } else
              /* istanbul ignore next */
              {
                cov_f9uqurenz().b[18][1]++;
              }
              cov_f9uqurenz().s[50]++;
              if (article.content.wordCount > 1500) {
                /* istanbul ignore next */
                cov_f9uqurenz().b[19][0]++;
                cov_f9uqurenz().s[51]++;
                issues.push({
                  severity: 'low',
                  type: 'length',
                  description: 'Article may be too long for target audience',
                  suggestion: 'Consider breaking into multiple pieces'
                });
                /* istanbul ignore next */
                cov_f9uqurenz().s[52]++;
                score -= 5;
              } else
              /* istanbul ignore next */
              {
                cov_f9uqurenz().b[19][1]++;
              }

              // Check section balance
              sectionLengths = (cov_f9uqurenz().s[53]++, article.content.sections.map(function (s) {
                /* istanbul ignore next */
                cov_f9uqurenz().f[11]++;
                cov_f9uqurenz().s[54]++;
                return s.content.length;
              }));
              imbalanced = (cov_f9uqurenz().s[55]++,
              /* istanbul ignore next */
              Math.max.apply(Math,
              /* istanbul ignore next */
              _toConsumableArray(sectionLengths)) >
              /* istanbul ignore next */
              Math.min.apply(Math,
              /* istanbul ignore next */
              _toConsumableArray(sectionLengths)) * 3);
              cov_f9uqurenz().s[56]++;
              if (imbalanced) {
                /* istanbul ignore next */
                cov_f9uqurenz().b[20][0]++;
                cov_f9uqurenz().s[57]++;
                issues.push({
                  severity: 'low',
                  type: 'structure',
                  description: 'Sections appear unbalanced in length',
                  suggestion: 'Redistribute content more evenly'
                });
                /* istanbul ignore next */
                cov_f9uqurenz().s[58]++;
                score -= 10;
              } else
              /* istanbul ignore next */
              {
                cov_f9uqurenz().b[20][1]++;
              }
              cov_f9uqurenz().s[59]++;
              return _context6.a(2, {
                category: 'editorial_quality',
                score: Math.max(score, 0),
                passed: score >= this.QUALITY_THRESHOLDS.editorialQuality.min,
                issues: issues,
                checkedAt: new Date(),
                checker: 'automated'
              });
          }
        }, _callee6, this);
      }));
      function checkEditorialQuality(_x6) {
        return _checkEditorialQuality.apply(this, arguments);
      }
      return checkEditorialQuality;
    }()
    /**
     * Check accessibility
     */
    )
  }, {
    key: "checkAccessibility",
    value: (function () {
      var _checkAccessibility = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee7(article)
      /* istanbul ignore next */
      {
        var issues, score, avgWordsPerSentence;
        return _regenerator().w(function (_context7) {
          while (1) switch (_context7.n) {
            case 0:
              cov_f9uqurenz().f[12]++;
              issues = (cov_f9uqurenz().s[60]++, []);
              score = (cov_f9uqurenz().s[61]++, 100); // Check readability
              avgWordsPerSentence = (cov_f9uqurenz().s[62]++, this.calculateAverageWordsPerSentence(article));
              cov_f9uqurenz().s[63]++;
              if (avgWordsPerSentence > 25) {
                /* istanbul ignore next */
                cov_f9uqurenz().b[21][0]++;
                cov_f9uqurenz().s[64]++;
                issues.push({
                  severity: 'medium',
                  type: 'readability',
                  description: 'Sentences may be too long for accessibility',
                  suggestion: 'Break up longer sentences'
                });
                /* istanbul ignore next */
                cov_f9uqurenz().s[65]++;
                score -= 15;
              } else
              /* istanbul ignore next */
              {
                cov_f9uqurenz().b[21][1]++;
              }

              // Check for clear section structure
              cov_f9uqurenz().s[66]++;
              if (article.content.sections.length < 3) {
                /* istanbul ignore next */
                cov_f9uqurenz().b[22][0]++;
                cov_f9uqurenz().s[67]++;
                issues.push({
                  severity: 'low',
                  type: 'structure',
                  description: 'Article could benefit from clearer section structure',
                  suggestion: 'Consider adding subheadings'
                });
                /* istanbul ignore next */
                cov_f9uqurenz().s[68]++;
                score -= 10;
              } else
              /* istanbul ignore next */
              {
                cov_f9uqurenz().b[22][1]++;
              }
              cov_f9uqurenz().s[69]++;
              return _context7.a(2, {
                category: 'accessibility',
                score: Math.max(score, 0),
                passed: score >= this.QUALITY_THRESHOLDS.accessibility.min,
                issues: issues,
                checkedAt: new Date(),
                checker: 'automated'
              });
          }
        }, _callee7, this);
      }));
      function checkAccessibility(_x7) {
        return _checkAccessibility.apply(this, arguments);
      }
      return checkAccessibility;
    }()
    /**
     * Calculate overall quality score
     */
    )
  }, {
    key: "calculateOverallScore",
    value: function calculateOverallScore(checks) {
      /* istanbul ignore next */
      cov_f9uqurenz().f[13]++;
      var weights =
      /* istanbul ignore next */
      (cov_f9uqurenz().s[70]++, {
        factual_accuracy: 0.25,
        brand_voice: 0.2,
        content_safety: 0.25,
        legal_compliance: 0.15,
        editorial_quality: 0.1,
        accessibility: 0.05
      });
      var totalScore =
      /* istanbul ignore next */
      (cov_f9uqurenz().s[71]++, 0);
      var totalWeight =
      /* istanbul ignore next */
      (cov_f9uqurenz().s[72]++, 0);
      /* istanbul ignore next */
      cov_f9uqurenz().s[73]++;
      var _iterator2 = _createForOfIteratorHelper(checks),
        _step2;
      /* istanbul ignore next */
      try {
        for (
        /* istanbul ignore next */
        _iterator2.s();
        /* istanbul ignore next */
        !(_step2 = _iterator2.n()).done;) {
          /* istanbul ignore next */
          var check = _step2.value;
          var weight =
          /* istanbul ignore next */
          (cov_f9uqurenz().s[74]++, weights[check.category]);
          /* istanbul ignore next */
          cov_f9uqurenz().s[75]++;
          totalScore += check.score * weight;
          /* istanbul ignore next */
          cov_f9uqurenz().s[76]++;
          totalWeight += weight;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      /* istanbul ignore next */
      cov_f9uqurenz().s[77]++;
      return Math.round(totalScore / totalWeight);
    }

    /**
     * Determine if content passes validation
     */
  }, {
    key: "determinePassStatus",
    value: function determinePassStatus(checks, overallScore) {
      /* istanbul ignore next */
      cov_f9uqurenz().f[14]++;
      // Must pass all critical checks
      var hasCriticalFailures =
      /* istanbul ignore next */
      (cov_f9uqurenz().s[78]++, checks.some(function (check) {
        /* istanbul ignore next */
        cov_f9uqurenz().f[15]++;
        cov_f9uqurenz().s[79]++;
        return /* istanbul ignore next */(cov_f9uqurenz().b[23][0]++, !check.passed) &&
        /* istanbul ignore next */
        (cov_f9uqurenz().b[23][1]++, check.issues.some(function (issue) {
          /* istanbul ignore next */
          cov_f9uqurenz().f[16]++;
          cov_f9uqurenz().s[80]++;
          return issue.severity === 'critical';
        }));
      }));
      /* istanbul ignore next */
      cov_f9uqurenz().s[81]++;
      if (hasCriticalFailures) {
        /* istanbul ignore next */
        cov_f9uqurenz().b[24][0]++;
        cov_f9uqurenz().s[82]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_f9uqurenz().b[24][1]++;
      }

      // Must meet overall score threshold
      var threshold =
      /* istanbul ignore next */
      (cov_f9uqurenz().s[83]++, this.config.strictMode ?
      /* istanbul ignore next */
      (cov_f9uqurenz().b[25][0]++, 85) :
      /* istanbul ignore next */
      (cov_f9uqurenz().b[25][1]++, 75));
      /* istanbul ignore next */
      cov_f9uqurenz().s[84]++;
      return overallScore >= threshold;
    }

    /**
     * Check if human review is required
     */
  }, {
    key: "requiresHumanReview",
    value: function requiresHumanReview(checks, overallScore) {
      /* istanbul ignore next */
      cov_f9uqurenz().f[17]++;
      // Always require human review for critical issues
      var hasCriticalIssues =
      /* istanbul ignore next */
      (cov_f9uqurenz().s[85]++, checks.some(function (check) {
        /* istanbul ignore next */
        cov_f9uqurenz().f[18]++;
        cov_f9uqurenz().s[86]++;
        return check.issues.some(function (issue) {
          /* istanbul ignore next */
          cov_f9uqurenz().f[19]++;
          cov_f9uqurenz().s[87]++;
          return issue.severity === 'critical';
        });
      }));
      /* istanbul ignore next */
      cov_f9uqurenz().s[88]++;
      if (hasCriticalIssues) {
        /* istanbul ignore next */
        cov_f9uqurenz().b[26][0]++;
        cov_f9uqurenz().s[89]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_f9uqurenz().b[26][1]++;
      }

      // Require review if below auto-review threshold
      cov_f9uqurenz().s[90]++;
      return overallScore < this.config.autoReviewThreshold;
    }

    /**
     * Categorize issues into blockers and warnings
     */
  }, {
    key: "categorizeIssues",
    value: function categorizeIssues(checks) {
      /* istanbul ignore next */
      cov_f9uqurenz().f[20]++;
      var blockers =
      /* istanbul ignore next */
      (cov_f9uqurenz().s[91]++, []);
      var warnings =
      /* istanbul ignore next */
      (cov_f9uqurenz().s[92]++, []);
      /* istanbul ignore next */
      cov_f9uqurenz().s[93]++;
      var _iterator3 = _createForOfIteratorHelper(checks),
        _step3;
      /* istanbul ignore next */
      try {
        for (
        /* istanbul ignore next */
        _iterator3.s();
        /* istanbul ignore next */
        !(_step3 = _iterator3.n()).done;) {
          /* istanbul ignore next */
          var check = _step3.value;
          /* istanbul ignore next */
          cov_f9uqurenz().s[94]++;
          var _iterator4 = _createForOfIteratorHelper(check.issues),
            _step4;
          /* istanbul ignore next */
          try {
            for (
            /* istanbul ignore next */
            _iterator4.s();
            /* istanbul ignore next */
            !(_step4 = _iterator4.n()).done;) {
              /* istanbul ignore next */
              var issue = _step4.value;
              var message =
              /* istanbul ignore next */
              (cov_f9uqurenz().s[95]++, "".concat(check.category, ": ").concat(issue.description));
              /* istanbul ignore next */
              cov_f9uqurenz().s[96]++;
              if (
              /* istanbul ignore next */
              (cov_f9uqurenz().b[28][0]++, issue.severity === 'critical') ||
              /* istanbul ignore next */
              (cov_f9uqurenz().b[28][1]++, issue.severity === 'high')) {
                /* istanbul ignore next */
                cov_f9uqurenz().b[27][0]++;
                cov_f9uqurenz().s[97]++;
                blockers.push(message);
              } else {
                /* istanbul ignore next */
                cov_f9uqurenz().b[27][1]++;
                cov_f9uqurenz().s[98]++;
                warnings.push(message);
              }
            }
          } catch (err) {
            _iterator4.e(err);
          } finally {
            _iterator4.f();
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      /* istanbul ignore next */
      cov_f9uqurenz().s[99]++;
      return {
        blockers: blockers,
        warnings: warnings
      };
    }

    /**
     * Generate improvement recommendations
     */
  }, {
    key: "generateRecommendations",
    value: function generateRecommendations(checks, article) {
      /* istanbul ignore next */
      cov_f9uqurenz().f[21]++;
      var recommendations =
      /* istanbul ignore next */
      (cov_f9uqurenz().s[100]++, []);

      // Add recommendations based on check results
      /* istanbul ignore next */
      cov_f9uqurenz().s[101]++;
      var _iterator5 = _createForOfIteratorHelper(checks),
        _step5;
      /* istanbul ignore next */
      try {
        for (
        /* istanbul ignore next */
        _iterator5.s();
        /* istanbul ignore next */
        !(_step5 = _iterator5.n()).done;) {
          /* istanbul ignore next */
          var check = _step5.value;
          /* istanbul ignore next */
          cov_f9uqurenz().s[102]++;
          if (!check.passed) {
            /* istanbul ignore next */
            cov_f9uqurenz().b[29][0]++;
            cov_f9uqurenz().s[103]++;
            recommendations.push({
              type: 'fix_required',
              description:
              /* istanbul ignore next */
              "Improve ".concat(check.category.replace('_', ' '), " score (currently ").concat(check.score, "/100)"),
              priority: 'high'
            });
          } else
          /* istanbul ignore next */
          {
            cov_f9uqurenz().b[29][1]++;
          }
        }

        // Terry-specific recommendations
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
      /* istanbul ignore next */
      cov_f9uqurenz().s[104]++;
      if (article.content.terryScore < this.config.terryMinimumScore) {
        /* istanbul ignore next */
        cov_f9uqurenz().b[30][0]++;
        cov_f9uqurenz().s[105]++;
        recommendations.push({
          type: 'improvement',
          description: 'Enhance Terry voice with more parenthetical asides and specific observations',
          priority: 'medium'
        });
      } else
      /* istanbul ignore next */
      {
        cov_f9uqurenz().b[30][1]++;
      }

      // Quality improvements
      cov_f9uqurenz().s[106]++;
      if (article.qualityScore < 90) {
        /* istanbul ignore next */
        cov_f9uqurenz().b[31][0]++;
        cov_f9uqurenz().s[107]++;
        recommendations.push({
          type: 'suggestion',
          description: 'Consider adding more specific details and context to improve overall quality',
          priority: 'low'
        });
      } else
      /* istanbul ignore next */
      {
        cov_f9uqurenz().b[31][1]++;
      }
      cov_f9uqurenz().s[108]++;
      return recommendations;
    }

    /**
     * Calculate average words per sentence
     */
  }, {
    key: "calculateAverageWordsPerSentence",
    value: function calculateAverageWordsPerSentence(article) {
      /* istanbul ignore next */
      cov_f9uqurenz().f[22]++;
      var allText =
      /* istanbul ignore next */
      (cov_f9uqurenz().s[109]++, article.content.sections.map(function (s) {
        /* istanbul ignore next */
        cov_f9uqurenz().f[23]++;
        cov_f9uqurenz().s[110]++;
        return s.content;
      }).join(' '));
      var sentences =
      /* istanbul ignore next */
      (cov_f9uqurenz().s[111]++, allText.split(/[.!?]+/).filter(function (s) {
        /* istanbul ignore next */
        cov_f9uqurenz().f[24]++;
        cov_f9uqurenz().s[112]++;
        return s.trim().length > 0;
      }));
      var words =
      /* istanbul ignore next */
      (cov_f9uqurenz().s[113]++, allText.split(/\s+/).filter(function (w) {
        /* istanbul ignore next */
        cov_f9uqurenz().f[25]++;
        cov_f9uqurenz().s[114]++;
        return w.length > 0;
      }));
      /* istanbul ignore next */
      cov_f9uqurenz().s[115]++;
      return sentences.length > 0 ?
      /* istanbul ignore next */
      (cov_f9uqurenz().b[32][0]++, words.length / sentences.length) :
      /* istanbul ignore next */
      (cov_f9uqurenz().b[32][1]++, 0);
    }

    /**
     * Validate configuration
     */
  }, {
    key: "validateConfiguration",
    value: (function () {
      var _validateConfiguration = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee8()
      /* istanbul ignore next */
      {
        var response, _t2;
        return _regenerator().w(function (_context8) {
          while (1) switch (_context8.n) {
            case 0:
              cov_f9uqurenz().f[26]++;
              cov_f9uqurenz().s[116]++;
              _context8.p = 1;
              cov_f9uqurenz().s[117]++;
              _context8.n = 2;
              return this.openai.chat.completions.create({
                model: this.config.model,
                messages: [{
                  role: 'user',
                  content: 'Test'
                }],
                max_tokens: 5
              });
            case 2:
              response = _context8.v;
              cov_f9uqurenz().s[118]++;
              return _context8.a(2, {
                valid: true
              });
            case 3:
              _context8.p = 3;
              _t2 = _context8.v;
              cov_f9uqurenz().s[119]++;
              return _context8.a(2, {
                valid: false,
                error:
                /* istanbul ignore next */
                "Quality validator validation failed: ".concat(
                /* istanbul ignore next */
                _t2 instanceof Error ?
                /* istanbul ignore next */
                (cov_f9uqurenz().b[33][0]++,
                /* istanbul ignore next */
                _t2.message) :
                /* istanbul ignore next */
                (cov_f9uqurenz().b[33][1]++, 'Unknown error'))
              });
          }
        }, _callee8, this, [[1, 3]]);
      }));
      function validateConfiguration() {
        return _validateConfiguration.apply(this, arguments);
      }
      return validateConfiguration;
    }())
  }]);
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,