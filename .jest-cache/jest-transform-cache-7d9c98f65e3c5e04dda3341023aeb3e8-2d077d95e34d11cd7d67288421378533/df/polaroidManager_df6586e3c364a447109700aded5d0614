6c05773489a12dd918ed5198b79f27f5
/* istanbul ignore next */
function cov_gtqhckont() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/media/polaroidManager.ts";
  var hash = "0cc0862cd960ee9f11e5dd57fc1d572373344ded";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/media/polaroidManager.ts",
    statementMap: {
      "0": {
        start: {
          line: 27,
          column: 62
        },
        end: {
          line: 27,
          column: 71
        }
      },
      "1": {
        start: {
          line: 28,
          column: 48
        },
        end: {
          line: 28,
          column: 52
        }
      },
      "2": {
        start: {
          line: 29,
          column: 43
        },
        end: {
          line: 29,
          column: 56
        }
      },
      "3": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 26
        }
      },
      "4": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "5": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 49
        }
      },
      "6": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "7": {
        start: {
          line: 47,
          column: 26
        },
        end: {
          line: 47,
          column: 73
        }
      },
      "8": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 56,
          column: 7
        }
      },
      "9": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 37
        }
      },
      "10": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 70
        }
      },
      "11": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 57
        }
      },
      "12": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 18
        }
      },
      "13": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 74
        }
      },
      "14": {
        start: {
          line: 59,
          column: 44
        },
        end: {
          line: 59,
          column: 46
        }
      },
      "15": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 75,
          column: 7
        }
      },
      "16": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "17": {
        start: {
          line: 63,
          column: 27
        },
        end: {
          line: 63,
          column: 60
        }
      },
      "18": {
        start: {
          line: 64,
          column: 24
        },
        end: {
          line: 64,
          column: 47
        }
      },
      "19": {
        start: {
          line: 66,
          column: 10
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "20": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 78,
          column: 51
        }
      },
      "21": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 79,
          column: 33
        }
      },
      "22": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 83,
          column: 8
        }
      },
      "23": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 84,
          column: 27
        }
      },
      "24": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 86,
          column: 55
        }
      },
      "25": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 87,
          column: 16
        }
      },
      "26": {
        start: {
          line: 97,
          column: 31
        },
        end: {
          line: 97,
          column: 65
        }
      },
      "27": {
        start: {
          line: 98,
          column: 47
        },
        end: {
          line: 98,
          column: 49
        }
      },
      "28": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "29": {
        start: {
          line: 101,
          column: 22
        },
        end: {
          line: 103,
          column: 7
        }
      },
      "30": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 63
        }
      },
      "31": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 120,
          column: 7
        }
      },
      "32": {
        start: {
          line: 107,
          column: 25
        },
        end: {
          line: 107,
          column: 76
        }
      },
      "33": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 116,
          column: 11
        }
      },
      "34": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 67
        }
      },
      "35": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 123,
          column: 29
        }
      },
      "36": {
        start: {
          line: 134,
          column: 44
        },
        end: {
          line: 134,
          column: 46
        }
      },
      "37": {
        start: {
          line: 135,
          column: 25
        },
        end: {
          line: 135,
          column: 44
        }
      },
      "38": {
        start: {
          line: 136,
          column: 23
        },
        end: {
          line: 136,
          column: 25
        }
      },
      "39": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 161,
          column: 7
        }
      },
      "40": {
        start: {
          line: 140,
          column: 29
        },
        end: {
          line: 143,
          column: 7
        }
      },
      "41": {
        start: {
          line: 145,
          column: 6
        },
        end: {
          line: 160,
          column: 7
        }
      },
      "42": {
        start: {
          line: 147,
          column: 29
        },
        end: {
          line: 147,
          column: 46
        }
      },
      "43": {
        start: {
          line: 149,
          column: 10
        },
        end: {
          line: 149,
          column: 60
        }
      },
      "44": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 159,
          column: 11
        }
      },
      "45": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 164,
          column: 67
        }
      },
      "46": {
        start: {
          line: 164,
          column: 30
        },
        end: {
          line: 164,
          column: 65
        }
      },
      "47": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 176,
          column: 5
        }
      },
      "48": {
        start: {
          line: 167,
          column: 17
        },
        end: {
          line: 167,
          column: 18
        }
      },
      "49": {
        start: {
          line: 168,
          column: 23
        },
        end: {
          line: 168,
          column: 40
        }
      },
      "50": {
        start: {
          line: 169,
          column: 22
        },
        end: {
          line: 169,
          column: 35
        }
      },
      "51": {
        start: {
          line: 170,
          column: 26
        },
        end: {
          line: 170,
          column: 29
        }
      },
      "52": {
        start: {
          line: 172,
          column: 6
        },
        end: {
          line: 175,
          column: 7
        }
      },
      "53": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 71
        }
      },
      "54": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 56
        }
      },
      "55": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 178,
          column: 22
        }
      },
      "56": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 185,
          column: 36
        }
      },
      "57": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 18
        }
      },
      "58": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 17
        }
      },
      "59": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 194,
          column: 45
        }
      },
      "60": {
        start: {
          line: 201,
          column: 32
        },
        end: {
          line: 201,
          column: 74
        }
      },
      "61": {
        start: {
          line: 202,
          column: 22
        },
        end: {
          line: 202,
          column: 58
        }
      },
      "62": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 203,
          column: 51
        }
      },
      "63": {
        start: {
          line: 211,
          column: 33
        },
        end: {
          line: 211,
          column: 58
        }
      },
      "64": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 218,
          column: 17
        }
      },
      "65": {
        start: {
          line: 217,
          column: 21
        },
        end: {
          line: 217,
          column: 79
        }
      },
      "66": {
        start: {
          line: 228,
          column: 22
        },
        end: {
          line: 229,
          column: 47
        }
      },
      "67": {
        start: {
          line: 229,
          column: 6
        },
        end: {
          line: 229,
          column: 47
        }
      },
      "68": {
        start: {
          line: 230,
          column: 31
        },
        end: {
          line: 230,
          column: 54
        }
      },
      "69": {
        start: {
          line: 231,
          column: 30
        },
        end: {
          line: 231,
          column: 54
        }
      },
      "70": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 234,
          column: 62
        }
      },
      "71": {
        start: {
          line: 234,
          column: 50
        },
        end: {
          line: 234,
          column: 62
        }
      },
      "72": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 242,
          column: 5
        }
      },
      "73": {
        start: {
          line: 241,
          column: 6
        },
        end: {
          line: 241,
          column: 18
        }
      },
      "74": {
        start: {
          line: 245,
          column: 26
        },
        end: {
          line: 245,
          column: 65
        }
      },
      "75": {
        start: {
          line: 246,
          column: 25
        },
        end: {
          line: 246,
          column: 65
        }
      },
      "76": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 255,
          column: 5
        }
      },
      "77": {
        start: {
          line: 249,
          column: 6
        },
        end: {
          line: 254,
          column: 7
        }
      },
      "78": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "79": {
        start: {
          line: 252,
          column: 10
        },
        end: {
          line: 252,
          column: 22
        }
      },
      "80": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 257,
          column: 17
        }
      },
      "81": {
        start: {
          line: 267,
          column: 21
        },
        end: {
          line: 267,
          column: 23
        }
      },
      "82": {
        start: {
          line: 268,
          column: 18
        },
        end: {
          line: 268,
          column: 37
        }
      },
      "83": {
        start: {
          line: 269,
          column: 33
        },
        end: {
          line: 269,
          column: 57
        }
      },
      "84": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 286,
          column: 7
        }
      },
      "85": {
        start: {
          line: 272,
          column: 6
        },
        end: {
          line: 285,
          column: 7
        }
      },
      "86": {
        start: {
          line: 274,
          column: 22
        },
        end: {
          line: 274,
          column: 28
        }
      },
      "87": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 278,
          column: 30
        }
      },
      "88": {
        start: {
          line: 275,
          column: 41
        },
        end: {
          line: 275,
          column: 58
        }
      },
      "89": {
        start: {
          line: 276,
          column: 13
        },
        end: {
          line: 278,
          column: 30
        }
      },
      "90": {
        start: {
          line: 276,
          column: 46
        },
        end: {
          line: 276,
          column: 74
        }
      },
      "91": {
        start: {
          line: 277,
          column: 13
        },
        end: {
          line: 278,
          column: 30
        }
      },
      "92": {
        start: {
          line: 278,
          column: 10
        },
        end: {
          line: 278,
          column: 30
        }
      },
      "93": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 284,
          column: 11
        }
      },
      "94": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 288,
          column: 20
        }
      },
      "95": {
        start: {
          line: 299,
          column: 29
        },
        end: {
          line: 299,
          column: 31
        }
      },
      "96": {
        start: {
          line: 300,
          column: 34
        },
        end: {
          line: 300,
          column: 36
        }
      },
      "97": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 350,
          column: 5
        }
      },
      "98": {
        start: {
          line: 303,
          column: 24
        },
        end: {
          line: 303,
          column: 58
        }
      },
      "99": {
        start: {
          line: 305,
          column: 6
        },
        end: {
          line: 316,
          column: 7
        }
      },
      "100": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 73
        }
      },
      "101": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 74
        }
      },
      "102": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 310,
          column: 10
        }
      },
      "103": {
        start: {
          line: 311,
          column: 13
        },
        end: {
          line: 316,
          column: 7
        }
      },
      "104": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 314,
          column: 10
        }
      },
      "105": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 79
        }
      },
      "106": {
        start: {
          line: 319,
          column: 28
        },
        end: {
          line: 325,
          column: 7
        }
      },
      "107": {
        start: {
          line: 326,
          column: 29
        },
        end: {
          line: 326,
          column: 77
        }
      },
      "108": {
        start: {
          line: 326,
          column: 50
        },
        end: {
          line: 326,
          column: 76
        }
      },
      "109": {
        start: {
          line: 327,
          column: 28
        },
        end: {
          line: 329,
          column: 7
        }
      },
      "110": {
        start: {
          line: 328,
          column: 20
        },
        end: {
          line: 328,
          column: 73
        }
      },
      "111": {
        start: {
          line: 328,
          column: 51
        },
        end: {
          line: 328,
          column: 72
        }
      },
      "112": {
        start: {
          line: 331,
          column: 6
        },
        end: {
          line: 335,
          column: 7
        }
      },
      "113": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 334,
          column: 10
        }
      },
      "114": {
        start: {
          line: 337,
          column: 6
        },
        end: {
          line: 341,
          column: 8
        }
      },
      "115": {
        start: {
          line: 343,
          column: 6
        },
        end: {
          line: 349,
          column: 8
        }
      },
      "116": {
        start: {
          line: 363,
          column: 22
        },
        end: {
          line: 363,
          column: 56
        }
      },
      "117": {
        start: {
          line: 364,
          column: 46
        },
        end: {
          line: 364,
          column: 48
        }
      },
      "118": {
        start: {
          line: 365,
          column: 20
        },
        end: {
          line: 365,
          column: 21
        }
      },
      "119": {
        start: {
          line: 367,
          column: 4
        },
        end: {
          line: 371,
          column: 7
        }
      },
      "120": {
        start: {
          line: 368,
          column: 18
        },
        end: {
          line: 368,
          column: 50
        }
      },
      "121": {
        start: {
          line: 369,
          column: 6
        },
        end: {
          line: 369,
          column: 49
        }
      },
      "122": {
        start: {
          line: 370,
          column: 6
        },
        end: {
          line: 370,
          column: 38
        }
      },
      "123": {
        start: {
          line: 373,
          column: 26
        },
        end: {
          line: 379,
          column: 18
        }
      },
      "124": {
        start: {
          line: 374,
          column: 21
        },
        end: {
          line: 374,
          column: 35
        }
      },
      "125": {
        start: {
          line: 377,
          column: 10
        },
        end: {
          line: 377,
          column: 77
        }
      },
      "126": {
        start: {
          line: 381,
          column: 4
        },
        end: {
          line: 387,
          column: 6
        }
      },
      "127": {
        start: {
          line: 383,
          column: 50
        },
        end: {
          line: 383,
          column: 62
        }
      },
      "128": {
        start: {
          line: 392,
          column: 31
        },
        end: {
          line: 401,
          column: 1
        }
      },
      "129": {
        start: {
          line: 393,
          column: 22
        },
        end: {
          line: 393,
          column: 61
        }
      },
      "130": {
        start: {
          line: 395,
          column: 4
        },
        end: {
          line: 395,
          column: 52
        }
      },
      "131": {
        start: {
          line: 397,
          column: 4
        },
        end: {
          line: 397,
          column: 58
        }
      },
      "132": {
        start: {
          line: 398,
          column: 32
        },
        end: {
          line: 398,
          column: 72
        }
      },
      "133": {
        start: {
          line: 399,
          column: 18
        },
        end: {
          line: 399,
          column: 49
        }
      },
      "134": {
        start: {
          line: 400,
          column: 15
        },
        end: {
          line: 400,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 34,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        },
        loc: {
          start: {
            line: 34,
            column: 64
          },
          end: {
            line: 89,
            column: 3
          }
        },
        line: 34
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 94,
            column: 2
          },
          end: {
            line: 94,
            column: 3
          }
        },
        loc: {
          start: {
            line: 96,
            column: 30
          },
          end: {
            line: 124,
            column: 3
          }
        },
        line: 96
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 101,
            column: 48
          },
          end: {
            line: 101,
            column: 49
          }
        },
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 102,
            column: 63
          }
        },
        line: 102
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 129,
            column: 2
          },
          end: {
            line: 129,
            column: 3
          }
        },
        loc: {
          start: {
            line: 133,
            column: 25
          },
          end: {
            line: 179,
            column: 3
          }
        },
        line: 133
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 139,
            column: 22
          },
          end: {
            line: 139,
            column: 23
          }
        },
        loc: {
          start: {
            line: 139,
            column: 43
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 139
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 164,
            column: 20
          },
          end: {
            line: 164,
            column: 21
          }
        },
        loc: {
          start: {
            line: 164,
            column: 30
          },
          end: {
            line: 164,
            column: 65
          }
        },
        line: 164
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 184,
            column: 2
          },
          end: {
            line: 184,
            column: 3
          }
        },
        loc: {
          start: {
            line: 184,
            column: 50
          },
          end: {
            line: 186,
            column: 3
          }
        },
        line: 184
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 191,
            column: 2
          },
          end: {
            line: 191,
            column: 3
          }
        },
        loc: {
          start: {
            line: 191,
            column: 50
          },
          end: {
            line: 195,
            column: 3
          }
        },
        line: 191
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 200,
            column: 2
          },
          end: {
            line: 200,
            column: 3
          }
        },
        loc: {
          start: {
            line: 200,
            column: 56
          },
          end: {
            line: 204,
            column: 3
          }
        },
        line: 200
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 210,
            column: 2
          },
          end: {
            line: 210,
            column: 3
          }
        },
        loc: {
          start: {
            line: 210,
            column: 61
          },
          end: {
            line: 219,
            column: 3
          }
        },
        line: 210
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 217,
            column: 11
          },
          end: {
            line: 217,
            column: 12
          }
        },
        loc: {
          start: {
            line: 217,
            column: 21
          },
          end: {
            line: 217,
            column: 79
          }
        },
        line: 217
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 224,
            column: 2
          },
          end: {
            line: 224,
            column: 3
          }
        },
        loc: {
          start: {
            line: 227,
            column: 13
          },
          end: {
            line: 258,
            column: 3
          }
        },
        line: 227
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 228,
            column: 22
          },
          end: {
            line: 228,
            column: 23
          }
        },
        loc: {
          start: {
            line: 229,
            column: 6
          },
          end: {
            line: 229,
            column: 47
          }
        },
        line: 229
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 263,
            column: 2
          },
          end: {
            line: 263,
            column: 3
          }
        },
        loc: {
          start: {
            line: 266,
            column: 69
          },
          end: {
            line: 289,
            column: 3
          }
        },
        line: 266
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 271,
            column: 18
          },
          end: {
            line: 271,
            column: 19
          }
        },
        loc: {
          start: {
            line: 271,
            column: 35
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 271
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 294,
            column: 2
          },
          end: {
            line: 294,
            column: 3
          }
        },
        loc: {
          start: {
            line: 298,
            column: 5
          },
          end: {
            line: 351,
            column: 3
          }
        },
        line: 298
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 326,
            column: 43
          },
          end: {
            line: 326,
            column: 44
          }
        },
        loc: {
          start: {
            line: 326,
            column: 50
          },
          end: {
            line: 326,
            column: 76
          }
        },
        line: 326
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        },
        loc: {
          start: {
            line: 328,
            column: 20
          },
          end: {
            line: 328,
            column: 73
          }
        },
        line: 328
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 328,
            column: 41
          },
          end: {
            line: 328,
            column: 42
          }
        },
        loc: {
          start: {
            line: 328,
            column: 51
          },
          end: {
            line: 328,
            column: 72
          }
        },
        line: 328
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 356,
            column: 2
          },
          end: {
            line: 356,
            column: 3
          }
        },
        loc: {
          start: {
            line: 362,
            column: 5
          },
          end: {
            line: 388,
            column: 3
          }
        },
        line: 362
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 367,
            column: 22
          },
          end: {
            line: 367,
            column: 23
          }
        },
        loc: {
          start: {
            line: 367,
            column: 36
          },
          end: {
            line: 371,
            column: 5
          }
        },
        line: 367
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 374,
            column: 14
          },
          end: {
            line: 374,
            column: 15
          }
        },
        loc: {
          start: {
            line: 374,
            column: 21
          },
          end: {
            line: 374,
            column: 35
          }
        },
        line: 374
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 376,
            column: 8
          },
          end: {
            line: 376,
            column: 9
          }
        },
        loc: {
          start: {
            line: 377,
            column: 10
          },
          end: {
            line: 377,
            column: 77
          }
        },
        line: 377
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 383,
            column: 43
          },
          end: {
            line: 383,
            column: 44
          }
        },
        loc: {
          start: {
            line: 383,
            column: 50
          },
          end: {
            line: 383,
            column: 62
          }
        },
        line: 383
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 393,
            column: 16
          },
          end: {
            line: 393,
            column: 17
          }
        },
        loc: {
          start: {
            line: 393,
            column: 22
          },
          end: {
            line: 393,
            column: 61
          }
        },
        line: 393
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 394,
            column: 18
          },
          end: {
            line: 394,
            column: 19
          }
        },
        loc: {
          start: {
            line: 395,
            column: 4
          },
          end: {
            line: 395,
            column: 52
          }
        },
        line: 395
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 396,
            column: 22
          },
          end: {
            line: 396,
            column: 23
          }
        },
        loc: {
          start: {
            line: 397,
            column: 4
          },
          end: {
            line: 397,
            column: 58
          }
        },
        line: 397
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 398,
            column: 10
          },
          end: {
            line: 398,
            column: 11
          }
        },
        loc: {
          start: {
            line: 398,
            column: 32
          },
          end: {
            line: 398,
            column: 72
          }
        },
        line: 398
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 399,
            column: 12
          },
          end: {
            line: 399,
            column: 13
          }
        },
        loc: {
          start: {
            line: 399,
            column: 18
          },
          end: {
            line: 399,
            column: 49
          }
        },
        line: 399
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 400,
            column: 9
          },
          end: {
            line: 400,
            column: 10
          }
        },
        loc: {
          start: {
            line: 400,
            column: 15
          },
          end: {
            line: 400,
            column: 41
          }
        },
        line: 400
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 41,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 39,
            column: 26
          }
        }, {
          start: {
            line: 40,
            column: 6
          },
          end: {
            line: 40,
            column: 35
          }
        }, {
          start: {
            line: 41,
            column: 6
          },
          end: {
            line: 41,
            column: 74
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 13
          },
          end: {
            line: 43,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 13
          },
          end: {
            line: 43,
            column: 42
          }
        }, {
          start: {
            line: 43,
            column: 46
          },
          end: {
            line: 43,
            column: 48
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 25
          }
        }, {
          start: {
            line: 62,
            column: 29
          },
          end: {
            line: 62,
            column: 56
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 105,
            column: 6
          },
          end: {
            line: 120,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 6
          },
          end: {
            line: 120,
            column: 7
          }
        }, {
          start: {
            line: 117,
            column: 13
          },
          end: {
            line: 120,
            column: 7
          }
        }],
        line: 105
      },
      "6": {
        loc: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 132,
            column: 27
          },
          end: {
            line: 132,
            column: 31
          }
        }],
        line: 132
      },
      "7": {
        loc: {
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 160,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 160,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "8": {
        loc: {
          start: {
            line: 172,
            column: 6
          },
          end: {
            line: 175,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 6
          },
          end: {
            line: 175,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "9": {
        loc: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 62
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "10": {
        loc: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "11": {
        loc: {
          start: {
            line: 238,
            column: 6
          },
          end: {
            line: 239,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 6
          },
          end: {
            line: 238,
            column: 52
          }
        }, {
          start: {
            line: 239,
            column: 6
          },
          end: {
            line: 239,
            column: 52
          }
        }],
        line: 238
      },
      "12": {
        loc: {
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "13": {
        loc: {
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 250,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 250,
            column: 27
          }
        }, {
          start: {
            line: 250,
            column: 31
          },
          end: {
            line: 250,
            column: 47
          }
        }],
        line: 250
      },
      "14": {
        loc: {
          start: {
            line: 272,
            column: 6
          },
          end: {
            line: 285,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 6
          },
          end: {
            line: 285,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "15": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 278,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 278,
            column: 30
          }
        }, {
          start: {
            line: 276,
            column: 13
          },
          end: {
            line: 278,
            column: 30
          }
        }],
        line: 275
      },
      "16": {
        loc: {
          start: {
            line: 276,
            column: 13
          },
          end: {
            line: 278,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 13
          },
          end: {
            line: 278,
            column: 30
          }
        }, {
          start: {
            line: 277,
            column: 13
          },
          end: {
            line: 278,
            column: 30
          }
        }],
        line: 276
      },
      "17": {
        loc: {
          start: {
            line: 277,
            column: 13
          },
          end: {
            line: 278,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 13
          },
          end: {
            line: 278,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "18": {
        loc: {
          start: {
            line: 277,
            column: 17
          },
          end: {
            line: 277,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 17
          },
          end: {
            line: 277,
            column: 45
          }
        }, {
          start: {
            line: 277,
            column: 49
          },
          end: {
            line: 277,
            column: 74
          }
        }],
        line: 277
      },
      "19": {
        loc: {
          start: {
            line: 305,
            column: 6
          },
          end: {
            line: 316,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 6
          },
          end: {
            line: 316,
            column: 7
          }
        }, {
          start: {
            line: 311,
            column: 13
          },
          end: {
            line: 316,
            column: 7
          }
        }],
        line: 305
      },
      "20": {
        loc: {
          start: {
            line: 311,
            column: 13
          },
          end: {
            line: 316,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 13
          },
          end: {
            line: 316,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "21": {
        loc: {
          start: {
            line: 331,
            column: 6
          },
          end: {
            line: 335,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 6
          },
          end: {
            line: 335,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "22": {
        loc: {
          start: {
            line: 369,
            column: 24
          },
          end: {
            line: 369,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 24
          },
          end: {
            line: 369,
            column: 38
          }
        }, {
          start: {
            line: 369,
            column: 42
          },
          end: {
            line: 369,
            column: 43
          }
        }],
        line: 369
      },
      "23": {
        loc: {
          start: {
            line: 370,
            column: 19
          },
          end: {
            line: 370,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 19
          },
          end: {
            line: 370,
            column: 32
          }
        }, {
          start: {
            line: 370,
            column: 36
          },
          end: {
            line: 370,
            column: 37
          }
        }],
        line: 370
      },
      "24": {
        loc: {
          start: {
            line: 377,
            column: 11
          },
          end: {
            line: 377,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 377,
            column: 11
          },
          end: {
            line: 377,
            column: 36
          }
        }, {
          start: {
            line: 377,
            column: 40
          },
          end: {
            line: 377,
            column: 41
          }
        }],
        line: 377
      },
      "25": {
        loc: {
          start: {
            line: 377,
            column: 46
          },
          end: {
            line: 377,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 377,
            column: 46
          },
          end: {
            line: 377,
            column: 71
          }
        }, {
          start: {
            line: 377,
            column: 75
          },
          end: {
            line: 377,
            column: 76
          }
        }],
        line: 377
      },
      "26": {
        loc: {
          start: {
            line: 384,
            column: 23
          },
          end: {
            line: 384,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 384,
            column: 46
          },
          end: {
            line: 384,
            column: 74
          }
        }, {
          start: {
            line: 384,
            column: 77
          },
          end: {
            line: 384,
            column: 78
          }
        }],
        line: 384
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0cc0862cd960ee9f11e5dd57fc1d572373344ded"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_gtqhckont = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_gtqhckont();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _regeneratorValues(e) { if (null != e) { var t = e["function" == typeof Symbol && Symbol.iterator || "@@iterator"], r = 0; if (t) return t.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) return { next: function next() { return e && r >= e.length && (e = void 0), { value: e && e[r++], done: !e }; } }; } throw new TypeError(_typeof(e) + " is not iterable"); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Polaroid Management System
 * Handles player image sourcing from /polaroids/ folder with rotation and placement
 */

import { promises as fs } from "fs";
import path from "path";
export
/* istanbul ignore next */
var PolaroidManager = /*#__PURE__*/function () {
  function PolaroidManager() {
    _classCallCheck(this, PolaroidManager);
  }
  return _createClass(PolaroidManager, null, [{
    key: "getAvailablePolaroids",
    value: // 5 minutes
    /**
     * Get all available polaroid files from /polaroids/ directory
     */
    function () {
      var _getAvailablePolaroids = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee()
      /* istanbul ignore next */
      {
        var now, polaroidDir, files, polaroidFiles, _iterator, _step, file, fullPath, stats, _t, _t2, _t3;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              cov_gtqhckont().f[0]++;
              now = (cov_gtqhckont().s[3]++, new Date()); // Check cache freshness
              cov_gtqhckont().s[4]++;
              if (!(
              /* istanbul ignore next */
              (cov_gtqhckont().b[1][0]++, this.lastCacheUpdate) &&
              /* istanbul ignore next */
              (cov_gtqhckont().b[1][1]++, this.polaroidCache.has("all")) &&
              /* istanbul ignore next */
              (cov_gtqhckont().b[1][2]++, now.getTime() - this.lastCacheUpdate.getTime() < this.CACHE_DURATION))) {
                _context.n = 1;
                break;
              }
              cov_gtqhckont().b[0][0]++;
              cov_gtqhckont().s[5]++;
              return _context.a(2,
              /* istanbul ignore next */
              (cov_gtqhckont().b[2][0]++, this.polaroidCache.get("all")) ||
              /* istanbul ignore next */
              (cov_gtqhckont().b[2][1]++, []));
            case 1:
              cov_gtqhckont().b[0][1]++;
            case 2:
              cov_gtqhckont().s[6]++;
              _context.p = 3;
              polaroidDir = (cov_gtqhckont().s[7]++, path.join(process.cwd(), "public", "polaroids")); // Ensure directory exists
              cov_gtqhckont().s[8]++;
              _context.p = 4;
              cov_gtqhckont().s[9]++;
              _context.n = 5;
              return fs.access(polaroidDir);
            case 5:
              _context.n = 8;
              break;
            case 6:
              _context.p = 6;
              _t = _context.v;
              cov_gtqhckont().s[10]++;
              console.warn("Polaroids directory not found, creating it...");
              cov_gtqhckont().s[11]++;
              _context.n = 7;
              return fs.mkdir(polaroidDir, {
                recursive: true
              });
            case 7:
              cov_gtqhckont().s[12]++;
              return _context.a(2, []);
            case 8:
              cov_gtqhckont().s[13]++;
              _context.n = 9;
              return fs.readdir(polaroidDir, {
                withFileTypes: true
              });
            case 9:
              files = _context.v;
              polaroidFiles = (cov_gtqhckont().s[14]++, []);
              cov_gtqhckont().s[15]++;
              _iterator = _createForOfIteratorHelper(files);
              _context.p = 10;
              _iterator.s();
            case 11:
              if ((_step = _iterator.n()).done) {
                _context.n = 15;
                break;
              }
              file = _step.value;
              cov_gtqhckont().s[16]++;
              if (!(
              /* istanbul ignore next */
              (cov_gtqhckont().b[4][0]++, file.isFile()) &&
              /* istanbul ignore next */
              (cov_gtqhckont().b[4][1]++, this.isImageFile(file.name)))) {
                _context.n = 13;
                break;
              }
              cov_gtqhckont().b[3][0]++;
              fullPath = (cov_gtqhckont().s[17]++, path.join(polaroidDir, file.name));
              cov_gtqhckont().s[18]++;
              _context.n = 12;
              return fs.stat(fullPath);
            case 12:
              stats = _context.v;
              cov_gtqhckont().s[19]++;
              polaroidFiles.push({
                filename: file.name,
                playerName: this.extractPlayerName(file.name),
                fullPath: fullPath,
                extension: path.extname(file.name),
                size: stats.size,
                lastModified: stats.mtime
              });
              _context.n = 14;
              break;
            case 13:
              cov_gtqhckont().b[3][1]++;
            case 14:
              _context.n = 11;
              break;
            case 15:
              _context.n = 17;
              break;
            case 16:
              _context.p = 16;
              _t2 = _context.v;
              _iterator.e(_t2);
            case 17:
              _context.p = 17;
              _iterator.f();
              return _context.f(17);
            case 18:
              cov_gtqhckont().s[20]++;
              // Update cache
              this.polaroidCache.set("all", polaroidFiles);
              cov_gtqhckont().s[21]++;
              this.lastCacheUpdate = now;
              cov_gtqhckont().s[22]++;
              console.log(
              /* istanbul ignore next */
              "Loaded ".concat(polaroidFiles.length, " polaroid images from /polaroids/"));
              cov_gtqhckont().s[23]++;
              return _context.a(2, polaroidFiles);
            case 19:
              _context.p = 19;
              _t3 = _context.v;
              cov_gtqhckont().s[24]++;
              console.error("Error loading polaroids:",
              /* istanbul ignore next */
              _t3);
              cov_gtqhckont().s[25]++;
              return _context.a(2, []);
          }
        }, _callee, this, [[10, 16, 17, 18], [4, 6], [3, 19]]);
      }));
      function getAvailablePolaroids() {
        return _getAvailablePolaroids.apply(this, arguments);
      }
      return getAvailablePolaroids;
    }()
    /**
     * Find polaroids for specific player names
     */
  }, {
    key: "findPolaroidsForPlayers",
    value: (function () {
      var _findPolaroidsForPlayers = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(playerNames)
      /* istanbul ignore next */
      {
        var _this = this;
        var availablePolaroids, selectedPolaroids, _iterator2, _step2, _loop, _t4;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              cov_gtqhckont().f[1]++;
              cov_gtqhckont().s[26]++;
              _context3.n = 1;
              return this.getAvailablePolaroids();
            case 1:
              availablePolaroids = _context3.v;
              selectedPolaroids = (cov_gtqhckont().s[27]++, []);
              cov_gtqhckont().s[28]++;
              _iterator2 = _createForOfIteratorHelper(playerNames);
              _context3.p = 2;
              _loop = /*#__PURE__*/_regenerator().m(function _loop() {
                var playerName, matches, selected;
                return _regenerator().w(function (_context2) {
                  while (1) switch (_context2.n) {
                    case 0:
                      playerName = _step2.value;
                      matches = (cov_gtqhckont().s[29]++, availablePolaroids.filter(function (polaroid) {
                        /* istanbul ignore next */
                        cov_gtqhckont().f[2]++;
                        cov_gtqhckont().s[30]++;
                        return _this.matchesPlayerName(polaroid.playerName, playerName);
                      }));
                      cov_gtqhckont().s[31]++;
                      if (matches.length > 0) {
                        /* istanbul ignore next */
                        cov_gtqhckont().b[5][0]++;
                        // Select random polaroid if multiple available for same player
                        selected = (cov_gtqhckont().s[32]++, matches[Math.floor(Math.random() * matches.length)]);
                        /* istanbul ignore next */
                        cov_gtqhckont().s[33]++;
                        selectedPolaroids.push({
                          filename: selected.filename,
                          playerName: selected.playerName,
                          rotation: _this.generateRandomRotation(),
                          position: 0,
                          // Will be calculated based on text position
                          altText:
                          /* istanbul ignore next */
                          "".concat(selected.playerName, " - Transfer Juice"),
                          source: "manual" // From /polaroids/ folder
                        });
                      } else {
                        /* istanbul ignore next */
                        cov_gtqhckont().b[5][1]++;
                        cov_gtqhckont().s[34]++;
                        // No polaroid found, could implement fallback logic here
                        console.log(
                        /* istanbul ignore next */
                        "No polaroid found for player: ".concat(playerName));
                      }
                    case 1:
                      return _context2.a(2);
                  }
                }, _loop);
              });
              _iterator2.s();
            case 3:
              if ((_step2 = _iterator2.n()).done) {
                _context3.n = 5;
                break;
              }
              return _context3.d(_regeneratorValues(_loop()), 4);
            case 4:
              _context3.n = 3;
              break;
            case 5:
              _context3.n = 7;
              break;
            case 6:
              _context3.p = 6;
              _t4 = _context3.v;
              _iterator2.e(_t4);
            case 7:
              _context3.p = 7;
              _iterator2.f();
              return _context3.f(7);
            case 8:
              cov_gtqhckont().s[35]++;
              return _context3.a(2, selectedPolaroids);
          }
        }, _callee2, this, [[2, 6, 7, 8]]);
      }));
      function findPolaroidsForPlayers(_x) {
        return _findPolaroidsForPlayers.apply(this, arguments);
      }
      return findPolaroidsForPlayers;
    }()
    /**
     * Generate optimized polaroid placements based on text content
     */
    )
  }, {
    key: "generatePlacements",
    value: function generatePlacements(content, polaroids) {
      /* istanbul ignore next */
      var _this2 = this;
      var scrollHeight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (cov_gtqhckont().b[6][0]++, 1000);
      /* istanbul ignore next */
      cov_gtqhckont().f[3]++;
      var placements =
      /* istanbul ignore next */
      (cov_gtqhckont().s[36]++, []);
      var contentLines =
      /* istanbul ignore next */
      (cov_gtqhckont().s[37]++, content.split("\n"));
      var lineHeight =
      /* istanbul ignore next */
      (cov_gtqhckont().s[38]++, 24); // Approximate line height in pixels

      // Find player mentions in content and calculate positions
      /* istanbul ignore next */
      cov_gtqhckont().s[39]++;
      polaroids.forEach(function (polaroid, index) {
        /* istanbul ignore next */
        cov_gtqhckont().f[4]++;
        var playerMentions =
        /* istanbul ignore next */
        (cov_gtqhckont().s[40]++, _this2.findPlayerMentionsInContent(content, polaroid.playerName));
        /* istanbul ignore next */
        cov_gtqhckont().s[41]++;
        if (playerMentions.length > 0) {
          /* istanbul ignore next */
          cov_gtqhckont().b[7][0]++;
          // Use first mention for placement, could be enhanced for multiple mentions
          var firstMention =
          /* istanbul ignore next */
          (cov_gtqhckont().s[42]++, playerMentions[0]);
          var scrollPosition =
          /* istanbul ignore next */
          (cov_gtqhckont().s[43]++, firstMention.lineNumber * lineHeight + index * 120); // Offset for multiple images
          /* istanbul ignore next */
          cov_gtqhckont().s[44]++;
          placements.push({
            image:
            /* istanbul ignore next */
            _objectSpread(_objectSpread({}, polaroid), {}, {
              position: scrollPosition
            }),
            scrollPosition: scrollPosition,
            textSection: firstMention.section,
            visibility: "hidden" // Initial state
          });
        } else
        /* istanbul ignore next */
        {
          cov_gtqhckont().b[7][1]++;
        }
      });

      // Sort by scroll position and add staggered offsets to prevent overlap
      /* istanbul ignore next */
      cov_gtqhckont().s[45]++;
      placements.sort(function (a, b) {
        /* istanbul ignore next */
        cov_gtqhckont().f[5]++;
        cov_gtqhckont().s[46]++;
        return a.scrollPosition - b.scrollPosition;
      });

      // Adjust positions to prevent overlap
      /* istanbul ignore next */
      cov_gtqhckont().s[47]++;
      for (var i =
      /* istanbul ignore next */
      (cov_gtqhckont().s[48]++, 1); i < placements.length; i++) {
        var previous =
        /* istanbul ignore next */
        (cov_gtqhckont().s[49]++, placements[i - 1]);
        var current =
        /* istanbul ignore next */
        (cov_gtqhckont().s[50]++, placements[i]);
        var minDistance =
        /* istanbul ignore next */
        (cov_gtqhckont().s[51]++, 150); // Minimum pixels between images
        /* istanbul ignore next */
        cov_gtqhckont().s[52]++;
        if (current.scrollPosition - previous.scrollPosition < minDistance) {
          /* istanbul ignore next */
          cov_gtqhckont().b[8][0]++;
          cov_gtqhckont().s[53]++;
          current.scrollPosition = previous.scrollPosition + minDistance;
          /* istanbul ignore next */
          cov_gtqhckont().s[54]++;
          current.image.position = current.scrollPosition;
        } else
        /* istanbul ignore next */
        {
          cov_gtqhckont().b[8][1]++;
        }
      }
      /* istanbul ignore next */
      cov_gtqhckont().s[55]++;
      return placements;
    }

    /**
     * Get public URL for polaroid image
     */
  }, {
    key: "getPolaroidUrl",
    value: function getPolaroidUrl(filename) {
      /* istanbul ignore next */
      cov_gtqhckont().f[6]++;
      cov_gtqhckont().s[56]++;
      return /* istanbul ignore next */"/polaroids/".concat(filename);
    }

    /**
     * Generate random rotation within ±8 degrees
     */
  }, {
    key: "generateRandomRotation",
    value: function generateRandomRotation() {
      /* istanbul ignore next */
      cov_gtqhckont().f[7]++;
      var min =
      /* istanbul ignore next */
      (cov_gtqhckont().s[57]++, -8);
      var max =
      /* istanbul ignore next */
      (cov_gtqhckont().s[58]++, 8);
      /* istanbul ignore next */
      cov_gtqhckont().s[59]++;
      return Math.random() * (max - min) + min;
    }

    /**
     * Check if file is a supported image format
     */
  }, {
    key: "isImageFile",
    value: function isImageFile(filename) {
      /* istanbul ignore next */
      cov_gtqhckont().f[8]++;
      var supportedExtensions =
      /* istanbul ignore next */
      (cov_gtqhckont().s[60]++, [".jpg", ".jpeg", ".png", ".webp", ".gif"]);
      var extension =
      /* istanbul ignore next */
      (cov_gtqhckont().s[61]++, path.extname(filename).toLowerCase());
      /* istanbul ignore next */
      cov_gtqhckont().s[62]++;
      return supportedExtensions.includes(extension);
    }

    /**
     * Extract player name from filename
     * Supports formats: "haaland.jpg", "erling-haaland.png", "Kylian_Mbappe.webp"
     */
  }, {
    key: "extractPlayerName",
    value: function extractPlayerName(filename) {
      /* istanbul ignore next */
      cov_gtqhckont().f[9]++;
      var nameWithoutExtension =
      /* istanbul ignore next */
      (cov_gtqhckont().s[63]++, path.parse(filename).name);

      // Replace underscores and hyphens with spaces, then title case
      /* istanbul ignore next */
      cov_gtqhckont().s[64]++;
      return nameWithoutExtension.replace(/[-_]/g, " ").split(" ").map(function (word) {
        /* istanbul ignore next */
        cov_gtqhckont().f[10]++;
        cov_gtqhckont().s[65]++;
        return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
      }).join(" ");
    }

    /**
     * Check if polaroid player name matches mentioned player
     */
  }, {
    key: "matchesPlayerName",
    value: function matchesPlayerName(polaroidName, mentionedName) {
      /* istanbul ignore next */
      cov_gtqhckont().f[11]++;
      cov_gtqhckont().s[66]++;
      var normalize = function normalize(name) {
        /* istanbul ignore next */
        cov_gtqhckont().f[12]++;
        cov_gtqhckont().s[67]++;
        return name.toLowerCase().replace(/[^a-z]/g, "");
      };
      var normalizedPolaroid =
      /* istanbul ignore next */
      (cov_gtqhckont().s[68]++, normalize(polaroidName));
      var normalizedMention =
      /* istanbul ignore next */
      (cov_gtqhckont().s[69]++, normalize(mentionedName));

      // Exact match
      /* istanbul ignore next */
      cov_gtqhckont().s[70]++;
      if (normalizedPolaroid === normalizedMention) {
        /* istanbul ignore next */
        cov_gtqhckont().b[9][0]++;
        cov_gtqhckont().s[71]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_gtqhckont().b[9][1]++;
      }

      // Check if either name contains the other (for first/last name matches)
      cov_gtqhckont().s[72]++;
      if (
      /* istanbul ignore next */
      (cov_gtqhckont().b[11][0]++, normalizedPolaroid.includes(normalizedMention)) ||
      /* istanbul ignore next */
      (cov_gtqhckont().b[11][1]++, normalizedMention.includes(normalizedPolaroid))) {
        /* istanbul ignore next */
        cov_gtqhckont().b[10][0]++;
        cov_gtqhckont().s[73]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_gtqhckont().b[10][1]++;
      }

      // Check individual words for partial matches
      var polaroidWords =
      /* istanbul ignore next */
      (cov_gtqhckont().s[74]++, polaroidName.toLowerCase().split(/\s+/));
      var mentionWords =
      /* istanbul ignore next */
      (cov_gtqhckont().s[75]++, mentionedName.toLowerCase().split(/\s+/));
      /* istanbul ignore next */
      cov_gtqhckont().s[76]++;
      var _iterator3 = _createForOfIteratorHelper(polaroidWords),
        _step3;
      /* istanbul ignore next */
      try {
        for (
        /* istanbul ignore next */
        _iterator3.s();
        /* istanbul ignore next */
        !(_step3 = _iterator3.n()).done;) {
          /* istanbul ignore next */
          var pWord = _step3.value;
          /* istanbul ignore next */
          cov_gtqhckont().s[77]++;
          var _iterator4 = _createForOfIteratorHelper(mentionWords),
            _step4;
          /* istanbul ignore next */
          try {
            for (
            /* istanbul ignore next */
            _iterator4.s();
            /* istanbul ignore next */
            !(_step4 = _iterator4.n()).done;) {
              /* istanbul ignore next */
              var mWord = _step4.value;
              /* istanbul ignore next */
              cov_gtqhckont().s[78]++;
              if (
              /* istanbul ignore next */
              (cov_gtqhckont().b[13][0]++, pWord === mWord) &&
              /* istanbul ignore next */
              (cov_gtqhckont().b[13][1]++, pWord.length > 2)) {
                /* istanbul ignore next */
                cov_gtqhckont().b[12][0]++;
                cov_gtqhckont().s[79]++;
                // Avoid matching short words
                return true;
              } else
              /* istanbul ignore next */
              {
                cov_gtqhckont().b[12][1]++;
              }
            }
          } catch (err) {
            _iterator4.e(err);
          } finally {
            _iterator4.f();
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      /* istanbul ignore next */
      cov_gtqhckont().s[80]++;
      return false;
    }

    /**
     * Find all mentions of a player in content with line numbers
     */
  }, {
    key: "findPlayerMentionsInContent",
    value: function findPlayerMentionsInContent(content, playerName) {
      /* istanbul ignore next */
      cov_gtqhckont().f[13]++;
      var mentions =
      /* istanbul ignore next */
      (cov_gtqhckont().s[81]++, []);
      var lines =
      /* istanbul ignore next */
      (cov_gtqhckont().s[82]++, content.split("\n"));
      var normalizedPlayerName =
      /* istanbul ignore next */
      (cov_gtqhckont().s[83]++, playerName.toLowerCase());
      /* istanbul ignore next */
      cov_gtqhckont().s[84]++;
      lines.forEach(function (line, index) {
        /* istanbul ignore next */
        cov_gtqhckont().f[14]++;
        cov_gtqhckont().s[85]++;
        if (line.toLowerCase().includes(normalizedPlayerName)) {
          /* istanbul ignore next */
          cov_gtqhckont().b[14][0]++;
          // Determine section based on content or line position
          var section =
          /* istanbul ignore next */
          (cov_gtqhckont().s[86]++, "main");
          /* istanbul ignore next */
          cov_gtqhckont().s[87]++;
          if (index < lines.length * 0.25) {
            /* istanbul ignore next */
            cov_gtqhckont().b[15][0]++;
            cov_gtqhckont().s[88]++;
            section = "lead";
          } else {
            /* istanbul ignore next */
            cov_gtqhckont().b[15][1]++;
            cov_gtqhckont().s[89]++;
            if (index > lines.length * 0.75) {
              /* istanbul ignore next */
              cov_gtqhckont().b[16][0]++;
              cov_gtqhckont().s[90]++;
              section = "bullshit_corner";
            } else {
              /* istanbul ignore next */
              cov_gtqhckont().b[16][1]++;
              cov_gtqhckont().s[91]++;
              if (
              /* istanbul ignore next */
              (cov_gtqhckont().b[18][0]++, line.includes("Speaking of")) ||
              /* istanbul ignore next */
              (cov_gtqhckont().b[18][1]++, line.includes("remember"))) {
                /* istanbul ignore next */
                cov_gtqhckont().b[17][0]++;
                cov_gtqhckont().s[92]++;
                section = "context";
              } else
              /* istanbul ignore next */
              {
                cov_gtqhckont().b[17][1]++;
              }
            }
          }
          /* istanbul ignore next */
          cov_gtqhckont().s[93]++;
          mentions.push({
            lineNumber: index,
            section: section,
            context: line.substring(0, 100) + "..." // First 100 chars for context
          });
        } else
        /* istanbul ignore next */
        {
          cov_gtqhckont().b[14][1]++;
        }
      });
      /* istanbul ignore next */
      cov_gtqhckont().s[94]++;
      return mentions;
    }

    /**
     * Validate polaroid directory and provide setup instructions
     */
  }, {
    key: "validateSetup",
    value: (function () {
      var _validateSetup = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3()
      /* istanbul ignore next */
      {
        var issues, suggestions, polaroids, commonPlayers, availableNames, missingCommon, _t5;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_gtqhckont().f[15]++;
              issues = (cov_gtqhckont().s[95]++, []);
              suggestions = (cov_gtqhckont().s[96]++, []);
              cov_gtqhckont().s[97]++;
              _context4.p = 1;
              cov_gtqhckont().s[98]++;
              _context4.n = 2;
              return this.getAvailablePolaroids();
            case 2:
              polaroids = _context4.v;
              cov_gtqhckont().s[99]++;
              if (polaroids.length === 0) {
                /* istanbul ignore next */
                cov_gtqhckont().b[19][0]++;
                cov_gtqhckont().s[100]++;
                issues.push("No polaroid images found in /polaroids/ directory");
                /* istanbul ignore next */
                cov_gtqhckont().s[101]++;
                suggestions.push("Add player images to public/polaroids/ folder");
                /* istanbul ignore next */
                cov_gtqhckont().s[102]++;
                suggestions.push("Use format: player-name.jpg (e.g., erling-haaland.jpg)");
              } else {
                /* istanbul ignore next */
                cov_gtqhckont().b[19][1]++;
                cov_gtqhckont().s[103]++;
                if (polaroids.length < 5) {
                  /* istanbul ignore next */
                  cov_gtqhckont().b[20][0]++;
                  cov_gtqhckont().s[104]++;
                  issues.push(
                  /* istanbul ignore next */
                  "Only ".concat(polaroids.length, " polaroids found - recommend at least 10 for variety"));
                  /* istanbul ignore next */
                  cov_gtqhckont().s[105]++;
                  suggestions.push("Add more player images for better content coverage");
                } else
                /* istanbul ignore next */
                {
                  cov_gtqhckont().b[20][1]++;
                }
              }

              // Check for common players
              commonPlayers = (cov_gtqhckont().s[106]++, ["haaland", "mbappe", "bellingham", "kane", "salah"]);
              availableNames = (cov_gtqhckont().s[107]++, polaroids.map(function (p) {
                /* istanbul ignore next */
                cov_gtqhckont().f[16]++;
                cov_gtqhckont().s[108]++;
                return p.playerName.toLowerCase();
              }));
              missingCommon = (cov_gtqhckont().s[109]++, commonPlayers.filter(function (player) {
                /* istanbul ignore next */
                cov_gtqhckont().f[17]++;
                cov_gtqhckont().s[110]++;
                return !availableNames.some(function (name) {
                  /* istanbul ignore next */
                  cov_gtqhckont().f[18]++;
                  cov_gtqhckont().s[111]++;
                  return name.includes(player);
                });
              }));
              cov_gtqhckont().s[112]++;
              if (missingCommon.length > 0) {
                /* istanbul ignore next */
                cov_gtqhckont().b[21][0]++;
                cov_gtqhckont().s[113]++;
                suggestions.push(
                /* istanbul ignore next */
                "Consider adding polaroids for: ".concat(missingCommon.join(", ")));
              } else
              /* istanbul ignore next */
              {
                cov_gtqhckont().b[21][1]++;
              }
              cov_gtqhckont().s[114]++;
              return _context4.a(2, {
                isValid: issues.length === 0,
                issues: issues,
                suggestions: suggestions
              });
            case 3:
              _context4.p = 3;
              _t5 = _context4.v;
              cov_gtqhckont().s[115]++;
              return _context4.a(2, {
                isValid: false,
                issues: [
                /* istanbul ignore next */
                "Error accessing polaroids: ".concat(_t5)],
                suggestions: ["Check that public/polaroids/ directory exists and is readable"]
              });
          }
        }, _callee3, this, [[1, 3]]);
      }));
      function validateSetup() {
        return _validateSetup.apply(this, arguments);
      }
      return validateSetup;
    }()
    /**
     * Get statistics about available polaroids
     */
    )
  }, {
    key: "getStats",
    value: (function () {
      var _getStats = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4()
      /* istanbul ignore next */
      {
        var polaroids, fileTypes, totalSize, recentlyAdded;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              cov_gtqhckont().f[19]++;
              cov_gtqhckont().s[116]++;
              _context5.n = 1;
              return this.getAvailablePolaroids();
            case 1:
              polaroids = _context5.v;
              fileTypes = (cov_gtqhckont().s[117]++, {});
              totalSize = (cov_gtqhckont().s[118]++, 0);
              cov_gtqhckont().s[119]++;
              polaroids.forEach(function (polaroid) {
                /* istanbul ignore next */
                cov_gtqhckont().f[20]++;
                var ext =
                /* istanbul ignore next */
                (cov_gtqhckont().s[120]++, polaroid.extension.toLowerCase());
                /* istanbul ignore next */
                cov_gtqhckont().s[121]++;
                fileTypes[ext] = (
                /* istanbul ignore next */
                (cov_gtqhckont().b[22][0]++, fileTypes[ext]) ||
                /* istanbul ignore next */
                (cov_gtqhckont().b[22][1]++, 0)) + 1;
                /* istanbul ignore next */
                cov_gtqhckont().s[122]++;
                totalSize +=
                /* istanbul ignore next */
                (cov_gtqhckont().b[23][0]++, polaroid.size) ||
                /* istanbul ignore next */
                (cov_gtqhckont().b[23][1]++, 0);
              });
              recentlyAdded = (cov_gtqhckont().s[123]++, polaroids.filter(function (p) {
                /* istanbul ignore next */
                cov_gtqhckont().f[21]++;
                cov_gtqhckont().s[124]++;
                return p.lastModified;
              }).sort(function (a, b) {
                /* istanbul ignore next */
                var _b$lastModified, _a$lastModified;
                cov_gtqhckont().f[22]++;
                cov_gtqhckont().s[125]++;
                return (
                /* istanbul ignore next */
                (cov_gtqhckont().b[24][0]++, (_b$lastModified = b.lastModified) === null || _b$lastModified === void 0 ? void 0 :
                /* istanbul ignore next */
                _b$lastModified.getTime()) ||
                /* istanbul ignore next */
                (cov_gtqhckont().b[24][1]++, 0)) - (
                /* istanbul ignore next */
                (cov_gtqhckont().b[25][0]++, (_a$lastModified = a.lastModified) === null || _a$lastModified === void 0 ? void 0 :
                /* istanbul ignore next */
                _a$lastModified.getTime()) ||
                /* istanbul ignore next */
                (cov_gtqhckont().b[25][1]++, 0));
              }).slice(0, 5));
              cov_gtqhckont().s[126]++;
              return _context5.a(2, {
                totalPolaroids: polaroids.length,
                uniquePlayers: new Set(polaroids.map(function (p) {
                  /* istanbul ignore next */
                  cov_gtqhckont().f[23]++;
                  cov_gtqhckont().s[127]++;
                  return p.playerName;
                })).size,
                averageFileSize: polaroids.length > 0 ?
                /* istanbul ignore next */
                (cov_gtqhckont().b[26][0]++, totalSize / polaroids.length) :
                /* istanbul ignore next */
                (cov_gtqhckont().b[26][1]++, 0),
                fileTypes: fileTypes,
                recentlyAdded: recentlyAdded
              });
          }
        }, _callee4, this);
      }));
      function getStats() {
        return _getStats.apply(this, arguments);
      }
      return getStats;
    }())
  }]);
}();

// Export convenience functions
/* istanbul ignore next */
_defineProperty(PolaroidManager, "polaroidCache", (cov_gtqhckont().s[0]++, new Map()));
/* istanbul ignore next */
_defineProperty(PolaroidManager, "lastCacheUpdate", (cov_gtqhckont().s[1]++, null));
/* istanbul ignore next */
_defineProperty(PolaroidManager, "CACHE_DURATION", (cov_gtqhckont().s[2]++, 5 * 60 * 1000));
export var polaroidManager =
/* istanbul ignore next */
(cov_gtqhckont().s[128]++, {
  getAvailable: function getAvailable() {
    /* istanbul ignore next */
    cov_gtqhckont().f[24]++;
    cov_gtqhckont().s[129]++;
    return PolaroidManager.getAvailablePolaroids();
  },
  findForPlayers: function findForPlayers(players) {
    /* istanbul ignore next */
    cov_gtqhckont().f[25]++;
    cov_gtqhckont().s[130]++;
    return PolaroidManager.findPolaroidsForPlayers(players);
  },
  generatePlacements: function generatePlacements(content, polaroids) {
    /* istanbul ignore next */
    cov_gtqhckont().f[26]++;
    cov_gtqhckont().s[131]++;
    return PolaroidManager.generatePlacements(content, polaroids);
  },
  getUrl: function getUrl(filename) {
    /* istanbul ignore next */
    cov_gtqhckont().f[27]++;
    cov_gtqhckont().s[132]++;
    return PolaroidManager.getPolaroidUrl(filename);
  },
  validate: function validate() {
    /* istanbul ignore next */
    cov_gtqhckont().f[28]++;
    cov_gtqhckont().s[133]++;
    return PolaroidManager.validateSetup();
  },
  stats: function stats() {
    /* istanbul ignore next */
    cov_gtqhckont().f[29]++;
    cov_gtqhckont().s[134]++;
    return PolaroidManager.getStats();
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZ3RxaGNrb250IiwiYWN0dWFsQ292ZXJhZ2UiLCJfdHlwZW9mIiwibyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJfcmVnZW5lcmF0b3JWYWx1ZXMiLCJjYWxsIiwibmV4dCIsImlzTmFOIiwidmFsdWUiLCJkb25lIiwiVHlwZUVycm9yIiwiX3JlZ2VuZXJhdG9yIiwibiIsInRvU3RyaW5nVGFnIiwiaSIsImMiLCJHZW5lcmF0b3IiLCJ1IiwiY3JlYXRlIiwiX3JlZ2VuZXJhdG9yRGVmaW5lMiIsImYiLCJwIiwieSIsIkciLCJ2IiwiYSIsImQiLCJiaW5kIiwibCIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUiLCJnZXRQcm90b3R5cGVPZiIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiZGlzcGxheU5hbWUiLCJ3IiwibSIsIl9yZWdlbmVyYXRvckRlZmluZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiX2ludm9rZSIsIl9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIiwiQXJyYXkiLCJpc0FycmF5IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiX24iLCJGIiwicyIsIl9hcnJheUxpa2VUb0FycmF5IiwidG9TdHJpbmciLCJzbGljZSIsIm5hbWUiLCJmcm9tIiwidGVzdCIsImFzeW5jR2VuZXJhdG9yU3RlcCIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsIl9hc3luY1RvR2VuZXJhdG9yIiwiX25leHQiLCJfdGhyb3ciLCJfY2xhc3NDYWxsQ2hlY2siLCJfZGVmaW5lUHJvcGVydGllcyIsIl90b1Byb3BlcnR5S2V5Iiwia2V5IiwiX2NyZWF0ZUNsYXNzIiwiX3RvUHJpbWl0aXZlIiwidG9QcmltaXRpdmUiLCJTdHJpbmciLCJOdW1iZXIiLCJwcm9taXNlcyIsImZzIiwicGF0aCIsIlBvbGFyb2lkTWFuYWdlciIsIl9nZXRBdmFpbGFibGVQb2xhcm9pZHMiLCJfY2FsbGVlIiwibm93IiwicG9sYXJvaWREaXIiLCJmaWxlcyIsInBvbGFyb2lkRmlsZXMiLCJfaXRlcmF0b3IiLCJfc3RlcCIsImZpbGUiLCJmdWxsUGF0aCIsInN0YXRzIiwiX3QiLCJfdDIiLCJfdDMiLCJfY29udGV4dCIsIkRhdGUiLCJiIiwibGFzdENhY2hlVXBkYXRlIiwicG9sYXJvaWRDYWNoZSIsImhhcyIsImdldFRpbWUiLCJDQUNIRV9EVVJBVElPTiIsImdldCIsImpvaW4iLCJwcm9jZXNzIiwiY3dkIiwiYWNjZXNzIiwiY29uc29sZSIsIndhcm4iLCJta2RpciIsInJlY3Vyc2l2ZSIsInJlYWRkaXIiLCJ3aXRoRmlsZVR5cGVzIiwiaXNGaWxlIiwiaXNJbWFnZUZpbGUiLCJzdGF0IiwiZmlsZW5hbWUiLCJwbGF5ZXJOYW1lIiwiZXh0cmFjdFBsYXllck5hbWUiLCJleHRlbnNpb24iLCJleHRuYW1lIiwic2l6ZSIsImxhc3RNb2RpZmllZCIsIm10aW1lIiwic2V0IiwibG9nIiwiY29uY2F0IiwiZXJyb3IiLCJnZXRBdmFpbGFibGVQb2xhcm9pZHMiLCJfZmluZFBvbGFyb2lkc0ZvclBsYXllcnMiLCJfY2FsbGVlMiIsInBsYXllck5hbWVzIiwiX3RoaXMiLCJhdmFpbGFibGVQb2xhcm9pZHMiLCJzZWxlY3RlZFBvbGFyb2lkcyIsIl9pdGVyYXRvcjIiLCJfc3RlcDIiLCJfbG9vcCIsIl90NCIsIl9jb250ZXh0MyIsIm1hdGNoZXMiLCJzZWxlY3RlZCIsIl9jb250ZXh0MiIsInBvbGFyb2lkIiwibWF0Y2hlc1BsYXllck5hbWUiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJyb3RhdGlvbiIsImdlbmVyYXRlUmFuZG9tUm90YXRpb24iLCJwb3NpdGlvbiIsImFsdFRleHQiLCJzb3VyY2UiLCJmaW5kUG9sYXJvaWRzRm9yUGxheWVycyIsIl94IiwiZ2VuZXJhdGVQbGFjZW1lbnRzIiwiY29udGVudCIsInBvbGFyb2lkcyIsIl90aGlzMiIsInNjcm9sbEhlaWdodCIsInVuZGVmaW5lZCIsInBsYWNlbWVudHMiLCJjb250ZW50TGluZXMiLCJzcGxpdCIsImxpbmVIZWlnaHQiLCJpbmRleCIsInBsYXllck1lbnRpb25zIiwiZmluZFBsYXllck1lbnRpb25zSW5Db250ZW50IiwiZmlyc3RNZW50aW9uIiwic2Nyb2xsUG9zaXRpb24iLCJsaW5lTnVtYmVyIiwiaW1hZ2UiLCJ0ZXh0U2VjdGlvbiIsInNlY3Rpb24iLCJ2aXNpYmlsaXR5Iiwic29ydCIsInByZXZpb3VzIiwiY3VycmVudCIsIm1pbkRpc3RhbmNlIiwiZ2V0UG9sYXJvaWRVcmwiLCJtaW4iLCJtYXgiLCJzdXBwb3J0ZWRFeHRlbnNpb25zIiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsIm5hbWVXaXRob3V0RXh0ZW5zaW9uIiwicGFyc2UiLCJyZXBsYWNlIiwibWFwIiwid29yZCIsImNoYXJBdCIsInRvVXBwZXJDYXNlIiwicG9sYXJvaWROYW1lIiwibWVudGlvbmVkTmFtZSIsIm5vcm1hbGl6ZSIsIm5vcm1hbGl6ZWRQb2xhcm9pZCIsIm5vcm1hbGl6ZWRNZW50aW9uIiwicG9sYXJvaWRXb3JkcyIsIm1lbnRpb25Xb3JkcyIsIl9pdGVyYXRvcjMiLCJfc3RlcDMiLCJwV29yZCIsIl9pdGVyYXRvcjQiLCJfc3RlcDQiLCJtV29yZCIsImVyciIsIm1lbnRpb25zIiwibGluZXMiLCJub3JtYWxpemVkUGxheWVyTmFtZSIsImxpbmUiLCJjb250ZXh0Iiwic3Vic3RyaW5nIiwiX3ZhbGlkYXRlU2V0dXAiLCJfY2FsbGVlMyIsImlzc3VlcyIsInN1Z2dlc3Rpb25zIiwiY29tbW9uUGxheWVycyIsImF2YWlsYWJsZU5hbWVzIiwibWlzc2luZ0NvbW1vbiIsIl90NSIsIl9jb250ZXh0NCIsInBsYXllciIsInNvbWUiLCJpc1ZhbGlkIiwidmFsaWRhdGVTZXR1cCIsIl9nZXRTdGF0cyIsIl9jYWxsZWU0IiwiZmlsZVR5cGVzIiwidG90YWxTaXplIiwicmVjZW50bHlBZGRlZCIsIl9jb250ZXh0NSIsImV4dCIsIl9iJGxhc3RNb2RpZmllZCIsIl9hJGxhc3RNb2RpZmllZCIsInRvdGFsUG9sYXJvaWRzIiwidW5pcXVlUGxheWVycyIsIlNldCIsImF2ZXJhZ2VGaWxlU2l6ZSIsImdldFN0YXRzIiwiTWFwIiwicG9sYXJvaWRNYW5hZ2VyIiwiZ2V0QXZhaWxhYmxlIiwiZmluZEZvclBsYXllcnMiLCJwbGF5ZXJzIiwiZ2V0VXJsIiwidmFsaWRhdGUiXSwic291cmNlcyI6WyJwb2xhcm9pZE1hbmFnZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQb2xhcm9pZCBNYW5hZ2VtZW50IFN5c3RlbVxuICogSGFuZGxlcyBwbGF5ZXIgaW1hZ2Ugc291cmNpbmcgZnJvbSAvcG9sYXJvaWRzLyBmb2xkZXIgd2l0aCByb3RhdGlvbiBhbmQgcGxhY2VtZW50XG4gKi9cblxuaW1wb3J0IHsgcHJvbWlzZXMgYXMgZnMgfSBmcm9tIFwiZnNcIjtcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgeyBQb2xhcm9pZEltYWdlIH0gZnJvbSBcIkAvbGliL3R5cGVzL2JyaWVmaW5nXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUG9sYXJvaWRGaWxlIHtcbiAgZmlsZW5hbWU6IHN0cmluZztcbiAgcGxheWVyTmFtZTogc3RyaW5nO1xuICBmdWxsUGF0aDogc3RyaW5nO1xuICBleHRlbnNpb246IHN0cmluZztcbiAgc2l6ZT86IG51bWJlcjtcbiAgbGFzdE1vZGlmaWVkPzogRGF0ZTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQb2xhcm9pZFBsYWNlbWVudCB7XG4gIGltYWdlOiBQb2xhcm9pZEltYWdlO1xuICBzY3JvbGxQb3NpdGlvbjogbnVtYmVyO1xuICB0ZXh0U2VjdGlvbjogc3RyaW5nO1xuICB2aXNpYmlsaXR5OiBcInZpc2libGVcIiB8IFwiZmFkZS1pblwiIHwgXCJmYWRlLW91dFwiIHwgXCJoaWRkZW5cIjtcbn1cblxuZXhwb3J0IGNsYXNzIFBvbGFyb2lkTWFuYWdlciB7XG4gIHByaXZhdGUgc3RhdGljIHBvbGFyb2lkQ2FjaGU6IE1hcDxzdHJpbmcsIFBvbGFyb2lkRmlsZVtdPiA9IG5ldyBNYXAoKTtcbiAgcHJpdmF0ZSBzdGF0aWMgbGFzdENhY2hlVXBkYXRlOiBEYXRlIHwgbnVsbCA9IG51bGw7XG4gIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IENBQ0hFX0RVUkFUSU9OID0gNSAqIDYwICogMTAwMDsgLy8gNSBtaW51dGVzXG5cbiAgLyoqXG4gICAqIEdldCBhbGwgYXZhaWxhYmxlIHBvbGFyb2lkIGZpbGVzIGZyb20gL3BvbGFyb2lkcy8gZGlyZWN0b3J5XG4gICAqL1xuICBzdGF0aWMgYXN5bmMgZ2V0QXZhaWxhYmxlUG9sYXJvaWRzKCk6IFByb21pc2U8UG9sYXJvaWRGaWxlW10+IHtcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuXG4gICAgLy8gQ2hlY2sgY2FjaGUgZnJlc2huZXNzXG4gICAgaWYgKFxuICAgICAgdGhpcy5sYXN0Q2FjaGVVcGRhdGUgJiZcbiAgICAgIHRoaXMucG9sYXJvaWRDYWNoZS5oYXMoXCJhbGxcIikgJiZcbiAgICAgIG5vdy5nZXRUaW1lKCkgLSB0aGlzLmxhc3RDYWNoZVVwZGF0ZS5nZXRUaW1lKCkgPCB0aGlzLkNBQ0hFX0RVUkFUSU9OXG4gICAgKSB7XG4gICAgICByZXR1cm4gdGhpcy5wb2xhcm9pZENhY2hlLmdldChcImFsbFwiKSB8fCBbXTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgcG9sYXJvaWREaXIgPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgXCJwdWJsaWNcIiwgXCJwb2xhcm9pZHNcIik7XG5cbiAgICAgIC8vIEVuc3VyZSBkaXJlY3RvcnkgZXhpc3RzXG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCBmcy5hY2Nlc3MocG9sYXJvaWREaXIpO1xuICAgICAgfSBjYXRjaCB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIlBvbGFyb2lkcyBkaXJlY3Rvcnkgbm90IGZvdW5kLCBjcmVhdGluZyBpdC4uLlwiKTtcbiAgICAgICAgYXdhaXQgZnMubWtkaXIocG9sYXJvaWREaXIsIHsgcmVjdXJzaXZlOiB0cnVlIH0pO1xuICAgICAgICByZXR1cm4gW107XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGZpbGVzID0gYXdhaXQgZnMucmVhZGRpcihwb2xhcm9pZERpciwgeyB3aXRoRmlsZVR5cGVzOiB0cnVlIH0pO1xuICAgICAgY29uc3QgcG9sYXJvaWRGaWxlczogUG9sYXJvaWRGaWxlW10gPSBbXTtcblxuICAgICAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7XG4gICAgICAgIGlmIChmaWxlLmlzRmlsZSgpICYmIHRoaXMuaXNJbWFnZUZpbGUoZmlsZS5uYW1lKSkge1xuICAgICAgICAgIGNvbnN0IGZ1bGxQYXRoID0gcGF0aC5qb2luKHBvbGFyb2lkRGlyLCBmaWxlLm5hbWUpO1xuICAgICAgICAgIGNvbnN0IHN0YXRzID0gYXdhaXQgZnMuc3RhdChmdWxsUGF0aCk7XG5cbiAgICAgICAgICBwb2xhcm9pZEZpbGVzLnB1c2goe1xuICAgICAgICAgICAgZmlsZW5hbWU6IGZpbGUubmFtZSxcbiAgICAgICAgICAgIHBsYXllck5hbWU6IHRoaXMuZXh0cmFjdFBsYXllck5hbWUoZmlsZS5uYW1lKSxcbiAgICAgICAgICAgIGZ1bGxQYXRoLFxuICAgICAgICAgICAgZXh0ZW5zaW9uOiBwYXRoLmV4dG5hbWUoZmlsZS5uYW1lKSxcbiAgICAgICAgICAgIHNpemU6IHN0YXRzLnNpemUsXG4gICAgICAgICAgICBsYXN0TW9kaWZpZWQ6IHN0YXRzLm10aW1lLFxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFVwZGF0ZSBjYWNoZVxuICAgICAgdGhpcy5wb2xhcm9pZENhY2hlLnNldChcImFsbFwiLCBwb2xhcm9pZEZpbGVzKTtcbiAgICAgIHRoaXMubGFzdENhY2hlVXBkYXRlID0gbm93O1xuXG4gICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgYExvYWRlZCAke3BvbGFyb2lkRmlsZXMubGVuZ3RofSBwb2xhcm9pZCBpbWFnZXMgZnJvbSAvcG9sYXJvaWRzL2BcbiAgICAgICk7XG4gICAgICByZXR1cm4gcG9sYXJvaWRGaWxlcztcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGxvYWRpbmcgcG9sYXJvaWRzOlwiLCBlcnJvcik7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEZpbmQgcG9sYXJvaWRzIGZvciBzcGVjaWZpYyBwbGF5ZXIgbmFtZXNcbiAgICovXG4gIHN0YXRpYyBhc3luYyBmaW5kUG9sYXJvaWRzRm9yUGxheWVycyhcbiAgICBwbGF5ZXJOYW1lczogc3RyaW5nW11cbiAgKTogUHJvbWlzZTxQb2xhcm9pZEltYWdlW10+IHtcbiAgICBjb25zdCBhdmFpbGFibGVQb2xhcm9pZHMgPSBhd2FpdCB0aGlzLmdldEF2YWlsYWJsZVBvbGFyb2lkcygpO1xuICAgIGNvbnN0IHNlbGVjdGVkUG9sYXJvaWRzOiBQb2xhcm9pZEltYWdlW10gPSBbXTtcblxuICAgIGZvciAoY29uc3QgcGxheWVyTmFtZSBvZiBwbGF5ZXJOYW1lcykge1xuICAgICAgY29uc3QgbWF0Y2hlcyA9IGF2YWlsYWJsZVBvbGFyb2lkcy5maWx0ZXIoKHBvbGFyb2lkKSA9PlxuICAgICAgICB0aGlzLm1hdGNoZXNQbGF5ZXJOYW1lKHBvbGFyb2lkLnBsYXllck5hbWUsIHBsYXllck5hbWUpXG4gICAgICApO1xuXG4gICAgICBpZiAobWF0Y2hlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIC8vIFNlbGVjdCByYW5kb20gcG9sYXJvaWQgaWYgbXVsdGlwbGUgYXZhaWxhYmxlIGZvciBzYW1lIHBsYXllclxuICAgICAgICBjb25zdCBzZWxlY3RlZCA9IG1hdGNoZXNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbWF0Y2hlcy5sZW5ndGgpXTtcblxuICAgICAgICBzZWxlY3RlZFBvbGFyb2lkcy5wdXNoKHtcbiAgICAgICAgICBmaWxlbmFtZTogc2VsZWN0ZWQuZmlsZW5hbWUsXG4gICAgICAgICAgcGxheWVyTmFtZTogc2VsZWN0ZWQucGxheWVyTmFtZSxcbiAgICAgICAgICByb3RhdGlvbjogdGhpcy5nZW5lcmF0ZVJhbmRvbVJvdGF0aW9uKCksXG4gICAgICAgICAgcG9zaXRpb246IDAsIC8vIFdpbGwgYmUgY2FsY3VsYXRlZCBiYXNlZCBvbiB0ZXh0IHBvc2l0aW9uXG4gICAgICAgICAgYWx0VGV4dDogYCR7c2VsZWN0ZWQucGxheWVyTmFtZX0gLSBUcmFuc2ZlciBKdWljZWAsXG4gICAgICAgICAgc291cmNlOiBcIm1hbnVhbFwiLCAvLyBGcm9tIC9wb2xhcm9pZHMvIGZvbGRlclxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE5vIHBvbGFyb2lkIGZvdW5kLCBjb3VsZCBpbXBsZW1lbnQgZmFsbGJhY2sgbG9naWMgaGVyZVxuICAgICAgICBjb25zb2xlLmxvZyhgTm8gcG9sYXJvaWQgZm91bmQgZm9yIHBsYXllcjogJHtwbGF5ZXJOYW1lfWApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBzZWxlY3RlZFBvbGFyb2lkcztcbiAgfVxuXG4gIC8qKlxuICAgKiBHZW5lcmF0ZSBvcHRpbWl6ZWQgcG9sYXJvaWQgcGxhY2VtZW50cyBiYXNlZCBvbiB0ZXh0IGNvbnRlbnRcbiAgICovXG4gIHN0YXRpYyBnZW5lcmF0ZVBsYWNlbWVudHMoXG4gICAgY29udGVudDogc3RyaW5nLFxuICAgIHBvbGFyb2lkczogUG9sYXJvaWRJbWFnZVtdLFxuICAgIHNjcm9sbEhlaWdodDogbnVtYmVyID0gMTAwMFxuICApOiBQb2xhcm9pZFBsYWNlbWVudFtdIHtcbiAgICBjb25zdCBwbGFjZW1lbnRzOiBQb2xhcm9pZFBsYWNlbWVudFtdID0gW107XG4gICAgY29uc3QgY29udGVudExpbmVzID0gY29udGVudC5zcGxpdChcIlxcblwiKTtcbiAgICBjb25zdCBsaW5lSGVpZ2h0ID0gMjQ7IC8vIEFwcHJveGltYXRlIGxpbmUgaGVpZ2h0IGluIHBpeGVsc1xuXG4gICAgLy8gRmluZCBwbGF5ZXIgbWVudGlvbnMgaW4gY29udGVudCBhbmQgY2FsY3VsYXRlIHBvc2l0aW9uc1xuICAgIHBvbGFyb2lkcy5mb3JFYWNoKChwb2xhcm9pZCwgaW5kZXgpID0+IHtcbiAgICAgIGNvbnN0IHBsYXllck1lbnRpb25zID0gdGhpcy5maW5kUGxheWVyTWVudGlvbnNJbkNvbnRlbnQoXG4gICAgICAgIGNvbnRlbnQsXG4gICAgICAgIHBvbGFyb2lkLnBsYXllck5hbWVcbiAgICAgICk7XG5cbiAgICAgIGlmIChwbGF5ZXJNZW50aW9ucy5sZW5ndGggPiAwKSB7XG4gICAgICAgIC8vIFVzZSBmaXJzdCBtZW50aW9uIGZvciBwbGFjZW1lbnQsIGNvdWxkIGJlIGVuaGFuY2VkIGZvciBtdWx0aXBsZSBtZW50aW9uc1xuICAgICAgICBjb25zdCBmaXJzdE1lbnRpb24gPSBwbGF5ZXJNZW50aW9uc1swXTtcbiAgICAgICAgY29uc3Qgc2Nyb2xsUG9zaXRpb24gPVxuICAgICAgICAgIGZpcnN0TWVudGlvbi5saW5lTnVtYmVyICogbGluZUhlaWdodCArIGluZGV4ICogMTIwOyAvLyBPZmZzZXQgZm9yIG11bHRpcGxlIGltYWdlc1xuXG4gICAgICAgIHBsYWNlbWVudHMucHVzaCh7XG4gICAgICAgICAgaW1hZ2U6IHtcbiAgICAgICAgICAgIC4uLnBvbGFyb2lkLFxuICAgICAgICAgICAgcG9zaXRpb246IHNjcm9sbFBvc2l0aW9uLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgc2Nyb2xsUG9zaXRpb24sXG4gICAgICAgICAgdGV4dFNlY3Rpb246IGZpcnN0TWVudGlvbi5zZWN0aW9uLFxuICAgICAgICAgIHZpc2liaWxpdHk6IFwiaGlkZGVuXCIsIC8vIEluaXRpYWwgc3RhdGVcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBTb3J0IGJ5IHNjcm9sbCBwb3NpdGlvbiBhbmQgYWRkIHN0YWdnZXJlZCBvZmZzZXRzIHRvIHByZXZlbnQgb3ZlcmxhcFxuICAgIHBsYWNlbWVudHMuc29ydCgoYSwgYikgPT4gYS5zY3JvbGxQb3NpdGlvbiAtIGIuc2Nyb2xsUG9zaXRpb24pO1xuXG4gICAgLy8gQWRqdXN0IHBvc2l0aW9ucyB0byBwcmV2ZW50IG92ZXJsYXBcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8IHBsYWNlbWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IHByZXZpb3VzID0gcGxhY2VtZW50c1tpIC0gMV07XG4gICAgICBjb25zdCBjdXJyZW50ID0gcGxhY2VtZW50c1tpXTtcbiAgICAgIGNvbnN0IG1pbkRpc3RhbmNlID0gMTUwOyAvLyBNaW5pbXVtIHBpeGVscyBiZXR3ZWVuIGltYWdlc1xuXG4gICAgICBpZiAoY3VycmVudC5zY3JvbGxQb3NpdGlvbiAtIHByZXZpb3VzLnNjcm9sbFBvc2l0aW9uIDwgbWluRGlzdGFuY2UpIHtcbiAgICAgICAgY3VycmVudC5zY3JvbGxQb3NpdGlvbiA9IHByZXZpb3VzLnNjcm9sbFBvc2l0aW9uICsgbWluRGlzdGFuY2U7XG4gICAgICAgIGN1cnJlbnQuaW1hZ2UucG9zaXRpb24gPSBjdXJyZW50LnNjcm9sbFBvc2l0aW9uO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBwbGFjZW1lbnRzO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBwdWJsaWMgVVJMIGZvciBwb2xhcm9pZCBpbWFnZVxuICAgKi9cbiAgc3RhdGljIGdldFBvbGFyb2lkVXJsKGZpbGVuYW1lOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiBgL3BvbGFyb2lkcy8ke2ZpbGVuYW1lfWA7XG4gIH1cblxuICAvKipcbiAgICogR2VuZXJhdGUgcmFuZG9tIHJvdGF0aW9uIHdpdGhpbiDCsTggZGVncmVlc1xuICAgKi9cbiAgcHJpdmF0ZSBzdGF0aWMgZ2VuZXJhdGVSYW5kb21Sb3RhdGlvbigpOiBudW1iZXIge1xuICAgIGNvbnN0IG1pbiA9IC04O1xuICAgIGNvbnN0IG1heCA9IDg7XG4gICAgcmV0dXJuIE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBmaWxlIGlzIGEgc3VwcG9ydGVkIGltYWdlIGZvcm1hdFxuICAgKi9cbiAgcHJpdmF0ZSBzdGF0aWMgaXNJbWFnZUZpbGUoZmlsZW5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHN1cHBvcnRlZEV4dGVuc2lvbnMgPSBbXCIuanBnXCIsIFwiLmpwZWdcIiwgXCIucG5nXCIsIFwiLndlYnBcIiwgXCIuZ2lmXCJdO1xuICAgIGNvbnN0IGV4dGVuc2lvbiA9IHBhdGguZXh0bmFtZShmaWxlbmFtZSkudG9Mb3dlckNhc2UoKTtcbiAgICByZXR1cm4gc3VwcG9ydGVkRXh0ZW5zaW9ucy5pbmNsdWRlcyhleHRlbnNpb24pO1xuICB9XG5cbiAgLyoqXG4gICAqIEV4dHJhY3QgcGxheWVyIG5hbWUgZnJvbSBmaWxlbmFtZVxuICAgKiBTdXBwb3J0cyBmb3JtYXRzOiBcImhhYWxhbmQuanBnXCIsIFwiZXJsaW5nLWhhYWxhbmQucG5nXCIsIFwiS3lsaWFuX01iYXBwZS53ZWJwXCJcbiAgICovXG4gIHByaXZhdGUgc3RhdGljIGV4dHJhY3RQbGF5ZXJOYW1lKGZpbGVuYW1lOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGNvbnN0IG5hbWVXaXRob3V0RXh0ZW5zaW9uID0gcGF0aC5wYXJzZShmaWxlbmFtZSkubmFtZTtcblxuICAgIC8vIFJlcGxhY2UgdW5kZXJzY29yZXMgYW5kIGh5cGhlbnMgd2l0aCBzcGFjZXMsIHRoZW4gdGl0bGUgY2FzZVxuICAgIHJldHVybiBuYW1lV2l0aG91dEV4dGVuc2lvblxuICAgICAgLnJlcGxhY2UoL1stX10vZywgXCIgXCIpXG4gICAgICAuc3BsaXQoXCIgXCIpXG4gICAgICAubWFwKCh3b3JkKSA9PiB3b3JkLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgd29yZC5zbGljZSgxKS50b0xvd2VyQ2FzZSgpKVxuICAgICAgLmpvaW4oXCIgXCIpO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIGlmIHBvbGFyb2lkIHBsYXllciBuYW1lIG1hdGNoZXMgbWVudGlvbmVkIHBsYXllclxuICAgKi9cbiAgcHJpdmF0ZSBzdGF0aWMgbWF0Y2hlc1BsYXllck5hbWUoXG4gICAgcG9sYXJvaWROYW1lOiBzdHJpbmcsXG4gICAgbWVudGlvbmVkTmFtZTogc3RyaW5nXG4gICk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IG5vcm1hbGl6ZSA9IChuYW1lOiBzdHJpbmcpID0+XG4gICAgICBuYW1lLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvW15hLXpdL2csIFwiXCIpO1xuICAgIGNvbnN0IG5vcm1hbGl6ZWRQb2xhcm9pZCA9IG5vcm1hbGl6ZShwb2xhcm9pZE5hbWUpO1xuICAgIGNvbnN0IG5vcm1hbGl6ZWRNZW50aW9uID0gbm9ybWFsaXplKG1lbnRpb25lZE5hbWUpO1xuXG4gICAgLy8gRXhhY3QgbWF0Y2hcbiAgICBpZiAobm9ybWFsaXplZFBvbGFyb2lkID09PSBub3JtYWxpemVkTWVudGlvbikgcmV0dXJuIHRydWU7XG5cbiAgICAvLyBDaGVjayBpZiBlaXRoZXIgbmFtZSBjb250YWlucyB0aGUgb3RoZXIgKGZvciBmaXJzdC9sYXN0IG5hbWUgbWF0Y2hlcylcbiAgICBpZiAoXG4gICAgICBub3JtYWxpemVkUG9sYXJvaWQuaW5jbHVkZXMobm9ybWFsaXplZE1lbnRpb24pIHx8XG4gICAgICBub3JtYWxpemVkTWVudGlvbi5pbmNsdWRlcyhub3JtYWxpemVkUG9sYXJvaWQpXG4gICAgKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICAvLyBDaGVjayBpbmRpdmlkdWFsIHdvcmRzIGZvciBwYXJ0aWFsIG1hdGNoZXNcbiAgICBjb25zdCBwb2xhcm9pZFdvcmRzID0gcG9sYXJvaWROYW1lLnRvTG93ZXJDYXNlKCkuc3BsaXQoL1xccysvKTtcbiAgICBjb25zdCBtZW50aW9uV29yZHMgPSBtZW50aW9uZWROYW1lLnRvTG93ZXJDYXNlKCkuc3BsaXQoL1xccysvKTtcblxuICAgIGZvciAoY29uc3QgcFdvcmQgb2YgcG9sYXJvaWRXb3Jkcykge1xuICAgICAgZm9yIChjb25zdCBtV29yZCBvZiBtZW50aW9uV29yZHMpIHtcbiAgICAgICAgaWYgKHBXb3JkID09PSBtV29yZCAmJiBwV29yZC5sZW5ndGggPiAyKSB7XG4gICAgICAgICAgLy8gQXZvaWQgbWF0Y2hpbmcgc2hvcnQgd29yZHNcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBGaW5kIGFsbCBtZW50aW9ucyBvZiBhIHBsYXllciBpbiBjb250ZW50IHdpdGggbGluZSBudW1iZXJzXG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyBmaW5kUGxheWVyTWVudGlvbnNJbkNvbnRlbnQoXG4gICAgY29udGVudDogc3RyaW5nLFxuICAgIHBsYXllck5hbWU6IHN0cmluZ1xuICApOiBBcnJheTx7IGxpbmVOdW1iZXI6IG51bWJlcjsgc2VjdGlvbjogc3RyaW5nOyBjb250ZXh0OiBzdHJpbmcgfT4ge1xuICAgIGNvbnN0IG1lbnRpb25zID0gW107XG4gICAgY29uc3QgbGluZXMgPSBjb250ZW50LnNwbGl0KFwiXFxuXCIpO1xuICAgIGNvbnN0IG5vcm1hbGl6ZWRQbGF5ZXJOYW1lID0gcGxheWVyTmFtZS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgbGluZXMuZm9yRWFjaCgobGluZSwgaW5kZXgpID0+IHtcbiAgICAgIGlmIChsaW5lLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMobm9ybWFsaXplZFBsYXllck5hbWUpKSB7XG4gICAgICAgIC8vIERldGVybWluZSBzZWN0aW9uIGJhc2VkIG9uIGNvbnRlbnQgb3IgbGluZSBwb3NpdGlvblxuICAgICAgICBsZXQgc2VjdGlvbiA9IFwibWFpblwiO1xuICAgICAgICBpZiAoaW5kZXggPCBsaW5lcy5sZW5ndGggKiAwLjI1KSBzZWN0aW9uID0gXCJsZWFkXCI7XG4gICAgICAgIGVsc2UgaWYgKGluZGV4ID4gbGluZXMubGVuZ3RoICogMC43NSkgc2VjdGlvbiA9IFwiYnVsbHNoaXRfY29ybmVyXCI7XG4gICAgICAgIGVsc2UgaWYgKGxpbmUuaW5jbHVkZXMoXCJTcGVha2luZyBvZlwiKSB8fCBsaW5lLmluY2x1ZGVzKFwicmVtZW1iZXJcIikpXG4gICAgICAgICAgc2VjdGlvbiA9IFwiY29udGV4dFwiO1xuXG4gICAgICAgIG1lbnRpb25zLnB1c2goe1xuICAgICAgICAgIGxpbmVOdW1iZXI6IGluZGV4LFxuICAgICAgICAgIHNlY3Rpb24sXG4gICAgICAgICAgY29udGV4dDogbGluZS5zdWJzdHJpbmcoMCwgMTAwKSArIFwiLi4uXCIsIC8vIEZpcnN0IDEwMCBjaGFycyBmb3IgY29udGV4dFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBtZW50aW9ucztcbiAgfVxuXG4gIC8qKlxuICAgKiBWYWxpZGF0ZSBwb2xhcm9pZCBkaXJlY3RvcnkgYW5kIHByb3ZpZGUgc2V0dXAgaW5zdHJ1Y3Rpb25zXG4gICAqL1xuICBzdGF0aWMgYXN5bmMgdmFsaWRhdGVTZXR1cCgpOiBQcm9taXNlPHtcbiAgICBpc1ZhbGlkOiBib29sZWFuO1xuICAgIGlzc3Vlczogc3RyaW5nW107XG4gICAgc3VnZ2VzdGlvbnM6IHN0cmluZ1tdO1xuICB9PiB7XG4gICAgY29uc3QgaXNzdWVzOiBzdHJpbmdbXSA9IFtdO1xuICAgIGNvbnN0IHN1Z2dlc3Rpb25zOiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHBvbGFyb2lkcyA9IGF3YWl0IHRoaXMuZ2V0QXZhaWxhYmxlUG9sYXJvaWRzKCk7XG5cbiAgICAgIGlmIChwb2xhcm9pZHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGlzc3Vlcy5wdXNoKFwiTm8gcG9sYXJvaWQgaW1hZ2VzIGZvdW5kIGluIC9wb2xhcm9pZHMvIGRpcmVjdG9yeVwiKTtcbiAgICAgICAgc3VnZ2VzdGlvbnMucHVzaChcIkFkZCBwbGF5ZXIgaW1hZ2VzIHRvIHB1YmxpYy9wb2xhcm9pZHMvIGZvbGRlclwiKTtcbiAgICAgICAgc3VnZ2VzdGlvbnMucHVzaChcbiAgICAgICAgICBcIlVzZSBmb3JtYXQ6IHBsYXllci1uYW1lLmpwZyAoZS5nLiwgZXJsaW5nLWhhYWxhbmQuanBnKVwiXG4gICAgICAgICk7XG4gICAgICB9IGVsc2UgaWYgKHBvbGFyb2lkcy5sZW5ndGggPCA1KSB7XG4gICAgICAgIGlzc3Vlcy5wdXNoKFxuICAgICAgICAgIGBPbmx5ICR7cG9sYXJvaWRzLmxlbmd0aH0gcG9sYXJvaWRzIGZvdW5kIC0gcmVjb21tZW5kIGF0IGxlYXN0IDEwIGZvciB2YXJpZXR5YFxuICAgICAgICApO1xuICAgICAgICBzdWdnZXN0aW9ucy5wdXNoKFwiQWRkIG1vcmUgcGxheWVyIGltYWdlcyBmb3IgYmV0dGVyIGNvbnRlbnQgY292ZXJhZ2VcIik7XG4gICAgICB9XG5cbiAgICAgIC8vIENoZWNrIGZvciBjb21tb24gcGxheWVyc1xuICAgICAgY29uc3QgY29tbW9uUGxheWVycyA9IFtcbiAgICAgICAgXCJoYWFsYW5kXCIsXG4gICAgICAgIFwibWJhcHBlXCIsXG4gICAgICAgIFwiYmVsbGluZ2hhbVwiLFxuICAgICAgICBcImthbmVcIixcbiAgICAgICAgXCJzYWxhaFwiLFxuICAgICAgXTtcbiAgICAgIGNvbnN0IGF2YWlsYWJsZU5hbWVzID0gcG9sYXJvaWRzLm1hcCgocCkgPT4gcC5wbGF5ZXJOYW1lLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgY29uc3QgbWlzc2luZ0NvbW1vbiA9IGNvbW1vblBsYXllcnMuZmlsdGVyKFxuICAgICAgICAocGxheWVyKSA9PiAhYXZhaWxhYmxlTmFtZXMuc29tZSgobmFtZSkgPT4gbmFtZS5pbmNsdWRlcyhwbGF5ZXIpKVxuICAgICAgKTtcblxuICAgICAgaWYgKG1pc3NpbmdDb21tb24ubGVuZ3RoID4gMCkge1xuICAgICAgICBzdWdnZXN0aW9ucy5wdXNoKFxuICAgICAgICAgIGBDb25zaWRlciBhZGRpbmcgcG9sYXJvaWRzIGZvcjogJHttaXNzaW5nQ29tbW9uLmpvaW4oXCIsIFwiKX1gXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGlzVmFsaWQ6IGlzc3Vlcy5sZW5ndGggPT09IDAsXG4gICAgICAgIGlzc3VlcyxcbiAgICAgICAgc3VnZ2VzdGlvbnMsXG4gICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBpc1ZhbGlkOiBmYWxzZSxcbiAgICAgICAgaXNzdWVzOiBbYEVycm9yIGFjY2Vzc2luZyBwb2xhcm9pZHM6ICR7ZXJyb3J9YF0sXG4gICAgICAgIHN1Z2dlc3Rpb25zOiBbXG4gICAgICAgICAgXCJDaGVjayB0aGF0IHB1YmxpYy9wb2xhcm9pZHMvIGRpcmVjdG9yeSBleGlzdHMgYW5kIGlzIHJlYWRhYmxlXCIsXG4gICAgICAgIF0sXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgc3RhdGlzdGljcyBhYm91dCBhdmFpbGFibGUgcG9sYXJvaWRzXG4gICAqL1xuICBzdGF0aWMgYXN5bmMgZ2V0U3RhdHMoKTogUHJvbWlzZTx7XG4gICAgdG90YWxQb2xhcm9pZHM6IG51bWJlcjtcbiAgICB1bmlxdWVQbGF5ZXJzOiBudW1iZXI7XG4gICAgYXZlcmFnZUZpbGVTaXplOiBudW1iZXI7XG4gICAgZmlsZVR5cGVzOiBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+O1xuICAgIHJlY2VudGx5QWRkZWQ6IFBvbGFyb2lkRmlsZVtdO1xuICB9PiB7XG4gICAgY29uc3QgcG9sYXJvaWRzID0gYXdhaXQgdGhpcy5nZXRBdmFpbGFibGVQb2xhcm9pZHMoKTtcbiAgICBjb25zdCBmaWxlVHlwZXM6IFJlY29yZDxzdHJpbmcsIG51bWJlcj4gPSB7fTtcbiAgICBsZXQgdG90YWxTaXplID0gMDtcblxuICAgIHBvbGFyb2lkcy5mb3JFYWNoKChwb2xhcm9pZCkgPT4ge1xuICAgICAgY29uc3QgZXh0ID0gcG9sYXJvaWQuZXh0ZW5zaW9uLnRvTG93ZXJDYXNlKCk7XG4gICAgICBmaWxlVHlwZXNbZXh0XSA9IChmaWxlVHlwZXNbZXh0XSB8fCAwKSArIDE7XG4gICAgICB0b3RhbFNpemUgKz0gcG9sYXJvaWQuc2l6ZSB8fCAwO1xuICAgIH0pO1xuXG4gICAgY29uc3QgcmVjZW50bHlBZGRlZCA9IHBvbGFyb2lkc1xuICAgICAgLmZpbHRlcigocCkgPT4gcC5sYXN0TW9kaWZpZWQpXG4gICAgICAuc29ydChcbiAgICAgICAgKGEsIGIpID0+XG4gICAgICAgICAgKGIubGFzdE1vZGlmaWVkPy5nZXRUaW1lKCkgfHwgMCkgLSAoYS5sYXN0TW9kaWZpZWQ/LmdldFRpbWUoKSB8fCAwKVxuICAgICAgKVxuICAgICAgLnNsaWNlKDAsIDUpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHRvdGFsUG9sYXJvaWRzOiBwb2xhcm9pZHMubGVuZ3RoLFxuICAgICAgdW5pcXVlUGxheWVyczogbmV3IFNldChwb2xhcm9pZHMubWFwKChwKSA9PiBwLnBsYXllck5hbWUpKS5zaXplLFxuICAgICAgYXZlcmFnZUZpbGVTaXplOiBwb2xhcm9pZHMubGVuZ3RoID4gMCA/IHRvdGFsU2l6ZSAvIHBvbGFyb2lkcy5sZW5ndGggOiAwLFxuICAgICAgZmlsZVR5cGVzLFxuICAgICAgcmVjZW50bHlBZGRlZCxcbiAgICB9O1xuICB9XG59XG5cbi8vIEV4cG9ydCBjb252ZW5pZW5jZSBmdW5jdGlvbnNcbmV4cG9ydCBjb25zdCBwb2xhcm9pZE1hbmFnZXIgPSB7XG4gIGdldEF2YWlsYWJsZTogKCkgPT4gUG9sYXJvaWRNYW5hZ2VyLmdldEF2YWlsYWJsZVBvbGFyb2lkcygpLFxuICBmaW5kRm9yUGxheWVyczogKHBsYXllcnM6IHN0cmluZ1tdKSA9PlxuICAgIFBvbGFyb2lkTWFuYWdlci5maW5kUG9sYXJvaWRzRm9yUGxheWVycyhwbGF5ZXJzKSxcbiAgZ2VuZXJhdGVQbGFjZW1lbnRzOiAoY29udGVudDogc3RyaW5nLCBwb2xhcm9pZHM6IFBvbGFyb2lkSW1hZ2VbXSkgPT5cbiAgICBQb2xhcm9pZE1hbmFnZXIuZ2VuZXJhdGVQbGFjZW1lbnRzKGNvbnRlbnQsIHBvbGFyb2lkcyksXG4gIGdldFVybDogKGZpbGVuYW1lOiBzdHJpbmcpID0+IFBvbGFyb2lkTWFuYWdlci5nZXRQb2xhcm9pZFVybChmaWxlbmFtZSksXG4gIHZhbGlkYXRlOiAoKSA9PiBQb2xhcm9pZE1hbmFnZXIudmFsaWRhdGVTZXR1cCgpLFxuICBzdGF0czogKCkgPT4gUG9sYXJvaWRNYW5hZ2VyLmdldFN0YXRzKCksXG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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QWQsQ0FBQSxLQUFBNUIsQ0FBQSxRQUFBUCxDQUFBLEdBQUFpRCxDQUFBLEtBQUFoQixDQUFBLE1BQUFLLENBQUEsR0FBQUgsQ0FBQSxFQUFBQyxDQUFBLEdBQUFELENBQUEsWUFBQUMsQ0FBQSxXQUFBRCxDQUFBLE1BQUFBLENBQUEsTUFBQTdCLENBQUEsSUFBQTZCLENBQUEsT0FBQVksQ0FBQSxNQUFBL0MsQ0FBQSxHQUFBTyxDQUFBLFFBQUF3QyxDQUFBLEdBQUFaLENBQUEsUUFBQUMsQ0FBQSxNQUFBUSxDQUFBLENBQUFDLENBQUEsR0FBQVosQ0FBQSxFQUFBVyxDQUFBLENBQUFYLENBQUEsR0FBQUUsQ0FBQSxPQUFBWSxDQUFBLEdBQUFFLENBQUEsS0FBQWpELENBQUEsR0FBQU8sQ0FBQSxRQUFBNEIsQ0FBQSxNQUFBRixDQUFBLElBQUFBLENBQUEsR0FBQWdCLENBQUEsTUFBQWQsQ0FBQSxNQUFBNUIsQ0FBQSxFQUFBNEIsQ0FBQSxNQUFBRixDQUFBLEVBQUFXLENBQUEsQ0FBQVgsQ0FBQSxHQUFBZ0IsQ0FBQSxFQUFBYixDQUFBLGNBQUFwQyxDQUFBLElBQUFPLENBQUEsYUFBQXVDLENBQUEsUUFBQUgsQ0FBQSxPQUFBVixDQUFBLHFCQUFBakMsQ0FBQSxFQUFBMEMsQ0FBQSxFQUFBTyxDQUFBLFFBQUFSLENBQUEsWUFBQVYsU0FBQSx1Q0FBQVksQ0FBQSxVQUFBRCxDQUFBLElBQUFLLENBQUEsQ0FBQUwsQ0FBQSxFQUFBTyxDQUFBLEdBQUFiLENBQUEsR0FBQU0sQ0FBQSxFQUFBSixDQUFBLEdBQUFXLENBQUEsR0FBQXpDLENBQUEsR0FBQTRCLENBQUEsT0FBQTlCLENBQUEsR0FBQWdDLENBQUEsTUFBQUssQ0FBQSxLQUFBUixDQUFBLEtBQUFDLENBQUEsR0FBQUEsQ0FBQSxRQUFBQSxDQUFBLFNBQUFRLENBQUEsQ0FBQVgsQ0FBQSxRQUFBYyxDQUFBLENBQUFYLENBQUEsRUFBQUUsQ0FBQSxLQUFBTSxDQUFBLENBQUFYLENBQUEsR0FBQUssQ0FBQSxHQUFBTSxDQUFBLENBQUFDLENBQUEs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QUM7QUFBQTtBQUFBek8sZUFBQSxDQUQxRHlFLGVBQWUsc0JBQUFqRyxhQUFBLEdBQUF1RSxDQUFBLE9BRW9CLElBQUk7QUFBQTtBQUFBL0MsZUFBQSxDQUZ2Q3lFLGVBQWUscUJBQUFqRyxhQUFBLEdBQUF1RSxDQUFBLE9BR2UsQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJO0FBMld4RCxPQUFPLElBQU0yTCxlQUFlO0FBQUE7QUFBQSxDQUFBbFEsYUFBQSxHQUFBdUUsQ0FBQSxTQUFHO0VBQzdCNEwsWUFBWSxFQUFFLFNBQWRBLFlBQVlBLENBQUEsRUFBUTtJQUFBO0lBQUFuUSxhQUFBLEdBQUE0QyxDQUFBO0lBQUE1QyxhQUFBLEdBQUF1RSxDQUFBO0lBQUEsT0FBQTBCLGVBQWUsQ0FBQ2lELHFCQUFxQixDQUFDLENBQUM7RUFBRCxDQUFDO0VBQzNEa0gsY0FBYyxFQUFFLFNBQWhCQSxjQUFjQSxDQUFHQyxPQUFpQixFQUNoQztJQUFBO0lBQUFyUSxhQUFBLEdBQUE0QyxDQUFBO0lBQUE1QyxhQUFBLEdBQUF1RSxDQUFBO0lBQUEsT0FBQTBCLGVBQWUsQ0FBQzBFLHVCQUF1QixDQUFDMEYsT0FBTyxDQUFDO0VBQUQsQ0FBQztFQUNsRHhGLGtCQUFrQixFQUFFLFNBQXBCQSxrQkFBa0JBLENBQUdDLE9BQWUsRUFBRUMsU0FBMEIsRUFDOUQ7SUFBQTtJQUFBL0ssYUFBQSxHQUFBNEMsQ0FBQTtJQUFBNUMsYUFBQSxHQUFBdUUsQ0FBQTtJQUFBLE9BQUEwQixlQUFlLENBQUM0RSxrQkFBa0IsQ0FBQ0MsT0FBTyxFQUFFQyxTQUFTLENBQUM7RUFBRCxDQUFDO0VBQ3hEdUYsTUFBTSxFQUFFLFNBQVJBLE1BQU1BLENBQUdoSSxRQUFnQixFQUFLO0lBQUE7SUFBQXRJLGFBQUEsR0FBQTRDLENBQUE7SUFBQTVDLGFBQUEsR0FBQXVFLENBQUE7SUFBQSxPQUFBMEIsZUFBZSxDQUFDb0csY0FBYyxDQUFDL0QsUUFBUSxDQUFDO0VBQUQsQ0FBQztFQUN0RWlJLFFBQVEsRUFBRSxTQUFWQSxRQUFRQSxDQUFBLEVBQVE7SUFBQTtJQUFBdlEsYUFBQSxHQUFBNEMsQ0FBQTtJQUFBNUMsYUFBQSxHQUFBdUUsQ0FBQTtJQUFBLE9BQUEwQixlQUFlLENBQUNpSixhQUFhLENBQUMsQ0FBQztFQUFELENBQUM7RUFDL0N0SSxLQUFLLEVBQUUsU0FBUEEsS0FBS0EsQ0FBQSxFQUFRO0lBQUE7SUFBQTVHLGFBQUEsR0FBQTRDLENBQUE7SUFBQTVDLGFBQUEsR0FBQXVFLENBQUE7SUFBQSxPQUFBMEIsZUFBZSxDQUFDK0osUUFBUSxDQUFDLENBQUM7RUFBRDtBQUN4QyxDQUFDIiwiaWdub3JlTGlzdCI6W119