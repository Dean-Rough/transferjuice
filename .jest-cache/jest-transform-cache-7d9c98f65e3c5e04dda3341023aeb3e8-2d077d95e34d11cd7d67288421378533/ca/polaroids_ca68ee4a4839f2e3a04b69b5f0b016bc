2342d5ae2768f0319b615f6639279544
/* istanbul ignore next */ function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function cov_1tslx62l4x() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/briefings/polaroids.ts";
  var hash = "6b4039541c7b9e1bb128665eda6959ce225dbfaf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/briefings/polaroids.ts",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 18,
          column: 57
        }
      },
      "1": {
        start: {
          line: 20,
          column: 29
        },
        end: {
          line: 49,
          column: 3
        }
      },
      "2": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 24,
          column: 7
        }
      },
      "3": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 20
        }
      },
      "4": {
        start: {
          line: 26,
          column: 6
        },
        end: {
          line: 47,
          column: 7
        }
      },
      "5": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 32,
          column: 10
        }
      },
      "6": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 40,
          column: 10
        }
      },
      "7": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 45,
          column: 10
        }
      },
      "8": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 20
        }
      },
      "9": {
        start: {
          line: 51,
          column: 2
        },
        end: {
          line: 51,
          column: 28
        }
      },
      "10": {
        start: {
          line: 60,
          column: 47
        },
        end: {
          line: 60,
          column: 54
        }
      },
      "11": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 67,
          column: 4
        }
      },
      "12": {
        start: {
          line: 69,
          column: 2
        },
        end: {
          line: 74,
          column: 3
        }
      },
      "13": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 36
        }
      },
      "14": {
        start: {
          line: 77,
          column: 2
        },
        end: {
          line: 77,
          column: 61
        }
      },
      "15": {
        start: {
          line: 80,
          column: 22
        },
        end: {
          line: 80,
          column: 54
        }
      },
      "16": {
        start: {
          line: 82,
          column: 2
        },
        end: {
          line: 85,
          column: 3
        }
      },
      "17": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 57
        }
      },
      "18": {
        start: {
          line: 88,
          column: 22
        },
        end: {
          line: 94,
          column: 4
        }
      },
      "19": {
        start: {
          line: 97,
          column: 2
        },
        end: {
          line: 120,
          column: 3
        }
      },
      "20": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 106,
          column: 7
        }
      },
      "21": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 119,
          column: 7
        }
      },
      "22": {
        start: {
          line: 122,
          column: 2
        },
        end: {
          line: 122,
          column: 21
        }
      },
      "23": {
        start: {
          line: 129,
          column: 2
        },
        end: {
          line: 129,
          column: 31
        }
      },
      "24": {
        start: {
          line: 129,
          column: 18
        },
        end: {
          line: 129,
          column: 31
        }
      },
      "25": {
        start: {
          line: 131,
          column: 24
        },
        end: {
          line: 131,
          column: 34
        }
      },
      "26": {
        start: {
          line: 132,
          column: 2
        },
        end: {
          line: 132,
          column: 54
        }
      },
      "27": {
        start: {
          line: 134,
          column: 2
        },
        end: {
          line: 134,
          column: 35
        }
      },
      "28": {
        start: {
          line: 147,
          column: 19
        },
        end: {
          line: 151,
          column: 18
        }
      },
      "29": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 20
        }
      },
      "30": {
        start: {
          line: 154,
          column: 2
        },
        end: {
          line: 154,
          column: 105
        }
      },
      "31": {
        start: {
          line: 161,
          column: 47
        },
        end: {
          line: 161,
          column: 56
        }
      },
      "32": {
        start: {
          line: 163,
          column: 2
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "33": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "34": {
        start: {
          line: 166,
          column: 6
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "35": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "36": {
        start: {
          line: 168,
          column: 29
        },
        end: {
          line: 168,
          column: 41
        }
      },
      "37": {
        start: {
          line: 169,
          column: 27
        },
        end: {
          line: 169,
          column: 51
        }
      },
      "38": {
        start: {
          line: 171,
          column: 10
        },
        end: {
          line: 176,
          column: 13
        }
      },
      "39": {
        start: {
          line: 182,
          column: 29
        },
        end: {
          line: 182,
          column: 65
        }
      },
      "40": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 192,
          column: 7
        }
      },
      "41": {
        start: {
          line: 184,
          column: 23
        },
        end: {
          line: 184,
          column: 47
        }
      },
      "42": {
        start: {
          line: 186,
          column: 6
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "43": {
        start: {
          line: 195,
          column: 2
        },
        end: {
          line: 195,
          column: 73
        }
      },
      "44": {
        start: {
          line: 195,
          column: 54
        },
        end: {
          line: 195,
          column: 71
        }
      },
      "45": {
        start: {
          line: 202,
          column: 28
        },
        end: {
          line: 202,
          column: 30
        }
      },
      "46": {
        start: {
          line: 206,
          column: 19
        },
        end: {
          line: 211,
          column: 3
        }
      },
      "47": {
        start: {
          line: 213,
          column: 2
        },
        end: {
          line: 221,
          column: 5
        }
      },
      "48": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 220,
          column: 5
        }
      },
      "49": {
        start: {
          line: 216,
          column: 19
        },
        end: {
          line: 216,
          column: 34
        }
      },
      "50": {
        start: {
          line: 218,
          column: 6
        },
        end: {
          line: 218,
          column: 46
        }
      },
      "51": {
        start: {
          line: 218,
          column: 37
        },
        end: {
          line: 218,
          column: 46
        }
      },
      "52": {
        start: {
          line: 219,
          column: 6
        },
        end: {
          line: 219,
          column: 25
        }
      },
      "53": {
        start: {
          line: 223,
          column: 2
        },
        end: {
          line: 223,
          column: 31
        }
      },
      "54": {
        start: {
          line: 231,
          column: 25
        },
        end: {
          line: 247,
          column: 3
        }
      },
      "55": {
        start: {
          line: 249,
          column: 2
        },
        end: {
          line: 253,
          column: 4
        }
      },
      "56": {
        start: {
          line: 260,
          column: 26
        },
        end: {
          line: 260,
          column: 28
        }
      },
      "57": {
        start: {
          line: 262,
          column: 2
        },
        end: {
          line: 268,
          column: 3
        }
      },
      "58": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 267,
          column: 7
        }
      },
      "59": {
        start: {
          line: 264,
          column: 6
        },
        end: {
          line: 266,
          column: 7
        }
      },
      "60": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 33
        }
      },
      "61": {
        start: {
          line: 270,
          column: 2
        },
        end: {
          line: 270,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "generatePolaroids",
        decl: {
          start: {
            line: 14,
            column: 22
          },
          end: {
            line: 14,
            column: 39
          }
        },
        loc: {
          start: {
            line: 17,
            column: 27
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 21,
            column: 23
          }
        },
        loc: {
          start: {
            line: 21,
            column: 38
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 21
      },
      "2": {
        name: "getOrGeneratePolaroid",
        decl: {
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 57,
            column: 36
          }
        },
        loc: {
          start: {
            line: 59,
            column: 19
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 59
      },
      "3": {
        name: "isRecentPolaroid",
        decl: {
          start: {
            line: 128,
            column: 9
          },
          end: {
            line: 128,
            column: 25
          }
        },
        loc: {
          start: {
            line: 128,
            column: 59
          },
          end: {
            line: 135,
            column: 1
          }
        },
        line: 128
      },
      "4": {
        name: "generateDefaultPolaroid",
        decl: {
          start: {
            line: 140,
            column: 15
          },
          end: {
            line: 140,
            column: 38
          }
        },
        loc: {
          start: {
            line: 143,
            column: 19
          },
          end: {
            line: 155,
            column: 1
          }
        },
        line: 143
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 149,
            column: 9
          },
          end: {
            line: 149,
            column: 10
          }
        },
        loc: {
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 149,
            column: 20
          }
        },
        line: 149
      },
      "6": {
        name: "extractPlayerMentions",
        decl: {
          start: {
            line: 160,
            column: 16
          },
          end: {
            line: 160,
            column: 37
          }
        },
        loc: {
          start: {
            line: 160,
            column: 73
          },
          end: {
            line: 196,
            column: 1
          }
        },
        line: 160
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 163,
            column: 20
          },
          end: {
            line: 163,
            column: 21
          }
        },
        loc: {
          start: {
            line: 163,
            column: 30
          },
          end: {
            line: 193,
            column: 3
          }
        },
        line: 163
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 166,
            column: 24
          },
          end: {
            line: 166,
            column: 25
          }
        },
        loc: {
          start: {
            line: 166,
            column: 38
          },
          end: {
            line: 178,
            column: 7
          }
        },
        line: 166
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 183,
            column: 29
          },
          end: {
            line: 183,
            column: 30
          }
        },
        loc: {
          start: {
            line: 183,
            column: 45
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 183
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 195,
            column: 44
          },
          end: {
            line: 195,
            column: 45
          }
        },
        loc: {
          start: {
            line: 195,
            column: 54
          },
          end: {
            line: 195,
            column: 71
          }
        },
        line: 195
      },
      "11": {
        name: "extractPlayersFromText",
        decl: {
          start: {
            line: 201,
            column: 9
          },
          end: {
            line: 201,
            column: 31
          }
        },
        loc: {
          start: {
            line: 201,
            column: 56
          },
          end: {
            line: 224,
            column: 1
          }
        },
        line: 201
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 213,
            column: 19
          },
          end: {
            line: 213,
            column: 20
          }
        },
        loc: {
          start: {
            line: 213,
            column: 32
          },
          end: {
            line: 221,
            column: 3
          }
        },
        line: 213
      },
      "13": {
        name: "isLikelyPlayerName",
        decl: {
          start: {
            line: 229,
            column: 9
          },
          end: {
            line: 229,
            column: 27
          }
        },
        loc: {
          start: {
            line: 229,
            column: 51
          },
          end: {
            line: 254,
            column: 1
          }
        },
        line: 229
      },
      "14": {
        name: "extractClubsFromItem",
        decl: {
          start: {
            line: 259,
            column: 9
          },
          end: {
            line: 259,
            column: 29
          }
        },
        loc: {
          start: {
            line: 259,
            column: 51
          },
          end: {
            line: 271,
            column: 1
          }
        },
        line: 259
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 263,
            column: 22
          },
          end: {
            line: 263,
            column: 23
          }
        },
        loc: {
          start: {
            line: 263,
            column: 36
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 263
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 24,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 24,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 69,
            column: 2
          },
          end: {
            line: 74,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 2
          },
          end: {
            line: 74,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "2": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 71,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 29
          }
        }, {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 52
          }
        }],
        line: 70
      },
      "3": {
        loc: {
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 85,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 85,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "4": {
        loc: {
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 92,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 92,
            column: 26
          }
        }, {
          start: {
            line: 92,
            column: 30
          },
          end: {
            line: 92,
            column: 39
          }
        }],
        line: 92
      },
      "5": {
        loc: {
          start: {
            line: 93,
            column: 11
          },
          end: {
            line: 93,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 11
          },
          end: {
            line: 93,
            column: 24
          }
        }, {
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 37
          }
        }],
        line: 93
      },
      "6": {
        loc: {
          start: {
            line: 97,
            column: 2
          },
          end: {
            line: 120,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 2
          },
          end: {
            line: 120,
            column: 3
          }
        }, {
          start: {
            line: 107,
            column: 9
          },
          end: {
            line: 120,
            column: 3
          }
        }],
        line: 97
      },
      "7": {
        loc: {
          start: {
            line: 129,
            column: 2
          },
          end: {
            line: 129,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 2
          },
          end: {
            line: 129,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "8": {
        loc: {
          start: {
            line: 154,
            column: 80
          },
          end: {
            line: 154,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 80
          },
          end: {
            line: 154,
            column: 88
          }
        }, {
          start: {
            line: 154,
            column: 92
          },
          end: {
            line: 154,
            column: 101
          }
        }],
        line: 154
      },
      "9": {
        loc: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "10": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "11": {
        loc: {
          start: {
            line: 173,
            column: 20
          },
          end: {
            line: 173,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 20
          },
          end: {
            line: 173,
            column: 35
          }
        }, {
          start: {
            line: 173,
            column: 39
          },
          end: {
            line: 173,
            column: 40
          }
        }],
        line: 173
      },
      "12": {
        loc: {
          start: {
            line: 174,
            column: 19
          },
          end: {
            line: 174,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 19
          },
          end: {
            line: 174,
            column: 34
          }
        }, {
          start: {
            line: 174,
            column: 38
          },
          end: {
            line: 174,
            column: 64
          }
        }],
        line: 174
      },
      "13": {
        loc: {
          start: {
            line: 188,
            column: 16
          },
          end: {
            line: 188,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 16
          },
          end: {
            line: 188,
            column: 31
          }
        }, {
          start: {
            line: 188,
            column: 35
          },
          end: {
            line: 188,
            column: 36
          }
        }],
        line: 188
      },
      "14": {
        loc: {
          start: {
            line: 189,
            column: 15
          },
          end: {
            line: 189,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 15
          },
          end: {
            line: 189,
            column: 30
          }
        }, {
          start: {
            line: 189,
            column: 34
          },
          end: {
            line: 189,
            column: 60
          }
        }],
        line: 189
      },
      "15": {
        loc: {
          start: {
            line: 218,
            column: 6
          },
          end: {
            line: 218,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 6
          },
          end: {
            line: 218,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "16": {
        loc: {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 252,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 250,
            column: 34
          }
        }, {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 251,
            column: 31
          }
        }, {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 252,
            column: 31
          }
        }],
        line: 250
      },
      "17": {
        loc: {
          start: {
            line: 262,
            column: 2
          },
          end: {
            line: 268,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 2
          },
          end: {
            line: 268,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "18": {
        loc: {
          start: {
            line: 264,
            column: 6
          },
          end: {
            line: 266,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 6
          },
          end: {
            line: 266,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6b4039541c7b9e1bb128665eda6959ce225dbfaf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1tslx62l4x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1tslx62l4x();
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Polaroid Generation Service
 * Creates dynamic polaroid images for players in briefings
 */

import { getPlayerImage } from "@/lib/wikipedia/playerImages";
import { generatePolaroidFrame } from "@/lib/images/polaroidGenerator";
import { prisma } from "@/lib/prisma";

/**
 * Generate polaroids for timeline items
 */
export
/* istanbul ignore next */
function generatePolaroids(_x, _x2) {
  return _generatePolaroids.apply(this, arguments);
}

/**
 * Get or generate polaroid for player
 */
/* istanbul ignore next */
function _generatePolaroids() {
  _generatePolaroids = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2(feedItems, timelineItems)
  /* istanbul ignore next */
  {
    var itemsWithPolaroids;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_1tslx62l4x().f[0]++;
          cov_1tslx62l4x().s[0]++;
          console.log("📸 Generating polaroids for timeline...");
          cov_1tslx62l4x().s[1]++;
          _context2.n = 1;
          return Promise.all(timelineItems.map(
          /* istanbul ignore next */
          /*#__PURE__*/function () {
            var _ref = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
            /* istanbul ignore next */
            _callee(item)
            /* istanbul ignore next */
            {
              var _item$polaroid;
              var polaroidUrl, _t;
              return _regenerator().w(function (_context) {
                while (1) switch (_context.n) {
                  case 0:
                    cov_1tslx62l4x().f[1]++;
                    cov_1tslx62l4x().s[2]++;
                    if ((_item$polaroid = item.polaroid) !== null && _item$polaroid !== void 0 &&
                    /* istanbul ignore next */
                    _item$polaroid.playerName) {
                      _context.n = 1;
                      break;
                    }
                    cov_1tslx62l4x().b[0][0]++;
                    cov_1tslx62l4x().s[3]++;
                    return _context.a(2, item);
                  case 1:
                    cov_1tslx62l4x().b[0][1]++;
                  case 2:
                    cov_1tslx62l4x().s[4]++;
                    _context.p = 3;
                    cov_1tslx62l4x().s[5]++;
                    _context.n = 4;
                    return getOrGeneratePolaroid({
                      playerName: item.polaroid.playerName,
                      clubName: item.polaroid.clubName,
                      frameColor: item.polaroid.frameColor
                    });
                  case 4:
                    polaroidUrl = _context.v;
                    cov_1tslx62l4x().s[6]++;
                    return _context.a(2, _objectSpread(_objectSpread({}, item), {}, {
                      polaroid:
                      /* istanbul ignore next */
                      _objectSpread(_objectSpread({}, item.polaroid), {}, {
                        imageUrl: polaroidUrl
                      })
                    }));
                  case 5:
                    _context.p = 5;
                    _t = _context.v;
                    cov_1tslx62l4x().s[7]++;
                    console.warn(
                    /* istanbul ignore next */
                    "Failed to generate polaroid for ".concat(item.polaroid.playerName, ":"),
                    /* istanbul ignore next */
                    _t);
                    cov_1tslx62l4x().s[8]++;
                    return _context.a(2, item);
                }
              }, _callee, null, [[3, 5]]);
            }));
            return function (_x6) {
              return _ref.apply(this, arguments);
            };
          }()));
        case 1:
          itemsWithPolaroids = _context2.v;
          cov_1tslx62l4x().s[9]++;
          return _context2.a(2, itemsWithPolaroids);
      }
    }, _callee2);
  }));
  return _generatePolaroids.apply(this, arguments);
}
/* istanbul ignore next */
function getOrGeneratePolaroid(_x3) {
  return _getOrGeneratePolaroid.apply(this, arguments);
}
/**
 * Check if polaroid is recent enough
 */
/* istanbul ignore next */
function _getOrGeneratePolaroid() {
  _getOrGeneratePolaroid = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee3(options)
  /* istanbul ignore next */
  {
    var _ref2, playerName, clubName, frameColor, cachedPlayer, playerImage, polaroidUrl;
    return _regenerator().w(function (_context3) {
      while (1) switch (_context3.n) {
        case 0:
          cov_1tslx62l4x().f[2]++;
          _ref2 = (cov_1tslx62l4x().s[10]++, options), playerName = _ref2.playerName, clubName = _ref2.clubName, frameColor = _ref2.frameColor; // Check if we have a cached polaroid
          cov_1tslx62l4x().s[11]++;
          _context3.n = 1;
          return prisma.player.findFirst({
            where: {
              normalizedName: playerName.toLowerCase().replace(/\s+/g, "-")
            }
          });
        case 1:
          cachedPlayer = _context3.v;
          cov_1tslx62l4x().s[12]++;
          if (!(
          /* istanbul ignore next */
          (cov_1tslx62l4x().b[2][0]++, cachedPlayer !== null && cachedPlayer !== void 0 && cachedPlayer.polaroidUrl) &&
          /* istanbul ignore next */
          (cov_1tslx62l4x().b[2][1]++, isRecentPolaroid(cachedPlayer.polaroidUpdatedAt)))) {
            _context3.n = 2;
            break;
          }
          cov_1tslx62l4x().b[1][0]++;
          cov_1tslx62l4x().s[13]++;
          return _context3.a(2, cachedPlayer.polaroidUrl);
        case 2:
          cov_1tslx62l4x().b[1][1]++;
        case 3:
          cov_1tslx62l4x().s[14]++;
          // Generate new polaroid
          console.log(
          /* istanbul ignore next */
          "\uD83C\uDFA8 Generating polaroid for ".concat(playerName, "..."));

          // Get player image from Wikipedia
          cov_1tslx62l4x().s[15]++;
          _context3.n = 4;
          return getPlayerImage(playerName);
        case 4:
          playerImage = _context3.v;
          cov_1tslx62l4x().s[16]++;
          if (playerImage) {
            _context3.n = 5;
            break;
          }
          cov_1tslx62l4x().b[3][0]++;
          cov_1tslx62l4x().s[17]++;
          return _context3.a(2, generateDefaultPolaroid(playerName, clubName));
        case 5:
          cov_1tslx62l4x().b[3][1]++;
        case 6:
          cov_1tslx62l4x().s[18]++;
          _context3.n = 7;
          return generatePolaroidFrame({
            imageUrl: playerImage.url,
            playerName: playerName,
            clubName: clubName,
            frameColor:
            /* istanbul ignore next */
            (cov_1tslx62l4x().b[4][0]++, frameColor) ||
            /* istanbul ignore next */
            (cov_1tslx62l4x().b[4][1]++, "#FFFFFF"),
            style:
            /* istanbul ignore next */
            (cov_1tslx62l4x().b[5][0]++, options.style) ||
            /* istanbul ignore next */
            (cov_1tslx62l4x().b[5][1]++, "vintage")
          });
        case 7:
          polaroidUrl = _context3.v;
          cov_1tslx62l4x().s[19]++;
          if (!cachedPlayer) {
            _context3.n = 9;
            break;
          }
          cov_1tslx62l4x().b[6][0]++;
          cov_1tslx62l4x().s[20]++;
          _context3.n = 8;
          return prisma.player.update({
            where: {
              id: cachedPlayer.id
            },
            data: {
              polaroidUrl: polaroidUrl,
              polaroidUpdatedAt: new Date(),
              imageUrl: playerImage.url,
              imageLicense: playerImage.license
            }
          });
        case 8:
          _context3.n = 10;
          break;
        case 9:
          cov_1tslx62l4x().b[6][1]++;
          cov_1tslx62l4x().s[21]++;
          _context3.n = 10;
          return prisma.player.create({
            data: {
              name: playerName,
              normalizedName: playerName.toLowerCase().replace(/\s+/g, "-"),
              wikipediaUrl: playerImage.wikipediaUrl,
              imageUrl: playerImage.url,
              imageLicense: playerImage.license,
              currentClub: clubName,
              polaroidUrl: polaroidUrl,
              polaroidUpdatedAt: new Date()
            }
          });
        case 10:
          cov_1tslx62l4x().s[22]++;
          return _context3.a(2, polaroidUrl);
      }
    }, _callee3);
  }));
  return _getOrGeneratePolaroid.apply(this, arguments);
}
function isRecentPolaroid(updatedAt) {
  /* istanbul ignore next */
  cov_1tslx62l4x().f[3]++;
  cov_1tslx62l4x().s[23]++;
  if (!updatedAt) {
    /* istanbul ignore next */
    cov_1tslx62l4x().b[7][0]++;
    cov_1tslx62l4x().s[24]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1tslx62l4x().b[7][1]++;
  }
  var thirtyDaysAgo =
  /* istanbul ignore next */
  (cov_1tslx62l4x().s[25]++, new Date());
  /* istanbul ignore next */
  cov_1tslx62l4x().s[26]++;
  thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);
  /* istanbul ignore next */
  cov_1tslx62l4x().s[27]++;
  return updatedAt > thirtyDaysAgo;
}

/**
 * Generate default polaroid for players without images
 */
/* istanbul ignore next */
function generateDefaultPolaroid(_x4, _x5) {
  return _generateDefaultPolaroid.apply(this, arguments);
}
/**
 * Extract player mentions from feed items
 */
/* istanbul ignore next */
function _generateDefaultPolaroid() {
  _generateDefaultPolaroid = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee4(playerName, clubName)
  /* istanbul ignore next */
  {
    var initials;
    return _regenerator().w(function (_context4) {
      while (1) switch (_context4.n) {
        case 0:
          cov_1tslx62l4x().f[4]++;
          // This would generate a default silhouette polaroid
          // For now, return a placeholder URL
          initials = (cov_1tslx62l4x().s[28]++, playerName.split(" ").map(function (n) {
            /* istanbul ignore next */
            cov_1tslx62l4x().f[5]++;
            cov_1tslx62l4x().s[29]++;
            return n[0];
          }).join("").toUpperCase()); // In production, this would generate an actual image
          cov_1tslx62l4x().s[30]++;
          return _context4.a(2, "/api/polaroids/default?initials=".concat(initials, "&club=").concat(encodeURIComponent(
          /* istanbul ignore next */
          (cov_1tslx62l4x().b[8][0]++, clubName) ||
          /* istanbul ignore next */
          (cov_1tslx62l4x().b[8][1]++, "Unknown"))));
      }
    }, _callee4);
  }));
  return _generateDefaultPolaroid.apply(this, arguments);
}
export function extractPlayerMentions(feedItems) {
  /* istanbul ignore next */
  cov_1tslx62l4x().f[6]++;
  var mentions =
  /* istanbul ignore next */
  (cov_1tslx62l4x().s[31]++, new Map());
  /* istanbul ignore next */
  cov_1tslx62l4x().s[32]++;
  feedItems.forEach(function (item) {
    /* istanbul ignore next */
    cov_1tslx62l4x().f[7]++;
    cov_1tslx62l4x().s[33]++;
    // Extract from tags
    if (item.tags) {
      /* istanbul ignore next */
      cov_1tslx62l4x().b[9][0]++;
      cov_1tslx62l4x().s[34]++;
      item.tags.forEach(function (tag) {
        /* istanbul ignore next */
        var _tag$tag;
        cov_1tslx62l4x().f[8]++;
        cov_1tslx62l4x().s[35]++;
        if (
        /* istanbul ignore next */
        ((_tag$tag = tag.tag) === null || _tag$tag === void 0 ? void 0 :
        /* istanbul ignore next */
        _tag$tag.type) === "PLAYER") {
          /* istanbul ignore next */
          cov_1tslx62l4x().b[10][0]++;
          var playerName =
          /* istanbul ignore next */
          (cov_1tslx62l4x().s[36]++, tag.tag.name);
          var existing =
          /* istanbul ignore next */
          (cov_1tslx62l4x().s[37]++, mentions.get(playerName));
          /* istanbul ignore next */
          cov_1tslx62l4x().s[38]++;
          mentions.set(playerName, {
            name: playerName,
            count: (
            /* istanbul ignore next */
            (cov_1tslx62l4x().b[11][0]++, existing === null || existing === void 0 ? void 0 : existing.count) ||
            /* istanbul ignore next */
            (cov_1tslx62l4x().b[11][1]++, 0)) + 1,
            clubs:
            /* istanbul ignore next */
            (cov_1tslx62l4x().b[12][0]++, existing === null || existing === void 0 ? void 0 : existing.clubs) ||
            /* istanbul ignore next */
            (cov_1tslx62l4x().b[12][1]++, extractClubsFromItem(item)),
            lastMentioned: item.publishedAt
          });
        } else
        /* istanbul ignore next */
        {
          cov_1tslx62l4x().b[10][1]++;
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tslx62l4x().b[9][1]++;
    }

    // Also try to extract from content using NER
    var extractedPlayers =
    /* istanbul ignore next */
    (cov_1tslx62l4x().s[39]++, extractPlayersFromText(item.content));
    /* istanbul ignore next */
    cov_1tslx62l4x().s[40]++;
    extractedPlayers.forEach(function (playerName) {
      /* istanbul ignore next */
      cov_1tslx62l4x().f[9]++;
      var existing =
      /* istanbul ignore next */
      (cov_1tslx62l4x().s[41]++, mentions.get(playerName));
      /* istanbul ignore next */
      cov_1tslx62l4x().s[42]++;
      mentions.set(playerName, {
        name: playerName,
        count: (
        /* istanbul ignore next */
        (cov_1tslx62l4x().b[13][0]++, existing === null || existing === void 0 ? void 0 : existing.count) ||
        /* istanbul ignore next */
        (cov_1tslx62l4x().b[13][1]++, 0)) + 1,
        clubs:
        /* istanbul ignore next */
        (cov_1tslx62l4x().b[14][0]++, existing === null || existing === void 0 ? void 0 : existing.clubs) ||
        /* istanbul ignore next */
        (cov_1tslx62l4x().b[14][1]++, extractClubsFromItem(item)),
        lastMentioned: item.publishedAt
      });
    });
  });
  /* istanbul ignore next */
  cov_1tslx62l4x().s[43]++;
  return Array.from(mentions.values()).sort(function (a, b) {
    /* istanbul ignore next */
    cov_1tslx62l4x().f[10]++;
    cov_1tslx62l4x().s[44]++;
    return b.count - a.count;
  });
}

/**
 * Extract player names from text
 */
function extractPlayersFromText(text) {
  /* istanbul ignore next */
  cov_1tslx62l4x().f[11]++;
  var players =
  /* istanbul ignore next */
  (cov_1tslx62l4x().s[45]++, []);

  // Common player name patterns
  // This is simplified - production would use proper NER
  var patterns =
  /* istanbul ignore next */
  (cov_1tslx62l4x().s[46]++, [
  // Full names
  /(?:(?:signs?|join|move|transfer|bid|medical|deal|target)\s+(?:for\s+)?)((?:[A-Z][a-z]+\s+){1,2}[A-Z][a-z]+)(?:\s|,|\.)/g,
  // Names after positions
  /(?:striker|midfielder|defender|goalkeeper|winger|forward)\s+((?:[A-Z][a-z]+\s+){1,2}[A-Z][a-z]+)/g]);
  /* istanbul ignore next */
  cov_1tslx62l4x().s[47]++;
  patterns.forEach(function (pattern) {
    /* istanbul ignore next */
    cov_1tslx62l4x().f[12]++;
    var match;
    /* istanbul ignore next */
    cov_1tslx62l4x().s[48]++;
    while ((match = pattern.exec(text)) !== null) {
      var name =
      /* istanbul ignore next */
      (cov_1tslx62l4x().s[49]++, match[1].trim());
      // Filter out common false positives
      /* istanbul ignore next */
      cov_1tslx62l4x().s[50]++;
      if (!isLikelyPlayerName(name)) {
        /* istanbul ignore next */
        cov_1tslx62l4x().b[15][0]++;
        cov_1tslx62l4x().s[51]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1tslx62l4x().b[15][1]++;
      }
      cov_1tslx62l4x().s[52]++;
      players.push(name);
    }
  });
  /* istanbul ignore next */
  cov_1tslx62l4x().s[53]++;
  return /* istanbul ignore next */_toConsumableArray(new Set(players));
}

/**
 * Check if extracted text is likely a player name
 */
function isLikelyPlayerName(name) {
  /* istanbul ignore next */
  cov_1tslx62l4x().f[13]++;
  // Filter out clubs, countries, etc.
  var notPlayerNames =
  /* istanbul ignore next */
  (cov_1tslx62l4x().s[54]++, ["Manchester United", "Manchester City", "Real Madrid", "Barcelona", "Premier League", "La Liga", "Champions League", "England", "Spain", "France", "Germany", "Brazil", "The Athletic", "Sky Sports", "BBC Sport"]);
  /* istanbul ignore next */
  cov_1tslx62l4x().s[55]++;
  return /* istanbul ignore next */(cov_1tslx62l4x().b[16][0]++, !notPlayerNames.includes(name)) &&
  /* istanbul ignore next */
  (cov_1tslx62l4x().b[16][1]++, name.split(" ").length >= 2) &&
  /* istanbul ignore next */
  (cov_1tslx62l4x().b[16][2]++, name.split(" ").length <= 4);
}

/**
 * Extract clubs from feed item
 */
function extractClubsFromItem(item) {
  /* istanbul ignore next */
  cov_1tslx62l4x().f[14]++;
  var clubs =
  /* istanbul ignore next */
  (cov_1tslx62l4x().s[56]++, []);
  /* istanbul ignore next */
  cov_1tslx62l4x().s[57]++;
  if (item.tags) {
    /* istanbul ignore next */
    cov_1tslx62l4x().b[17][0]++;
    cov_1tslx62l4x().s[58]++;
    item.tags.forEach(function (tag) {
      /* istanbul ignore next */
      var _tag$tag2;
      cov_1tslx62l4x().f[15]++;
      cov_1tslx62l4x().s[59]++;
      if (
      /* istanbul ignore next */
      ((_tag$tag2 = tag.tag) === null || _tag$tag2 === void 0 ? void 0 :
      /* istanbul ignore next */
      _tag$tag2.type) === "CLUB") {
        /* istanbul ignore next */
        cov_1tslx62l4x().b[18][0]++;
        cov_1tslx62l4x().s[60]++;
        clubs.push(tag.tag.name);
      } else
      /* istanbul ignore next */
      {
        cov_1tslx62l4x().b[18][1]++;
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_1tslx62l4x().b[17][1]++;
  }
  cov_1tslx62l4x().s[61]++;
  return clubs;
}

// Type definitions
//# sourceMappingURL=data:application/json;charset=utf-8;base64,