5c073a54256b791831fa012dc6b4968c
/* istanbul ignore next */
function cov_2k1tst58h0() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/image/index.ts";
  var hash = "66ba00cf682848b3f2e467a22ba25acb473c7251";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/image/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 28,
          column: 41
        },
        end: {
          line: 37,
          column: 2
        }
      },
      "1": {
        start: {
          line: 39,
          column: 41
        },
        end: {
          line: 56,
          column: 2
        }
      },
      "2": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 58
        }
      },
      "3": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 76,
          column: 7
        }
      },
      "4": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 84,
          column: 7
        }
      },
      "5": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 89,
          column: 7
        }
      },
      "6": {
        start: {
          line: 104,
          column: 22
        },
        end: {
          line: 104,
          column: 32
        }
      },
      "7": {
        start: {
          line: 105,
          column: 29
        },
        end: {
          line: 105,
          column: 31
        }
      },
      "8": {
        start: {
          line: 106,
          column: 31
        },
        end: {
          line: 106,
          column: 33
        }
      },
      "9": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "10": {
        start: {
          line: 110,
          column: 28
        },
        end: {
          line: 115,
          column: 7
        }
      },
      "11": {
        start: {
          line: 117,
          column: 6
        },
        end: {
          line: 119,
          column: 7
        }
      },
      "12": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 73
        }
      },
      "13": {
        start: {
          line: 122,
          column: 30
        },
        end: {
          line: 126,
          column: 7
        }
      },
      "14": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 138,
          column: 21
        }
      },
      "15": {
        start: {
          line: 141,
          column: 22
        },
        end: {
          line: 146,
          column: 7
        }
      },
      "16": {
        start: {
          line: 148,
          column: 6
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "17": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 160,
          column: 8
        }
      },
      "18": {
        start: {
          line: 162,
          column: 6
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "19": {
        start: {
          line: 194,
          column: 29
        },
        end: {
          line: 194,
          column: 31
        }
      },
      "20": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "21": {
        start: {
          line: 198,
          column: 28
        },
        end: {
          line: 202,
          column: 7
        }
      },
      "22": {
        start: {
          line: 204,
          column: 6
        },
        end: {
          line: 206,
          column: 7
        }
      },
      "23": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 51
        }
      },
      "24": {
        start: {
          line: 209,
          column: 30
        },
        end: {
          line: 212,
          column: 7
        }
      },
      "25": {
        start: {
          line: 214,
          column: 6
        },
        end: {
          line: 217,
          column: 8
        }
      },
      "26": {
        start: {
          line: 219,
          column: 6
        },
        end: {
          line: 221,
          column: 8
        }
      },
      "27": {
        start: {
          line: 222,
          column: 6
        },
        end: {
          line: 225,
          column: 8
        }
      },
      "28": {
        start: {
          line: 240,
          column: 29
        },
        end: {
          line: 240,
          column: 31
        }
      },
      "29": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 265,
          column: 5
        }
      },
      "30": {
        start: {
          line: 243,
          column: 31
        },
        end: {
          line: 247,
          column: 7
        }
      },
      "31": {
        start: {
          line: 249,
          column: 6
        },
        end: {
          line: 256,
          column: 8
        }
      },
      "32": {
        start: {
          line: 258,
          column: 6
        },
        end: {
          line: 260,
          column: 8
        }
      },
      "33": {
        start: {
          line: 261,
          column: 6
        },
        end: {
          line: 264,
          column: 8
        }
      },
      "34": {
        start: {
          line: 281,
          column: 37
        },
        end: {
          line: 281,
          column: 39
        }
      },
      "35": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 297,
          column: 5
        }
      },
      "36": {
        start: {
          line: 285,
          column: 6
        },
        end: {
          line: 296,
          column: 7
        }
      },
      "37": {
        start: {
          line: 286,
          column: 30
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "38": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 41
        }
      },
      "39": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 295,
          column: 10
        }
      },
      "40": {
        start: {
          line: 300,
          column: 27
        },
        end: {
          line: 302,
          column: 5
        }
      },
      "41": {
        start: {
          line: 301,
          column: 6
        },
        end: {
          line: 301,
          column: 50
        }
      },
      "42": {
        start: {
          line: 301,
          column: 43
        },
        end: {
          line: 301,
          column: 49
        }
      },
      "43": {
        start: {
          line: 303,
          column: 25
        },
        end: {
          line: 305,
          column: 5
        }
      },
      "44": {
        start: {
          line: 304,
          column: 6
        },
        end: {
          line: 304,
          column: 48
        }
      },
      "45": {
        start: {
          line: 304,
          column: 41
        },
        end: {
          line: 304,
          column: 47
        }
      },
      "46": {
        start: {
          line: 307,
          column: 4
        },
        end: {
          line: 324,
          column: 5
        }
      },
      "47": {
        start: {
          line: 308,
          column: 6
        },
        end: {
          line: 323,
          column: 7
        }
      },
      "48": {
        start: {
          line: 310,
          column: 10
        },
        end: {
          line: 314,
          column: 11
        }
      },
      "49": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 320,
          column: 10
        }
      },
      "50": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 65
        }
      },
      "51": {
        start: {
          line: 327,
          column: 27
        },
        end: {
          line: 331,
          column: 48
        }
      },
      "52": {
        start: {
          line: 329,
          column: 17
        },
        end: {
          line: 329,
          column: 77
        }
      },
      "53": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 333,
          column: 26
        }
      },
      "54": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 344,
          column: 46
        }
      },
      "55": {
        start: {
          line: 344,
          column: 36
        },
        end: {
          line: 344,
          column: 46
        }
      },
      "56": {
        start: {
          line: 346,
          column: 4
        },
        end: {
          line: 368,
          column: 5
        }
      },
      "57": {
        start: {
          line: 347,
          column: 30
        },
        end: {
          line: 350,
          column: 7
        }
      },
      "58": {
        start: {
          line: 353,
          column: 6
        },
        end: {
          line: 360,
          column: 7
        }
      },
      "59": {
        start: {
          line: 354,
          column: 27
        },
        end: {
          line: 354,
          column: 71
        }
      },
      "60": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "61": {
        start: {
          line: 356,
          column: 10
        },
        end: {
          line: 358,
          column: 12
        }
      },
      "62": {
        start: {
          line: 362,
          column: 6
        },
        end: {
          line: 362,
          column: 29
        }
      },
      "63": {
        start: {
          line: 364,
          column: 6
        },
        end: {
          line: 366,
          column: 8
        }
      },
      "64": {
        start: {
          line: 367,
          column: 6
        },
        end: {
          line: 367,
          column: 16
        }
      },
      "65": {
        start: {
          line: 381,
          column: 4
        },
        end: {
          line: 404,
          column: 5
        }
      },
      "66": {
        start: {
          line: 382,
          column: 21
        },
        end: {
          line: 386,
          column: 7
        }
      },
      "67": {
        start: {
          line: 389,
          column: 6
        },
        end: {
          line: 391,
          column: 7
        }
      },
      "68": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 63
        }
      },
      "69": {
        start: {
          line: 393,
          column: 6
        },
        end: {
          line: 396,
          column: 7
        }
      },
      "70": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 395,
          column: 79
        }
      },
      "71": {
        start: {
          line: 398,
          column: 6
        },
        end: {
          line: 398,
          column: 20
        }
      },
      "72": {
        start: {
          line: 400,
          column: 6
        },
        end: {
          line: 402,
          column: 8
        }
      },
      "73": {
        start: {
          line: 403,
          column: 6
        },
        end: {
          line: 403,
          column: 23
        }
      },
      "74": {
        start: {
          line: 417,
          column: 6
        },
        end: {
          line: 422,
          column: 11
        }
      },
      "75": {
        start: {
          line: 419,
          column: 26
        },
        end: {
          line: 419,
          column: 59
        }
      },
      "76": {
        start: {
          line: 424,
          column: 27
        },
        end: {
          line: 427,
          column: 5
        }
      },
      "77": {
        start: {
          line: 425,
          column: 20
        },
        end: {
          line: 425,
          column: 53
        }
      },
      "78": {
        start: {
          line: 429,
          column: 30
        },
        end: {
          line: 432,
          column: 5
        }
      },
      "79": {
        start: {
          line: 430,
          column: 20
        },
        end: {
          line: 430,
          column: 55
        }
      },
      "80": {
        start: {
          line: 435,
          column: 6
        },
        end: {
          line: 437,
          column: 11
        }
      },
      "81": {
        start: {
          line: 440,
          column: 6
        },
        end: {
          line: 443,
          column: 12
        }
      },
      "82": {
        start: {
          line: 441,
          column: 26
        },
        end: {
          line: 441,
          column: 57
        }
      },
      "83": {
        start: {
          line: 445,
          column: 4
        },
        end: {
          line: 454,
          column: 6
        }
      },
      "84": {
        start: {
          line: 461,
          column: 4
        },
        end: {
          line: 461,
          column: 23
        }
      },
      "85": {
        start: {
          line: 471,
          column: 4
        },
        end: {
          line: 474,
          column: 6
        }
      },
      "86": {
        start: {
          line: 481,
          column: 4
        },
        end: {
          line: 481,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 70,
            column: 2
          },
          end: {
            line: 70,
            column: 3
          }
        },
        loc: {
          start: {
            line: 70,
            column: 43
          },
          end: {
            line: 90,
            column: 3
          }
        },
        line: 70
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 95,
            column: 2
          },
          end: {
            line: 95,
            column: 3
          }
        },
        loc: {
          start: {
            line: 103,
            column: 34
          },
          end: {
            line: 180,
            column: 3
          }
        },
        line: 103
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 185,
            column: 2
          },
          end: {
            line: 185,
            column: 3
          }
        },
        loc: {
          start: {
            line: 193,
            column: 5
          },
          end: {
            line: 227,
            column: 3
          }
        },
        line: 193
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 232,
            column: 2
          },
          end: {
            line: 232,
            column: 3
          }
        },
        loc: {
          start: {
            line: 239,
            column: 5
          },
          end: {
            line: 266,
            column: 3
          }
        },
        line: 239
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 271,
            column: 2
          },
          end: {
            line: 271,
            column: 3
          }
        },
        loc: {
          start: {
            line: 280,
            column: 28
          },
          end: {
            line: 334,
            column: 3
          }
        },
        line: 280
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 300,
            column: 51
          },
          end: {
            line: 300,
            column: 52
          }
        },
        loc: {
          start: {
            line: 301,
            column: 6
          },
          end: {
            line: 301,
            column: 50
          }
        },
        line: 301
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 301,
            column: 36
          },
          end: {
            line: 301,
            column: 37
          }
        },
        loc: {
          start: {
            line: 301,
            column: 43
          },
          end: {
            line: 301,
            column: 49
          }
        },
        line: 301
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 303,
            column: 49
          },
          end: {
            line: 303,
            column: 50
          }
        },
        loc: {
          start: {
            line: 304,
            column: 6
          },
          end: {
            line: 304,
            column: 48
          }
        },
        line: 304
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 304,
            column: 34
          },
          end: {
            line: 304,
            column: 35
          }
        },
        loc: {
          start: {
            line: 304,
            column: 41
          },
          end: {
            line: 304,
            column: 47
          }
        },
        line: 304
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        },
        loc: {
          start: {
            line: 329,
            column: 17
          },
          end: {
            line: 329,
            column: 77
          }
        },
        line: 329
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 339,
            column: 2
          },
          end: {
            line: 339,
            column: 3
          }
        },
        loc: {
          start: {
            line: 343,
            column: 31
          },
          end: {
            line: 369,
            column: 3
          }
        },
        line: 343
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 374,
            column: 2
          },
          end: {
            line: 374,
            column: 3
          }
        },
        loc: {
          start: {
            line: 380,
            column: 40
          },
          end: {
            line: 405,
            column: 3
          }
        },
        line: 380
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 410,
            column: 2
          },
          end: {
            line: 410,
            column: 3
          }
        },
        loc: {
          start: {
            line: 415,
            column: 36
          },
          end: {
            line: 455,
            column: 3
          }
        },
        line: 415
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 419,
            column: 12
          },
          end: {
            line: 419,
            column: 13
          }
        },
        loc: {
          start: {
            line: 419,
            column: 26
          },
          end: {
            line: 419,
            column: 59
          }
        },
        line: 419
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 425,
            column: 6
          },
          end: {
            line: 425,
            column: 7
          }
        },
        loc: {
          start: {
            line: 425,
            column: 20
          },
          end: {
            line: 425,
            column: 53
          }
        },
        line: 425
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 430,
            column: 6
          },
          end: {
            line: 430,
            column: 7
          }
        },
        loc: {
          start: {
            line: 430,
            column: 20
          },
          end: {
            line: 430,
            column: 55
          }
        },
        line: 430
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 441,
            column: 9
          }
        },
        loc: {
          start: {
            line: 441,
            column: 26
          },
          end: {
            line: 441,
            column: 57
          }
        },
        line: 441
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 460,
            column: 2
          },
          end: {
            line: 460,
            column: 3
          }
        },
        loc: {
          start: {
            line: 460,
            column: 35
          },
          end: {
            line: 462,
            column: 3
          }
        },
        line: 460
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 467,
            column: 2
          },
          end: {
            line: 467,
            column: 3
          }
        },
        loc: {
          start: {
            line: 470,
            column: 5
          },
          end: {
            line: 475,
            column: 3
          }
        },
        line: 470
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 480,
            column: 2
          },
          end: {
            line: 480,
            column: 3
          }
        },
        loc: {
          start: {
            line: 480,
            column: 22
          },
          end: {
            line: 482,
            column: 3
          }
        },
        line: 480
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 102,
            column: 11
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 102,
            column: 9
          },
          end: {
            line: 102,
            column: 11
          }
        }],
        line: 98
      },
      "1": {
        loc: {
          start: {
            line: 117,
            column: 6
          },
          end: {
            line: 119,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 6
          },
          end: {
            line: 119,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "2": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 138,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 137,
            column: 13
          }
        }, {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 138,
            column: 21
          }
        }],
        line: 130
      },
      "3": {
        loc: {
          start: {
            line: 159,
            column: 28
          },
          end: {
            line: 159,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 53
          },
          end: {
            line: 159,
            column: 66
          }
        }, {
          start: {
            line: 159,
            column: 69
          },
          end: {
            line: 159,
            column: 84
          }
        }],
        line: 159
      },
      "4": {
        loc: {
          start: {
            line: 204,
            column: 6
          },
          end: {
            line: 206,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 6
          },
          end: {
            line: 206,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "5": {
        loc: {
          start: {
            line: 220,
            column: 42
          },
          end: {
            line: 220,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 220,
            column: 67
          },
          end: {
            line: 220,
            column: 80
          }
        }, {
          start: {
            line: 220,
            column: 83
          },
          end: {
            line: 220,
            column: 98
          }
        }],
        line: 220
      },
      "6": {
        loc: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 235,
            column: 27
          },
          end: {
            line: 235,
            column: 36
          }
        }],
        line: 235
      },
      "7": {
        loc: {
          start: {
            line: 259,
            column: 43
          },
          end: {
            line: 259,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 259,
            column: 68
          },
          end: {
            line: 259,
            column: 81
          }
        }, {
          start: {
            line: 259,
            column: 84
          },
          end: {
            line: 259,
            column: 99
          }
        }],
        line: 259
      },
      "8": {
        loc: {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 324,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 324,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "9": {
        loc: {
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 307,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 307,
            column: 33
          }
        }, {
          start: {
            line: 307,
            column: 37
          },
          end: {
            line: 307,
            column: 60
          }
        }],
        line: 307
      },
      "10": {
        loc: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 344,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 344,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "11": {
        loc: {
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 359,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 359,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "12": {
        loc: {
          start: {
            line: 365,
            column: 36
          },
          end: {
            line: 365,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 365,
            column: 61
          },
          end: {
            line: 365,
            column: 74
          }
        }, {
          start: {
            line: 365,
            column: 77
          },
          end: {
            line: 365,
            column: 92
          }
        }],
        line: 365
      },
      "13": {
        loc: {
          start: {
            line: 389,
            column: 6
          },
          end: {
            line: 391,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 6
          },
          end: {
            line: 391,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "14": {
        loc: {
          start: {
            line: 393,
            column: 6
          },
          end: {
            line: 396,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 393,
            column: 6
          },
          end: {
            line: 396,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 393
      },
      "15": {
        loc: {
          start: {
            line: 401,
            column: 35
          },
          end: {
            line: 401,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 401,
            column: 60
          },
          end: {
            line: 401,
            column: 73
          }
        }, {
          start: {
            line: 401,
            column: 76
          },
          end: {
            line: 401,
            column: 91
          }
        }],
        line: 401
      },
      "16": {
        loc: {
          start: {
            line: 417,
            column: 6
          },
          end: {
            line: 422,
            column: 11
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 418,
            column: 10
          },
          end: {
            line: 421,
            column: 34
          }
        }, {
          start: {
            line: 422,
            column: 10
          },
          end: {
            line: 422,
            column: 11
          }
        }],
        line: 417
      },
      "17": {
        loc: {
          start: {
            line: 435,
            column: 6
          },
          end: {
            line: 437,
            column: 11
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 436,
            column: 10
          },
          end: {
            line: 436,
            column: 66
          }
        }, {
          start: {
            line: 437,
            column: 10
          },
          end: {
            line: 437,
            column: 11
          }
        }],
        line: 435
      },
      "18": {
        loc: {
          start: {
            line: 440,
            column: 6
          },
          end: {
            line: 443,
            column: 12
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 440,
            column: 6
          },
          end: {
            line: 443,
            column: 7
          }
        }, {
          start: {
            line: 443,
            column: 11
          },
          end: {
            line: 443,
            column: 12
          }
        }],
        line: 440
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "66ba00cf682848b3f2e467a22ba25acb473c7251"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2k1tst58h0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2k1tst58h0();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Image Integration and Processing System
 * Main orchestrator for the complete image pipeline
 */

import { ImageSourcingService } from './sourcing';
import { ImageProcessor } from './processor';
import { ImagePlacementService } from './placement';

// Define TweetMediaInfo type based on Twitter API structure

import { z } from 'zod';

// Main pipeline schemas
export var ImagePipelineConfigSchema =
/* istanbul ignore next */
(cov_2k1tst58h0().s[0]++, z.object({
  openaiApiKey: z.string().min(1),
  userAgent: z.string().min(1),
  enableCaching: z[
  /* istanbul ignore next */
  "boolean"]().optional()[
  /* istanbul ignore next */
  "default"](true),
  enableCdn: z[
  /* istanbul ignore next */
  "boolean"]().optional()[
  /* istanbul ignore next */
  "default"](true),
  cdnBaseUrl: z.string().url().optional(),
  compressionQuality: z.number().min(10).max(100).optional()[
  /* istanbul ignore next */
  "default"](85),
  maxImagesPerArticle: z.number().min(1).max(20).optional()[
  /* istanbul ignore next */
  "default"](8),
  minRelevanceScore: z.number().min(0).max(100).optional()[
  /* istanbul ignore next */
  "default"](60)
}));
export var ImagePipelineResultSchema =
/* istanbul ignore next */
(cov_2k1tst58h0().s[1]++, z.object({
  success: z[
  /* istanbul ignore next */
  "boolean"](),
  articleLayout: z.any().optional(),
  // ArticleLayout
  processedImages: z.array(z.any()),
  // ProcessedImage[]
  sourcedImages: z.array(z.any()),
  // ImageSource[]
  metrics: z.object({
    totalProcessingTime: z.number(),
    imagesSourced: z.number(),
    imagesProcessed: z.number(),
    imagesPlaced: z.number(),
    averageRelevance: z.number(),
    totalImageSize: z.number(),
    compressionRatio: z.number(),
    cdnDeliveryEnabled: z[
    /* istanbul ignore next */
    "boolean"]()
  }),
  errors: z.array(z.string()),
  warnings: z.array(z.string())
}));

// Re-export types for convenience

export
/* istanbul ignore next */
var ImagePipeline = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  ImagePipeline(config) {
    /* istanbul ignore next */
    _classCallCheck(this, ImagePipeline);
    cov_2k1tst58h0().f[0]++;
    cov_2k1tst58h0().s[2]++;
    this.config = ImagePipelineConfigSchema.parse(config);
    /* istanbul ignore next */
    cov_2k1tst58h0().s[3]++;
    this.sourcingService = new ImageSourcingService({
      userAgent: this.config.userAgent,
      enableCaching: this.config.enableCaching
    });
    /* istanbul ignore next */
    cov_2k1tst58h0().s[4]++;
    this.processor = new ImageProcessor({
      openaiApiKey: this.config.openaiApiKey,
      cdnBaseUrl: this.config.cdnBaseUrl,
      enableCdn: this.config.enableCdn,
      compressionQuality: this.config.compressionQuality,
      userAgent: this.config.userAgent
    });
    /* istanbul ignore next */
    cov_2k1tst58h0().s[5]++;
    this.placementService = new ImagePlacementService({
      openaiApiKey: this.config.openaiApiKey,
      minRelevanceScore: this.config.minRelevanceScore
    });
  }

  /**
   * Complete image pipeline for article generation
   */
  return _createClass(ImagePipeline, [{
    key: "processArticleImages",
    value: (function () {
      var _processArticleImages = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee(sections, contentAnalyses)
      /* istanbul ignore next */
      {
        var twitterMedia,
          startTime,
          errors,
          warnings,
          sourcedImages,
          processedImages,
          articleLayout,
          metrics,
          _args = arguments,
          _t,
          _t2;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              twitterMedia = _args.length > 2 && _args[2] !== undefined ? _args[2] : (cov_2k1tst58h0().b[0][0]++, []);
              cov_2k1tst58h0().f[1]++;
              startTime = (cov_2k1tst58h0().s[6]++, Date.now());
              errors = (cov_2k1tst58h0().s[7]++, []);
              warnings = (cov_2k1tst58h0().s[8]++, []);
              cov_2k1tst58h0().s[9]++;
              _context.p = 1;
              cov_2k1tst58h0().s[10]++;
              _context.n = 2;
              return this.sourceImages(contentAnalyses, twitterMedia, errors, warnings);
            case 2:
              sourcedImages = _context.v;
              cov_2k1tst58h0().s[11]++;
              if (sourcedImages.length === 0) {
                /* istanbul ignore next */
                cov_2k1tst58h0().b[1][0]++;
                cov_2k1tst58h0().s[12]++;
                warnings.push('No images sourced - article will have no images');
              } else
              /* istanbul ignore next */
              {
                cov_2k1tst58h0().b[1][1]++;
              }

              // Step 2: Process images (resize, optimize, generate alt text)
              cov_2k1tst58h0().s[13]++;
              _context.n = 3;
              return this.processImages(sourcedImages, errors, warnings);
            case 3:
              processedImages = _context.v;
              cov_2k1tst58h0().s[14]++;
              if (!(processedImages.length > 0)) {
                _context.n = 5;
                break;
              }
              cov_2k1tst58h0().b[2][0]++;
              _context.n = 4;
              return this.createLayout(sections, processedImages, contentAnalyses, errors, warnings);
            case 4:
              _t = _context.v;
              _context.n = 6;
              break;
            case 5:
              _t = (cov_2k1tst58h0().b[2][1]++, undefined);
            case 6:
              articleLayout = _t;
              // Calculate final metrics
              metrics = (cov_2k1tst58h0().s[15]++, this.calculatePipelineMetrics(sourcedImages, processedImages, articleLayout, Date.now() - startTime));
              cov_2k1tst58h0().s[16]++;
              return _context.a(2, ImagePipelineResultSchema.parse({
                success: errors.length === 0,
                articleLayout: articleLayout,
                processedImages: processedImages,
                sourcedImages: sourcedImages,
                metrics: metrics,
                errors: errors,
                warnings: warnings
              }));
            case 7:
              _context.p = 7;
              _t2 = _context.v;
              cov_2k1tst58h0().s[17]++;
              errors.push(
              /* istanbul ignore next */
              "Pipeline failed: ".concat(
              /* istanbul ignore next */
              _t2 instanceof Error ?
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[3][0]++,
              /* istanbul ignore next */
              _t2.message) :
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[3][1]++, 'Unknown error')));
              cov_2k1tst58h0().s[18]++;
              return _context.a(2, ImagePipelineResultSchema.parse({
                success: false,
                processedImages: [],
                sourcedImages: [],
                metrics: {
                  totalProcessingTime: Date.now() - startTime,
                  imagesSourced: 0,
                  imagesProcessed: 0,
                  imagesPlaced: 0,
                  averageRelevance: 0,
                  totalImageSize: 0,
                  compressionRatio: 0,
                  cdnDeliveryEnabled: this.config.enableCdn
                },
                errors: errors,
                warnings: warnings
              }));
          }
        }, _callee, this, [[1, 7]]);
      }));
      function processArticleImages(_x, _x2) {
        return _processArticleImages.apply(this, arguments);
      }
      return processArticleImages;
    }()
    /**
     * Process images for a single tweet (for real-time processing)
     */
    )
  }, {
    key: "processTweetImages",
    value: (function () {
      var _processTweetImages = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(tweetMedia, tweetId, authorHandle, contentAnalysis)
      /* istanbul ignore next */
      {
        var errors, twitterImages, processedImages, _t3;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              cov_2k1tst58h0().f[2]++;
              errors = (cov_2k1tst58h0().s[19]++, []);
              cov_2k1tst58h0().s[20]++;
              _context2.p = 1;
              cov_2k1tst58h0().s[21]++;
              _context2.n = 2;
              return this.sourcingService.extractTwitterImages(tweetMedia, tweetId, authorHandle);
            case 2:
              twitterImages = _context2.v;
              cov_2k1tst58h0().s[22]++;
              if (!(twitterImages.length === 0)) {
                _context2.n = 3;
                break;
              }
              cov_2k1tst58h0().b[4][0]++;
              cov_2k1tst58h0().s[23]++;
              return _context2.a(2, {
                processedImages: [],
                errors: []
              });
            case 3:
              cov_2k1tst58h0().b[4][1]++;
            case 4:
              cov_2k1tst58h0().s[24]++;
              _context2.n = 5;
              return this.processor.processImages(twitterImages, 2);
            case 5:
              processedImages = _context2.v;
              cov_2k1tst58h0().s[25]++;
              return _context2.a(2, {
                processedImages: processedImages,
                errors: errors
              });
            case 6:
              _context2.p = 6;
              _t3 = _context2.v;
              cov_2k1tst58h0().s[26]++;
              errors.push(
              /* istanbul ignore next */
              "Tweet image processing failed: ".concat(
              /* istanbul ignore next */
              _t3 instanceof Error ?
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[5][0]++,
              /* istanbul ignore next */
              _t3.message) :
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[5][1]++, 'Unknown error')));
              cov_2k1tst58h0().s[27]++;
              return _context2.a(2, {
                processedImages: [],
                errors: errors
              });
          }
        }, _callee2, this, [[1, 6]]);
      }));
      function processTweetImages(_x3, _x4, _x5, _x6) {
        return _processTweetImages.apply(this, arguments);
      }
      return processTweetImages;
    }()
    /**
     * Find contextual images for specific entities
     */
    )
  }, {
    key: "findContextualImages",
    value: (function () {
      var _findContextualImages = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3(playerNames, clubNames)
      /* istanbul ignore next */
      {
        var transferType,
          errors,
          contextualImages,
          _args3 = arguments,
          _t4;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              transferType = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : (cov_2k1tst58h0().b[6][0]++, 'signing');
              cov_2k1tst58h0().f[3]++;
              errors = (cov_2k1tst58h0().s[28]++, []);
              cov_2k1tst58h0().s[29]++;
              _context3.p = 1;
              cov_2k1tst58h0().s[30]++;
              _context3.n = 2;
              return this.sourcingService.findContextualImages(playerNames, clubNames, transferType);
            case 2:
              contextualImages = _context3.v;
              cov_2k1tst58h0().s[31]++;
              return _context3.a(2, {
                images:
                /* istanbul ignore next */
                [].concat(_toConsumableArray(contextualImages.players), _toConsumableArray(contextualImages.clubs), _toConsumableArray(contextualImages.contextual)),
                errors: errors
              });
            case 3:
              _context3.p = 3;
              _t4 = _context3.v;
              cov_2k1tst58h0().s[32]++;
              errors.push(
              /* istanbul ignore next */
              "Contextual image search failed: ".concat(
              /* istanbul ignore next */
              _t4 instanceof Error ?
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[7][0]++,
              /* istanbul ignore next */
              _t4.message) :
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[7][1]++, 'Unknown error')));
              cov_2k1tst58h0().s[33]++;
              return _context3.a(2, {
                images: [],
                errors: errors
              });
          }
        }, _callee3, this, [[1, 3]]);
      }));
      function findContextualImages(_x7, _x8) {
        return _findContextualImages.apply(this, arguments);
      }
      return findContextualImages;
    }()
    /**
     * Source images from all available channels
     */
    )
  }, {
    key: "sourceImages",
    value: (function () {
      var _sourceImages = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4(contentAnalyses, twitterMedia, errors, warnings)
      /* istanbul ignore next */
      {
        var _this = this;
        var allImages, _iterator, _step, _step$value, tweetId, media, authorHandle, twitterImages, allPlayerNames, allClubNames, contextualImages, filteredImages, _t5, _t6, _t7;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_2k1tst58h0().f[4]++;
              allImages = (cov_2k1tst58h0().s[34]++, []); // Extract Twitter images
              cov_2k1tst58h0().s[35]++;
              _iterator = _createForOfIteratorHelper(twitterMedia);
              _context4.p = 1;
              _iterator.s();
            case 2:
              if ((_step = _iterator.n()).done) {
                _context4.n = 7;
                break;
              }
              _step$value = _step.value, tweetId = _step$value.tweetId, media = _step$value.media, authorHandle = _step$value.authorHandle;
              cov_2k1tst58h0().s[36]++;
              _context4.p = 3;
              cov_2k1tst58h0().s[37]++;
              _context4.n = 4;
              return this.sourcingService.extractTwitterImages(media, tweetId, authorHandle);
            case 4:
              twitterImages = _context4.v;
              cov_2k1tst58h0().s[38]++;
              /* istanbul ignore next */
              allImages.push.apply(allImages,
              /* istanbul ignore next */
              _toConsumableArray(twitterImages));
              _context4.n = 6;
              break;
            case 5:
              _context4.p = 5;
              _t5 = _context4.v;
              cov_2k1tst58h0().s[39]++;
              warnings.push(
              /* istanbul ignore next */
              "Failed to extract Twitter images for tweet ".concat(tweetId, ": ").concat(_t5));
            case 6:
              _context4.n = 2;
              break;
            case 7:
              _context4.n = 9;
              break;
            case 8:
              _context4.p = 8;
              _t6 = _context4.v;
              _iterator.e(_t6);
            case 9:
              _context4.p = 9;
              _iterator.f();
              return _context4.f(9);
            case 10:
              // Search Wikipedia for relevant images
              allPlayerNames = (cov_2k1tst58h0().s[40]++, contentAnalyses.flatMap(function (analysis) {
                /* istanbul ignore next */
                cov_2k1tst58h0().f[5]++;
                cov_2k1tst58h0().s[41]++;
                return analysis.entities.players.map(function (p) {
                  /* istanbul ignore next */
                  cov_2k1tst58h0().f[6]++;
                  cov_2k1tst58h0().s[42]++;
                  return p.name;
                });
              }));
              allClubNames = (cov_2k1tst58h0().s[43]++, contentAnalyses.flatMap(function (analysis) {
                /* istanbul ignore next */
                cov_2k1tst58h0().f[7]++;
                cov_2k1tst58h0().s[44]++;
                return analysis.entities.clubs.map(function (c) {
                  /* istanbul ignore next */
                  cov_2k1tst58h0().f[8]++;
                  cov_2k1tst58h0().s[45]++;
                  return c.name;
                });
              }));
              cov_2k1tst58h0().s[46]++;
              if (!(
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[9][0]++, allPlayerNames.length > 0) ||
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[9][1]++, allClubNames.length > 0))) {
                _context4.n = 15;
                break;
              }
              cov_2k1tst58h0().b[8][0]++;
              cov_2k1tst58h0().s[47]++;
              _context4.p = 11;
              cov_2k1tst58h0().s[48]++;
              _context4.n = 12;
              return this.sourcingService.findContextualImages(
              /* istanbul ignore next */
              _toConsumableArray(new Set(allPlayerNames)),
              /* istanbul ignore next */
              // Deduplicate
              _toConsumableArray(new Set(allClubNames)), 'signing');
            case 12:
              contextualImages = _context4.v;
              cov_2k1tst58h0().s[49]++;
              /* istanbul ignore next */
              allImages.push.apply(allImages,
              /* istanbul ignore next */
              _toConsumableArray(contextualImages.players).concat(_toConsumableArray(contextualImages.clubs), _toConsumableArray(contextualImages.contextual)));
              _context4.n = 14;
              break;
            case 13:
              _context4.p = 13;
              _t7 = _context4.v;
              cov_2k1tst58h0().s[50]++;
              warnings.push(
              /* istanbul ignore next */
              "Wikipedia image search failed: ".concat(_t7));
            case 14:
              _context4.n = 16;
              break;
            case 15:
              cov_2k1tst58h0().b[8][1]++;
            case 16:
              // Filter and deduplicate
              filteredImages = (cov_2k1tst58h0().s[51]++, allImages.filter(function (img) {
                /* istanbul ignore next */
                cov_2k1tst58h0().f[9]++;
                cov_2k1tst58h0().s[52]++;
                return img.metadata.relevanceScore >= _this.config.minRelevanceScore;
              }).slice(0, this.config.maxImagesPerArticle));
              cov_2k1tst58h0().s[53]++;
              return _context4.a(2, filteredImages);
          }
        }, _callee4, this, [[11, 13], [3, 5], [1, 8, 9, 10]]);
      }));
      function sourceImages(_x9, _x0, _x1, _x10) {
        return _sourceImages.apply(this, arguments);
      }
      return sourceImages;
    }()
    /**
     * Process sourced images
     */
    )
  }, {
    key: "processImages",
    value: (function () {
      var _processImages = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee5(sourcedImages, errors, warnings)
      /* istanbul ignore next */
      {
        var processedImages, _iterator2, _step2, image, validation, _t8;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              cov_2k1tst58h0().f[10]++;
              cov_2k1tst58h0().s[54]++;
              if (!(sourcedImages.length === 0)) {
                _context5.n = 1;
                break;
              }
              cov_2k1tst58h0().b[10][0]++;
              cov_2k1tst58h0().s[55]++;
              return _context5.a(2, []);
            case 1:
              cov_2k1tst58h0().b[10][1]++;
            case 2:
              cov_2k1tst58h0().s[56]++;
              _context5.p = 3;
              cov_2k1tst58h0().s[57]++;
              _context5.n = 4;
              return this.processor.processImages(sourcedImages, 3);
            case 4:
              processedImages = _context5.v;
              cov_2k1tst58h0().s[58]++;
              // Validate processed images
              _iterator2 = _createForOfIteratorHelper(processedImages);
              try {
                for (
                /* istanbul ignore next */
                _iterator2.s();
                /* istanbul ignore next */
                !(_step2 = _iterator2.n()).done;) {
                  /* istanbul ignore next */
                  image = _step2.value;
                  /* istanbul ignore next */
                  validation = (cov_2k1tst58h0().s[59]++, this.processor.validateProcessedImage(image));
                  /* istanbul ignore next */
                  cov_2k1tst58h0().s[60]++;
                  if (!validation.valid) {
                    /* istanbul ignore next */
                    cov_2k1tst58h0().b[11][0]++;
                    cov_2k1tst58h0().s[61]++;
                    warnings.push(
                    /* istanbul ignore next */
                    "Image ".concat(image.id, " validation issues: ").concat(validation.issues.join(', ')));
                  } else
                  /* istanbul ignore next */
                  {
                    cov_2k1tst58h0().b[11][1]++;
                  }
                }
              } catch (err) {
                _iterator2.e(err);
              } finally {
                _iterator2.f();
              }
              cov_2k1tst58h0().s[62]++;
              return _context5.a(2, processedImages);
            case 5:
              _context5.p = 5;
              _t8 = _context5.v;
              cov_2k1tst58h0().s[63]++;
              errors.push(
              /* istanbul ignore next */
              "Image processing failed: ".concat(
              /* istanbul ignore next */
              _t8 instanceof Error ?
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[12][0]++,
              /* istanbul ignore next */
              _t8.message) :
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[12][1]++, 'Unknown error')));
              cov_2k1tst58h0().s[64]++;
              return _context5.a(2, []);
          }
        }, _callee5, this, [[3, 5]]);
      }));
      function processImages(_x11, _x12, _x13) {
        return _processImages.apply(this, arguments);
      }
      return processImages;
    }()
    /**
     * Create article layout
     */
    )
  }, {
    key: "createLayout",
    value: (function () {
      var _createLayout = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee6(sections, processedImages, contentAnalyses, errors, warnings)
      /* istanbul ignore next */
      {
        var layout, _t9;
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.n) {
            case 0:
              cov_2k1tst58h0().f[11]++;
              cov_2k1tst58h0().s[65]++;
              _context6.p = 1;
              cov_2k1tst58h0().s[66]++;
              _context6.n = 2;
              return this.placementService.createArticleLayout(sections, processedImages, contentAnalyses);
            case 2:
              layout = _context6.v;
              cov_2k1tst58h0().s[67]++;
              // Validate layout
              if (layout.metadata.averageRelevance < 50) {
                /* istanbul ignore next */
                cov_2k1tst58h0().b[13][0]++;
                cov_2k1tst58h0().s[68]++;
                warnings.push('Low average image relevance in layout');
              } else
              /* istanbul ignore next */
              {
                cov_2k1tst58h0().b[13][1]++;
              }
              cov_2k1tst58h0().s[69]++;
              if (layout.performance.totalImageSize > 5000000) {
                /* istanbul ignore next */
                cov_2k1tst58h0().b[14][0]++;
                cov_2k1tst58h0().s[70]++;
                // 5MB
                warnings.push('Large total image size may impact loading performance');
              } else
              /* istanbul ignore next */
              {
                cov_2k1tst58h0().b[14][1]++;
              }
              cov_2k1tst58h0().s[71]++;
              return _context6.a(2, layout);
            case 3:
              _context6.p = 3;
              _t9 = _context6.v;
              cov_2k1tst58h0().s[72]++;
              errors.push(
              /* istanbul ignore next */
              "Layout creation failed: ".concat(
              /* istanbul ignore next */
              _t9 instanceof Error ?
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[15][0]++,
              /* istanbul ignore next */
              _t9.message) :
              /* istanbul ignore next */
              (cov_2k1tst58h0().b[15][1]++, 'Unknown error')));
              cov_2k1tst58h0().s[73]++;
              return _context6.a(2, undefined);
          }
        }, _callee6, this, [[1, 3]]);
      }));
      function createLayout(_x14, _x15, _x16, _x17, _x18) {
        return _createLayout.apply(this, arguments);
      }
      return createLayout;
    }()
    /**
     * Calculate pipeline metrics
     */
    )
  }, {
    key: "calculatePipelineMetrics",
    value: function calculatePipelineMetrics(sourcedImages, processedImages, articleLayout, totalProcessingTime) {
      /* istanbul ignore next */
      cov_2k1tst58h0().f[12]++;
      var averageRelevance =
      /* istanbul ignore next */
      (cov_2k1tst58h0().s[74]++, sourcedImages.length > 0 ?
      /* istanbul ignore next */
      (cov_2k1tst58h0().b[16][0]++, sourcedImages.reduce(function (sum, img) {
        /* istanbul ignore next */
        cov_2k1tst58h0().f[13]++;
        cov_2k1tst58h0().s[75]++;
        return sum + img.metadata.relevanceScore;
      }, 0) / sourcedImages.length) :
      /* istanbul ignore next */
      (cov_2k1tst58h0().b[16][1]++, 0));
      var totalImageSize =
      /* istanbul ignore next */
      (cov_2k1tst58h0().s[76]++, processedImages.reduce(function (sum, img) {
        /* istanbul ignore next */
        cov_2k1tst58h0().f[14]++;
        cov_2k1tst58h0().s[77]++;
        return sum + img.variants.large.fileSize;
      }, 0));
      var totalOriginalSize =
      /* istanbul ignore next */
      (cov_2k1tst58h0().s[78]++, processedImages.reduce(function (sum, img) {
        /* istanbul ignore next */
        cov_2k1tst58h0().f[15]++;
        cov_2k1tst58h0().s[79]++;
        return sum + img.optimization.originalSize;
      }, 0));
      var compressionRatio =
      /* istanbul ignore next */
      (cov_2k1tst58h0().s[80]++, totalOriginalSize > 0 ?
      /* istanbul ignore next */
      (cov_2k1tst58h0().b[17][0]++, (totalOriginalSize - totalImageSize) / totalOriginalSize) :
      /* istanbul ignore next */
      (cov_2k1tst58h0().b[17][1]++, 0));
      var imagesPlaced =
      /* istanbul ignore next */
      (cov_2k1tst58h0().s[81]++,
      /* istanbul ignore next */
      (cov_2k1tst58h0().b[18][0]++, articleLayout === null || articleLayout === void 0 ? void 0 : articleLayout.sections.reduce(function (sum, section) {
        /* istanbul ignore next */
        cov_2k1tst58h0().f[16]++;
        cov_2k1tst58h0().s[82]++;
        return sum + section.placements.length;
      }, 0)) ||
      /* istanbul ignore next */
      (cov_2k1tst58h0().b[18][1]++, 0));
      /* istanbul ignore next */
      cov_2k1tst58h0().s[83]++;
      return {
        totalProcessingTime: totalProcessingTime,
        imagesSourced: sourcedImages.length,
        imagesProcessed: processedImages.length,
        imagesPlaced: imagesPlaced,
        averageRelevance: Math.round(averageRelevance),
        totalImageSize: totalImageSize,
        compressionRatio: Math.round(compressionRatio * 100) / 100,
        cdnDeliveryEnabled: this.config.enableCdn
      };
    }

    /**
     * Get pipeline configuration
     */
  }, {
    key: "getConfig",
    value: function getConfig() {
      /* istanbul ignore next */
      cov_2k1tst58h0().f[17]++;
      cov_2k1tst58h0().s[84]++;
      return this.config;
    }

    /**
     * Get service statistics
     */
  }, {
    key: "getServiceStats",
    value: (function () {
      var _getServiceStats = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee7()
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context7) {
          while (1) switch (_context7.n) {
            case 0:
              cov_2k1tst58h0().f[18]++;
              cov_2k1tst58h0().s[85]++;
              return _context7.a(2, {
                sourcing: this.sourcingService.getCacheStats(),
                processing: this.processor.getProcessingStats()
              });
          }
        }, _callee7, this);
      }));
      function getServiceStats() {
        return _getServiceStats.apply(this, arguments);
      }
      return getServiceStats;
    }()
    /**
     * Clear all caches
     */
    )
  }, {
    key: "clearCaches",
    value: function clearCaches() {
      /* istanbul ignore next */
      cov_2k1tst58h0().f[19]++;
      cov_2k1tst58h0().s[86]++;
      this.sourcingService.clearCache();
    }
  }]);
}();

// Export individual services for direct use
export { ImageSourcingService, ImageProcessor, ImagePlacementService };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmsxdHN0NThoMCIsImFjdHVhbENvdmVyYWdlIiwiX3R5cGVvZiIsIm8iLCJTeW1ib2wiLCJpdGVyYXRvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiLCJyIiwiZSIsInQiLCJBcnJheSIsImlzQXJyYXkiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJsZW5ndGgiLCJfbiIsIkYiLCJzIiwibiIsImRvbmUiLCJ2YWx1ZSIsImYiLCJUeXBlRXJyb3IiLCJhIiwidSIsImNhbGwiLCJuZXh0IiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiX2FycmF5V2l0aG91dEhvbGVzIiwiX2l0ZXJhYmxlVG9BcnJheSIsIl9ub25JdGVyYWJsZVNwcmVhZCIsIl9hcnJheUxpa2VUb0FycmF5IiwidG9TdHJpbmciLCJzbGljZSIsIm5hbWUiLCJmcm9tIiwidGVzdCIsIl9yZWdlbmVyYXRvciIsInRvU3RyaW5nVGFnIiwiaSIsImMiLCJHZW5lcmF0b3IiLCJPYmplY3QiLCJjcmVhdGUiLCJfcmVnZW5lcmF0b3JEZWZpbmUyIiwicCIsInkiLCJHIiwidiIsImQiLCJiaW5kIiwibCIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUiLCJnZXRQcm90b3R5cGVPZiIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiZGlzcGxheU5hbWUiLCJ3IiwibSIsImRlZmluZVByb3BlcnR5IiwiX3JlZ2VuZXJhdG9yRGVmaW5lIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiX2ludm9rZSIsImFzeW5jR2VuZXJhdG9yU3RlcCIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsIl9hc3luY1RvR2VuZXJhdG9yIiwiYXJndW1lbnRzIiwiYXBwbHkiLCJfbmV4dCIsIl90aHJvdyIsIl9jbGFzc0NhbGxDaGVjayIsIl9kZWZpbmVQcm9wZXJ0aWVzIiwiX3RvUHJvcGVydHlLZXkiLCJrZXkiLCJfY3JlYXRlQ2xhc3MiLCJfdG9QcmltaXRpdmUiLCJ0b1ByaW1pdGl2ZSIsIlN0cmluZyIsIk51bWJlciIsIkltYWdlU291cmNpbmdTZXJ2aWNlIiwiSW1hZ2VQcm9jZXNzb3IiLCJJbWFnZVBsYWNlbWVudFNlcnZpY2UiLCJ6IiwiSW1hZ2VQaXBlbGluZUNvbmZpZ1NjaGVtYSIsIm9iamVjdCIsIm9wZW5haUFwaUtleSIsInN0cmluZyIsIm1pbiIsInVzZXJBZ2VudCIsImVuYWJsZUNhY2hpbmciLCJvcHRpb25hbCIsImVuYWJsZUNkbiIsImNkbkJhc2VVcmwiLCJ1cmwiLCJjb21wcmVzc2lvblF1YWxpdHkiLCJudW1iZXIiLCJtYXgiLCJtYXhJbWFnZXNQZXJBcnRpY2xlIiwibWluUmVsZXZhbmNlU2NvcmUiLCJJbWFnZVBpcGVsaW5lUmVzdWx0U2NoZW1hIiwic3VjY2VzcyIsImFydGljbGVMYXlvdXQiLCJhbnkiLCJwcm9jZXNzZWRJbWFnZXMiLCJhcnJheSIsInNvdXJjZWRJbWFnZXMiLCJtZXRyaWNzIiwidG90YWxQcm9jZXNzaW5nVGltZSIsImltYWdlc1NvdXJjZWQiLCJpbWFnZXNQcm9jZXNzZWQiLCJpbWFnZXNQbGFjZWQiLCJhdmVyYWdlUmVsZXZhbmNlIiwidG90YWxJbWFnZVNpemUiLCJjb21wcmVzc2lvblJhdGlvIiwiY2RuRGVsaXZlcnlFbmFibGVkIiwiZXJyb3JzIiwid2FybmluZ3MiLCJJbWFnZVBpcGVsaW5lIiwiY29uZmlnIiwicGFyc2UiLCJzb3VyY2luZ1NlcnZpY2UiLCJwcm9jZXNzb3IiLCJwbGFjZW1lbnRTZXJ2aWNlIiwiX3Byb2Nlc3NBcnRpY2xlSW1hZ2VzIiwiX2NhbGxlZSIsInNlY3Rpb25zIiwiY29udGVudEFuYWx5c2VzIiwidHdpdHRlck1lZGlhIiwic3RhcnRUaW1lIiwiX2FyZ3MiLCJfdCIsIl90MiIsIl9jb250ZXh0IiwidW5kZWZpbmVkIiwiYiIsIkRhdGUiLCJub3ciLCJzb3VyY2VJbWFnZXMiLCJwdXNoIiwicHJvY2Vzc0ltYWdlcyIsImNyZWF0ZUxheW91dCIsImNhbGN1bGF0ZVBpcGVsaW5lTWV0cmljcyIsImNvbmNhdCIsIkVycm9yIiwibWVzc2FnZSIsInByb2Nlc3NBcnRpY2xlSW1hZ2VzIiwiX3giLCJfeDIiLCJfcHJvY2Vzc1R3ZWV0SW1hZ2VzIiwiX2NhbGxlZTIiLCJ0d2VldE1lZGlhIiwidHdlZXRJZCIsImF1dGhvckhhbmRsZSIsImNvbnRlbnRBbmFseXNpcyIsInR3aXR0ZXJJbWFnZXMiLCJfdDMiLCJfY29udGV4dDIiLCJleHRyYWN0VHdpdHRlckltYWdlcyIsInByb2Nlc3NUd2VldEltYWdlcyIsIl94MyIsIl94NCIsIl94NSIsIl94NiIsIl9maW5kQ29udGV4dHVhbEltYWdlcyIsIl9jYWxsZWUzIiwicGxheWVyTmFtZXMiLCJjbHViTmFtZXMiLCJ0cmFuc2ZlclR5cGUiLCJjb250ZXh0dWFsSW1hZ2VzIiwiX2FyZ3MzIiwiX3Q0IiwiX2NvbnRleHQzIiwiZmluZENvbnRleHR1YWxJbWFnZXMiLCJpbWFnZXMiLCJwbGF5ZXJzIiwiY2x1YnMiLCJjb250ZXh0dWFsIiwiX3g3IiwiX3g4IiwiX3NvdXJjZUltYWdlcyIsIl9jYWxsZWU0IiwiX3RoaXMiLCJhbGxJbWFnZXMiLCJfaXRlcmF0b3IiLCJfc3RlcCIsIl9zdGVwJHZhbHVlIiwibWVkaWEiLCJhbGxQbGF5ZXJOYW1lcyIsImFsbENsdWJOYW1lcyIsImZpbHRlcmVkSW1hZ2VzIiwiX3Q1IiwiX3Q2IiwiX3Q3IiwiX2NvbnRleHQ0IiwiZmxhdE1hcCIsImFuYWx5c2lzIiwiZW50aXRpZXMiLCJtYXAiLCJTZXQiLCJmaWx0ZXIiLCJpbWciLCJtZXRhZGF0YSIsInJlbGV2YW5jZVNjb3JlIiwiX3g5IiwiX3gwIiwiX3gxIiwiX3gxMCIsIl9wcm9jZXNzSW1hZ2VzIiwiX2NhbGxlZTUiLCJfaXRlcmF0b3IyIiwiX3N0ZXAyIiwiaW1hZ2UiLCJ2YWxpZGF0aW9uIiwiX3Q4IiwiX2NvbnRleHQ1IiwidmFsaWRhdGVQcm9jZXNzZWRJbWFnZSIsInZhbGlkIiwiaWQiLCJpc3N1ZXMiLCJqb2luIiwiZXJyIiwiX3gxMSIsIl94MTIiLCJfeDEzIiwiX2NyZWF0ZUxheW91dCIsIl9jYWxsZWU2IiwibGF5b3V0IiwiX3Q5IiwiX2NvbnRleHQ2IiwiY3JlYXRlQXJ0aWNsZUxheW91dCIsInBlcmZvcm1hbmNlIiwiX3gxNCIsIl94MTUiLCJfeDE2IiwiX3gxNyIsIl94MTgiLCJyZWR1Y2UiLCJzdW0iLCJ2YXJpYW50cyIsImxhcmdlIiwiZmlsZVNpemUiLCJ0b3RhbE9yaWdpbmFsU2l6ZSIsIm9wdGltaXphdGlvbiIsIm9yaWdpbmFsU2l6ZSIsInNlY3Rpb24iLCJwbGFjZW1lbnRzIiwiTWF0aCIsInJvdW5kIiwiZ2V0Q29uZmlnIiwiX2dldFNlcnZpY2VTdGF0cyIsIl9jYWxsZWU3IiwiX2NvbnRleHQ3Iiwic291cmNpbmciLCJnZXRDYWNoZVN0YXRzIiwicHJvY2Vzc2luZyIsImdldFByb2Nlc3NpbmdTdGF0cyIsImdldFNlcnZpY2VTdGF0cyIsImNsZWFyQ2FjaGVzIiwiY2xlYXJDYWNoZSJdLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSW1hZ2UgSW50ZWdyYXRpb24gYW5kIFByb2Nlc3NpbmcgU3lzdGVtXG4gKiBNYWluIG9yY2hlc3RyYXRvciBmb3IgdGhlIGNvbXBsZXRlIGltYWdlIHBpcGVsaW5lXG4gKi9cblxuaW1wb3J0IHsgSW1hZ2VTb3VyY2luZ1NlcnZpY2UsIHR5cGUgSW1hZ2VTb3VyY2UgfSBmcm9tICcuL3NvdXJjaW5nJztcbmltcG9ydCB7IEltYWdlUHJvY2Vzc29yLCB0eXBlIFByb2Nlc3NlZEltYWdlIH0gZnJvbSAnLi9wcm9jZXNzb3InO1xuaW1wb3J0IHtcbiAgSW1hZ2VQbGFjZW1lbnRTZXJ2aWNlLFxuICB0eXBlIEFydGljbGVMYXlvdXQsXG4gIHR5cGUgSW1hZ2VQbGFjZW1lbnQsXG59IGZyb20gJy4vcGxhY2VtZW50JztcbmltcG9ydCB0eXBlIHsgQXJ0aWNsZVNlY3Rpb24gfSBmcm9tICdAL2xpYi9haS9hcnRpY2xlLWdlbmVyYXRvcic7XG5pbXBvcnQgdHlwZSB7IENvbnRlbnRBbmFseXNpcyB9IGZyb20gJ0AvbGliL2FpL2NvbnRlbnQtYW5hbHl6ZXInO1xuLy8gRGVmaW5lIFR3ZWV0TWVkaWFJbmZvIHR5cGUgYmFzZWQgb24gVHdpdHRlciBBUEkgc3RydWN0dXJlXG50eXBlIFR3ZWV0TWVkaWFJbmZvID0ge1xuICBtZWRpYV9rZXk6IHN0cmluZztcbiAgdHlwZTogc3RyaW5nO1xuICB1cmw/OiBzdHJpbmc7XG4gIHByZXZpZXdfaW1hZ2VfdXJsPzogc3RyaW5nO1xuICBhbHRfdGV4dD86IHN0cmluZztcbiAgd2lkdGg/OiBudW1iZXI7XG4gIGhlaWdodD86IG51bWJlcjtcbn07XG5pbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcblxuLy8gTWFpbiBwaXBlbGluZSBzY2hlbWFzXG5leHBvcnQgY29uc3QgSW1hZ2VQaXBlbGluZUNvbmZpZ1NjaGVtYSA9IHoub2JqZWN0KHtcbiAgb3BlbmFpQXBpS2V5OiB6LnN0cmluZygpLm1pbigxKSxcbiAgdXNlckFnZW50OiB6LnN0cmluZygpLm1pbigxKSxcbiAgZW5hYmxlQ2FjaGluZzogei5ib29sZWFuKCkub3B0aW9uYWwoKS5kZWZhdWx0KHRydWUpLFxuICBlbmFibGVDZG46IHouYm9vbGVhbigpLm9wdGlvbmFsKCkuZGVmYXVsdCh0cnVlKSxcbiAgY2RuQmFzZVVybDogei5zdHJpbmcoKS51cmwoKS5vcHRpb25hbCgpLFxuICBjb21wcmVzc2lvblF1YWxpdHk6IHoubnVtYmVyKCkubWluKDEwKS5tYXgoMTAwKS5vcHRpb25hbCgpLmRlZmF1bHQoODUpLFxuICBtYXhJbWFnZXNQZXJBcnRpY2xlOiB6Lm51bWJlcigpLm1pbigxKS5tYXgoMjApLm9wdGlvbmFsKCkuZGVmYXVsdCg4KSxcbiAgbWluUmVsZXZhbmNlU2NvcmU6IHoubnVtYmVyKCkubWluKDApLm1heCgxMDApLm9wdGlvbmFsKCkuZGVmYXVsdCg2MCksXG59KTtcblxuZXhwb3J0IGNvbnN0IEltYWdlUGlwZWxpbmVSZXN1bHRTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIHN1Y2Nlc3M6IHouYm9vbGVhbigpLFxuICBhcnRpY2xlTGF5b3V0OiB6LmFueSgpLm9wdGlvbmFsKCksIC8vIEFydGljbGVMYXlvdXRcbiAgcHJvY2Vzc2VkSW1hZ2VzOiB6LmFycmF5KHouYW55KCkpLCAvLyBQcm9jZXNzZWRJbWFnZVtdXG4gIHNvdXJjZWRJbWFnZXM6IHouYXJyYXkoei5hbnkoKSksIC8vIEltYWdlU291cmNlW11cbiAgbWV0cmljczogei5vYmplY3Qoe1xuICAgIHRvdGFsUHJvY2Vzc2luZ1RpbWU6IHoubnVtYmVyKCksXG4gICAgaW1hZ2VzU291cmNlZDogei5udW1iZXIoKSxcbiAgICBpbWFnZXNQcm9jZXNzZWQ6IHoubnVtYmVyKCksXG4gICAgaW1hZ2VzUGxhY2VkOiB6Lm51bWJlcigpLFxuICAgIGF2ZXJhZ2VSZWxldmFuY2U6IHoubnVtYmVyKCksXG4gICAgdG90YWxJbWFnZVNpemU6IHoubnVtYmVyKCksXG4gICAgY29tcHJlc3Npb25SYXRpbzogei5udW1iZXIoKSxcbiAgICBjZG5EZWxpdmVyeUVuYWJsZWQ6IHouYm9vbGVhbigpLFxuICB9KSxcbiAgZXJyb3JzOiB6LmFycmF5KHouc3RyaW5nKCkpLFxuICB3YXJuaW5nczogei5hcnJheSh6LnN0cmluZygpKSxcbn0pO1xuXG5leHBvcnQgdHlwZSBJbWFnZVBpcGVsaW5lQ29uZmlnID0gei5pbmZlcjx0eXBlb2YgSW1hZ2VQaXBlbGluZUNvbmZpZ1NjaGVtYT47XG5leHBvcnQgdHlwZSBJbWFnZVBpcGVsaW5lUmVzdWx0ID0gei5pbmZlcjx0eXBlb2YgSW1hZ2VQaXBlbGluZVJlc3VsdFNjaGVtYT47XG5cbi8vIFJlLWV4cG9ydCB0eXBlcyBmb3IgY29udmVuaWVuY2VcbmV4cG9ydCB0eXBlIHsgSW1hZ2VTb3VyY2UsIFByb2Nlc3NlZEltYWdlLCBJbWFnZVBsYWNlbWVudCwgQXJ0aWNsZUxheW91dCB9O1xuXG5leHBvcnQgY2xhc3MgSW1hZ2VQaXBlbGluZSB7XG4gIHByaXZhdGUgc291cmNpbmdTZXJ2aWNlOiBJbWFnZVNvdXJjaW5nU2VydmljZTtcbiAgcHJpdmF0ZSBwcm9jZXNzb3I6IEltYWdlUHJvY2Vzc29yO1xuICBwcml2YXRlIHBsYWNlbWVudFNlcnZpY2U6IEltYWdlUGxhY2VtZW50U2VydmljZTtcbiAgcHJpdmF0ZSBjb25maWc6IEltYWdlUGlwZWxpbmVDb25maWc7XG5cbiAgY29uc3RydWN0b3IoY29uZmlnOiBJbWFnZVBpcGVsaW5lQ29uZmlnKSB7XG4gICAgdGhpcy5jb25maWcgPSBJbWFnZVBpcGVsaW5lQ29uZmlnU2NoZW1hLnBhcnNlKGNvbmZpZyk7XG5cbiAgICB0aGlzLnNvdXJjaW5nU2VydmljZSA9IG5ldyBJbWFnZVNvdXJjaW5nU2VydmljZSh7XG4gICAgICB1c2VyQWdlbnQ6IHRoaXMuY29uZmlnLnVzZXJBZ2VudCxcbiAgICAgIGVuYWJsZUNhY2hpbmc6IHRoaXMuY29uZmlnLmVuYWJsZUNhY2hpbmcsXG4gICAgfSk7XG5cbiAgICB0aGlzLnByb2Nlc3NvciA9IG5ldyBJbWFnZVByb2Nlc3Nvcih7XG4gICAgICBvcGVuYWlBcGlLZXk6IHRoaXMuY29uZmlnLm9wZW5haUFwaUtleSxcbiAgICAgIGNkbkJhc2VVcmw6IHRoaXMuY29uZmlnLmNkbkJhc2VVcmwsXG4gICAgICBlbmFibGVDZG46IHRoaXMuY29uZmlnLmVuYWJsZUNkbixcbiAgICAgIGNvbXByZXNzaW9uUXVhbGl0eTogdGhpcy5jb25maWcuY29tcHJlc3Npb25RdWFsaXR5LFxuICAgICAgdXNlckFnZW50OiB0aGlzLmNvbmZpZy51c2VyQWdlbnQsXG4gICAgfSk7XG5cbiAgICB0aGlzLnBsYWNlbWVudFNlcnZpY2UgPSBuZXcgSW1hZ2VQbGFjZW1lbnRTZXJ2aWNlKHtcbiAgICAgIG9wZW5haUFwaUtleTogdGhpcy5jb25maWcub3BlbmFpQXBpS2V5LFxuICAgICAgbWluUmVsZXZhbmNlU2NvcmU6IHRoaXMuY29uZmlnLm1pblJlbGV2YW5jZVNjb3JlLFxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIENvbXBsZXRlIGltYWdlIHBpcGVsaW5lIGZvciBhcnRpY2xlIGdlbmVyYXRpb25cbiAgICovXG4gIGFzeW5jIHByb2Nlc3NBcnRpY2xlSW1hZ2VzKFxuICAgIHNlY3Rpb25zOiBBcnRpY2xlU2VjdGlvbltdLFxuICAgIGNvbnRlbnRBbmFseXNlczogQ29udGVudEFuYWx5c2lzW10sXG4gICAgdHdpdHRlck1lZGlhOiBBcnJheTx7XG4gICAgICB0d2VldElkOiBzdHJpbmc7XG4gICAgICBtZWRpYTogVHdlZXRNZWRpYUluZm9bXTtcbiAgICAgIGF1dGhvckhhbmRsZTogc3RyaW5nO1xuICAgIH0+ID0gW11cbiAgKTogUHJvbWlzZTxJbWFnZVBpcGVsaW5lUmVzdWx0PiB7XG4gICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICBjb25zdCBlcnJvcnM6IHN0cmluZ1tdID0gW107XG4gICAgY29uc3Qgd2FybmluZ3M6IHN0cmluZ1tdID0gW107XG5cbiAgICB0cnkge1xuICAgICAgLy8gU3RlcCAxOiBTb3VyY2UgaW1hZ2VzIGZyb20gbXVsdGlwbGUgY2hhbm5lbHNcbiAgICAgIGNvbnN0IHNvdXJjZWRJbWFnZXMgPSBhd2FpdCB0aGlzLnNvdXJjZUltYWdlcyhcbiAgICAgICAgY29udGVudEFuYWx5c2VzLFxuICAgICAgICB0d2l0dGVyTWVkaWEsXG4gICAgICAgIGVycm9ycyxcbiAgICAgICAgd2FybmluZ3NcbiAgICAgICk7XG5cbiAgICAgIGlmIChzb3VyY2VkSW1hZ2VzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICB3YXJuaW5ncy5wdXNoKCdObyBpbWFnZXMgc291cmNlZCAtIGFydGljbGUgd2lsbCBoYXZlIG5vIGltYWdlcycpO1xuICAgICAgfVxuXG4gICAgICAvLyBTdGVwIDI6IFByb2Nlc3MgaW1hZ2VzIChyZXNpemUsIG9wdGltaXplLCBnZW5lcmF0ZSBhbHQgdGV4dClcbiAgICAgIGNvbnN0IHByb2Nlc3NlZEltYWdlcyA9IGF3YWl0IHRoaXMucHJvY2Vzc0ltYWdlcyhcbiAgICAgICAgc291cmNlZEltYWdlcyxcbiAgICAgICAgZXJyb3JzLFxuICAgICAgICB3YXJuaW5nc1xuICAgICAgKTtcblxuICAgICAgLy8gU3RlcCAzOiBDcmVhdGUgb3B0aW1hbCBsYXlvdXQgYW5kIHBsYWNlbWVudHNcbiAgICAgIGNvbnN0IGFydGljbGVMYXlvdXQgPVxuICAgICAgICBwcm9jZXNzZWRJbWFnZXMubGVuZ3RoID4gMFxuICAgICAgICAgID8gYXdhaXQgdGhpcy5jcmVhdGVMYXlvdXQoXG4gICAgICAgICAgICAgIHNlY3Rpb25zLFxuICAgICAgICAgICAgICBwcm9jZXNzZWRJbWFnZXMsXG4gICAgICAgICAgICAgIGNvbnRlbnRBbmFseXNlcyxcbiAgICAgICAgICAgICAgZXJyb3JzLFxuICAgICAgICAgICAgICB3YXJuaW5nc1xuICAgICAgICAgICAgKVxuICAgICAgICAgIDogdW5kZWZpbmVkO1xuXG4gICAgICAvLyBDYWxjdWxhdGUgZmluYWwgbWV0cmljc1xuICAgICAgY29uc3QgbWV0cmljcyA9IHRoaXMuY2FsY3VsYXRlUGlwZWxpbmVNZXRyaWNzKFxuICAgICAgICBzb3VyY2VkSW1hZ2VzLFxuICAgICAgICBwcm9jZXNzZWRJbWFnZXMsXG4gICAgICAgIGFydGljbGVMYXlvdXQsXG4gICAgICAgIERhdGUubm93KCkgLSBzdGFydFRpbWVcbiAgICAgICk7XG5cbiAgICAgIHJldHVybiBJbWFnZVBpcGVsaW5lUmVzdWx0U2NoZW1hLnBhcnNlKHtcbiAgICAgICAgc3VjY2VzczogZXJyb3JzLmxlbmd0aCA9PT0gMCxcbiAgICAgICAgYXJ0aWNsZUxheW91dCxcbiAgICAgICAgcHJvY2Vzc2VkSW1hZ2VzLFxuICAgICAgICBzb3VyY2VkSW1hZ2VzLFxuICAgICAgICBtZXRyaWNzLFxuICAgICAgICBlcnJvcnMsXG4gICAgICAgIHdhcm5pbmdzLFxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGVycm9ycy5wdXNoKFxuICAgICAgICBgUGlwZWxpbmUgZmFpbGVkOiAke2Vycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InfWBcbiAgICAgICk7XG5cbiAgICAgIHJldHVybiBJbWFnZVBpcGVsaW5lUmVzdWx0U2NoZW1hLnBhcnNlKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIHByb2Nlc3NlZEltYWdlczogW10sXG4gICAgICAgIHNvdXJjZWRJbWFnZXM6IFtdLFxuICAgICAgICBtZXRyaWNzOiB7XG4gICAgICAgICAgdG90YWxQcm9jZXNzaW5nVGltZTogRGF0ZS5ub3coKSAtIHN0YXJ0VGltZSxcbiAgICAgICAgICBpbWFnZXNTb3VyY2VkOiAwLFxuICAgICAgICAgIGltYWdlc1Byb2Nlc3NlZDogMCxcbiAgICAgICAgICBpbWFnZXNQbGFjZWQ6IDAsXG4gICAgICAgICAgYXZlcmFnZVJlbGV2YW5jZTogMCxcbiAgICAgICAgICB0b3RhbEltYWdlU2l6ZTogMCxcbiAgICAgICAgICBjb21wcmVzc2lvblJhdGlvOiAwLFxuICAgICAgICAgIGNkbkRlbGl2ZXJ5RW5hYmxlZDogdGhpcy5jb25maWcuZW5hYmxlQ2RuLFxuICAgICAgICB9LFxuICAgICAgICBlcnJvcnMsXG4gICAgICAgIHdhcm5pbmdzLFxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFByb2Nlc3MgaW1hZ2VzIGZvciBhIHNpbmdsZSB0d2VldCAoZm9yIHJlYWwtdGltZSBwcm9jZXNzaW5nKVxuICAgKi9cbiAgYXN5bmMgcHJvY2Vzc1R3ZWV0SW1hZ2VzKFxuICAgIHR3ZWV0TWVkaWE6IFR3ZWV0TWVkaWFJbmZvW10sXG4gICAgdHdlZXRJZDogc3RyaW5nLFxuICAgIGF1dGhvckhhbmRsZTogc3RyaW5nLFxuICAgIGNvbnRlbnRBbmFseXNpcz86IENvbnRlbnRBbmFseXNpc1xuICApOiBQcm9taXNlPHtcbiAgICBwcm9jZXNzZWRJbWFnZXM6IFByb2Nlc3NlZEltYWdlW107XG4gICAgZXJyb3JzOiBzdHJpbmdbXTtcbiAgfT4ge1xuICAgIGNvbnN0IGVycm9yczogc3RyaW5nW10gPSBbXTtcblxuICAgIHRyeSB7XG4gICAgICAvLyBFeHRyYWN0IFR3aXR0ZXIgaW1hZ2VzXG4gICAgICBjb25zdCB0d2l0dGVySW1hZ2VzID0gYXdhaXQgdGhpcy5zb3VyY2luZ1NlcnZpY2UuZXh0cmFjdFR3aXR0ZXJJbWFnZXMoXG4gICAgICAgIHR3ZWV0TWVkaWEsXG4gICAgICAgIHR3ZWV0SWQsXG4gICAgICAgIGF1dGhvckhhbmRsZVxuICAgICAgKTtcblxuICAgICAgaWYgKHR3aXR0ZXJJbWFnZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiB7IHByb2Nlc3NlZEltYWdlczogW10sIGVycm9yczogW10gfTtcbiAgICAgIH1cblxuICAgICAgLy8gUHJvY2VzcyBpbWFnZXNcbiAgICAgIGNvbnN0IHByb2Nlc3NlZEltYWdlcyA9IGF3YWl0IHRoaXMucHJvY2Vzc29yLnByb2Nlc3NJbWFnZXMoXG4gICAgICAgIHR3aXR0ZXJJbWFnZXMsXG4gICAgICAgIDJcbiAgICAgICk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHByb2Nlc3NlZEltYWdlcyxcbiAgICAgICAgZXJyb3JzLFxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgZXJyb3JzLnB1c2goXG4gICAgICAgIGBUd2VldCBpbWFnZSBwcm9jZXNzaW5nIGZhaWxlZDogJHtlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ31gXG4gICAgICApO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcHJvY2Vzc2VkSW1hZ2VzOiBbXSxcbiAgICAgICAgZXJyb3JzLFxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogRmluZCBjb250ZXh0dWFsIGltYWdlcyBmb3Igc3BlY2lmaWMgZW50aXRpZXNcbiAgICovXG4gIGFzeW5jIGZpbmRDb250ZXh0dWFsSW1hZ2VzKFxuICAgIHBsYXllck5hbWVzOiBzdHJpbmdbXSxcbiAgICBjbHViTmFtZXM6IHN0cmluZ1tdLFxuICAgIHRyYW5zZmVyVHlwZTogc3RyaW5nID0gJ3NpZ25pbmcnXG4gICk6IFByb21pc2U8e1xuICAgIGltYWdlczogSW1hZ2VTb3VyY2VbXTtcbiAgICBlcnJvcnM6IHN0cmluZ1tdO1xuICB9PiB7XG4gICAgY29uc3QgZXJyb3JzOiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGNvbnRleHR1YWxJbWFnZXMgPSBhd2FpdCB0aGlzLnNvdXJjaW5nU2VydmljZS5maW5kQ29udGV4dHVhbEltYWdlcyhcbiAgICAgICAgcGxheWVyTmFtZXMsXG4gICAgICAgIGNsdWJOYW1lcyxcbiAgICAgICAgdHJhbnNmZXJUeXBlXG4gICAgICApO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBpbWFnZXM6IFtcbiAgICAgICAgICAuLi5jb250ZXh0dWFsSW1hZ2VzLnBsYXllcnMsXG4gICAgICAgICAgLi4uY29udGV4dHVhbEltYWdlcy5jbHVicyxcbiAgICAgICAgICAuLi5jb250ZXh0dWFsSW1hZ2VzLmNvbnRleHR1YWwsXG4gICAgICAgIF0sXG4gICAgICAgIGVycm9ycyxcbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGVycm9ycy5wdXNoKFxuICAgICAgICBgQ29udGV4dHVhbCBpbWFnZSBzZWFyY2ggZmFpbGVkOiAke2Vycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InfWBcbiAgICAgICk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBpbWFnZXM6IFtdLFxuICAgICAgICBlcnJvcnMsXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBTb3VyY2UgaW1hZ2VzIGZyb20gYWxsIGF2YWlsYWJsZSBjaGFubmVsc1xuICAgKi9cbiAgcHJpdmF0ZSBhc3luYyBzb3VyY2VJbWFnZXMoXG4gICAgY29udGVudEFuYWx5c2VzOiBDb250ZW50QW5hbHlzaXNbXSxcbiAgICB0d2l0dGVyTWVkaWE6IEFycmF5PHtcbiAgICAgIHR3ZWV0SWQ6IHN0cmluZztcbiAgICAgIG1lZGlhOiBUd2VldE1lZGlhSW5mb1tdO1xuICAgICAgYXV0aG9ySGFuZGxlOiBzdHJpbmc7XG4gICAgfT4sXG4gICAgZXJyb3JzOiBzdHJpbmdbXSxcbiAgICB3YXJuaW5nczogc3RyaW5nW11cbiAgKTogUHJvbWlzZTxJbWFnZVNvdXJjZVtdPiB7XG4gICAgY29uc3QgYWxsSW1hZ2VzOiBJbWFnZVNvdXJjZVtdID0gW107XG5cbiAgICAvLyBFeHRyYWN0IFR3aXR0ZXIgaW1hZ2VzXG4gICAgZm9yIChjb25zdCB7IHR3ZWV0SWQsIG1lZGlhLCBhdXRob3JIYW5kbGUgfSBvZiB0d2l0dGVyTWVkaWEpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHR3aXR0ZXJJbWFnZXMgPSBhd2FpdCB0aGlzLnNvdXJjaW5nU2VydmljZS5leHRyYWN0VHdpdHRlckltYWdlcyhcbiAgICAgICAgICBtZWRpYSxcbiAgICAgICAgICB0d2VldElkLFxuICAgICAgICAgIGF1dGhvckhhbmRsZVxuICAgICAgICApO1xuICAgICAgICBhbGxJbWFnZXMucHVzaCguLi50d2l0dGVySW1hZ2VzKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHdhcm5pbmdzLnB1c2goXG4gICAgICAgICAgYEZhaWxlZCB0byBleHRyYWN0IFR3aXR0ZXIgaW1hZ2VzIGZvciB0d2VldCAke3R3ZWV0SWR9OiAke2Vycm9yfWBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBTZWFyY2ggV2lraXBlZGlhIGZvciByZWxldmFudCBpbWFnZXNcbiAgICBjb25zdCBhbGxQbGF5ZXJOYW1lcyA9IGNvbnRlbnRBbmFseXNlcy5mbGF0TWFwKChhbmFseXNpcykgPT5cbiAgICAgIGFuYWx5c2lzLmVudGl0aWVzLnBsYXllcnMubWFwKChwKSA9PiBwLm5hbWUpXG4gICAgKTtcbiAgICBjb25zdCBhbGxDbHViTmFtZXMgPSBjb250ZW50QW5hbHlzZXMuZmxhdE1hcCgoYW5hbHlzaXMpID0+XG4gICAgICBhbmFseXNpcy5lbnRpdGllcy5jbHVicy5tYXAoKGMpID0+IGMubmFtZSlcbiAgICApO1xuXG4gICAgaWYgKGFsbFBsYXllck5hbWVzLmxlbmd0aCA+IDAgfHwgYWxsQ2x1Yk5hbWVzLmxlbmd0aCA+IDApIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGNvbnRleHR1YWxJbWFnZXMgPVxuICAgICAgICAgIGF3YWl0IHRoaXMuc291cmNpbmdTZXJ2aWNlLmZpbmRDb250ZXh0dWFsSW1hZ2VzKFxuICAgICAgICAgICAgWy4uLm5ldyBTZXQoYWxsUGxheWVyTmFtZXMpXSwgLy8gRGVkdXBsaWNhdGVcbiAgICAgICAgICAgIFsuLi5uZXcgU2V0KGFsbENsdWJOYW1lcyldLFxuICAgICAgICAgICAgJ3NpZ25pbmcnXG4gICAgICAgICAgKTtcblxuICAgICAgICBhbGxJbWFnZXMucHVzaChcbiAgICAgICAgICAuLi5jb250ZXh0dWFsSW1hZ2VzLnBsYXllcnMsXG4gICAgICAgICAgLi4uY29udGV4dHVhbEltYWdlcy5jbHVicyxcbiAgICAgICAgICAuLi5jb250ZXh0dWFsSW1hZ2VzLmNvbnRleHR1YWxcbiAgICAgICAgKTtcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHdhcm5pbmdzLnB1c2goYFdpa2lwZWRpYSBpbWFnZSBzZWFyY2ggZmFpbGVkOiAke2Vycm9yfWApO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEZpbHRlciBhbmQgZGVkdXBsaWNhdGVcbiAgICBjb25zdCBmaWx0ZXJlZEltYWdlcyA9IGFsbEltYWdlc1xuICAgICAgLmZpbHRlcihcbiAgICAgICAgKGltZykgPT4gaW1nLm1ldGFkYXRhLnJlbGV2YW5jZVNjb3JlID49IHRoaXMuY29uZmlnLm1pblJlbGV2YW5jZVNjb3JlXG4gICAgICApXG4gICAgICAuc2xpY2UoMCwgdGhpcy5jb25maWcubWF4SW1hZ2VzUGVyQXJ0aWNsZSk7XG5cbiAgICByZXR1cm4gZmlsdGVyZWRJbWFnZXM7XG4gIH1cblxuICAvKipcbiAgICogUHJvY2VzcyBzb3VyY2VkIGltYWdlc1xuICAgKi9cbiAgcHJpdmF0ZSBhc3luYyBwcm9jZXNzSW1hZ2VzKFxuICAgIHNvdXJjZWRJbWFnZXM6IEltYWdlU291cmNlW10sXG4gICAgZXJyb3JzOiBzdHJpbmdbXSxcbiAgICB3YXJuaW5nczogc3RyaW5nW11cbiAgKTogUHJvbWlzZTxQcm9jZXNzZWRJbWFnZVtdPiB7XG4gICAgaWYgKHNvdXJjZWRJbWFnZXMubGVuZ3RoID09PSAwKSByZXR1cm4gW107XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgcHJvY2Vzc2VkSW1hZ2VzID0gYXdhaXQgdGhpcy5wcm9jZXNzb3IucHJvY2Vzc0ltYWdlcyhcbiAgICAgICAgc291cmNlZEltYWdlcyxcbiAgICAgICAgM1xuICAgICAgKTtcblxuICAgICAgLy8gVmFsaWRhdGUgcHJvY2Vzc2VkIGltYWdlc1xuICAgICAgZm9yIChjb25zdCBpbWFnZSBvZiBwcm9jZXNzZWRJbWFnZXMpIHtcbiAgICAgICAgY29uc3QgdmFsaWRhdGlvbiA9IHRoaXMucHJvY2Vzc29yLnZhbGlkYXRlUHJvY2Vzc2VkSW1hZ2UoaW1hZ2UpO1xuICAgICAgICBpZiAoIXZhbGlkYXRpb24udmFsaWQpIHtcbiAgICAgICAgICB3YXJuaW5ncy5wdXNoKFxuICAgICAgICAgICAgYEltYWdlICR7aW1hZ2UuaWR9IHZhbGlkYXRpb24gaXNzdWVzOiAke3ZhbGlkYXRpb24uaXNzdWVzLmpvaW4oJywgJyl9YFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHByb2Nlc3NlZEltYWdlcztcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgZXJyb3JzLnB1c2goXG4gICAgICAgIGBJbWFnZSBwcm9jZXNzaW5nIGZhaWxlZDogJHtlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ31gXG4gICAgICApO1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgYXJ0aWNsZSBsYXlvdXRcbiAgICovXG4gIHByaXZhdGUgYXN5bmMgY3JlYXRlTGF5b3V0KFxuICAgIHNlY3Rpb25zOiBBcnRpY2xlU2VjdGlvbltdLFxuICAgIHByb2Nlc3NlZEltYWdlczogUHJvY2Vzc2VkSW1hZ2VbXSxcbiAgICBjb250ZW50QW5hbHlzZXM6IENvbnRlbnRBbmFseXNpc1tdLFxuICAgIGVycm9yczogc3RyaW5nW10sXG4gICAgd2FybmluZ3M6IHN0cmluZ1tdXG4gICk6IFByb21pc2U8QXJ0aWNsZUxheW91dCB8IHVuZGVmaW5lZD4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBsYXlvdXQgPSBhd2FpdCB0aGlzLnBsYWNlbWVudFNlcnZpY2UuY3JlYXRlQXJ0aWNsZUxheW91dChcbiAgICAgICAgc2VjdGlvbnMsXG4gICAgICAgIHByb2Nlc3NlZEltYWdlcyxcbiAgICAgICAgY29udGVudEFuYWx5c2VzXG4gICAgICApO1xuXG4gICAgICAvLyBWYWxpZGF0ZSBsYXlvdXRcbiAgICAgIGlmIChsYXlvdXQubWV0YWRhdGEuYXZlcmFnZVJlbGV2YW5jZSA8IDUwKSB7XG4gICAgICAgIHdhcm5pbmdzLnB1c2goJ0xvdyBhdmVyYWdlIGltYWdlIHJlbGV2YW5jZSBpbiBsYXlvdXQnKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGxheW91dC5wZXJmb3JtYW5jZS50b3RhbEltYWdlU2l6ZSA+IDUwMDAwMDApIHtcbiAgICAgICAgLy8gNU1CXG4gICAgICAgIHdhcm5pbmdzLnB1c2goJ0xhcmdlIHRvdGFsIGltYWdlIHNpemUgbWF5IGltcGFjdCBsb2FkaW5nIHBlcmZvcm1hbmNlJyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBsYXlvdXQ7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGVycm9ycy5wdXNoKFxuICAgICAgICBgTGF5b3V0IGNyZWF0aW9uIGZhaWxlZDogJHtlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ31gXG4gICAgICApO1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ2FsY3VsYXRlIHBpcGVsaW5lIG1ldHJpY3NcbiAgICovXG4gIHByaXZhdGUgY2FsY3VsYXRlUGlwZWxpbmVNZXRyaWNzKFxuICAgIHNvdXJjZWRJbWFnZXM6IEltYWdlU291cmNlW10sXG4gICAgcHJvY2Vzc2VkSW1hZ2VzOiBQcm9jZXNzZWRJbWFnZVtdLFxuICAgIGFydGljbGVMYXlvdXQ6IEFydGljbGVMYXlvdXQgfCB1bmRlZmluZWQsXG4gICAgdG90YWxQcm9jZXNzaW5nVGltZTogbnVtYmVyXG4gICk6IEltYWdlUGlwZWxpbmVSZXN1bHRbJ21ldHJpY3MnXSB7XG4gICAgY29uc3QgYXZlcmFnZVJlbGV2YW5jZSA9XG4gICAgICBzb3VyY2VkSW1hZ2VzLmxlbmd0aCA+IDBcbiAgICAgICAgPyBzb3VyY2VkSW1hZ2VzLnJlZHVjZShcbiAgICAgICAgICAgIChzdW0sIGltZykgPT4gc3VtICsgaW1nLm1ldGFkYXRhLnJlbGV2YW5jZVNjb3JlLFxuICAgICAgICAgICAgMFxuICAgICAgICAgICkgLyBzb3VyY2VkSW1hZ2VzLmxlbmd0aFxuICAgICAgICA6IDA7XG5cbiAgICBjb25zdCB0b3RhbEltYWdlU2l6ZSA9IHByb2Nlc3NlZEltYWdlcy5yZWR1Y2UoXG4gICAgICAoc3VtLCBpbWcpID0+IHN1bSArIGltZy52YXJpYW50cy5sYXJnZS5maWxlU2l6ZSxcbiAgICAgIDBcbiAgICApO1xuXG4gICAgY29uc3QgdG90YWxPcmlnaW5hbFNpemUgPSBwcm9jZXNzZWRJbWFnZXMucmVkdWNlKFxuICAgICAgKHN1bSwgaW1nKSA9PiBzdW0gKyBpbWcub3B0aW1pemF0aW9uLm9yaWdpbmFsU2l6ZSxcbiAgICAgIDBcbiAgICApO1xuXG4gICAgY29uc3QgY29tcHJlc3Npb25SYXRpbyA9XG4gICAgICB0b3RhbE9yaWdpbmFsU2l6ZSA+IDBcbiAgICAgICAgPyAodG90YWxPcmlnaW5hbFNpemUgLSB0b3RhbEltYWdlU2l6ZSkgLyB0b3RhbE9yaWdpbmFsU2l6ZVxuICAgICAgICA6IDA7XG5cbiAgICBjb25zdCBpbWFnZXNQbGFjZWQgPVxuICAgICAgYXJ0aWNsZUxheW91dD8uc2VjdGlvbnMucmVkdWNlKFxuICAgICAgICAoc3VtLCBzZWN0aW9uKSA9PiBzdW0gKyBzZWN0aW9uLnBsYWNlbWVudHMubGVuZ3RoLFxuICAgICAgICAwXG4gICAgICApIHx8IDA7XG5cbiAgICByZXR1cm4ge1xuICAgICAgdG90YWxQcm9jZXNzaW5nVGltZSxcbiAgICAgIGltYWdlc1NvdXJjZWQ6IHNvdXJjZWRJbWFnZXMubGVuZ3RoLFxuICAgICAgaW1hZ2VzUHJvY2Vzc2VkOiBwcm9jZXNzZWRJbWFnZXMubGVuZ3RoLFxuICAgICAgaW1hZ2VzUGxhY2VkLFxuICAgICAgYXZlcmFnZVJlbGV2YW5jZTogTWF0aC5yb3VuZChhdmVyYWdlUmVsZXZhbmNlKSxcbiAgICAgIHRvdGFsSW1hZ2VTaXplLFxuICAgICAgY29tcHJlc3Npb25SYXRpbzogTWF0aC5yb3VuZChjb21wcmVzc2lvblJhdGlvICogMTAwKSAvIDEwMCxcbiAgICAgIGNkbkRlbGl2ZXJ5RW5hYmxlZDogdGhpcy5jb25maWcuZW5hYmxlQ2RuLFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogR2V0IHBpcGVsaW5lIGNvbmZpZ3VyYXRpb25cbiAgICovXG4gIGdldENvbmZpZygpOiBJbWFnZVBpcGVsaW5lQ29uZmlnIHtcbiAgICByZXR1cm4gdGhpcy5jb25maWc7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHNlcnZpY2Ugc3RhdGlzdGljc1xuICAgKi9cbiAgYXN5bmMgZ2V0U2VydmljZVN0YXRzKCk6IFByb21pc2U8e1xuICAgIHNvdXJjaW5nOiBSZXR1cm5UeXBlPEltYWdlU291cmNpbmdTZXJ2aWNlWydnZXRDYWNoZVN0YXRzJ10+O1xuICAgIHByb2Nlc3Npbmc6IFJldHVyblR5cGU8SW1hZ2VQcm9jZXNzb3JbJ2dldFByb2Nlc3NpbmdTdGF0cyddPjtcbiAgfT4ge1xuICAgIHJldHVybiB7XG4gICAgICBzb3VyY2luZzogdGhpcy5zb3VyY2luZ1NlcnZpY2UuZ2V0Q2FjaGVTdGF0cygpLFxuICAgICAgcHJvY2Vzc2luZzogdGhpcy5wcm9jZXNzb3IuZ2V0UHJvY2Vzc2luZ1N0YXRzKCksXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDbGVhciBhbGwgY2FjaGVzXG4gICAqL1xuICBjbGVhckNhY2hlcygpOiB2b2lkIHtcbiAgICB0aGlzLnNvdXJjaW5nU2VydmljZS5jbGVhckNhY2hlKCk7XG4gIH1cbn1cblxuLy8gRXhwb3J0IGluZGl2aWR1YWwgc2VydmljZXMgZm9yIGRpcmVjdCB1c2VcbmV4cG9ydCB7IEltYWdlU291cmNpbmdTZXJ2aWNlLCBJbWFnZVByb2Nlc3NvciwgSW1hZ2VQbGFjZW1lbnRTZXJ2aWNlIH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBZVk7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FB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