5988d65ef934f86e6f1dac786734c610
/* istanbul ignore next */
function cov_b4qiwqun5() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/app/inline-test/page.tsx";
  var hash = "c08a6ed632c44792ad5050263f9795a63ae7efa1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/app/inline-test/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 2
        },
        end: {
          line: 39,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "InlineTestPage",
        decl: {
          start: {
            line: 1,
            column: 24
          },
          end: {
            line: 1,
            column: 38
          }
        },
        loc: {
          start: {
            line: 1,
            column: 41
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 1
      }
    },
    branchMap: {},
    s: {
      "0": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c08a6ed632c44792ad5050263f9795a63ae7efa1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_b4qiwqun5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_b4qiwqun5();
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export default function InlineTestPage() {
  /* istanbul ignore next */
  cov_b4qiwqun5().f[0]++;
  cov_b4qiwqun5().s[0]++;
  return /*#__PURE__*/ /* istanbul ignore next */_jsxs(
  /* istanbul ignore next */
  "div",
  /* istanbul ignore next */
  {
    className: "p-8",
    children: [/*#__PURE__*/
    /* istanbul ignore next */
    _jsx(
    /* istanbul ignore next */
    "h1",
    /* istanbul ignore next */
    {
      className: "text-2xl font-bold mb-4",
      children: "Inline JavaScript Test"
    }), /*#__PURE__*/
    /* istanbul ignore next */
    _jsx(
    /* istanbul ignore next */
    "div",
    /* istanbul ignore next */
    {
      id: "test-output",
      children: "JavaScript not loaded"
    }), /*#__PURE__*/
    /* istanbul ignore next */
    _jsx(
    /* istanbul ignore next */
    "script",
    /* istanbul ignore next */
    {
      dangerouslySetInnerHTML: {
        __html:
        /* istanbul ignore next */
        "\n            document.addEventListener('DOMContentLoaded', function() {\n              const el = document.getElementById('test-output');\n              if (el) {\n                el.textContent = 'JavaScript is working!';\n                el.style.color = 'green';\n              }\n              \n              // Try to fetch the API\n              fetch('/api/feed?limit=5')\n                .then(res => res.json())\n                .then(data => {\n                  console.log('API Response:', data);\n                  const resultEl = document.createElement('pre');\n                  resultEl.style.marginTop = '20px';\n                  resultEl.style.padding = '10px';\n                  resultEl.style.backgroundColor = '#333';\n                  resultEl.style.borderRadius = '5px';\n                  resultEl.style.overflow = 'auto';\n                  resultEl.textContent = JSON.stringify(data, null, 2);\n                  document.querySelector('.p-8').appendChild(resultEl);\n                })\n                .catch(err => {\n                  console.error('API Error:', err);\n                });\n            });\n          "
      }
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfYjRxaXdxdW41IiwiYWN0dWFsQ292ZXJhZ2UiLCJqc3giLCJfanN4IiwianN4cyIsIl9qc3hzIiwiSW5saW5lVGVzdFBhZ2UiLCJmIiwicyIsImNsYXNzTmFtZSIsImNoaWxkcmVuIiwiaWQiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCJdLCJzb3VyY2VzIjpbInBhZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIElubGluZVRlc3RQYWdlKCkge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwicC04XCI+XG4gICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC0yeGwgZm9udC1ib2xkIG1iLTRcIj5JbmxpbmUgSmF2YVNjcmlwdCBUZXN0PC9oMT5cbiAgICAgIDxkaXYgaWQ9XCJ0ZXN0LW91dHB1dFwiPkphdmFTY3JpcHQgbm90IGxvYWRlZDwvZGl2PlxuXG4gICAgICA8c2NyaXB0XG4gICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7XG4gICAgICAgICAgX19odG1sOiBgXG4gICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIGNvbnN0IGVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rlc3Qtb3V0cHV0Jyk7XG4gICAgICAgICAgICAgIGlmIChlbCkge1xuICAgICAgICAgICAgICAgIGVsLnRleHRDb250ZW50ID0gJ0phdmFTY3JpcHQgaXMgd29ya2luZyEnO1xuICAgICAgICAgICAgICAgIGVsLnN0eWxlLmNvbG9yID0gJ2dyZWVuJztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgLy8gVHJ5IHRvIGZldGNoIHRoZSBBUElcbiAgICAgICAgICAgICAgZmV0Y2goJy9hcGkvZmVlZD9saW1pdD01JylcbiAgICAgICAgICAgICAgICAudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcbiAgICAgICAgICAgICAgICAudGhlbihkYXRhID0+IHtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdBUEkgUmVzcG9uc2U6JywgZGF0YSk7XG4gICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHRFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ByZScpO1xuICAgICAgICAgICAgICAgICAgcmVzdWx0RWwuc3R5bGUubWFyZ2luVG9wID0gJzIwcHgnO1xuICAgICAgICAgICAgICAgICAgcmVzdWx0RWwuc3R5bGUucGFkZGluZyA9ICcxMHB4JztcbiAgICAgICAgICAgICAgICAgIHJlc3VsdEVsLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjMzMzJztcbiAgICAgICAgICAgICAgICAgIHJlc3VsdEVsLnN0eWxlLmJvcmRlclJhZGl1cyA9ICc1cHgnO1xuICAgICAgICAgICAgICAgICAgcmVzdWx0RWwuc3R5bGUub3ZlcmZsb3cgPSAnYXV0byc7XG4gICAgICAgICAgICAgICAgICByZXN1bHRFbC50ZXh0Q29udGVudCA9IEpTT04uc3RyaW5naWZ5KGRhdGEsIG51bGwsIDIpO1xuICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnAtOCcpLmFwcGVuZENoaWxkKHJlc3VsdEVsKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignQVBJIEVycm9yOicsIGVycik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICBgLFxuICAgICAgICB9fVxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBZVk7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTtBQUFBLFNBQUFFLEdBQUEsSUFBQUMsSUFBQSxFQUFBQyxJQUFBLElBQUFDLEtBQUE7QUFmWixlQUFlLFNBQVNDLGNBQWNBLENBQUEsRUFBRztFQUFBO0VBQUFOLGFBQUEsR0FBQU8sQ0FBQTtFQUFBUCxhQUFBLEdBQUFRLENBQUE7RUFDdkMsb0JBQ0UsMkJBQUFILEtBQUE7RUFBQTtFQUFBO0VBQUE7RUFBQTtJQUFLSSxTQUFTLEVBQUMsS0FBSztJQUFBQyxRQUFBO0lBQ2xCO0lBQUFQLElBQUE7SUFBQTtJQUFBO0lBQUE7SUFBQTtNQUFJTSxTQUFTLEVBQUMseUJBQXlCO01BQUFDLFFBQUEsRUFBQztJQUFzQixDQUFJLENBQUM7SUFDbkU7SUFBQVAsSUFBQTtJQUFBO0lBQUE7SUFBQTtJQUFBO01BQUtRLEVBQUUsRUFBQyxhQUFhO01BQUFELFFBQUEsRUFBQztJQUFxQixDQUFLLENBQUM7SUFFakQ7SUFBQVAsSUFBQTtJQUFBO0lBQUE7SUFBQTtJQUFBO01BQ0VTLHVCQUF1QixFQUFFO1FBQ3ZCQyxNQUFNO1FBQUE7UUFBQTtNQTJCUjtJQUFFLENBQ0gsQ0FBQztFQUFBLENBQ0MsQ0FBQztBQUVWIiwiaWdub3JlTGlzdCI6W119