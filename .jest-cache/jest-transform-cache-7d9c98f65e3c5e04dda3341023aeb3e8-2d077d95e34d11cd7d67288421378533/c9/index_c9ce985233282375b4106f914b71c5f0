282ef809b60fe56be1503ba37557dea8
/* istanbul ignore next */
function cov_1p1xfuovbu() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/ai/index.ts";
  var hash = "038afcb8c0e2dc7f0923ff1da7e8f5ca9672928f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/ai/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 34,
          column: 46
        }
      },
      "1": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 35,
          column: 50
        }
      },
      "2": {
        start: {
          line: 36,
          column: 2
        },
        end: {
          line: 38,
          column: 4
        }
      },
      "3": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 40,
          column: 65
        }
      },
      "4": {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 41,
          column: 60
        }
      },
      "5": {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 42,
          column: 62
        }
      },
      "6": {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 43,
          column: 60
        }
      },
      "7": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 44,
          column: 63
        }
      },
      "8": {
        start: {
          line: 46,
          column: 2
        },
        end: {
          line: 55,
          column: 4
        }
      },
      "9": {
        start: {
          line: 62,
          column: 2
        },
        end: {
          line: 74,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "initializeAISystem",
        decl: {
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 29,
            column: 34
          }
        },
        loc: {
          start: {
            line: 33,
            column: 3
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 33
      },
      "1": {
        name: "getAISystemStatus",
        decl: {
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 61,
            column: 33
          }
        },
        loc: {
          start: {
            line: 61,
            column: 36
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 61
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "038afcb8c0e2dc7f0923ff1da7e8f5ca9672928f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1p1xfuovbu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1p1xfuovbu();
/**
 * AI Module Index
 * Main exports for the AI system with circular dependency fixes
 */

// Core AI components (temporarily limited exports due to circular dependencies)
export { TerryCommentaryGenerator } from './terry-pipeline';
export { TerryCommentarySystem } from './terryCommentarySystem';

// Temporarily disabled due to circular dependencies - will be re-enabled after architecture fix
// export { TerryIntegration } from './terryIntegration';
// export { TerryOrchestrator } from './terryOrchestrator';
// export { ContentQualityValidator } from './quality-validator';
// export { AIContentAnalyzer } from './content-analyzer';
// export { TerryArticleGenerator } from './article-generator';

// Types that are safe to export

// Utility functions
export { terryPrompts } from './terry-prompts';

/**
 * Initialize AI system with dependency injection to avoid circular imports
 */
export function initializeAISystem(config) {
  /* istanbul ignore next */
  cov_1p1xfuovbu().f[0]++;
  cov_1p1xfuovbu().s[0]++;
  console.log('ðŸ¤– Initializing AI System...');
  /* istanbul ignore next */
  cov_1p1xfuovbu().s[1]++;
  console.log('AI system configuration:', config);
  /* istanbul ignore next */
  cov_1p1xfuovbu().s[2]++;
  console.log('Some modules disabled temporarily due to circular dependency fixes');
  /* istanbul ignore next */
  cov_1p1xfuovbu().s[3]++;
  console.log('âœ… AI System initialized (partial functionality)');
  /* istanbul ignore next */
  cov_1p1xfuovbu().s[4]++;
  console.log('   - Terry commentary generation available');
  /* istanbul ignore next */
  cov_1p1xfuovbu().s[5]++;
  console.log('   - Quality validation temporarily disabled');
  /* istanbul ignore next */
  cov_1p1xfuovbu().s[6]++;
  console.log('   - Content analysis temporarily disabled');
  /* istanbul ignore next */
  cov_1p1xfuovbu().s[7]++;
  console.log('   - Terry orchestration temporarily disabled');
  /* istanbul ignore next */
  cov_1p1xfuovbu().s[8]++;
  return {
    terry: null,
    // TODO: Re-enable after circular dependency fix
    validator: null,
    // TODO: Re-enable after circular dependency fix
    analyzer: null,
    // TODO: Re-enable after circular dependency fix
    orchestrator: null,
    // TODO: Re-enable after circular dependency fix
    status: {
      isActive: true,
      warning: 'Partial functionality due to dependency fixes'
    }
  };
}

/**
 * Get AI system status
 */
export function getAISystemStatus() {
  /* istanbul ignore next */
  cov_1p1xfuovbu().f[1]++;
  cov_1p1xfuovbu().s[9]++;
  return {
    terry: {
      isActive: true,
      warning: 'Basic functionality only'
    },
    validator: {
      isActive: false,
      error: 'Disabled due to circular dependency'
    },
    analyzer: {
      isActive: false,
      error: 'Disabled due to circular dependency'
    },
    orchestrator: {
      isActive: false,
      error: 'Disabled due to circular dependency'
    },
    timestamp: new Date().toISOString()
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXAxeGZ1b3ZidSIsImFjdHVhbENvdmVyYWdlIiwiVGVycnlDb21tZW50YXJ5R2VuZXJhdG9yIiwiVGVycnlDb21tZW50YXJ5U3lzdGVtIiwidGVycnlQcm9tcHRzIiwiaW5pdGlhbGl6ZUFJU3lzdGVtIiwiY29uZmlnIiwiZiIsInMiLCJjb25zb2xlIiwibG9nIiwidGVycnkiLCJ2YWxpZGF0b3IiLCJhbmFseXplciIsIm9yY2hlc3RyYXRvciIsInN0YXR1cyIsImlzQWN0aXZlIiwid2FybmluZyIsImdldEFJU3lzdGVtU3RhdHVzIiwiZXJyb3IiLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciXSwic291cmNlcyI6WyJpbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFJIE1vZHVsZSBJbmRleFxuICogTWFpbiBleHBvcnRzIGZvciB0aGUgQUkgc3lzdGVtIHdpdGggY2lyY3VsYXIgZGVwZW5kZW5jeSBmaXhlc1xuICovXG5cbi8vIENvcmUgQUkgY29tcG9uZW50cyAodGVtcG9yYXJpbHkgbGltaXRlZCBleHBvcnRzIGR1ZSB0byBjaXJjdWxhciBkZXBlbmRlbmNpZXMpXG5leHBvcnQgeyBUZXJyeUNvbW1lbnRhcnlHZW5lcmF0b3IgfSBmcm9tICcuL3RlcnJ5LXBpcGVsaW5lJztcbmV4cG9ydCB7IFRlcnJ5Q29tbWVudGFyeVN5c3RlbSB9IGZyb20gJy4vdGVycnlDb21tZW50YXJ5U3lzdGVtJztcblxuLy8gVGVtcG9yYXJpbHkgZGlzYWJsZWQgZHVlIHRvIGNpcmN1bGFyIGRlcGVuZGVuY2llcyAtIHdpbGwgYmUgcmUtZW5hYmxlZCBhZnRlciBhcmNoaXRlY3R1cmUgZml4XG4vLyBleHBvcnQgeyBUZXJyeUludGVncmF0aW9uIH0gZnJvbSAnLi90ZXJyeUludGVncmF0aW9uJztcbi8vIGV4cG9ydCB7IFRlcnJ5T3JjaGVzdHJhdG9yIH0gZnJvbSAnLi90ZXJyeU9yY2hlc3RyYXRvcic7XG4vLyBleHBvcnQgeyBDb250ZW50UXVhbGl0eVZhbGlkYXRvciB9IGZyb20gJy4vcXVhbGl0eS12YWxpZGF0b3InO1xuLy8gZXhwb3J0IHsgQUlDb250ZW50QW5hbHl6ZXIgfSBmcm9tICcuL2NvbnRlbnQtYW5hbHl6ZXInO1xuLy8gZXhwb3J0IHsgVGVycnlBcnRpY2xlR2VuZXJhdG9yIH0gZnJvbSAnLi9hcnRpY2xlLWdlbmVyYXRvcic7XG5cbi8vIFR5cGVzIHRoYXQgYXJlIHNhZmUgdG8gZXhwb3J0XG5leHBvcnQgdHlwZSB7XG4gIFRlcnJ5Q29tbWVudGFyeVJlc3VsdCxcbiAgVGVycnlWb2ljZU1ldHJpY3MsXG59IGZyb20gJy4vdGVycnlDb21tZW50YXJ5U3lzdGVtJztcblxuLy8gVXRpbGl0eSBmdW5jdGlvbnNcbmV4cG9ydCB7IHRlcnJ5UHJvbXB0cyB9IGZyb20gJy4vdGVycnktcHJvbXB0cyc7XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBBSSBzeXN0ZW0gd2l0aCBkZXBlbmRlbmN5IGluamVjdGlvbiB0byBhdm9pZCBjaXJjdWxhciBpbXBvcnRzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplQUlTeXN0ZW0oY29uZmlnPzoge1xuICBlbmFibGVUZXJyeUNvbW1lbnRhcnk/OiBib29sZWFuO1xuICBlbmFibGVRdWFsaXR5VmFsaWRhdGlvbj86IGJvb2xlYW47XG4gIGVuYWJsZUNvbnRlbnRBbmFseXNpcz86IGJvb2xlYW47XG59KSB7XG4gIGNvbnNvbGUubG9nKCfwn6SWIEluaXRpYWxpemluZyBBSSBTeXN0ZW0uLi4nKTtcbiAgY29uc29sZS5sb2coJ0FJIHN5c3RlbSBjb25maWd1cmF0aW9uOicsIGNvbmZpZyk7XG4gIGNvbnNvbGUubG9nKFxuICAgICdTb21lIG1vZHVsZXMgZGlzYWJsZWQgdGVtcG9yYXJpbHkgZHVlIHRvIGNpcmN1bGFyIGRlcGVuZGVuY3kgZml4ZXMnXG4gICk7XG5cbiAgY29uc29sZS5sb2coJ+KchSBBSSBTeXN0ZW0gaW5pdGlhbGl6ZWQgKHBhcnRpYWwgZnVuY3Rpb25hbGl0eSknKTtcbiAgY29uc29sZS5sb2coJyAgIC0gVGVycnkgY29tbWVudGFyeSBnZW5lcmF0aW9uIGF2YWlsYWJsZScpO1xuICBjb25zb2xlLmxvZygnICAgLSBRdWFsaXR5IHZhbGlkYXRpb24gdGVtcG9yYXJpbHkgZGlzYWJsZWQnKTtcbiAgY29uc29sZS5sb2coJyAgIC0gQ29udGVudCBhbmFseXNpcyB0ZW1wb3JhcmlseSBkaXNhYmxlZCcpO1xuICBjb25zb2xlLmxvZygnICAgLSBUZXJyeSBvcmNoZXN0cmF0aW9uIHRlbXBvcmFyaWx5IGRpc2FibGVkJyk7XG5cbiAgcmV0dXJuIHtcbiAgICB0ZXJyeTogbnVsbCwgLy8gVE9ETzogUmUtZW5hYmxlIGFmdGVyIGNpcmN1bGFyIGRlcGVuZGVuY3kgZml4XG4gICAgdmFsaWRhdG9yOiBudWxsLCAvLyBUT0RPOiBSZS1lbmFibGUgYWZ0ZXIgY2lyY3VsYXIgZGVwZW5kZW5jeSBmaXhcbiAgICBhbmFseXplcjogbnVsbCwgLy8gVE9ETzogUmUtZW5hYmxlIGFmdGVyIGNpcmN1bGFyIGRlcGVuZGVuY3kgZml4XG4gICAgb3JjaGVzdHJhdG9yOiBudWxsLCAvLyBUT0RPOiBSZS1lbmFibGUgYWZ0ZXIgY2lyY3VsYXIgZGVwZW5kZW5jeSBmaXhcbiAgICBzdGF0dXM6IHtcbiAgICAgIGlzQWN0aXZlOiB0cnVlLFxuICAgICAgd2FybmluZzogJ1BhcnRpYWwgZnVuY3Rpb25hbGl0eSBkdWUgdG8gZGVwZW5kZW5jeSBmaXhlcycsXG4gICAgfSxcbiAgfTtcbn1cblxuLyoqXG4gKiBHZXQgQUkgc3lzdGVtIHN0YXR1c1xuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QUlTeXN0ZW1TdGF0dXMoKSB7XG4gIHJldHVybiB7XG4gICAgdGVycnk6IHsgaXNBY3RpdmU6IHRydWUsIHdhcm5pbmc6ICdCYXNpYyBmdW5jdGlvbmFsaXR5IG9ubHknIH0sXG4gICAgdmFsaWRhdG9yOiB7XG4gICAgICBpc0FjdGl2ZTogZmFsc2UsXG4gICAgICBlcnJvcjogJ0Rpc2FibGVkIGR1ZSB0byBjaXJjdWxhciBkZXBlbmRlbmN5JyxcbiAgICB9LFxuICAgIGFuYWx5emVyOiB7IGlzQWN0aXZlOiBmYWxzZSwgZXJyb3I6ICdEaXNhYmxlZCBkdWUgdG8gY2lyY3VsYXIgZGVwZW5kZW5jeScgfSxcbiAgICBvcmNoZXN0cmF0b3I6IHtcbiAgICAgIGlzQWN0aXZlOiBmYWxzZSxcbiAgICAgIGVycm9yOiAnRGlzYWJsZWQgZHVlIHRvIGNpcmN1bGFyIGRlcGVuZGVuY3knLFxuICAgIH0sXG4gICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gIH07XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFlWTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBZlo7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxTQUFTRSx3QkFBd0IsUUFBUSxrQkFBa0I7QUFDM0QsU0FBU0MscUJBQXFCLFFBQVEseUJBQXlCOztBQUUvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBTUE7QUFDQSxTQUFTQyxZQUFZLFFBQVEsaUJBQWlCOztBQUU5QztBQUNBO0FBQ0E7QUFDQSxPQUFPLFNBQVNDLGtCQUFrQkEsQ0FBQ0MsTUFJbEMsRUFBRTtFQUFBO0VBQUFOLGNBQUEsR0FBQU8sQ0FBQTtFQUFBUCxjQUFBLEdBQUFRLENBQUE7RUFDREMsT0FBTyxDQUFDQyxHQUFHLENBQUMsOEJBQThCLENBQUM7RUFBQztFQUFBVixjQUFBLEdBQUFRLENBQUE7RUFDNUNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDBCQUEwQixFQUFFSixNQUFNLENBQUM7RUFBQztFQUFBTixjQUFBLEdBQUFRLENBQUE7RUFDaERDLE9BQU8sQ0FBQ0MsR0FBRyxDQUNULG9FQUNGLENBQUM7RUFBQztFQUFBVixjQUFBLEdBQUFRLENBQUE7RUFFRkMsT0FBTyxDQUFDQyxHQUFHLENBQUMsaURBQWlELENBQUM7RUFBQztFQUFBVixjQUFBLEdBQUFRLENBQUE7RUFDL0RDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDRDQUE0QyxDQUFDO0VBQUM7RUFBQVYsY0FBQSxHQUFBUSxDQUFBO0VBQzFEQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyw4Q0FBOEMsQ0FBQztFQUFDO0VBQUFWLGNBQUEsR0FBQVEsQ0FBQTtFQUM1REMsT0FBTyxDQUFDQyxHQUFHLENBQUMsNENBQTRDLENBQUM7RUFBQztFQUFBVixjQUFBLEdBQUFRLENBQUE7RUFDMURDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLCtDQUErQyxDQUFDO0VBQUM7RUFBQVYsY0FBQSxHQUFBUSxDQUFBO0VBRTdELE9BQU87SUFDTEcsS0FBSyxFQUFFLElBQUk7SUFBRTtJQUNiQyxTQUFTLEVBQUUsSUFBSTtJQUFFO0lBQ2pCQyxRQUFRLEVBQUUsSUFBSTtJQUFFO0lBQ2hCQyxZQUFZLEVBQUUsSUFBSTtJQUFFO0lBQ3BCQyxNQUFNLEVBQUU7TUFDTkMsUUFBUSxFQUFFLElBQUk7TUFDZEMsT0FBTyxFQUFFO0lBQ1g7RUFDRixDQUFDO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTyxTQUFTQyxpQkFBaUJBLENBQUEsRUFBRztFQUFBO0VBQUFsQixjQUFBLEdBQUFPLENBQUE7RUFBQVAsY0FBQSxHQUFBUSxDQUFBO0VBQ2xDLE9BQU87SUFDTEcsS0FBSyxFQUFFO01BQUVLLFFBQVEsRUFBRSxJQUFJO01BQUVDLE9BQU8sRUFBRTtJQUEyQixDQUFDO0lBQzlETCxTQUFTLEVBQUU7TUFDVEksUUFBUSxFQUFFLEtBQUs7TUFDZkcsS0FBSyxFQUFFO0lBQ1QsQ0FBQztJQUNETixRQUFRLEVBQUU7TUFBRUcsUUFBUSxFQUFFLEtBQUs7TUFBRUcsS0FBSyxFQUFFO0lBQXNDLENBQUM7SUFDM0VMLFlBQVksRUFBRTtNQUNaRSxRQUFRLEVBQUUsS0FBSztNQUNmRyxLQUFLLEVBQUU7SUFDVCxDQUFDO0lBQ0RDLFNBQVMsRUFBRSxJQUFJQyxJQUFJLENBQUMsQ0FBQyxDQUFDQyxXQUFXLENBQUM7RUFDcEMsQ0FBQztBQUNIIiwiaWdub3JlTGlzdCI6W119