8f7a0798bb149a5f6a947b33ee6acf30
/* istanbul ignore next */
function cov_wg1f8hr3s() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/partnerships/smartMixingOrchestrator.ts";
  var hash = "7c78196e1748d1b95f8a501a181956f2f7a14b96";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/partnerships/smartMixingOrchestrator.ts",
    statementMap: {
      "0": {
        start: {
          line: 51,
          column: 63
        },
        end: {
          line: 58,
          column: 1
        }
      },
      "1": {
        start: {
          line: 67,
          column: 24
        },
        end: {
          line: 72,
          column: 3
        }
      },
      "2": {
        start: {
          line: 73,
          column: 31
        },
        end: {
          line: 73,
          column: 36
        }
      },
      "3": {
        start: {
          line: 74,
          column: 46
        },
        end: {
          line: 74,
          column: 50
        }
      },
      "4": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 25
        }
      },
      "5": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 54
        }
      },
      "6": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "7": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 89,
          column: 66
        }
      },
      "8": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "9": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "10": {
        start: {
          line: 94,
          column: 6
        },
        end: {
          line: 94,
          column: 63
        }
      },
      "11": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "12": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 26
        }
      },
      "13": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 99,
          column: 60
        }
      },
      "14": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 62
        }
      },
      "15": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 103,
          column: 6
        }
      },
      "16": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 106,
          column: 6
        }
      },
      "17": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "18": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 115,
          column: 8
        }
      },
      "19": {
        start: {
          line: 112,
          column: 10
        },
        end: {
          line: 112,
          column: 36
        }
      },
      "20": {
        start: {
          line: 116,
          column: 11
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "21": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 118,
          column: 36
        }
      },
      "22": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 30
        }
      },
      "23": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 131,
          column: 5
        }
      },
      "24": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "25": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 133,
          column: 27
        }
      },
      "26": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "27": {
        start: {
          line: 135,
          column: 6
        },
        end: {
          line: 135,
          column: 37
        }
      },
      "28": {
        start: {
          line: 136,
          column: 6
        },
        end: {
          line: 136,
          column: 29
        }
      },
      "29": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 56
        }
      },
      "30": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 146,
          column: 63
        }
      },
      "31": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 147,
          column: 43
        }
      },
      "32": {
        start: {
          line: 155,
          column: 32
        },
        end: {
          line: 155,
          column: 33
        }
      },
      "33": {
        start: {
          line: 156,
          column: 30
        },
        end: {
          line: 156,
          column: 31
        }
      },
      "34": {
        start: {
          line: 157,
          column: 32
        },
        end: {
          line: 157,
          column: 33
        }
      },
      "35": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 177,
          column: 6
        }
      },
      "36": {
        start: {
          line: 184,
          column: 24
        },
        end: {
          line: 184,
          column: 50
        }
      },
      "37": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 185,
          column: 51
        }
      },
      "38": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "39": {
        start: {
          line: 189,
          column: 6
        },
        end: {
          line: 189,
          column: 18
        }
      },
      "40": {
        start: {
          line: 190,
          column: 6
        },
        end: {
          line: 190,
          column: 19
        }
      },
      "41": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 193,
          column: 77
        }
      },
      "42": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 203,
          column: 6
        }
      },
      "43": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 204,
          column: 14
        }
      },
      "44": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "45": {
        start: {
          line: 217,
          column: 6
        },
        end: {
          line: 217,
          column: 13
        }
      },
      "46": {
        start: {
          line: 220,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "47": {
        start: {
          line: 221,
          column: 6
        },
        end: {
          line: 221,
          column: 38
        }
      },
      "48": {
        start: {
          line: 223,
          column: 6
        },
        end: {
          line: 223,
          column: 59
        }
      },
      "49": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 228,
          column: 35
        }
      },
      "50": {
        start: {
          line: 231,
          column: 28
        },
        end: {
          line: 231,
          column: 56
        }
      },
      "51": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 241,
          column: 5
        }
      },
      "52": {
        start: {
          line: 235,
          column: 6
        },
        end: {
          line: 235,
          column: 39
        }
      },
      "53": {
        start: {
          line: 236,
          column: 6
        },
        end: {
          line: 240,
          column: 8
        }
      },
      "54": {
        start: {
          line: 245,
          column: 6
        },
        end: {
          line: 245,
          column: 64
        }
      },
      "55": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "56": {
        start: {
          line: 248,
          column: 6
        },
        end: {
          line: 255,
          column: 8
        }
      },
      "57": {
        start: {
          line: 260,
          column: 6
        },
        end: {
          line: 260,
          column: 66
        }
      },
      "58": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 269,
          column: 5
        }
      },
      "59": {
        start: {
          line: 263,
          column: 6
        },
        end: {
          line: 263,
          column: 39
        }
      },
      "60": {
        start: {
          line: 264,
          column: 6
        },
        end: {
          line: 268,
          column: 8
        }
      },
      "61": {
        start: {
          line: 272,
          column: 21
        },
        end: {
          line: 275,
          column: 5
        }
      },
      "62": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 306,
          column: 5
        }
      },
      "63": {
        start: {
          line: 283,
          column: 6
        },
        end: {
          line: 285,
          column: 8
        }
      },
      "64": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 311,
          column: 6
        }
      },
      "65": {
        start: {
          line: 317,
          column: 4
        },
        end: {
          line: 317,
          column: 63
        }
      },
      "66": {
        start: {
          line: 318,
          column: 4
        },
        end: {
          line: 318,
          column: 39
        }
      },
      "67": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 319,
          column: 46
        }
      },
      "68": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 323,
          column: 6
        }
      },
      "69": {
        start: {
          line: 324,
          column: 4
        },
        end: {
          line: 326,
          column: 5
        }
      },
      "70": {
        start: {
          line: 325,
          column: 6
        },
        end: {
          line: 325,
          column: 80
        }
      },
      "71": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 333,
          column: 6
        }
      },
      "72": {
        start: {
          line: 337,
          column: 4
        },
        end: {
          line: 339,
          column: 5
        }
      },
      "73": {
        start: {
          line: 338,
          column: 6
        },
        end: {
          line: 338,
          column: 18
        }
      },
      "74": {
        start: {
          line: 341,
          column: 32
        },
        end: {
          line: 343,
          column: 12
        }
      },
      "75": {
        start: {
          line: 342,
          column: 16
        },
        end: {
          line: 342,
          column: 39
        }
      },
      "76": {
        start: {
          line: 344,
          column: 25
        },
        end: {
          line: 344,
          column: 69
        }
      },
      "77": {
        start: {
          line: 346,
          column: 4
        },
        end: {
          line: 346,
          column: 62
        }
      },
      "78": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 351,
          column: 26
        }
      },
      "79": {
        start: {
          line: 352,
          column: 26
        },
        end: {
          line: 352,
          column: 42
        }
      },
      "80": {
        start: {
          line: 354,
          column: 4
        },
        end: {
          line: 380,
          column: 5
        }
      },
      "81": {
        start: {
          line: 355,
          column: 24
        },
        end: {
          line: 355,
          column: 37
        }
      },
      "82": {
        start: {
          line: 356,
          column: 6
        },
        end: {
          line: 356,
          column: 43
        }
      },
      "83": {
        start: {
          line: 359,
          column: 6
        },
        end: {
          line: 361,
          column: 7
        }
      },
      "84": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 53
        }
      },
      "85": {
        start: {
          line: 363,
          column: 25
        },
        end: {
          line: 363,
          column: 60
        }
      },
      "86": {
        start: {
          line: 365,
          column: 6
        },
        end: {
          line: 375,
          column: 21
        }
      },
      "87": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 34
        }
      },
      "88": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 374,
          column: 10
        }
      },
      "89": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 38
        }
      },
      "90": {
        start: {
          line: 377,
          column: 6
        },
        end: {
          line: 379,
          column: 8
        }
      },
      "91": {
        start: {
          line: 390,
          column: 4
        },
        end: {
          line: 390,
          column: 68
        }
      },
      "92": {
        start: {
          line: 392,
          column: 4
        },
        end: {
          line: 439,
          column: 5
        }
      },
      "93": {
        start: {
          line: 393,
          column: 30
        },
        end: {
          line: 393,
          column: 58
        }
      },
      "94": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 395,
          column: 68
        }
      },
      "95": {
        start: {
          line: 397,
          column: 6
        },
        end: {
          line: 403,
          column: 7
        }
      },
      "96": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 402,
          column: 10
        }
      },
      "97": {
        start: {
          line: 406,
          column: 6
        },
        end: {
          line: 408,
          column: 7
        }
      },
      "98": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 407,
          column: 55
        }
      },
      "99": {
        start: {
          line: 410,
          column: 23
        },
        end: {
          line: 413,
          column: 7
        }
      },
      "100": {
        start: {
          line: 416,
          column: 6
        },
        end: {
          line: 418,
          column: 8
        }
      },
      "101": {
        start: {
          line: 422,
          column: 6
        },
        end: {
          line: 422,
          column: 65
        }
      },
      "102": {
        start: {
          line: 423,
          column: 6
        },
        end: {
          line: 423,
          column: 41
        }
      },
      "103": {
        start: {
          line: 425,
          column: 6
        },
        end: {
          line: 430,
          column: 8
        }
      },
      "104": {
        start: {
          line: 432,
          column: 6
        },
        end: {
          line: 432,
          column: 59
        }
      },
      "105": {
        start: {
          line: 433,
          column: 6
        },
        end: {
          line: 433,
          column: 39
        }
      },
      "106": {
        start: {
          line: 434,
          column: 6
        },
        end: {
          line: 438,
          column: 8
        }
      },
      "107": {
        start: {
          line: 444,
          column: 39
        },
        end: {
          line: 444,
          column: 68
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 76,
            column: 3
          }
        },
        loc: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 82,
            column: 3
          }
        },
        line: 79
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 87,
            column: 2
          },
          end: {
            line: 87,
            column: 3
          }
        },
        loc: {
          start: {
            line: 87,
            column: 23
          },
          end: {
            line: 123,
            column: 3
          }
        },
        line: 87
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        loc: {
          start: {
            line: 111,
            column: 14
          },
          end: {
            line: 113,
            column: 9
          }
        },
        line: 111
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 128,
            column: 2
          },
          end: {
            line: 128,
            column: 3
          }
        },
        loc: {
          start: {
            line: 128,
            column: 22
          },
          end: {
            line: 140,
            column: 3
          }
        },
        line: 128
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 145,
            column: 2
          },
          end: {
            line: 145,
            column: 3
          }
        },
        loc: {
          start: {
            line: 145,
            column: 68
          },
          end: {
            line: 148,
            column: 3
          }
        },
        line: 145
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 153,
            column: 2
          },
          end: {
            line: 153,
            column: 3
          }
        },
        loc: {
          start: {
            line: 153,
            column: 21
          },
          end: {
            line: 178,
            column: 3
          }
        },
        line: 153
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 183,
            column: 2
          },
          end: {
            line: 183,
            column: 3
          }
        },
        loc: {
          start: {
            line: 183,
            column: 67
          },
          end: {
            line: 194,
            column: 3
          }
        },
        line: 183
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 199,
            column: 2
          },
          end: {
            line: 199,
            column: 3
          }
        },
        loc: {
          start: {
            line: 199,
            column: 62
          },
          end: {
            line: 211,
            column: 3
          }
        },
        line: 199
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 215,
            column: 2
          },
          end: {
            line: 215,
            column: 3
          }
        },
        loc: {
          start: {
            line: 215,
            column: 52
          },
          end: {
            line: 225,
            column: 3
          }
        },
        line: 215
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 227,
            column: 2
          },
          end: {
            line: 227,
            column: 3
          }
        },
        loc: {
          start: {
            line: 227,
            column: 73
          },
          end: {
            line: 334,
            column: 3
          }
        },
        line: 227
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 336,
            column: 2
          },
          end: {
            line: 336,
            column: 3
          }
        },
        loc: {
          start: {
            line: 336,
            column: 77
          },
          end: {
            line: 347,
            column: 3
          }
        },
        line: 336
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 342,
            column: 6
          },
          end: {
            line: 342,
            column: 7
          }
        },
        loc: {
          start: {
            line: 342,
            column: 16
          },
          end: {
            line: 342,
            column: 39
          }
        },
        line: 342
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 349,
            column: 2
          },
          end: {
            line: 349,
            column: 3
          }
        },
        loc: {
          start: {
            line: 349,
            column: 41
          },
          end: {
            line: 381,
            column: 3
          }
        },
        line: 349
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 365,
            column: 17
          },
          end: {
            line: 365,
            column: 18
          }
        },
        loc: {
          start: {
            line: 365,
            column: 23
          },
          end: {
            line: 375,
            column: 7
          }
        },
        line: 365
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 370,
            column: 10
          },
          end: {
            line: 370,
            column: 11
          }
        },
        loc: {
          start: {
            line: 370,
            column: 16
          },
          end: {
            line: 372,
            column: 11
          }
        },
        line: 370
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 386,
            column: 2
          },
          end: {
            line: 386,
            column: 3
          }
        },
        loc: {
          start: {
            line: 389,
            column: 40
          },
          end: {
            line: 440,
            column: 3
          }
        },
        line: 389
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 77,
            column: 32
          },
          end: {
            line: 77,
            column: 60
          }
        }],
        line: 77
      },
      "1": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 78,
            column: 18
          },
          end: {
            line: 78,
            column: 39
          }
        }],
        line: 78
      },
      "2": {
        loc: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "3": {
        loc: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "4": {
        loc: {
          start: {
            line: 102,
            column: 36
          },
          end: {
            line: 102,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 71
          },
          end: {
            line: 102,
            column: 80
          }
        }, {
          start: {
            line: 102,
            column: 83
          },
          end: {
            line: 102,
            column: 93
          }
        }],
        line: 102
      },
      "5": {
        loc: {
          start: {
            line: 105,
            column: 42
          },
          end: {
            line: 105,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 105,
            column: 88
          },
          end: {
            line: 105,
            column: 97
          }
        }, {
          start: {
            line: 105,
            column: 100
          },
          end: {
            line: 105,
            column: 110
          }
        }],
        line: 105
      },
      "6": {
        loc: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: 116,
            column: 11
          },
          end: {
            line: 119,
            column: 5
          }
        }],
        line: 108
      },
      "7": {
        loc: {
          start: {
            line: 116,
            column: 11
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 11
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "8": {
        loc: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "9": {
        loc: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "10": {
        loc: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "11": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 188,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 188,
            column: 50
          }
        }, {
          start: {
            line: 188,
            column: 54
          },
          end: {
            line: 188,
            column: 68
          }
        }],
        line: 188
      },
      "12": {
        loc: {
          start: {
            line: 199,
            column: 31
          },
          end: {
            line: 199,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 199,
            column: 47
          },
          end: {
            line: 199,
            column: 48
          }
        }],
        line: 199
      },
      "13": {
        loc: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "14": {
        loc: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 216,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 216,
            column: 23
          }
        }, {
          start: {
            line: 216,
            column: 27
          },
          end: {
            line: 216,
            column: 57
          }
        }],
        line: 216
      },
      "15": {
        loc: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "16": {
        loc: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "17": {
        loc: {
          start: {
            line: 251,
            column: 28
          },
          end: {
            line: 253,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 252,
            column: 71
          }
        }, {
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 253,
            column: 21
          }
        }],
        line: 251
      },
      "18": {
        loc: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "19": {
        loc: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 306,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 306,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "20": {
        loc: {
          start: {
            line: 279,
            column: 6
          },
          end: {
            line: 280,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 6
          },
          end: {
            line: 279,
            column: 49
          }
        }, {
          start: {
            line: 280,
            column: 6
          },
          end: {
            line: 280,
            column: 31
          }
        }],
        line: 279
      },
      "21": {
        loc: {
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 324
      },
      "22": {
        loc: {
          start: {
            line: 337,
            column: 4
          },
          end: {
            line: 339,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 4
          },
          end: {
            line: 339,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "23": {
        loc: {
          start: {
            line: 359,
            column: 6
          },
          end: {
            line: 361,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 6
          },
          end: {
            line: 361,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      },
      "24": {
        loc: {
          start: {
            line: 397,
            column: 6
          },
          end: {
            line: 403,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 397,
            column: 6
          },
          end: {
            line: 403,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 397
      },
      "25": {
        loc: {
          start: {
            line: 406,
            column: 6
          },
          end: {
            line: 408,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 6
          },
          end: {
            line: 408,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7c78196e1748d1b95f8a501a181956f2f7a14b96"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_wg1f8hr3s = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wg1f8hr3s();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Smart Mixing Orchestrator
 * Coordinates partner content integration with feed and Terry commentary
 */

// TODO: Fix circular dependency with feedStore
// import { type FeedItem, useFeedStore } from '@/lib/stores/feedStore';

// Temporary type to avoid circular dependency

import { ContentMixer, DEFAULT_MIXING_CONFIG } from "./contentMixer";
// TODO: Fix circular dependency with terryCommentarySystem
// import { terryCommentarySystem } from '@/lib/ai/terryCommentarySystem';

export var DEFAULT_ORCHESTRATION_CONFIG =
/* istanbul ignore next */
(cov_wg1f8hr3s().s[0]++, {
  enableSmartMixing: true,
  mixingSchedule: "continuous",
  // Check continuously for quiet periods
  scheduledIntervals: [20, 40],
  // Check at 20 and 40 minutes past hour if scheduled
  quietPeriodDetection: true,
  terryCommentaryOnPartnerContent: true,
  maxPartnerContentRatio: 0.25 // Max 25% of feed content can be partner content
});

/**
 * Smart Mixing Orchestrator
 * Intelligently coordinates when and how to mix partner content
 */
export
/* istanbul ignore next */
var SmartMixingOrchestrator = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  SmartMixingOrchestrator() {
    /* istanbul ignore next */
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_wg1f8hr3s().b[0][0]++, DEFAULT_ORCHESTRATION_CONFIG);
    /* istanbul ignore next */
    var mixerConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_wg1f8hr3s().b[1][0]++, DEFAULT_MIXING_CONFIG);
    /* istanbul ignore next */
    _classCallCheck(this, SmartMixingOrchestrator);
    _defineProperty(this, "mixingStats", (cov_wg1f8hr3s().s[1]++, {
      totalChecks: 0,
      successfulMixes: 0,
      rejectedMixes: 0,
      lastMixTime: undefined
    }));
    /* istanbul ignore next */
    _defineProperty(this, "isRunning", (cov_wg1f8hr3s().s[2]++, false));
    /* istanbul ignore next */
    _defineProperty(this, "intervalId", (cov_wg1f8hr3s().s[3]++, null));
    /* istanbul ignore next */
    cov_wg1f8hr3s().f[0]++;
    cov_wg1f8hr3s().s[4]++;
    this.config = config;
    /* istanbul ignore next */
    cov_wg1f8hr3s().s[5]++;
    this.contentMixer = new ContentMixer(mixerConfig);
  }

  /**
   * Start the smart mixing orchestrator
   */
  return _createClass(SmartMixingOrchestrator, [{
    key: "start",
    value: function start() {
      /* istanbul ignore next */
      var _this = this;
      cov_wg1f8hr3s().f[1]++;
      cov_wg1f8hr3s().s[6]++;
      if (this.isRunning) {
        /* istanbul ignore next */
        cov_wg1f8hr3s().b[2][0]++;
        cov_wg1f8hr3s().s[7]++;
        console.log("⚠️ Smart mixing orchestrator already running");
        /* istanbul ignore next */
        cov_wg1f8hr3s().s[8]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_wg1f8hr3s().b[2][1]++;
      }
      cov_wg1f8hr3s().s[9]++;
      if (!this.config.enableSmartMixing) {
        /* istanbul ignore next */
        cov_wg1f8hr3s().b[3][0]++;
        cov_wg1f8hr3s().s[10]++;
        console.log("⏸️ Smart mixing disabled in configuration");
        /* istanbul ignore next */
        cov_wg1f8hr3s().s[11]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_wg1f8hr3s().b[3][1]++;
      }
      cov_wg1f8hr3s().s[12]++;
      this.isRunning = true;
      /* istanbul ignore next */
      cov_wg1f8hr3s().s[13]++;
      console.log("🎯 Starting Smart Mixing Orchestrator...");
      /* istanbul ignore next */
      cov_wg1f8hr3s().s[14]++;
      console.log(
      /* istanbul ignore next */
      "   Schedule: ".concat(this.config.mixingSchedule));
      /* istanbul ignore next */
      cov_wg1f8hr3s().s[15]++;
      console.log(
      /* istanbul ignore next */
      "   Quiet period detection: ".concat(this.config.quietPeriodDetection ?
      /* istanbul ignore next */
      (cov_wg1f8hr3s().b[4][0]++, "enabled") :
      /* istanbul ignore next */
      (cov_wg1f8hr3s().b[4][1]++, "disabled")));
      /* istanbul ignore next */
      cov_wg1f8hr3s().s[16]++;
      console.log(
      /* istanbul ignore next */
      "   Terry commentary on partners: ".concat(this.config.terryCommentaryOnPartnerContent ?
      /* istanbul ignore next */
      (cov_wg1f8hr3s().b[5][0]++, "enabled") :
      /* istanbul ignore next */
      (cov_wg1f8hr3s().b[5][1]++, "disabled")));
      /* istanbul ignore next */
      cov_wg1f8hr3s().s[17]++;
      if (this.config.mixingSchedule === "continuous") {
        /* istanbul ignore next */
        cov_wg1f8hr3s().b[6][0]++;
        cov_wg1f8hr3s().s[18]++;
        // Check every 5 minutes for continuous mixing
        this.intervalId = setInterval(function () {
          /* istanbul ignore next */
          cov_wg1f8hr3s().f[2]++;
          cov_wg1f8hr3s().s[19]++;
          _this.checkAndMixContent();
        }, 5 * 60 * 1000); // 5 minutes
      } else {
        /* istanbul ignore next */
        cov_wg1f8hr3s().b[6][1]++;
        cov_wg1f8hr3s().s[20]++;
        if (this.config.mixingSchedule === "scheduled") {
          /* istanbul ignore next */
          cov_wg1f8hr3s().b[7][0]++;
          cov_wg1f8hr3s().s[21]++;
          // Check at specific intervals
          this.scheduleIntervalChecks();
        } else
        /* istanbul ignore next */
        {
          cov_wg1f8hr3s().b[7][1]++;
        }
      }

      // Run initial check
      /* istanbul ignore next */
      cov_wg1f8hr3s().s[22]++;
      this.checkAndMixContent();
    }

    /**
     * Stop the smart mixing orchestrator
     */
  }, {
    key: "stop",
    value: function stop() {
      /* istanbul ignore next */
      cov_wg1f8hr3s().f[3]++;
      cov_wg1f8hr3s().s[23]++;
      if (!this.isRunning) {
        /* istanbul ignore next */
        cov_wg1f8hr3s().b[8][0]++;
        cov_wg1f8hr3s().s[24]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_wg1f8hr3s().b[8][1]++;
      }
      cov_wg1f8hr3s().s[25]++;
      this.isRunning = false;
      /* istanbul ignore next */
      cov_wg1f8hr3s().s[26]++;
      if (this.intervalId) {
        /* istanbul ignore next */
        cov_wg1f8hr3s().b[9][0]++;
        cov_wg1f8hr3s().s[27]++;
        clearInterval(this.intervalId);
        /* istanbul ignore next */
        cov_wg1f8hr3s().s[28]++;
        this.intervalId = null;
      } else
      /* istanbul ignore next */
      {
        cov_wg1f8hr3s().b[9][1]++;
      }
      cov_wg1f8hr3s().s[29]++;
      console.log("🛑 Smart Mixing Orchestrator stopped");
    }

    /**
     * Manually trigger content mixing check
     */
  }, {
    key: "manualMixCheck",
    value: (function () {
      var _manualMixCheck = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee()
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              cov_wg1f8hr3s().f[4]++;
              cov_wg1f8hr3s().s[30]++;
              console.log("🔄 Manual content mixing check triggered...");
              cov_wg1f8hr3s().s[31]++;
              _context.n = 1;
              return this.performMixingCheck();
            case 1:
              return _context.a(2, _context.v);
          }
        }, _callee, this);
      }));
      function manualMixCheck() {
        return _manualMixCheck.apply(this, arguments);
      }
      return manualMixCheck;
    }()
    /**
     * Get current mixing statistics and status
     */
    )
  }, {
    key: "getStatus",
    value: function getStatus() {
      /* istanbul ignore next */
      cov_wg1f8hr3s().f[5]++;
      // TODO: Re-enable feed store access once circular dependency is fixed
      var partnerContentCount =
      /* istanbul ignore next */
      (cov_wg1f8hr3s().s[32]++, 0);
      var totalContentCount =
      /* istanbul ignore next */
      (cov_wg1f8hr3s().s[33]++, 0);
      var partnerContentRatio =
      /* istanbul ignore next */
      (cov_wg1f8hr3s().s[34]++, 0);
      // const feedStore = useFeedStore.getState();
      // const partnerContentCount = feedStore.items.filter(
      //   (item) => item.type === 'partner'
      // ).length;
      // const totalContentCount = feedStore.items.length;
      // const partnerContentRatio =
      //   totalContentCount > 0 ? partnerContentCount / totalContentCount : 0;
      /* istanbul ignore next */
      cov_wg1f8hr3s().s[35]++;
      return {
        isRunning: this.isRunning,
        config: this.config,
        stats: this.mixingStats,
        currentFeed: {
          totalItems: totalContentCount,
          partnerItems: partnerContentCount,
          partnerRatio: Math.round(partnerContentRatio * 100),
          maxPartnerRatio: Math.round(this.config.maxPartnerContentRatio * 100)
        },
        contentMixerAnalytics: this.contentMixer.getAnalytics()
      };
    }

    /**
     * Update orchestrator configuration
     */
  }, {
    key: "updateConfig",
    value: function updateConfig(newConfig) {
      /* istanbul ignore next */
      cov_wg1f8hr3s().f[6]++;
      var oldSchedule =
      /* istanbul ignore next */
      (cov_wg1f8hr3s().s[36]++, this.config.mixingSchedule);
      /* istanbul ignore next */
      cov_wg1f8hr3s().s[37]++;
      this.config =
      /* istanbul ignore next */
      _objectSpread(_objectSpread({}, this.config), newConfig);

      // Restart if schedule changed
      /* istanbul ignore next */
      cov_wg1f8hr3s().s[38]++;
      if (
      /* istanbul ignore next */
      (cov_wg1f8hr3s().b[11][0]++, oldSchedule !== this.config.mixingSchedule) &&
      /* istanbul ignore next */
      (cov_wg1f8hr3s().b[11][1]++, this.isRunning)) {
        /* istanbul ignore next */
        cov_wg1f8hr3s().b[10][0]++;
        cov_wg1f8hr3s().s[39]++;
        this.stop();
        /* istanbul ignore next */
        cov_wg1f8hr3s().s[40]++;
        this.start();
      } else
      /* istanbul ignore next */
      {
        cov_wg1f8hr3s().b[10][1]++;
      }
      cov_wg1f8hr3s().s[41]++;
      console.log("⚙️ Updated smart mixing orchestrator config:", this.config);
    }

    /**
     * Get recent feed activity for analysis
     */
  }, {
    key: "getRecentFeedActivity",
    value: function getRecentFeedActivity() {
      /* istanbul ignore next */
      var hours = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_wg1f8hr3s().b[12][0]++, 2);
      /* istanbul ignore next */
      cov_wg1f8hr3s().f[7]++;
      cov_wg1f8hr3s().s[42]++;
      // TODO: Re-enable feed store access once circular dependency is fixed
      console.log("Recent feed activity disabled temporarily due to circular dependency");
      /* istanbul ignore next */
      cov_wg1f8hr3s().s[43]++;
      return [];
      // const feedStore = useFeedStore.getState();
      // const cutoffTime = new Date(Date.now() - hours * 60 * 60 * 1000);
      //
      // return feedStore.items.filter(
      //   (item) => new Date(item.timestamp) >= cutoffTime
      // );
    }

    // Private methods
  }, {
    key: "checkAndMixContent",
    value: function () {
      var _checkAndMixContent = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2()
      /* istanbul ignore next */
      {
        var _t;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              cov_wg1f8hr3s().f[8]++;
              cov_wg1f8hr3s().s[44]++;
              if (!(
              /* istanbul ignore next */
              (cov_wg1f8hr3s().b[14][0]++, !this.isRunning) ||
              /* istanbul ignore next */
              (cov_wg1f8hr3s().b[14][1]++, !this.config.enableSmartMixing))) {
                _context2.n = 1;
                break;
              }
              cov_wg1f8hr3s().b[13][0]++;
              cov_wg1f8hr3s().s[45]++;
              return _context2.a(2);
            case 1:
              cov_wg1f8hr3s().b[13][1]++;
            case 2:
              cov_wg1f8hr3s().s[46]++;
              _context2.p = 3;
              cov_wg1f8hr3s().s[47]++;
              _context2.n = 4;
              return this.performMixingCheck();
            case 4:
              _context2.n = 6;
              break;
            case 5:
              _context2.p = 5;
              _t = _context2.v;
              cov_wg1f8hr3s().s[48]++;
              console.error("Error in smart mixing check:",
              /* istanbul ignore next */
              _t);
            case 6:
              return _context2.a(2);
          }
        }, _callee2, this, [[3, 5]]);
      }));
      function checkAndMixContent() {
        return _checkAndMixContent.apply(this, arguments);
      }
      return checkAndMixContent;
    }()
  }, {
    key: "performMixingCheck",
    value: function () {
      var _performMixingCheck = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3()
      /* istanbul ignore next */
      {
        var recentFeedItems, mixingResult, partnerContent, feedItem;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              cov_wg1f8hr3s().f[9]++;
              cov_wg1f8hr3s().s[49]++;
              this.mixingStats.totalChecks++;

              // Get recent feed activity
              recentFeedItems = (cov_wg1f8hr3s().s[50]++, this.getRecentFeedActivity()); // Check current partner content ratio
              cov_wg1f8hr3s().s[51]++;
              if (this.isWithinPartnerContentLimits(recentFeedItems)) {
                _context3.n = 1;
                break;
              }
              cov_wg1f8hr3s().b[15][0]++;
              cov_wg1f8hr3s().s[52]++;
              this.mixingStats.rejectedMixes++;
              cov_wg1f8hr3s().s[53]++;
              return _context3.a(2, {
                action: "rejected",
                reason: "Partner content ratio limit exceeded",
                stats:
                /* istanbul ignore next */
                _objectSpread({}, this.mixingStats)
              });
            case 1:
              cov_wg1f8hr3s().b[15][1]++;
            case 2:
              // Check if we should mix content
              mixingResult = (cov_wg1f8hr3s().s[54]++, this.contentMixer.shouldMixPartnerContent(recentFeedItems));
              cov_wg1f8hr3s().s[55]++;
              if (mixingResult.shouldMixContent) {
                _context3.n = 3;
                break;
              }
              cov_wg1f8hr3s().b[16][0]++;
              cov_wg1f8hr3s().s[56]++;
              return _context3.a(2, {
                action: "none",
                reason: mixingResult.reason,
                nextScheduledCheck: mixingResult.nextCheckIn ?
                /* istanbul ignore next */
                (cov_wg1f8hr3s().b[17][0]++, new Date(Date.now() + mixingResult.nextCheckIn * 60 * 1000)) :
                /* istanbul ignore next */
                (cov_wg1f8hr3s().b[17][1]++, undefined),
                stats:
                /* istanbul ignore next */
                _objectSpread({}, this.mixingStats)
              });
            case 3:
              cov_wg1f8hr3s().b[16][1]++;
            case 4:
              cov_wg1f8hr3s().s[57]++;
              _context3.n = 5;
              return this.contentMixer.getSuggestedContent(recentFeedItems);
            case 5:
              partnerContent = _context3.v;
              cov_wg1f8hr3s().s[58]++;
              if (partnerContent) {
                _context3.n = 6;
                break;
              }
              cov_wg1f8hr3s().b[18][0]++;
              cov_wg1f8hr3s().s[59]++;
              this.mixingStats.rejectedMixes++;
              cov_wg1f8hr3s().s[60]++;
              return _context3.a(2, {
                action: "rejected",
                reason: "No suitable partner content available",
                stats:
                /* istanbul ignore next */
                _objectSpread({}, this.mixingStats)
              });
            case 6:
              cov_wg1f8hr3s().b[18][1]++;
            case 7:
              // Convert to feed item
              feedItem = (cov_wg1f8hr3s().s[61]++, this.contentMixer.convertPartnerContentToFeedItem(partnerContent, this.config.terryCommentaryOnPartnerContent)); // Add Terry commentary if enabled and not already added
              cov_wg1f8hr3s().s[62]++;
              if (
              /* istanbul ignore next */
              (cov_wg1f8hr3s().b[20][0]++, this.config.terryCommentaryOnPartnerContent) &&
              /* istanbul ignore next */
              (cov_wg1f8hr3s().b[20][1]++, !feedItem.terryCommentary)) {
                /* istanbul ignore next */
                cov_wg1f8hr3s().b[19][0]++;
                cov_wg1f8hr3s().s[63]++;
                // TODO: Re-enable Terry commentary once circular dependency is fixed
                console.log("Terry commentary disabled temporarily due to circular dependency");
                // try {
                //   const terryResult =
                //     await terryCommentarySystem.generateCommentary(feedItem);
                //   if (terryResult) {
                //     feedItem.terryCommentary = terryResult.commentary;
                //     feedItem.metadata = {
                //       ...feedItem.metadata,
                //       terryVoiceMetrics: {
                //         consistency: terryResult.voiceConsistencyScore,
                //         humorLevel: terryResult.humorLevel,
                //         generationTime: terryResult.generationTimeMs,
                //       },
                //     };
                //   }
                // } catch (error) {
                //   console.log(
                //     'Failed to generate Terry commentary for partner content:',
                //     error
                //   );
                // }
              } else
              /* istanbul ignore next */
              {
                cov_wg1f8hr3s().b[19][1]++;
              }

              // TODO: Re-enable feed store updates once circular dependency is fixed
              cov_wg1f8hr3s().s[64]++;
              console.log("Feed store update disabled temporarily due to circular dependency");
              // // Add to feed store
              // const feedStore = useFeedStore.getState();
              // feedStore.addItem(feedItem);

              // Track the addition
              cov_wg1f8hr3s().s[65]++;
              this.contentMixer.trackPartnerContentAdded(partnerContent);
              cov_wg1f8hr3s().s[66]++;
              this.mixingStats.successfulMixes++;
              cov_wg1f8hr3s().s[67]++;
              this.mixingStats.lastMixTime = new Date();
              cov_wg1f8hr3s().s[68]++;
              console.log(
              /* istanbul ignore next */
              "\uD83C\uDFA8 Smart mixing: Added partner content from ".concat(partnerContent.source.name));
              cov_wg1f8hr3s().s[69]++;
              if (feedItem.terryCommentary) {
                /* istanbul ignore next */
                cov_wg1f8hr3s().b[21][0]++;
                cov_wg1f8hr3s().s[70]++;
                console.log(
                /* istanbul ignore next */
                "   \uD83C\uDFAD With Terry commentary: \"".concat(feedItem.terryCommentary, "\""));
              } else
              /* istanbul ignore next */
              {
                cov_wg1f8hr3s().b[21][1]++;
              }
              cov_wg1f8hr3s().s[71]++;
              return _context3.a(2, {
                action: "mixed",
                reason: "Successfully mixed partner content during quiet period",
                partnerContent: feedItem,
                stats:
                /* istanbul ignore next */
                _objectSpread({}, this.mixingStats)
              });
          }
        }, _callee3, this);
      }));
      function performMixingCheck() {
        return _performMixingCheck.apply(this, arguments);
      }
      return performMixingCheck;
    }()
  }, {
    key: "isWithinPartnerContentLimits",
    value: function isWithinPartnerContentLimits(recentFeedItems) {
      /* istanbul ignore next */
      cov_wg1f8hr3s().f[10]++;
      cov_wg1f8hr3s().s[72]++;
      if (recentFeedItems.length === 0) {
        /* istanbul ignore next */
        cov_wg1f8hr3s().b[22][0]++;
        cov_wg1f8hr3s().s[73]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_wg1f8hr3s().b[22][1]++;
      }
      var partnerContentCount =
      /* istanbul ignore next */
      (cov_wg1f8hr3s().s[74]++, recentFeedItems.filter(function (item) {
        /* istanbul ignore next */
        cov_wg1f8hr3s().f[11]++;
        cov_wg1f8hr3s().s[75]++;
        return item.type === "partner";
      }).length);
      var currentRatio =
      /* istanbul ignore next */
      (cov_wg1f8hr3s().s[76]++, partnerContentCount / recentFeedItems.length);
      /* istanbul ignore next */
      cov_wg1f8hr3s().s[77]++;
      return currentRatio <= this.config.maxPartnerContentRatio;
    }
  }, {
    key: "scheduleIntervalChecks",
    value: function scheduleIntervalChecks() {
      /* istanbul ignore next */
      var _this2 = this;
      cov_wg1f8hr3s().f[12]++;
      // Schedule checks at specific minutes past the hour
      var now =
      /* istanbul ignore next */
      (cov_wg1f8hr3s().s[78]++, new Date());
      var currentMinute =
      /* istanbul ignore next */
      (cov_wg1f8hr3s().s[79]++, now.getMinutes());
      /* istanbul ignore next */
      cov_wg1f8hr3s().s[80]++;
      var _iterator = _createForOfIteratorHelper(this.config.scheduledIntervals),
        _step;
      /* istanbul ignore next */
      try {
        for (
        /* istanbul ignore next */
        _iterator.s();
        /* istanbul ignore next */
        !(_step = _iterator.n()).done;) {
          /* istanbul ignore next */
          var interval = _step.value;
          var nextCheck =
          /* istanbul ignore next */
          (cov_wg1f8hr3s().s[81]++, new Date(now));
          /* istanbul ignore next */
          cov_wg1f8hr3s().s[82]++;
          nextCheck.setMinutes(interval, 0, 0); // Set to exact minute

          // If the time has already passed this hour, schedule for next hour
          /* istanbul ignore next */
          cov_wg1f8hr3s().s[83]++;
          if (currentMinute >= interval) {
            /* istanbul ignore next */
            cov_wg1f8hr3s().b[23][0]++;
            cov_wg1f8hr3s().s[84]++;
            nextCheck.setHours(nextCheck.getHours() + 1);
          } else
          /* istanbul ignore next */
          {
            cov_wg1f8hr3s().b[23][1]++;
          }
          var timeToNext =
          /* istanbul ignore next */
          (cov_wg1f8hr3s().s[85]++, nextCheck.getTime() - now.getTime());
          /* istanbul ignore next */
          cov_wg1f8hr3s().s[86]++;
          setTimeout(function () {
            /* istanbul ignore next */
            cov_wg1f8hr3s().f[13]++;
            cov_wg1f8hr3s().s[87]++;
            _this2.checkAndMixContent();

            // Set up recurring check for this interval
            /* istanbul ignore next */
            cov_wg1f8hr3s().s[88]++;
            setInterval(function () {
              /* istanbul ignore next */
              cov_wg1f8hr3s().f[14]++;
              cov_wg1f8hr3s().s[89]++;
              _this2.checkAndMixContent();
            }, 60 * 60 * 1000); // Every hour
          }, timeToNext);
          /* istanbul ignore next */
          cov_wg1f8hr3s().s[90]++;
          console.log(
          /* istanbul ignore next */
          "\u23F0 Scheduled mixing check at :".concat(interval.toString().padStart(2, "0"), " (next: ").concat(nextCheck.toLocaleTimeString(), ")"));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }

    /**
     * Force mix specific partner content (admin/testing use)
     */
  }, {
    key: "forceMixContent",
    value: (function () {
      var _forceMixContent = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4(sourceId, contentOverride)
      /* istanbul ignore next */
      {
        var recentFeedItems, partnerContent, feedItem, _t2;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_wg1f8hr3s().f[15]++;
              cov_wg1f8hr3s().s[91]++;
              console.log(
              /* istanbul ignore next */
              "\uD83D\uDD27 Force mixing content from source: ".concat(sourceId));
              cov_wg1f8hr3s().s[92]++;
              _context4.p = 1;
              recentFeedItems = (cov_wg1f8hr3s().s[93]++, this.getRecentFeedActivity());
              cov_wg1f8hr3s().s[94]++;
              _context4.n = 2;
              return this.contentMixer.getSuggestedContent(recentFeedItems);
            case 2:
              partnerContent = _context4.v;
              cov_wg1f8hr3s().s[95]++;
              if (partnerContent) {
                _context4.n = 3;
                break;
              }
              cov_wg1f8hr3s().b[24][0]++;
              cov_wg1f8hr3s().s[96]++;
              return _context4.a(2, {
                action: "rejected",
                reason: "Could not generate partner content",
                stats:
                /* istanbul ignore next */
                _objectSpread({}, this.mixingStats)
              });
            case 3:
              cov_wg1f8hr3s().b[24][1]++;
            case 4:
              cov_wg1f8hr3s().s[97]++;
              // Apply overrides if provided
              if (contentOverride) {
                /* istanbul ignore next */
                cov_wg1f8hr3s().b[25][0]++;
                cov_wg1f8hr3s().s[98]++;
                Object.assign(partnerContent, contentOverride);
              } else
              /* istanbul ignore next */
              {
                cov_wg1f8hr3s().b[25][1]++;
              }
              feedItem = (cov_wg1f8hr3s().s[99]++, this.contentMixer.convertPartnerContentToFeedItem(partnerContent, this.config.terryCommentaryOnPartnerContent)); // TODO: Re-enable feed store updates once circular dependency is fixed
              cov_wg1f8hr3s().s[100]++;
              console.log("Feed store update disabled temporarily due to circular dependency");
              // const feedStore = useFeedStore.getState();
              // feedStore.addItem(feedItem);
              cov_wg1f8hr3s().s[101]++;
              this.contentMixer.trackPartnerContentAdded(partnerContent);
              cov_wg1f8hr3s().s[102]++;
              this.mixingStats.successfulMixes++;
              cov_wg1f8hr3s().s[103]++;
              return _context4.a(2, {
                action: "mixed",
                reason: "Force mixed partner content",
                partnerContent: feedItem,
                stats:
                /* istanbul ignore next */
                _objectSpread({}, this.mixingStats)
              });
            case 5:
              _context4.p = 5;
              _t2 = _context4.v;
              cov_wg1f8hr3s().s[104]++;
              console.error("Failed to force mix content:",
              /* istanbul ignore next */
              _t2);
              cov_wg1f8hr3s().s[105]++;
              this.mixingStats.rejectedMixes++;
              cov_wg1f8hr3s().s[106]++;
              return _context4.a(2, {
                action: "rejected",
                reason:
                /* istanbul ignore next */
                "Force mix failed: ".concat(_t2),
                stats:
                /* istanbul ignore next */
                _objectSpread({}, this.mixingStats)
              });
          }
        }, _callee4, this, [[1, 5]]);
      }));
      function forceMixContent(_x, _x2) {
        return _forceMixContent.apply(this, arguments);
      }
      return forceMixContent;
    }())
  }]);
}();

// Export singleton instance
export var smartMixingOrchestrator =
/* istanbul ignore next */
(cov_wg1f8hr3s().s[107]++, new SmartMixingOrchestrator());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,