29e1d32e631ecbffb012344c69047395
/* istanbul ignore next */
function cov_1c92yngdri() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/partnerships/contentMixer.ts";
  var hash = "030566e669e4235ee368ac2cfaae230c4f48e0a9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/partnerships/contentMixer.ts",
    statementMap: {
      "0": {
        start: {
          line: 55,
          column: 58
        },
        end: {
          line: 61,
          column: 1
        }
      },
      "1": {
        start: {
          line: 68,
          column: 52
        },
        end: {
          line: 68,
          column: 54
        }
      },
      "2": {
        start: {
          line: 69,
          column: 48
        },
        end: {
          line: 69,
          column: 52
        }
      },
      "3": {
        start: {
          line: 70,
          column: 39
        },
        end: {
          line: 70,
          column: 40
        }
      },
      "4": {
        start: {
          line: 71,
          column: 34
        },
        end: {
          line: 71,
          column: 44
        }
      },
      "5": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 25
        }
      },
      "6": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 49
        }
      },
      "7": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "8": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 93,
          column: 8
        }
      },
      "9": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "10": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 100,
          column: 19
        }
      },
      "11": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 110,
          column: 7
        }
      },
      "12": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 109,
          column: 10
        }
      },
      "13": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "14": {
        start: {
          line: 115,
          column: 32
        },
        end: {
          line: 120,
          column: 7
        }
      },
      "15": {
        start: {
          line: 117,
          column: 10
        },
        end: {
          line: 119,
          column: 26
        }
      },
      "16": {
        start: {
          line: 122,
          column: 6
        },
        end: {
          line: 128,
          column: 7
        }
      },
      "17": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 127,
          column: 10
        }
      },
      "18": {
        start: {
          line: 132,
          column: 24
        },
        end: {
          line: 132,
          column: 60
        }
      },
      "19": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "20": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 69
        }
      },
      "21": {
        start: {
          line: 137,
          column: 6
        },
        end: {
          line: 144,
          column: 7
        }
      },
      "22": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 143,
          column: 10
        }
      },
      "23": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 152,
          column: 6
        }
      },
      "24": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 204,
          column: 5
        }
      },
      "25": {
        start: {
          line: 166,
          column: 34
        },
        end: {
          line: 168,
          column: 40
        }
      },
      "26": {
        start: {
          line: 171,
          column: 48
        },
        end: {
          line: 171,
          column: 50
        }
      },
      "27": {
        start: {
          line: 172,
          column: 6
        },
        end: {
          line: 175,
          column: 7
        }
      },
      "28": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 173,
          column: 68
        }
      },
      "29": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 42
        }
      },
      "30": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 179,
          column: 7
        }
      },
      "31": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 20
        }
      },
      "32": {
        start: {
          line: 182,
          column: 37
        },
        end: {
          line: 184,
          column: 7
        }
      },
      "33": {
        start: {
          line: 183,
          column: 15
        },
        end: {
          line: 183,
          column: 36
        }
      },
      "34": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 192,
          column: 13
        }
      },
      "35": {
        start: {
          line: 195,
          column: 22
        },
        end: {
          line: 198,
          column: 7
        }
      },
      "36": {
        start: {
          line: 200,
          column: 6
        },
        end: {
          line: 200,
          column: 21
        }
      },
      "37": {
        start: {
          line: 202,
          column: 6
        },
        end: {
          line: 202,
          column: 71
        }
      },
      "38": {
        start: {
          line: 203,
          column: 6
        },
        end: {
          line: 203,
          column: 18
        }
      },
      "39": {
        start: {
          line: 214,
          column: 31
        },
        end: {
          line: 244,
          column: 5
        }
      },
      "40": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 253,
          column: 5
        }
      },
      "41": {
        start: {
          line: 251,
          column: 6
        },
        end: {
          line: 252,
          column: 62
        }
      },
      "42": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 255,
          column: 20
        }
      },
      "43": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 262,
          column: 45
        }
      },
      "44": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 263,
          column: 45
        }
      },
      "45": {
        start: {
          line: 264,
          column: 4
        },
        end: {
          line: 264,
          column: 30
        }
      },
      "46": {
        start: {
          line: 267,
          column: 4
        },
        end: {
          line: 269,
          column: 5
        }
      },
      "47": {
        start: {
          line: 268,
          column: 6
        },
        end: {
          line: 268,
          column: 73
        }
      },
      "48": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 273,
          column: 6
        }
      },
      "49": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 276,
          column: 6
        }
      },
      "50": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 283,
          column: 26
        }
      },
      "51": {
        start: {
          line: 284,
          column: 24
        },
        end: {
          line: 287,
          column: 5
        }
      },
      "52": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 286,
          column: 76
        }
      },
      "53": {
        start: {
          line: 289,
          column: 24
        },
        end: {
          line: 296,
          column: 5
        }
      },
      "54": {
        start: {
          line: 291,
          column: 27
        },
        end: {
          line: 291,
          column: 46
        }
      },
      "55": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 53
        }
      },
      "56": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 19
        }
      },
      "57": {
        start: {
          line: 298,
          column: 26
        },
        end: {
          line: 304,
          column: 5
        }
      },
      "58": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 65
        }
      },
      "59": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 19
        }
      },
      "60": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 317,
          column: 6
        }
      },
      "61": {
        start: {
          line: 314,
          column: 43
        },
        end: {
          line: 314,
          column: 69
        }
      },
      "62": {
        start: {
          line: 324,
          column: 4
        },
        end: {
          line: 324,
          column: 51
        }
      },
      "63": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 325,
          column: 66
        }
      },
      "64": {
        start: {
          line: 332,
          column: 6
        },
        end: {
          line: 333,
          column: 22
        }
      },
      "65": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 338,
          column: 5
        }
      },
      "66": {
        start: {
          line: 336,
          column: 6
        },
        end: {
          line: 336,
          column: 34
        }
      },
      "67": {
        start: {
          line: 337,
          column: 6
        },
        end: {
          line: 337,
          column: 41
        }
      },
      "68": {
        start: {
          line: 342,
          column: 16
        },
        end: {
          line: 342,
          column: 26
        }
      },
      "69": {
        start: {
          line: 343,
          column: 21
        },
        end: {
          line: 343,
          column: 51
        }
      },
      "70": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 344,
          column: 47
        }
      },
      "71": {
        start: {
          line: 345,
          column: 4
        },
        end: {
          line: 345,
          column: 73
        }
      },
      "72": {
        start: {
          line: 349,
          column: 21
        },
        end: {
          line: 354,
          column: 7
        }
      },
      "73": {
        start: {
          line: 350,
          column: 24
        },
        end: {
          line: 350,
          column: 71
        }
      },
      "74": {
        start: {
          line: 353,
          column: 10
        },
        end: {
          line: 353,
          column: 75
        }
      },
      "75": {
        start: {
          line: 356,
          column: 4
        },
        end: {
          line: 356,
          column: 72
        }
      },
      "76": {
        start: {
          line: 364,
          column: 26
        },
        end: {
          line: 364,
          column: 64
        }
      },
      "77": {
        start: {
          line: 365,
          column: 28
        },
        end: {
          line: 365,
          column: 68
        }
      },
      "78": {
        start: {
          line: 368,
          column: 29
        },
        end: {
          line: 368,
          column: 70
        }
      },
      "79": {
        start: {
          line: 370,
          column: 6
        },
        end: {
          line: 370,
          column: 75
        }
      },
      "80": {
        start: {
          line: 372,
          column: 18
        },
        end: {
          line: 374,
          column: 63
        }
      },
      "81": {
        start: {
          line: 376,
          column: 20
        },
        end: {
          line: 378,
          column: 62
        }
      },
      "82": {
        start: {
          line: 380,
          column: 4
        },
        end: {
          line: 389,
          column: 6
        }
      },
      "83": {
        start: {
          line: 393,
          column: 47
        },
        end: {
          line: 393,
          column: 49
        }
      },
      "84": {
        start: {
          line: 395,
          column: 4
        },
        end: {
          line: 399,
          column: 7
        }
      },
      "85": {
        start: {
          line: 396,
          column: 6
        },
        end: {
          line: 398,
          column: 9
        }
      },
      "86": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 397,
          column: 55
        }
      },
      "87": {
        start: {
          line: 401,
          column: 4
        },
        end: {
          line: 404,
          column: 19
        }
      },
      "88": {
        start: {
          line: 402,
          column: 30
        },
        end: {
          line: 402,
          column: 35
        }
      },
      "89": {
        start: {
          line: 403,
          column: 23
        },
        end: {
          line: 403,
          column: 27
        }
      },
      "90": {
        start: {
          line: 408,
          column: 49
        },
        end: {
          line: 408,
          column: 51
        }
      },
      "91": {
        start: {
          line: 410,
          column: 4
        },
        end: {
          line: 414,
          column: 7
        }
      },
      "92": {
        start: {
          line: 411,
          column: 6
        },
        end: {
          line: 413,
          column: 9
        }
      },
      "93": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 412,
          column: 63
        }
      },
      "94": {
        start: {
          line: 416,
          column: 4
        },
        end: {
          line: 419,
          column: 19
        }
      },
      "95": {
        start: {
          line: 417,
          column: 30
        },
        end: {
          line: 417,
          column: 35
        }
      },
      "96": {
        start: {
          line: 418,
          column: 25
        },
        end: {
          line: 418,
          column: 31
        }
      },
      "97": {
        start: {
          line: 423,
          column: 22
        },
        end: {
          line: 463,
          column: 5
        }
      },
      "98": {
        start: {
          line: 465,
          column: 4
        },
        end: {
          line: 465,
          column: 75
        }
      },
      "99": {
        start: {
          line: 469,
          column: 24
        },
        end: {
          line: 481,
          column: 5
        }
      },
      "100": {
        start: {
          line: 483,
          column: 4
        },
        end: {
          line: 485,
          column: 6
        }
      },
      "101": {
        start: {
          line: 484,
          column: 6
        },
        end: {
          line: 484,
          column: 56
        }
      },
      "102": {
        start: {
          line: 491,
          column: 4
        },
        end: {
          line: 491,
          column: 14
        }
      },
      "103": {
        start: {
          line: 504,
          column: 29
        },
        end: {
          line: 509,
          column: 5
        }
      },
      "104": {
        start: {
          line: 511,
          column: 25
        },
        end: {
          line: 511,
          column: 46
        }
      },
      "105": {
        start: {
          line: 513,
          column: 4
        },
        end: {
          line: 523,
          column: 5
        }
      },
      "106": {
        start: {
          line: 514,
          column: 6
        },
        end: {
          line: 522,
          column: 7
        }
      },
      "107": {
        start: {
          line: 514,
          column: 37
        },
        end: {
          line: 514,
          column: 67
        }
      },
      "108": {
        start: {
          line: 515,
          column: 8
        },
        end: {
          line: 521,
          column: 29
        }
      },
      "109": {
        start: {
          line: 525,
          column: 4
        },
        end: {
          line: 525,
          column: 21
        }
      },
      "110": {
        start: {
          line: 531,
          column: 31
        },
        end: {
          line: 536,
          column: 5
        }
      },
      "111": {
        start: {
          line: 539,
          column: 6
        },
        end: {
          line: 540,
          column: 9
        }
      },
      "112": {
        start: {
          line: 541,
          column: 4
        },
        end: {
          line: 541,
          column: 34
        }
      },
      "113": {
        start: {
          line: 545,
          column: 29
        },
        end: {
          line: 551,
          column: 5
        }
      },
      "114": {
        start: {
          line: 554,
          column: 6
        },
        end: {
          line: 554,
          column: 75
        }
      },
      "115": {
        start: {
          line: 555,
          column: 4
        },
        end: {
          line: 555,
          column: 61
        }
      },
      "116": {
        start: {
          line: 560,
          column: 28
        },
        end: {
          line: 560,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 73,
            column: 2
          },
          end: {
            line: 73,
            column: 3
          }
        },
        loc: {
          start: {
            line: 73,
            column: 67
          },
          end: {
            line: 75,
            column: 3
          }
        },
        line: 73
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 80,
            column: 2
          },
          end: {
            line: 80,
            column: 3
          }
        },
        loc: {
          start: {
            line: 83,
            column: 25
          },
          end: {
            line: 153,
            column: 3
          }
        },
        line: 83
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        loc: {
          start: {
            line: 117,
            column: 10
          },
          end: {
            line: 119,
            column: 26
          }
        },
        line: 117
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 158,
            column: 2
          },
          end: {
            line: 158,
            column: 3
          }
        },
        loc: {
          start: {
            line: 161,
            column: 36
          },
          end: {
            line: 205,
            column: 3
          }
        },
        line: 161
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        loc: {
          start: {
            line: 183,
            column: 15
          },
          end: {
            line: 183,
            column: 36
          }
        },
        line: 183
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 210,
            column: 2
          },
          end: {
            line: 210,
            column: 3
          }
        },
        loc: {
          start: {
            line: 213,
            column: 14
          },
          end: {
            line: 256,
            column: 3
          }
        },
        line: 213
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 261,
            column: 2
          },
          end: {
            line: 261,
            column: 3
          }
        },
        loc: {
          start: {
            line: 261,
            column: 65
          },
          end: {
            line: 277,
            column: 3
          }
        },
        line: 261
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 282,
            column: 2
          },
          end: {
            line: 282,
            column: 3
          }
        },
        loc: {
          start: {
            line: 282,
            column: 24
          },
          end: {
            line: 318,
            column: 3
          }
        },
        line: 282
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 285,
            column: 6
          },
          end: {
            line: 285,
            column: 7
          }
        },
        loc: {
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 286,
            column: 76
          }
        },
        line: 286
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 290,
            column: 6
          },
          end: {
            line: 290,
            column: 7
          }
        },
        loc: {
          start: {
            line: 290,
            column: 24
          },
          end: {
            line: 294,
            column: 7
          }
        },
        line: 290
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 299,
            column: 6
          },
          end: {
            line: 299,
            column: 7
          }
        },
        loc: {
          start: {
            line: 299,
            column: 24
          },
          end: {
            line: 302,
            column: 7
          }
        },
        line: 299
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 314,
            column: 31
          },
          end: {
            line: 314,
            column: 32
          }
        },
        loc: {
          start: {
            line: 314,
            column: 43
          },
          end: {
            line: 314,
            column: 69
          }
        },
        line: 314
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 323,
            column: 2
          },
          end: {
            line: 323,
            column: 3
          }
        },
        loc: {
          start: {
            line: 323,
            column: 69
          },
          end: {
            line: 326,
            column: 3
          }
        },
        line: 323
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 330,
            column: 2
          },
          end: {
            line: 330,
            column: 3
          }
        },
        loc: {
          start: {
            line: 330,
            column: 62
          },
          end: {
            line: 339,
            column: 3
          }
        },
        line: 330
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 341,
            column: 2
          },
          end: {
            line: 341,
            column: 3
          }
        },
        loc: {
          start: {
            line: 341,
            column: 44
          },
          end: {
            line: 346,
            column: 3
          }
        },
        line: 341
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 348,
            column: 2
          },
          end: {
            line: 348,
            column: 3
          }
        },
        loc: {
          start: {
            line: 348,
            column: 67
          },
          end: {
            line: 357,
            column: 3
          }
        },
        line: 348
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 350,
            column: 14
          },
          end: {
            line: 350,
            column: 15
          }
        },
        loc: {
          start: {
            line: 350,
            column: 24
          },
          end: {
            line: 350,
            column: 71
          }
        },
        line: 350
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 352,
            column: 8
          },
          end: {
            line: 352,
            column: 9
          }
        },
        loc: {
          start: {
            line: 353,
            column: 10
          },
          end: {
            line: 353,
            column: 75
          }
        },
        line: 353
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 359,
            column: 2
          },
          end: {
            line: 359,
            column: 3
          }
        },
        loc: {
          start: {
            line: 362,
            column: 20
          },
          end: {
            line: 390,
            column: 3
          }
        },
        line: 362
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 392,
            column: 2
          },
          end: {
            line: 392,
            column: 3
          }
        },
        loc: {
          start: {
            line: 392,
            column: 66
          },
          end: {
            line: 405,
            column: 3
          }
        },
        line: 392
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 395,
            column: 28
          },
          end: {
            line: 395,
            column: 29
          }
        },
        loc: {
          start: {
            line: 395,
            column: 38
          },
          end: {
            line: 399,
            column: 5
          }
        },
        line: 395
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 396,
            column: 30
          },
          end: {
            line: 396,
            column: 31
          }
        },
        loc: {
          start: {
            line: 396,
            column: 48
          },
          end: {
            line: 398,
            column: 7
          }
        },
        line: 396
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 402,
            column: 12
          },
          end: {
            line: 402,
            column: 13
          }
        },
        loc: {
          start: {
            line: 402,
            column: 30
          },
          end: {
            line: 402,
            column: 35
          }
        },
        line: 402
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 403,
            column: 11
          },
          end: {
            line: 403,
            column: 12
          }
        },
        loc: {
          start: {
            line: 403,
            column: 23
          },
          end: {
            line: 403,
            column: 27
          }
        },
        line: 403
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 407,
            column: 2
          },
          end: {
            line: 407,
            column: 3
          }
        },
        loc: {
          start: {
            line: 407,
            column: 68
          },
          end: {
            line: 420,
            column: 3
          }
        },
        line: 407
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 410,
            column: 28
          },
          end: {
            line: 410,
            column: 29
          }
        },
        loc: {
          start: {
            line: 410,
            column: 38
          },
          end: {
            line: 414,
            column: 5
          }
        },
        line: 410
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 411,
            column: 32
          },
          end: {
            line: 411,
            column: 33
          }
        },
        loc: {
          start: {
            line: 411,
            column: 52
          },
          end: {
            line: 413,
            column: 7
          }
        },
        line: 411
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 417,
            column: 12
          },
          end: {
            line: 417,
            column: 13
          }
        },
        loc: {
          start: {
            line: 417,
            column: 30
          },
          end: {
            line: 417,
            column: 35
          }
        },
        line: 417
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 418,
            column: 11
          },
          end: {
            line: 418,
            column: 12
          }
        },
        loc: {
          start: {
            line: 418,
            column: 25
          },
          end: {
            line: 418,
            column: 31
          }
        },
        line: 418
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 422,
            column: 2
          },
          end: {
            line: 422,
            column: 3
          }
        },
        loc: {
          start: {
            line: 422,
            column: 48
          },
          end: {
            line: 466,
            column: 3
          }
        },
        line: 422
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 468,
            column: 2
          },
          end: {
            line: 468,
            column: 3
          }
        },
        loc: {
          start: {
            line: 468,
            column: 61
          },
          end: {
            line: 486,
            column: 3
          }
        },
        line: 468
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 483,
            column: 30
          },
          end: {
            line: 483,
            column: 31
          }
        },
        loc: {
          start: {
            line: 484,
            column: 6
          },
          end: {
            line: 484,
            column: 56
          }
        },
        line: 484
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 488,
            column: 2
          },
          end: {
            line: 488,
            column: 3
          }
        },
        loc: {
          start: {
            line: 488,
            column: 63
          },
          end: {
            line: 492,
            column: 3
          }
        },
        line: 488
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 494,
            column: 2
          },
          end: {
            line: 494,
            column: 3
          }
        },
        loc: {
          start: {
            line: 503,
            column: 16
          },
          end: {
            line: 526,
            column: 3
          }
        },
        line: 503
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 514,
            column: 24
          },
          end: {
            line: 514,
            column: 25
          }
        },
        loc: {
          start: {
            line: 514,
            column: 37
          },
          end: {
            line: 514,
            column: 67
          }
        },
        line: 514
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 528,
            column: 2
          },
          end: {
            line: 528,
            column: 3
          }
        },
        loc: {
          start: {
            line: 528,
            column: 79
          },
          end: {
            line: 542,
            column: 3
          }
        },
        line: 528
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 544,
            column: 2
          },
          end: {
            line: 544,
            column: 3
          }
        },
        loc: {
          start: {
            line: 544,
            column: 76
          },
          end: {
            line: 556,
            column: 3
          }
        },
        line: 544
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 73,
            column: 14
          },
          end: {
            line: 73,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 73,
            column: 44
          },
          end: {
            line: 73,
            column: 65
          }
        }],
        line: 73
      },
      "1": {
        loc: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 82,
            column: 24
          },
          end: {
            line: 82,
            column: 34
          }
        }],
        line: 82
      },
      "2": {
        loc: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "3": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "4": {
        loc: {
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 110,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 110,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "5": {
        loc: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "6": {
        loc: {
          start: {
            line: 117,
            column: 10
          },
          end: {
            line: 119,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 10
          },
          end: {
            line: 117,
            column: 34
          }
        }, {
          start: {
            line: 118,
            column: 10
          },
          end: {
            line: 119,
            column: 26
          }
        }],
        line: 117
      },
      "7": {
        loc: {
          start: {
            line: 122,
            column: 6
          },
          end: {
            line: 128,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 6
          },
          end: {
            line: 128,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "8": {
        loc: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "9": {
        loc: {
          start: {
            line: 137,
            column: 6
          },
          end: {
            line: 144,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 6
          },
          end: {
            line: 144,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "10": {
        loc: {
          start: {
            line: 166,
            column: 34
          },
          end: {
            line: 168,
            column: 40
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 167,
            column: 10
          },
          end: {
            line: 167,
            column: 25
          }
        }, {
          start: {
            line: 168,
            column: 10
          },
          end: {
            line: 168,
            column: 40
          }
        }],
        line: 166
      },
      "11": {
        loc: {
          start: {
            line: 177,
            column: 6
          },
          end: {
            line: 179,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 6
          },
          end: {
            line: 179,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "12": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 192,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        }, {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        }],
        line: 186
      },
      "13": {
        loc: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 212,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 212,
            column: 35
          },
          end: {
            line: 212,
            column: 40
          }
        }],
        line: 212
      },
      "14": {
        loc: {
          start: {
            line: 235,
            column: 18
          },
          end: {
            line: 235,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 235,
            column: 61
          },
          end: {
            line: 235,
            column: 67
          }
        }, {
          start: {
            line: 235,
            column: 70
          },
          end: {
            line: 235,
            column: 78
          }
        }],
        line: 235
      },
      "15": {
        loc: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "16": {
        loc: {
          start: {
            line: 248,
            column: 6
          },
          end: {
            line: 249,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 6
          },
          end: {
            line: 248,
            column: 25
          }
        }, {
          start: {
            line: 249,
            column: 6
          },
          end: {
            line: 249,
            column: 61
          }
        }],
        line: 248
      },
      "17": {
        loc: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "18": {
        loc: {
          start: {
            line: 292,
            column: 27
          },
          end: {
            line: 292,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 27
          },
          end: {
            line: 292,
            column: 42
          }
        }, {
          start: {
            line: 292,
            column: 46
          },
          end: {
            line: 292,
            column: 47
          }
        }],
        line: 292
      },
      "19": {
        loc: {
          start: {
            line: 300,
            column: 33
          },
          end: {
            line: 300,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 33
          },
          end: {
            line: 300,
            column: 54
          }
        }, {
          start: {
            line: 300,
            column: 58
          },
          end: {
            line: 300,
            column: 59
          }
        }],
        line: 300
      },
      "20": {
        loc: {
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 316,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 315,
            column: 30
          }
        }, {
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 316,
            column: 13
          }
        }],
        line: 313
      },
      "21": {
        loc: {
          start: {
            line: 335,
            column: 4
          },
          end: {
            line: 338,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 4
          },
          end: {
            line: 338,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "22": {
        loc: {
          start: {
            line: 350,
            column: 24
          },
          end: {
            line: 350,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 24
          },
          end: {
            line: 350,
            column: 43
          }
        }, {
          start: {
            line: 350,
            column: 47
          },
          end: {
            line: 350,
            column: 71
          }
        }],
        line: 350
      },
      "23": {
        loc: {
          start: {
            line: 356,
            column: 11
          },
          end: {
            line: 356,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 356,
            column: 33
          },
          end: {
            line: 356,
            column: 64
          }
        }, {
          start: {
            line: 356,
            column: 67
          },
          end: {
            line: 356,
            column: 71
          }
        }],
        line: 356
      },
      "24": {
        loc: {
          start: {
            line: 373,
            column: 25
          },
          end: {
            line: 373,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 373,
            column: 25
          },
          end: {
            line: 373,
            column: 41
          }
        }, {
          start: {
            line: 373,
            column: 45
          },
          end: {
            line: 373,
            column: 61
          }
        }],
        line: 373
      },
      "25": {
        loc: {
          start: {
            line: 374,
            column: 27
          },
          end: {
            line: 374,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 374,
            column: 27
          },
          end: {
            line: 374,
            column: 45
          }
        }, {
          start: {
            line: 374,
            column: 49
          },
          end: {
            line: 374,
            column: 62
          }
        }],
        line: 374
      },
      "26": {
        loc: {
          start: {
            line: 377,
            column: 25
          },
          end: {
            line: 377,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 377,
            column: 25
          },
          end: {
            line: 377,
            column: 41
          }
        }, {
          start: {
            line: 377,
            column: 45
          },
          end: {
            line: 377,
            column: 55
          }
        }],
        line: 377
      },
      "27": {
        loc: {
          start: {
            line: 378,
            column: 27
          },
          end: {
            line: 378,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 378,
            column: 27
          },
          end: {
            line: 378,
            column: 45
          }
        }, {
          start: {
            line: 378,
            column: 49
          },
          end: {
            line: 378,
            column: 61
          }
        }],
        line: 378
      },
      "28": {
        loc: {
          start: {
            line: 397,
            column: 28
          },
          end: {
            line: 397,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 397,
            column: 28
          },
          end: {
            line: 397,
            column: 44
          }
        }, {
          start: {
            line: 397,
            column: 48
          },
          end: {
            line: 397,
            column: 49
          }
        }],
        line: 397
      },
      "29": {
        loc: {
          start: {
            line: 412,
            column: 32
          },
          end: {
            line: 412,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 412,
            column: 32
          },
          end: {
            line: 412,
            column: 52
          }
        }, {
          start: {
            line: 412,
            column: 56
          },
          end: {
            line: 412,
            column: 57
          }
        }],
        line: 412
      },
      "30": {
        loc: {
          start: {
            line: 465,
            column: 11
          },
          end: {
            line: 465,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 465,
            column: 11
          },
          end: {
            line: 465,
            column: 56
          }
        }, {
          start: {
            line: 465,
            column: 60
          },
          end: {
            line: 465,
            column: 74
          }
        }],
        line: 465
      },
      "31": {
        loc: {
          start: {
            line: 514,
            column: 6
          },
          end: {
            line: 522,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 514,
            column: 6
          },
          end: {
            line: 522,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 514
      },
      "32": {
        loc: {
          start: {
            line: 539,
            column: 6
          },
          end: {
            line: 540,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 539,
            column: 6
          },
          end: {
            line: 539,
            column: 77
          }
        }, {
          start: {
            line: 540,
            column: 6
          },
          end: {
            line: 540,
            column: 9
          }
        }],
        line: 539
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "030566e669e4235ee368ac2cfaae230c4f48e0a9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1c92yngdri = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1c92yngdri();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Smart Content Mixing System
 * Intelligently mix partner content during ITK quiet periods
 */

// TODO: Fix circular dependency with feedStore
// import { type FeedItem } from '@/lib/stores/feedStore';

// Temporary type to avoid circular dependency

import { getPartnerSourcesByCategory, formatAttribution } from "./partnerSources";
export var DEFAULT_MIXING_CONFIG =
/* istanbul ignore next */
(cov_1c92yngdri().s[0]++, {
  maxPartnerContentPerHour: 4,
  // Max 4 partner articles per hour
  minTimeBetweenPartnerContent: 15,
  // Min 15 minutes between partner content
  priorityCategories: ["analysis", "news"],
  // Prefer analysis and news over entertainment
  enableDuringBreakingNews: false,
  // Don't mix during breaking transfer news
  quietPeriodThreshold: 30 // Mix content if no ITK updates for 30+ minutes
});

/**
 * Smart Content Mixing System
 */
export
/* istanbul ignore next */
var ContentMixer = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  ContentMixer() {
    /* istanbul ignore next */
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_1c92yngdri().b[0][0]++, DEFAULT_MIXING_CONFIG);
    /* istanbul ignore next */
    _classCallCheck(this, ContentMixer);
    _defineProperty(this, "partnerContentHistory", (cov_1c92yngdri().s[1]++, []));
    /* istanbul ignore next */
    _defineProperty(this, "lastPartnerContentTime", (cov_1c92yngdri().s[2]++, null));
    /* istanbul ignore next */
    _defineProperty(this, "hourlyPartnerCount", (cov_1c92yngdri().s[3]++, 0));
    /* istanbul ignore next */
    _defineProperty(this, "lastHourlyReset", (cov_1c92yngdri().s[4]++, new Date()));
    /* istanbul ignore next */
    cov_1c92yngdri().f[0]++;
    cov_1c92yngdri().s[5]++;
    this.config = config;
  }

  /**
   * Determine if we should mix partner content based on current feed state
   */
  return _createClass(ContentMixer, [{
    key: "shouldMixPartnerContent",
    value: function shouldMixPartnerContent(recentFeedItems) {
      /* istanbul ignore next */
      var currentTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_1c92yngdri().b[1][0]++, new Date());
      /* istanbul ignore next */
      cov_1c92yngdri().f[1]++;
      cov_1c92yngdri().s[6]++;
      // Reset hourly counter if needed
      this.resetHourlyCounterIfNeeded(currentTime);

      // Check if we've reached hourly limit
      /* istanbul ignore next */
      cov_1c92yngdri().s[7]++;
      if (this.hourlyPartnerCount >= this.config.maxPartnerContentPerHour) {
        /* istanbul ignore next */
        cov_1c92yngdri().b[2][0]++;
        cov_1c92yngdri().s[8]++;
        return {
          shouldMixContent: false,
          reason: "Hourly partner content limit reached",
          nextCheckIn: this.getMinutesToHourlyReset()
        };
      } else
      /* istanbul ignore next */
      {
        cov_1c92yngdri().b[2][1]++;
      }

      // Check minimum time between partner content
      cov_1c92yngdri().s[9]++;
      if (this.lastPartnerContentTime) {
        /* istanbul ignore next */
        cov_1c92yngdri().b[3][0]++;
        var minutesSinceLastPartner =
        /* istanbul ignore next */
        (cov_1c92yngdri().s[10]++, (currentTime.getTime() - this.lastPartnerContentTime.getTime()) / (1000 * 60));
        /* istanbul ignore next */
        cov_1c92yngdri().s[11]++;
        if (minutesSinceLastPartner < this.config.minTimeBetweenPartnerContent) {
          /* istanbul ignore next */
          cov_1c92yngdri().b[4][0]++;
          cov_1c92yngdri().s[12]++;
          return {
            shouldMixContent: false,
            reason:
            /* istanbul ignore next */
            "Too soon since last partner content (".concat(Math.round(minutesSinceLastPartner), " min ago)"),
            nextCheckIn: this.config.minTimeBetweenPartnerContent - Math.round(minutesSinceLastPartner)
          };
        } else
        /* istanbul ignore next */
        {
          cov_1c92yngdri().b[4][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1c92yngdri().b[3][1]++;
      }

      // Check for breaking news (disable mixing if configured)
      cov_1c92yngdri().s[13]++;
      if (!this.config.enableDuringBreakingNews) {
        /* istanbul ignore next */
        cov_1c92yngdri().b[5][0]++;
        var hasRecentBreaking =
        /* istanbul ignore next */
        (cov_1c92yngdri().s[14]++, recentFeedItems.some(function (item) {
          /* istanbul ignore next */
          cov_1c92yngdri().f[2]++;
          cov_1c92yngdri().s[15]++;
          return /* istanbul ignore next */(cov_1c92yngdri().b[6][0]++, item.type === "breaking") &&
          /* istanbul ignore next */
          (cov_1c92yngdri().b[6][1]++, currentTime.getTime() - new Date(item.timestamp).getTime() < 30 * 60 * 1000);
        } // 30 min
        ));
        /* istanbul ignore next */
        cov_1c92yngdri().s[16]++;
        if (hasRecentBreaking) {
          /* istanbul ignore next */
          cov_1c92yngdri().b[7][0]++;
          cov_1c92yngdri().s[17]++;
          return {
            shouldMixContent: false,
            reason: "Breaking transfer news in progress",
            nextCheckIn: 10 // Check again in 10 minutes
          };
        } else
        /* istanbul ignore next */
        {
          cov_1c92yngdri().b[7][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1c92yngdri().b[5][1]++;
      }

      // Check for quiet period (main trigger for content mixing)
      var lastITKTime =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[18]++, this.getLastITKTime(recentFeedItems));
      /* istanbul ignore next */
      cov_1c92yngdri().s[19]++;
      if (lastITKTime) {
        /* istanbul ignore next */
        cov_1c92yngdri().b[8][0]++;
        var minutesSinceLastITK =
        /* istanbul ignore next */
        (cov_1c92yngdri().s[20]++, (currentTime.getTime() - lastITKTime.getTime()) / (1000 * 60));
        /* istanbul ignore next */
        cov_1c92yngdri().s[21]++;
        if (minutesSinceLastITK < this.config.quietPeriodThreshold) {
          /* istanbul ignore next */
          cov_1c92yngdri().b[9][0]++;
          cov_1c92yngdri().s[22]++;
          return {
            shouldMixContent: false,
            reason:
            /* istanbul ignore next */
            "Recent ITK activity (".concat(Math.round(minutesSinceLastITK), " min ago)"),
            nextCheckIn: this.config.quietPeriodThreshold - Math.round(minutesSinceLastITK)
          };
        } else
        /* istanbul ignore next */
        {
          cov_1c92yngdri().b[9][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1c92yngdri().b[8][1]++;
      }

      // All checks passed - we should mix content
      cov_1c92yngdri().s[23]++;
      return {
        shouldMixContent: true,
        reason: "ITK quiet period detected - mixing partner content",
        nextCheckIn: this.config.minTimeBetweenPartnerContent
      };
    }

    /**
     * Get suggested partner content for mixing
     */
  }, {
    key: "getSuggestedContent",
    value: (function () {
      var _getSuggestedContent = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee(recentFeedItems, userPreferences)
      /* istanbul ignore next */
      {
        var preferredCategories, candidateSources, _iterator, _step, category, sources, highCredibilitySources, selectedSource, content, _t;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              cov_1c92yngdri().f[3]++;
              cov_1c92yngdri().s[24]++;
              _context.p = 1;
              // In production, this would fetch from partner APIs/RSS feeds
              // For now, return mock content based on categories
              preferredCategories = (cov_1c92yngdri().s[25]++,
              /* istanbul ignore next */
              userPreferences !== null && userPreferences !== void 0 && userPreferences.length ?
              /* istanbul ignore next */
              (cov_1c92yngdri().b[10][0]++, userPreferences) :
              /* istanbul ignore next */
              (cov_1c92yngdri().b[10][1]++, this.config.priorityCategories)); // Get sources from preferred categories
              candidateSources = (cov_1c92yngdri().s[26]++, []);
              cov_1c92yngdri().s[27]++;
              _iterator = _createForOfIteratorHelper(preferredCategories);
              try {
                for (
                /* istanbul ignore next */
                _iterator.s();
                /* istanbul ignore next */
                !(_step = _iterator.n()).done;) {
                  /* istanbul ignore next */
                  category = _step.value;
                  /* istanbul ignore next */
                  sources = (cov_1c92yngdri().s[28]++, getPartnerSourcesByCategory(category));
                  /* istanbul ignore next */
                  cov_1c92yngdri().s[29]++;
                  /* istanbul ignore next */
                  candidateSources.push.apply(candidateSources,
                  /* istanbul ignore next */
                  _toConsumableArray(sources));
                }
              } catch (err) {
                _iterator.e(err);
              } finally {
                _iterator.f();
              }
              cov_1c92yngdri().s[30]++;
              if (!(candidateSources.length === 0)) {
                _context.n = 2;
                break;
              }
              cov_1c92yngdri().b[11][0]++;
              cov_1c92yngdri().s[31]++;
              return _context.a(2, null);
            case 2:
              cov_1c92yngdri().b[11][1]++;
            case 3:
              // Select a random high-credibility source
              highCredibilitySources = (cov_1c92yngdri().s[32]++, candidateSources.filter(function (s) {
                /* istanbul ignore next */
                cov_1c92yngdri().f[4]++;
                cov_1c92yngdri().s[33]++;
                return s.credibility >= 0.85;
              }));
              selectedSource = (cov_1c92yngdri().s[34]++, highCredibilitySources.length > 0 ?
              /* istanbul ignore next */
              (cov_1c92yngdri().b[12][0]++, highCredibilitySources[Math.floor(Math.random() * highCredibilitySources.length)]) :
              /* istanbul ignore next */
              (cov_1c92yngdri().b[12][1]++, candidateSources[Math.floor(Math.random() * candidateSources.length)])); // Generate contextual content based on recent feed activity
              content = (cov_1c92yngdri().s[35]++, this.generateContextualContent(selectedSource, recentFeedItems));
              cov_1c92yngdri().s[36]++;
              return _context.a(2, content);
            case 4:
              _context.p = 4;
              _t = _context.v;
              cov_1c92yngdri().s[37]++;
              console.error("Failed to get suggested partner content:",
              /* istanbul ignore next */
              _t);
              cov_1c92yngdri().s[38]++;
              return _context.a(2, null);
          }
        }, _callee, this, [[1, 4]]);
      }));
      function getSuggestedContent(_x, _x2) {
        return _getSuggestedContent.apply(this, arguments);
      }
      return getSuggestedContent;
    }()
    /**
     * Convert partner content to feed item
     */
    )
  }, {
    key: "convertPartnerContentToFeedItem",
    value: function convertPartnerContentToFeedItem(partnerContent) {
      /* istanbul ignore next */
      var withTerryCommentary = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_1c92yngdri().b[13][0]++, false);
      /* istanbul ignore next */
      cov_1c92yngdri().f[5]++;
      var feedItem =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[39]++, {
        id:
        /* istanbul ignore next */
        "partner-".concat(partnerContent.id),
        type: "partner",
        content: partnerContent.content,
        timestamp: partnerContent.publishedAt,
        source: {
          name: partnerContent.source.name,
          handle: partnerContent.source.website,
          tier: Math.ceil((1 - partnerContent.source.credibility) * 3),
          // Convert credibility to tier
          reliability: partnerContent.source.credibility,
          region: "UK" // Most partner sources are UK-based
        },
        tags: {
          clubs: this.extractClubsFromContent(partnerContent.content),
          players: this.extractPlayersFromContent(partnerContent.content),
          sources: [partnerContent.source.name]
        },
        metadata: {
          priority: partnerContent.source.credibility >= 0.9 ?
          /* istanbul ignore next */
          (cov_1c92yngdri().b[14][0]++, "high") :
          /* istanbul ignore next */
          (cov_1c92yngdri().b[14][1]++, "medium"),
          transferType: this.detectTransferType(partnerContent.content),
          relevanceScore: partnerContent.source.credibility,
          originalUrl: partnerContent.url,
          attribution: formatAttribution(partnerContent.source, partnerContent.url)
        }
      });

      // Add Terry commentary if requested and appropriate
      /* istanbul ignore next */
      cov_1c92yngdri().s[40]++;
      if (
      /* istanbul ignore next */
      (cov_1c92yngdri().b[16][0]++, withTerryCommentary) &&
      /* istanbul ignore next */
      (cov_1c92yngdri().b[16][1]++, this.shouldTerryCommentOnPartnerContent(partnerContent))) {
        /* istanbul ignore next */
        cov_1c92yngdri().b[15][0]++;
        cov_1c92yngdri().s[41]++;
        feedItem.terryCommentary = this.generatePartnerContentCommentary(partnerContent);
      } else
      /* istanbul ignore next */
      {
        cov_1c92yngdri().b[15][1]++;
      }
      cov_1c92yngdri().s[42]++;
      return feedItem;
    }

    /**
     * Track that partner content was added to feed
     */
  }, {
    key: "trackPartnerContentAdded",
    value: function trackPartnerContentAdded(content) {
      /* istanbul ignore next */
      cov_1c92yngdri().f[6]++;
      cov_1c92yngdri().s[43]++;
      this.partnerContentHistory.push(content);
      /* istanbul ignore next */
      cov_1c92yngdri().s[44]++;
      this.lastPartnerContentTime = new Date();
      /* istanbul ignore next */
      cov_1c92yngdri().s[45]++;
      this.hourlyPartnerCount++;

      // Keep only last 50 items in history
      /* istanbul ignore next */
      cov_1c92yngdri().s[46]++;
      if (this.partnerContentHistory.length > 50) {
        /* istanbul ignore next */
        cov_1c92yngdri().b[17][0]++;
        cov_1c92yngdri().s[47]++;
        this.partnerContentHistory = this.partnerContentHistory.slice(-50);
      } else
      /* istanbul ignore next */
      {
        cov_1c92yngdri().b[17][1]++;
      }
      cov_1c92yngdri().s[48]++;
      console.log(
      /* istanbul ignore next */
      "\uD83D\uDCF0 Partner content added: ".concat(content.source.name, " - \"").concat(content.title, "\""));
      /* istanbul ignore next */
      cov_1c92yngdri().s[49]++;
      console.log(
      /* istanbul ignore next */
      "   Attribution: ".concat(formatAttribution(content.source, content.url)));
    }

    /**
     * Get content mixing analytics
     */
  }, {
    key: "getAnalytics",
    value: function getAnalytics() {
      /* istanbul ignore next */
      cov_1c92yngdri().f[7]++;
      var now =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[50]++, new Date());
      var last24Hours =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[51]++, this.partnerContentHistory.filter(function (content) {
        /* istanbul ignore next */
        cov_1c92yngdri().f[8]++;
        cov_1c92yngdri().s[52]++;
        return now.getTime() - content.publishedAt.getTime() <= 24 * 60 * 60 * 1000;
      }));
      var sourceStats =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[53]++, last24Hours.reduce(function (acc, content) {
        /* istanbul ignore next */
        cov_1c92yngdri().f[9]++;
        var sourceName =
        /* istanbul ignore next */
        (cov_1c92yngdri().s[54]++, content.source.name);
        /* istanbul ignore next */
        cov_1c92yngdri().s[55]++;
        acc[sourceName] = (
        /* istanbul ignore next */
        (cov_1c92yngdri().b[18][0]++, acc[sourceName]) ||
        /* istanbul ignore next */
        (cov_1c92yngdri().b[18][1]++, 0)) + 1;
        /* istanbul ignore next */
        cov_1c92yngdri().s[56]++;
        return acc;
      }, {}));
      var categoryStats =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[57]++, last24Hours.reduce(function (acc, content) {
        /* istanbul ignore next */
        cov_1c92yngdri().f[10]++;
        cov_1c92yngdri().s[58]++;
        acc[content.category] = (
        /* istanbul ignore next */
        (cov_1c92yngdri().b[19][0]++, acc[content.category]) ||
        /* istanbul ignore next */
        (cov_1c92yngdri().b[19][1]++, 0)) + 1;
        /* istanbul ignore next */
        cov_1c92yngdri().s[59]++;
        return acc;
      }, {}));
      /* istanbul ignore next */
      cov_1c92yngdri().s[60]++;
      return {
        totalPartnerContent24h: last24Hours.length,
        hourlyPartnerCount: this.hourlyPartnerCount,
        lastPartnerContentTime: this.lastPartnerContentTime,
        sourceBreakdown: sourceStats,
        categoryBreakdown: categoryStats,
        averageCredibility: last24Hours.length > 0 ?
        /* istanbul ignore next */
        (cov_1c92yngdri().b[20][0]++, last24Hours.reduce(function (sum, c) {
          /* istanbul ignore next */
          cov_1c92yngdri().f[11]++;
          cov_1c92yngdri().s[61]++;
          return sum + c.source.credibility;
        }, 0) / last24Hours.length) :
        /* istanbul ignore next */
        (cov_1c92yngdri().b[20][1]++, 0)
      };
    }

    /**
     * Update content mixing configuration
     */
  }, {
    key: "updateConfig",
    value: function updateConfig(newConfig) {
      /* istanbul ignore next */
      cov_1c92yngdri().f[12]++;
      cov_1c92yngdri().s[62]++;
      this.config =
      /* istanbul ignore next */
      _objectSpread(_objectSpread({}, this.config), newConfig);
      /* istanbul ignore next */
      cov_1c92yngdri().s[63]++;
      console.log("🔧 Updated content mixing config:", this.config);
    }

    // Private helper methods
  }, {
    key: "resetHourlyCounterIfNeeded",
    value: function resetHourlyCounterIfNeeded(currentTime) {
      /* istanbul ignore next */
      cov_1c92yngdri().f[13]++;
      var hoursSinceReset =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[64]++, (currentTime.getTime() - this.lastHourlyReset.getTime()) / (1000 * 60 * 60));
      /* istanbul ignore next */
      cov_1c92yngdri().s[65]++;
      if (hoursSinceReset >= 1) {
        /* istanbul ignore next */
        cov_1c92yngdri().b[21][0]++;
        cov_1c92yngdri().s[66]++;
        this.hourlyPartnerCount = 0;
        /* istanbul ignore next */
        cov_1c92yngdri().s[67]++;
        this.lastHourlyReset = currentTime;
      } else
      /* istanbul ignore next */
      {
        cov_1c92yngdri().b[21][1]++;
      }
    }
  }, {
    key: "getMinutesToHourlyReset",
    value: function getMinutesToHourlyReset() {
      /* istanbul ignore next */
      cov_1c92yngdri().f[14]++;
      var now =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[68]++, new Date());
      var nextHour =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[69]++, new Date(this.lastHourlyReset));
      /* istanbul ignore next */
      cov_1c92yngdri().s[70]++;
      nextHour.setHours(nextHour.getHours() + 1);
      /* istanbul ignore next */
      cov_1c92yngdri().s[71]++;
      return Math.ceil((nextHour.getTime() - now.getTime()) / (1000 * 60));
    }
  }, {
    key: "getLastITKTime",
    value: function getLastITKTime(recentFeedItems) {
      /* istanbul ignore next */
      cov_1c92yngdri().f[15]++;
      var itkItems =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[72]++, recentFeedItems.filter(function (item) {
        /* istanbul ignore next */
        cov_1c92yngdri().f[16]++;
        cov_1c92yngdri().s[73]++;
        return /* istanbul ignore next */(cov_1c92yngdri().b[22][0]++, item.type === "itk") ||
        /* istanbul ignore next */
        (cov_1c92yngdri().b[22][1]++, item.type === "breaking");
      }).sort(function (a, b) {
        /* istanbul ignore next */
        cov_1c92yngdri().f[17]++;
        cov_1c92yngdri().s[74]++;
        return new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime();
      }));
      /* istanbul ignore next */
      cov_1c92yngdri().s[75]++;
      return itkItems.length > 0 ?
      /* istanbul ignore next */
      (cov_1c92yngdri().b[23][0]++, new Date(itkItems[0].timestamp)) :
      /* istanbul ignore next */
      (cov_1c92yngdri().b[23][1]++, null);
    }
  }, {
    key: "generateContextualContent",
    value: function generateContextualContent(source, recentFeedItems) {
      /* istanbul ignore next */
      cov_1c92yngdri().f[18]++;
      // Extract trending topics from recent feed
      var trendingClubs =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[76]++, this.getTrendingClubs(recentFeedItems));
      var trendingPlayers =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[77]++, this.getTrendingPlayers(recentFeedItems));

      // Generate content based on source category and trending topics
      var contentTemplates =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[78]++, this.getContentTemplates(source.category));
      var template =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[79]++, contentTemplates[Math.floor(Math.random() * contentTemplates.length)]);
      var title =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[80]++, template.title.replace("{club}",
      /* istanbul ignore next */
      (cov_1c92yngdri().b[24][0]++, trendingClubs[0]) ||
      /* istanbul ignore next */
      (cov_1c92yngdri().b[24][1]++, "Premier League")).replace("{player}",
      /* istanbul ignore next */
      (cov_1c92yngdri().b[25][0]++, trendingPlayers[0]) ||
      /* istanbul ignore next */
      (cov_1c92yngdri().b[25][1]++, "star player")));
      var content =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[81]++, template.content.replace("{club}",
      /* istanbul ignore next */
      (cov_1c92yngdri().b[26][0]++, trendingClubs[0]) ||
      /* istanbul ignore next */
      (cov_1c92yngdri().b[26][1]++, "the club")).replace("{player}",
      /* istanbul ignore next */
      (cov_1c92yngdri().b[27][0]++, trendingPlayers[0]) ||
      /* istanbul ignore next */
      (cov_1c92yngdri().b[27][1]++, "the player")));
      /* istanbul ignore next */
      cov_1c92yngdri().s[82]++;
      return {
        id:
        /* istanbul ignore next */
        "".concat(source.id, "-").concat(Date.now()),
        title: title,
        content: content,
        url:
        /* istanbul ignore next */
        "".concat(source.website, "/article/").concat(Date.now()),
        publishedAt: new Date(),
        category: source.category,
        tags:
        /* istanbul ignore next */
        [].concat(_toConsumableArray(trendingClubs), _toConsumableArray(trendingPlayers), _toConsumableArray(source.tags)),
        source: source
      };
    }
  }, {
    key: "getTrendingClubs",
    value: function getTrendingClubs(recentFeedItems) {
      /* istanbul ignore next */
      cov_1c92yngdri().f[19]++;
      var clubCounts =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[83]++, {});
      /* istanbul ignore next */
      cov_1c92yngdri().s[84]++;
      recentFeedItems.forEach(function (item) {
        /* istanbul ignore next */
        cov_1c92yngdri().f[20]++;
        cov_1c92yngdri().s[85]++;
        item.tags.clubs.forEach(function (club) {
          /* istanbul ignore next */
          cov_1c92yngdri().f[21]++;
          cov_1c92yngdri().s[86]++;
          clubCounts[club] = (
          /* istanbul ignore next */
          (cov_1c92yngdri().b[28][0]++, clubCounts[club]) ||
          /* istanbul ignore next */
          (cov_1c92yngdri().b[28][1]++, 0)) + 1;
        });
      });
      /* istanbul ignore next */
      cov_1c92yngdri().s[87]++;
      return Object.entries(clubCounts).sort(function (
      /* istanbul ignore next */
      _ref,
      /* istanbul ignore next */
      _ref2) {
        /* istanbul ignore next */
        var _ref3 = _slicedToArray(_ref, 2),
          a = _ref3[1];
        /* istanbul ignore next */
        var _ref4 = _slicedToArray(_ref2, 2),
          b = _ref4[1];
        /* istanbul ignore next */
        cov_1c92yngdri().f[22]++;
        cov_1c92yngdri().s[88]++;
        return b - a;
      }).map(function (
      /* istanbul ignore next */
      _ref5) {
        /* istanbul ignore next */
        var _ref6 = _slicedToArray(_ref5, 1),
          club = _ref6[0];
        /* istanbul ignore next */
        cov_1c92yngdri().f[23]++;
        cov_1c92yngdri().s[89]++;
        return club;
      }).slice(0, 3);
    }
  }, {
    key: "getTrendingPlayers",
    value: function getTrendingPlayers(recentFeedItems) {
      /* istanbul ignore next */
      cov_1c92yngdri().f[24]++;
      var playerCounts =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[90]++, {});
      /* istanbul ignore next */
      cov_1c92yngdri().s[91]++;
      recentFeedItems.forEach(function (item) {
        /* istanbul ignore next */
        cov_1c92yngdri().f[25]++;
        cov_1c92yngdri().s[92]++;
        item.tags.players.forEach(function (player) {
          /* istanbul ignore next */
          cov_1c92yngdri().f[26]++;
          cov_1c92yngdri().s[93]++;
          playerCounts[player] = (
          /* istanbul ignore next */
          (cov_1c92yngdri().b[29][0]++, playerCounts[player]) ||
          /* istanbul ignore next */
          (cov_1c92yngdri().b[29][1]++, 0)) + 1;
        });
      });
      /* istanbul ignore next */
      cov_1c92yngdri().s[94]++;
      return Object.entries(playerCounts).sort(function (
      /* istanbul ignore next */
      _ref7,
      /* istanbul ignore next */
      _ref8) {
        /* istanbul ignore next */
        var _ref9 = _slicedToArray(_ref7, 2),
          a = _ref9[1];
        /* istanbul ignore next */
        var _ref0 = _slicedToArray(_ref8, 2),
          b = _ref0[1];
        /* istanbul ignore next */
        cov_1c92yngdri().f[27]++;
        cov_1c92yngdri().s[95]++;
        return b - a;
      }).map(function (
      /* istanbul ignore next */
      _ref1) {
        /* istanbul ignore next */
        var _ref10 = _slicedToArray(_ref1, 1),
          player = _ref10[0];
        /* istanbul ignore next */
        cov_1c92yngdri().f[28]++;
        cov_1c92yngdri().s[96]++;
        return player;
      }).slice(0, 3);
    }
  }, {
    key: "getContentTemplates",
    value: function getContentTemplates(category) {
      /* istanbul ignore next */
      cov_1c92yngdri().f[29]++;
      var templates =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[97]++, {
        analysis: [{
          title: "Tactical Analysis: How {club}'s transfer strategy is shaping their season",
          content: "Deep dive into {club}'s recent transfer decisions and their tactical implications for the upcoming matches. Analysis includes formation changes and player positioning strategies."
        }, {
          title: "Transfer Impact: {player}'s role in modern football tactics",
          content: "Examining how {player}'s potential move could reshape tactical approaches across European football. Data-driven analysis of positional trends and market valuations."
        }],
        news: [{
          title: "Transfer Roundup: Latest developments around {club}",
          content: "Comprehensive update on {club}'s transfer activities, including confirmed deals, ongoing negotiations, and potential future targets for the current window."
        }, {
          title: "Market Watch: {player} situation developments",
          content: "Latest updates on {player}'s transfer situation, including club interest, personal terms negotiations, and potential impact on squad dynamics."
        }],
        entertainment: [{
          title: "Football Culture: The {club} phenomenon explained",
          content: "Exploring the cultural impact of {club}'s recent transfer activities and what it means for fan culture and football entertainment worldwide."
        }],
        tactical: [{
          title: "Formation Focus: How {club} could line up with new signings",
          content: "Tactical breakdown of {club}'s potential formations and strategies with their new signings, including strengths, weaknesses, and matchup advantages."
        }]
      });
      /* istanbul ignore next */
      cov_1c92yngdri().s[98]++;
      return /* istanbul ignore next */(cov_1c92yngdri().b[30][0]++, templates[category]) ||
      /* istanbul ignore next */
      (cov_1c92yngdri().b[30][1]++, templates.news);
    }
  }, {
    key: "extractClubsFromContent",
    value: function extractClubsFromContent(content) {
      /* istanbul ignore next */
      cov_1c92yngdri().f[30]++;
      var commonClubs =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[99]++, ["Arsenal", "Chelsea", "Liverpool", "Manchester United", "Manchester City", "Tottenham", "Real Madrid", "Barcelona", "Bayern Munich", "PSG", "Juventus"]);
      /* istanbul ignore next */
      cov_1c92yngdri().s[100]++;
      return commonClubs.filter(function (club) {
        /* istanbul ignore next */
        cov_1c92yngdri().f[31]++;
        cov_1c92yngdri().s[101]++;
        return content.toLowerCase().includes(club.toLowerCase());
      });
    }
  }, {
    key: "extractPlayersFromContent",
    value: function extractPlayersFromContent(content) {
      /* istanbul ignore next */
      cov_1c92yngdri().f[32]++;
      cov_1c92yngdri().s[102]++;
      // In production, this would use NLP to extract player names
      // For now, return empty array
      return [];
    }
  }, {
    key: "detectTransferType",
    value: function detectTransferType(content) {
      /* istanbul ignore next */
      cov_1c92yngdri().f[33]++;
      var transferKeywords =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[103]++, {
        confirmed: ["confirmed", "official", "announced"],
        rumour: ["rumoured", "linked", "interested"],
        medical: ["medical", "medical tests"],
        personal_terms: ["personal terms", "contract negotiations"]
      });
      var contentLower =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[104]++, content.toLowerCase());
      /* istanbul ignore next */
      cov_1c92yngdri().s[105]++;
      for (
      /* istanbul ignore next */
      var _i = 0, _Object$entries = Object.entries(transferKeywords);
      /* istanbul ignore next */
      _i < _Object$entries.length;
      /* istanbul ignore next */
      _i++) {
        var
          /* istanbul ignore next */
          _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
          /* istanbul ignore next */
          type = _Object$entries$_i[0],
          /* istanbul ignore next */
          keywords = _Object$entries$_i[1];
        /* istanbul ignore next */
        cov_1c92yngdri().s[106]++;
        if (keywords.some(function (keyword) {
          /* istanbul ignore next */
          cov_1c92yngdri().f[34]++;
          cov_1c92yngdri().s[107]++;
          return contentLower.includes(keyword);
        })) {
          /* istanbul ignore next */
          cov_1c92yngdri().b[31][0]++;
          cov_1c92yngdri().s[108]++;
          return type;
        } else
        /* istanbul ignore next */
        {
          cov_1c92yngdri().b[31][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1c92yngdri().s[109]++;
      return undefined;
    }
  }, {
    key: "shouldTerryCommentOnPartnerContent",
    value: function shouldTerryCommentOnPartnerContent(content) {
      /* istanbul ignore next */
      cov_1c92yngdri().f[35]++;
      // Terry comments less frequently on partner content (30% chance)
      // and prefers analysis/news over entertainment
      var categoryMultiplier =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[110]++, {
        analysis: 0.4,
        news: 0.3,
        tactical: 0.35,
        entertainment: 0.2
      });
      var chance =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[111]++,
      /* istanbul ignore next */
      (cov_1c92yngdri().b[32][0]++, categoryMultiplier[content.category]) ||
      /* istanbul ignore next */
      (cov_1c92yngdri().b[32][1]++, 0.2));
      /* istanbul ignore next */
      cov_1c92yngdri().s[112]++;
      return Math.random() < chance;
    }
  }, {
    key: "generatePartnerContentCommentary",
    value: function generatePartnerContentCommentary(content) {
      /* istanbul ignore next */
      cov_1c92yngdri().f[36]++;
      var partnerTemplates =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[113]++, [
      /* istanbul ignore next */
      "Right, {source} doing the heavy lifting while we wait for the next ITK update to set Twitter ablaze.",
      /* istanbul ignore next */
      "Quality content from {source} to fill the void between \"Here we go!\" announcements.",
      /* istanbul ignore next */
      "{source} proving that football journalism doesn't always have to involve someone's medical being \"scheduled for tomorrow.\"",
      /* istanbul ignore next */
      "Proper analysis from {source} - the kind that doesn't require refreshing Twitter every 30 seconds.",
      /* istanbul ignore next */
      "{source} with the sensible take while we wait for the next transfer circus to begin."]);
      var template =
      /* istanbul ignore next */
      (cov_1c92yngdri().s[114]++, partnerTemplates[Math.floor(Math.random() * partnerTemplates.length)]);
      /* istanbul ignore next */
      cov_1c92yngdri().s[115]++;
      return template.replace("{source}", content.source.name);
    }
  }]);
}();

// Export singleton instance
export var contentMixer =
/* istanbul ignore next */
(cov_1c92yngdri().s[116]++, new ContentMixer());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,