be6ec055a0a160529490e4da4434e28c
/* istanbul ignore next */
function cov_1wccg973yc() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/twitter/transferClassifier.ts";
  var hash = "a16a80882093d9b0b7a05640dc9d23e0fa88c3e0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/twitter/transferClassifier.ts",
    statementMap: {
      "0": {
        start: {
          line: 52,
          column: 26
        },
        end: {
          line: 59,
          column: 1
        }
      },
      "1": {
        start: {
          line: 64,
          column: 26
        },
        end: {
          line: 184,
          column: 1
        }
      },
      "2": {
        start: {
          line: 189,
          column: 30
        },
        end: {
          line: 214,
          column: 1
        }
      },
      "3": {
        start: {
          line: 190,
          column: 56
        },
        end: {
          line: 197,
          column: 3
        }
      },
      "4": {
        start: {
          line: 200,
          column: 2
        },
        end: {
          line: 203,
          column: 5
        }
      },
      "5": {
        start: {
          line: 201,
          column: 20
        },
        end: {
          line: 201,
          column: 39
        }
      },
      "6": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 202,
          column: 73
        }
      },
      "7": {
        start: {
          line: 206,
          column: 19
        },
        end: {
          line: 206,
          column: 53
        }
      },
      "8": {
        start: {
          line: 207,
          column: 2
        },
        end: {
          line: 207,
          column: 34
        }
      },
      "9": {
        start: {
          line: 207,
          column: 22
        },
        end: {
          line: 207,
          column: 34
        }
      },
      "10": {
        start: {
          line: 209,
          column: 2
        },
        end: {
          line: 213,
          column: 4
        }
      },
      "11": {
        start: {
          line: 211,
          column: 22
        },
        end: {
          line: 211,
          column: 40
        }
      },
      "12": {
        start: {
          line: 219,
          column: 39
        },
        end: {
          line: 229,
          column: 1
        }
      },
      "13": {
        start: {
          line: 223,
          column: 19
        },
        end: {
          line: 223,
          column: 48
        }
      },
      "14": {
        start: {
          line: 224,
          column: 20
        },
        end: {
          line: 224,
          column: 38
        }
      },
      "15": {
        start: {
          line: 226,
          column: 2
        },
        end: {
          line: 228,
          column: 4
        }
      },
      "16": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 227,
          column: 45
        }
      },
      "17": {
        start: {
          line: 234,
          column: 37
        },
        end: {
          line: 249,
          column: 1
        }
      },
      "18": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 238,
          column: 38
        }
      },
      "19": {
        start: {
          line: 239,
          column: 19
        },
        end: {
          line: 239,
          column: 46
        }
      },
      "20": {
        start: {
          line: 242,
          column: 2
        },
        end: {
          line: 246,
          column: 3
        }
      },
      "21": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 245,
          column: 5
        }
      },
      "22": {
        start: {
          line: 243,
          column: 35
        },
        end: {
          line: 243,
          column: 76
        }
      },
      "23": {
        start: {
          line: 244,
          column: 6
        },
        end: {
          line: 244,
          column: 58
        }
      },
      "24": {
        start: {
          line: 248,
          column: 2
        },
        end: {
          line: 248,
          column: 19
        }
      },
      "25": {
        start: {
          line: 254,
          column: 35
        },
        end: {
          line: 294,
          column: 1
        }
      },
      "26": {
        start: {
          line: 260,
          column: 19
        },
        end: {
          line: 260,
          column: 20
        }
      },
      "27": {
        start: {
          line: 263,
          column: 25
        },
        end: {
          line: 263,
          column: 65
        }
      },
      "28": {
        start: {
          line: 264,
          column: 2
        },
        end: {
          line: 264,
          column: 50
        }
      },
      "29": {
        start: {
          line: 267,
          column: 2
        },
        end: {
          line: 271,
          column: 3
        }
      },
      "30": {
        start: {
          line: 268,
          column: 4
        },
        end: {
          line: 268,
          column: 43
        }
      },
      "31": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 270,
          column: 22
        }
      },
      "32": {
        start: {
          line: 274,
          column: 2
        },
        end: {
          line: 284,
          column: 3
        }
      },
      "33": {
        start: {
          line: 275,
          column: 23
        },
        end: {
          line: 282,
          column: 5
        }
      },
      "34": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 283,
          column: 50
        }
      },
      "35": {
        start: {
          line: 287,
          column: 28
        },
        end: {
          line: 287,
          column: 78
        }
      },
      "36": {
        start: {
          line: 288,
          column: 31
        },
        end: {
          line: 290,
          column: 3
        }
      },
      "37": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 289,
          column: 56
        }
      },
      "38": {
        start: {
          line: 291,
          column: 2
        },
        end: {
          line: 291,
          column: 46
        }
      },
      "39": {
        start: {
          line: 291,
          column: 28
        },
        end: {
          line: 291,
          column: 46
        }
      },
      "40": {
        start: {
          line: 293,
          column: 2
        },
        end: {
          line: 293,
          column: 35
        }
      },
      "41": {
        start: {
          line: 299,
          column: 39
        },
        end: {
          line: 348,
          column: 1
        }
      },
      "42": {
        start: {
          line: 302,
          column: 15
        },
        end: {
          line: 302,
          column: 25
        }
      },
      "43": {
        start: {
          line: 303,
          column: 27
        },
        end: {
          line: 303,
          column: 47
        }
      },
      "44": {
        start: {
          line: 304,
          column: 17
        },
        end: {
          line: 304,
          column: 57
        }
      },
      "45": {
        start: {
          line: 307,
          column: 19
        },
        end: {
          line: 307,
          column: 66
        }
      },
      "46": {
        start: {
          line: 310,
          column: 2
        },
        end: {
          line: 319,
          column: 3
        }
      },
      "47": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 318,
          column: 6
        }
      },
      "48": {
        start: {
          line: 322,
          column: 23
        },
        end: {
          line: 322,
          column: 68
        }
      },
      "49": {
        start: {
          line: 325,
          column: 21
        },
        end: {
          line: 325,
          column: 78
        }
      },
      "50": {
        start: {
          line: 328,
          column: 28
        },
        end: {
          line: 328,
          column: 45
        }
      },
      "51": {
        start: {
          line: 331,
          column: 20
        },
        end: {
          line: 331,
          column: 92
        }
      },
      "52": {
        start: {
          line: 332,
          column: 2
        },
        end: {
          line: 334,
          column: 3
        }
      },
      "53": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 333,
          column: 97
        }
      },
      "54": {
        start: {
          line: 335,
          column: 2
        },
        end: {
          line: 337,
          column: 3
        }
      },
      "55": {
        start: {
          line: 336,
          column: 4
        },
        end: {
          line: 336,
          column: 49
        }
      },
      "56": {
        start: {
          line: 339,
          column: 2
        },
        end: {
          line: 347,
          column: 4
        }
      },
      "57": {
        start: {
          line: 353,
          column: 44
        },
        end: {
          line: 357,
          column: 1
        }
      },
      "58": {
        start: {
          line: 356,
          column: 2
        },
        end: {
          line: 356,
          column: 45
        }
      },
      "59": {
        start: {
          line: 362,
          column: 34
        },
        end: {
          line: 369,
          column: 1
        }
      },
      "60": {
        start: {
          line: 366,
          column: 2
        },
        end: {
          line: 368,
          column: 4
        }
      },
      "61": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 367,
          column: 78
        }
      },
      "62": {
        start: {
          line: 374,
          column: 38
        },
        end: {
          line: 415,
          column: 1
        }
      },
      "63": {
        start: {
          line: 377,
          column: 16
        },
        end: {
          line: 377,
          column: 38
        }
      },
      "64": {
        start: {
          line: 378,
          column: 26
        },
        end: {
          line: 380,
          column: 10
        }
      },
      "65": {
        start: {
          line: 379,
          column: 11
        },
        end: {
          line: 379,
          column: 30
        }
      },
      "66": {
        start: {
          line: 381,
          column: 25
        },
        end: {
          line: 383,
          column: 10
        }
      },
      "67": {
        start: {
          line: 382,
          column: 11
        },
        end: {
          line: 382,
          column: 30
        }
      },
      "68": {
        start: {
          line: 385,
          column: 24
        },
        end: {
          line: 392,
          column: 3
        }
      },
      "69": {
        start: {
          line: 387,
          column: 19
        },
        end: {
          line: 387,
          column: 42
        }
      },
      "70": {
        start: {
          line: 388,
          column: 6
        },
        end: {
          line: 388,
          column: 39
        }
      },
      "71": {
        start: {
          line: 389,
          column: 6
        },
        end: {
          line: 389,
          column: 17
        }
      },
      "72": {
        start: {
          line: 394,
          column: 20
        },
        end: {
          line: 402,
          column: 3
        }
      },
      "73": {
        start: {
          line: 396,
          column: 6
        },
        end: {
          line: 398,
          column: 7
        }
      },
      "74": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 397,
          column: 61
        }
      },
      "75": {
        start: {
          line: 399,
          column: 6
        },
        end: {
          line: 399,
          column: 17
        }
      },
      "76": {
        start: {
          line: 404,
          column: 2
        },
        end: {
          line: 414,
          column: 4
        }
      },
      "77": {
        start: {
          line: 410,
          column: 42
        },
        end: {
          line: 410,
          column: 60
        }
      },
      "78": {
        start: {
          line: 420,
          column: 37
        },
        end: {
          line: 435,
          column: 1
        }
      },
      "79": {
        start: {
          line: 424,
          column: 27
        },
        end: {
          line: 432,
          column: 3
        }
      },
      "80": {
        start: {
          line: 434,
          column: 2
        },
        end: {
          line: 434,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 189,
            column: 30
          },
          end: {
            line: 189,
            column: 31
          }
        },
        loc: {
          start: {
            line: 189,
            column: 71
          },
          end: {
            line: 214,
            column: 1
          }
        },
        line: 189
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 200,
            column: 44
          },
          end: {
            line: 200,
            column: 45
          }
        },
        loc: {
          start: {
            line: 200,
            column: 65
          },
          end: {
            line: 203,
            column: 3
          }
        },
        line: 200
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 211,
            column: 6
          },
          end: {
            line: 211,
            column: 7
          }
        },
        loc: {
          start: {
            line: 211,
            column: 22
          },
          end: {
            line: 211,
            column: 40
          }
        },
        line: 211
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 219,
            column: 39
          },
          end: {
            line: 219,
            column: 40
          }
        },
        loc: {
          start: {
            line: 222,
            column: 15
          },
          end: {
            line: 229,
            column: 1
          }
        },
        line: 222
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 226,
            column: 25
          },
          end: {
            line: 226,
            column: 26
          }
        },
        loc: {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 227,
            column: 45
          }
        },
        line: 227
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 234,
            column: 37
          },
          end: {
            line: 234,
            column: 38
          }
        },
        loc: {
          start: {
            line: 237,
            column: 55
          },
          end: {
            line: 249,
            column: 1
          }
        },
        line: 237
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 243,
            column: 22
          },
          end: {
            line: 243,
            column: 23
          }
        },
        loc: {
          start: {
            line: 243,
            column: 35
          },
          end: {
            line: 243,
            column: 76
          }
        },
        line: 243
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 254,
            column: 35
          },
          end: {
            line: 254,
            column: 36
          }
        },
        loc: {
          start: {
            line: 259,
            column: 13
          },
          end: {
            line: 294,
            column: 1
          }
        },
        line: 259
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 288,
            column: 54
          },
          end: {
            line: 288,
            column: 55
          }
        },
        loc: {
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 289,
            column: 56
          }
        },
        line: 289
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 299,
            column: 39
          },
          end: {
            line: 299,
            column: 40
          }
        },
        loc: {
          start: {
            line: 301,
            column: 27
          },
          end: {
            line: 348,
            column: 1
          }
        },
        line: 301
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 353,
            column: 44
          },
          end: {
            line: 353,
            column: 45
          }
        },
        loc: {
          start: {
            line: 355,
            column: 29
          },
          end: {
            line: 357,
            column: 1
          }
        },
        line: 355
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 362,
            column: 34
          },
          end: {
            line: 362,
            column: 35
          }
        },
        loc: {
          start: {
            line: 365,
            column: 29
          },
          end: {
            line: 369,
            column: 1
          }
        },
        line: 365
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 367,
            column: 4
          },
          end: {
            line: 367,
            column: 5
          }
        },
        loc: {
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 367,
            column: 78
          }
        },
        line: 367
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 374,
            column: 38
          },
          end: {
            line: 374,
            column: 39
          }
        },
        loc: {
          start: {
            line: 376,
            column: 5
          },
          end: {
            line: 415,
            column: 1
          }
        },
        line: 376
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 379,
            column: 4
          },
          end: {
            line: 379,
            column: 5
          }
        },
        loc: {
          start: {
            line: 379,
            column: 11
          },
          end: {
            line: 379,
            column: 30
          }
        },
        line: 379
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 382,
            column: 4
          },
          end: {
            line: 382,
            column: 5
          }
        },
        loc: {
          start: {
            line: 382,
            column: 11
          },
          end: {
            line: 382,
            column: 30
          }
        },
        line: 382
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 386,
            column: 5
          }
        },
        loc: {
          start: {
            line: 386,
            column: 16
          },
          end: {
            line: 390,
            column: 5
          }
        },
        line: 386
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 395,
            column: 4
          },
          end: {
            line: 395,
            column: 5
          }
        },
        loc: {
          start: {
            line: 395,
            column: 16
          },
          end: {
            line: 400,
            column: 5
          }
        },
        line: 395
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 410,
            column: 30
          },
          end: {
            line: 410,
            column: 31
          }
        },
        loc: {
          start: {
            line: 410,
            column: 42
          },
          end: {
            line: 410,
            column: 60
          }
        },
        line: 410
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 420,
            column: 37
          },
          end: {
            line: 420,
            column: 38
          }
        },
        loc: {
          start: {
            line: 422,
            column: 36
          },
          end: {
            line: 435,
            column: 1
          }
        },
        line: 422
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 202,
            column: 44
          },
          end: {
            line: 202,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 54
          },
          end: {
            line: 202,
            column: 68
          }
        }, {
          start: {
            line: 202,
            column: 71
          },
          end: {
            line: 202,
            column: 72
          }
        }],
        line: 202
      },
      "1": {
        loc: {
          start: {
            line: 207,
            column: 2
          },
          end: {
            line: 207,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 2
          },
          end: {
            line: 207,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "2": {
        loc: {
          start: {
            line: 210,
            column: 4
          },
          end: {
            line: 212,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 5
          },
          end: {
            line: 212,
            column: 35
          }
        }, {
          start: {
            line: 212,
            column: 40
          },
          end: {
            line: 212,
            column: 44
          }
        }],
        line: 210
      },
      "3": {
        loc: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "4": {
        loc: {
          start: {
            line: 267,
            column: 2
          },
          end: {
            line: 271,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 2
          },
          end: {
            line: 271,
            column: 3
          }
        }, {
          start: {
            line: 269,
            column: 9
          },
          end: {
            line: 271,
            column: 3
          }
        }],
        line: 267
      },
      "5": {
        loc: {
          start: {
            line: 274,
            column: 2
          },
          end: {
            line: 284,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 2
          },
          end: {
            line: 284,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "6": {
        loc: {
          start: {
            line: 283,
            column: 18
          },
          end: {
            line: 283,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 283,
            column: 18
          },
          end: {
            line: 283,
            column: 42
          }
        }, {
          start: {
            line: 283,
            column: 46
          },
          end: {
            line: 283,
            column: 49
          }
        }],
        line: 283
      },
      "7": {
        loc: {
          start: {
            line: 291,
            column: 2
          },
          end: {
            line: 291,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 2
          },
          end: {
            line: 291,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "8": {
        loc: {
          start: {
            line: 310,
            column: 2
          },
          end: {
            line: 319,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 310,
            column: 2
          },
          end: {
            line: 319,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 310
      },
      "9": {
        loc: {
          start: {
            line: 332,
            column: 2
          },
          end: {
            line: 334,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 2
          },
          end: {
            line: 334,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "10": {
        loc: {
          start: {
            line: 335,
            column: 2
          },
          end: {
            line: 337,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 2
          },
          end: {
            line: 337,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "11": {
        loc: {
          start: {
            line: 345,
            column: 16
          },
          end: {
            line: 345,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 345,
            column: 36
          },
          end: {
            line: 345,
            column: 55
          }
        }, {
          start: {
            line: 345,
            column: 58
          },
          end: {
            line: 345,
            column: 74
          }
        }],
        line: 345
      },
      "12": {
        loc: {
          start: {
            line: 364,
            column: 2
          },
          end: {
            line: 364,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 364,
            column: 26
          },
          end: {
            line: 364,
            column: 29
          }
        }],
        line: 364
      },
      "13": {
        loc: {
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 367,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 367,
            column: 40
          }
        }, {
          start: {
            line: 367,
            column: 44
          },
          end: {
            line: 367,
            column: 78
          }
        }],
        line: 367
      },
      "14": {
        loc: {
          start: {
            line: 387,
            column: 19
          },
          end: {
            line: 387,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 387,
            column: 19
          },
          end: {
            line: 387,
            column: 29
          }
        }, {
          start: {
            line: 387,
            column: 33
          },
          end: {
            line: 387,
            column: 42
          }
        }],
        line: 387
      },
      "15": {
        loc: {
          start: {
            line: 388,
            column: 19
          },
          end: {
            line: 388,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 388,
            column: 19
          },
          end: {
            line: 388,
            column: 28
          }
        }, {
          start: {
            line: 388,
            column: 32
          },
          end: {
            line: 388,
            column: 33
          }
        }],
        line: 388
      },
      "16": {
        loc: {
          start: {
            line: 396,
            column: 6
          },
          end: {
            line: 398,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 396,
            column: 6
          },
          end: {
            line: 398,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 396
      },
      "17": {
        loc: {
          start: {
            line: 397,
            column: 31
          },
          end: {
            line: 397,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 397,
            column: 31
          },
          end: {
            line: 397,
            column: 50
          }
        }, {
          start: {
            line: 397,
            column: 54
          },
          end: {
            line: 397,
            column: 55
          }
        }],
        line: 397
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a16a80882093d9b0b7a05640dc9d23e0fa88c3e0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wccg973yc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wccg973yc();
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
/**
 * Multi-language Transfer Content Classification
 * Detects transfer-related content across different languages and regions
 */

import { getTransferKeywords, getSourceByHandle } from "./globalSources";
/**
 * Language detection patterns
 */
var LANGUAGE_PATTERNS =
/* istanbul ignore next */
(cov_1wccg973yc().s[0]++, {
  en: /\b(the|and|or|is|are|was|were|have|has|will|would|could|should)\b/gi,
  es: /\b(el|la|los|las|y|o|es|son|fue|fueron|tiene|tendrá|podría|debería)\b/gi,
  it: /\b(il|la|i|le|e|o|è|sono|era|erano|ha|avrà|potrebbe|dovrebbe)\b/gi,
  fr: /\b(le|la|les|et|ou|est|sont|était|étaient|a|aura|pourrait|devrait)\b/gi,
  de: /\b(der|die|das|und|oder|ist|sind|war|waren|hat|wird|könnte|sollte)\b/gi,
  pt: /\b(o|a|os|as|e|ou|é|são|foi|foram|tem|terá|poderia|deveria)\b/gi
});

/**
 * Transfer context patterns by language
 */
var TRANSFER_CONTEXTS =
/* istanbul ignore next */
(cov_1wccg973yc().s[1]++, {
  en: {
    confirmed: ["done deal", "here we go", "official", "confirmed", "signed", "completed"],
    rumour: ["linked", "interested", "monitoring", "considering", "could", "might", "rumoured"],
    medical: ["medical", "medicals", "tests", "examination", "check-up"],
    bid: ["bid", "offer", "proposed", "rejected", "accepted", "negotiating"],
    personal_terms: ["personal terms", "terms agreed", "contract agreed", "wages agreed"]
  },
  es: {
    confirmed: ["hecho", "oficial", "confirmado", "firmado", "completado"],
    rumour: ["vinculado", "interesado", "monitoreando", "considerando", "podría", "rumoreado"],
    medical: ["reconocimiento médico", "exámenes", "pruebas médicas"],
    bid: ["oferta", "propuesta", "rechazado", "aceptado", "negociando"],
    personal_terms: ["términos personales", "contrato acordado", "salario acordado"]
  },
  it: {
    confirmed: ["fatto", "ufficiale", "confermato", "firmato", "completato"],
    rumour: ["collegato", "interessato", "monitoraggio", "considerando", "potrebbe", "voci"],
    medical: ["visite mediche", "esami", "controlli medici"],
    bid: ["offerta", "proposta", "rifiutato", "accettato", "trattativa"],
    personal_terms: ["accordo personale", "contratto concordato", "stipendio concordato"]
  },
  fr: {
    confirmed: ["fait", "officiel", "confirmé", "signé", "terminé"],
    rumour: ["lié", "intéressé", "surveillance", "considérant", "pourrait", "rumeur"],
    medical: ["visite médicale", "examens", "tests médicaux"],
    bid: ["offre", "proposition", "rejeté", "accepté", "négociation"],
    personal_terms: ["accord personnel", "contrat convenu", "salaire convenu"]
  },
  de: {
    confirmed: ["gemacht", "offiziell", "bestätigt", "unterschrieben", "abgeschlossen"],
    rumour: ["verknüpft", "interessiert", "beobachtung", "erwägt", "könnte", "gerücht"],
    medical: ["medizincheck", "untersuchungen", "medizinische tests"],
    bid: ["angebot", "vorschlag", "abgelehnt", "akzeptiert", "verhandlung"],
    personal_terms: ["persönliche bedingungen", "vertrag vereinbart", "gehalt vereinbart"]
  },
  pt: {
    confirmed: ["feito", "oficial", "confirmado", "assinado", "completado"],
    rumour: ["ligado", "interessado", "monitoramento", "considerando", "poderia", "rumor"],
    medical: ["exames médicos", "exames", "testes médicos"],
    bid: ["oferta", "proposta", "rejeitado", "aceito", "negociação"],
    personal_terms: ["termos pessoais", "contrato acordado", "salário acordado"]
  }
});

/**
 * Detect language of tweet content
 */
/* istanbul ignore next */
cov_1wccg973yc().s[2]++;
export var detectLanguage = function detectLanguage(text) {
  /* istanbul ignore next */
  var _Object$entries$find;
  cov_1wccg973yc().f[0]++;
  var scores =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[3]++, {
    en: 0,
    es: 0,
    it: 0,
    fr: 0,
    de: 0,
    pt: 0
  });

  // Count pattern matches for each language
  /* istanbul ignore next */
  cov_1wccg973yc().s[4]++;
  Object.entries(LANGUAGE_PATTERNS).forEach(function (
  /* istanbul ignore next */
  _ref) {
    /* istanbul ignore next */
    var _ref2 = _slicedToArray(_ref, 2),
      lang = _ref2[0],
      pattern = _ref2[1];
    /* istanbul ignore next */
    cov_1wccg973yc().f[1]++;
    var matches =
    /* istanbul ignore next */
    (cov_1wccg973yc().s[5]++, text.match(pattern));
    /* istanbul ignore next */
    cov_1wccg973yc().s[6]++;
    scores[lang] = matches ?
    /* istanbul ignore next */
    (cov_1wccg973yc().b[0][0]++, matches.length) :
    /* istanbul ignore next */
    (cov_1wccg973yc().b[0][1]++, 0);
  });

  // Return language with highest score, default to English
  var maxScore =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[7]++,
  /* istanbul ignore next */
  Math.max.apply(Math,
  /* istanbul ignore next */
  _toConsumableArray(Object.values(scores))));
  /* istanbul ignore next */
  cov_1wccg973yc().s[8]++;
  if (maxScore === 0) {
    /* istanbul ignore next */
    cov_1wccg973yc().b[1][0]++;
    cov_1wccg973yc().s[9]++;
    return "en";
  } else
  /* istanbul ignore next */
  {
    cov_1wccg973yc().b[1][1]++;
  }
  cov_1wccg973yc().s[10]++;
  return /* istanbul ignore next */(cov_1wccg973yc().b[2][0]++, (_Object$entries$find = Object.entries(scores).find(function (
  /* istanbul ignore next */
  _ref3) {
    /* istanbul ignore next */
    var _ref4 = _slicedToArray(_ref3, 2),
      _ = _ref4[0],
      score = _ref4[1];
    /* istanbul ignore next */
    cov_1wccg973yc().f[2]++;
    cov_1wccg973yc().s[11]++;
    return score === maxScore;
  })) === null || _Object$entries$find === void 0 ? void 0 :
  /* istanbul ignore next */
  _Object$entries$find[0]) ||
  /* istanbul ignore next */
  (cov_1wccg973yc().b[2][1]++, "en");
};

/**
 * Extract transfer-related keywords from text
 */
/* istanbul ignore next */
cov_1wccg973yc().s[12]++;
export var extractTransferKeywords = function extractTransferKeywords(text, language) {
  /* istanbul ignore next */
  cov_1wccg973yc().f[3]++;
  var keywords =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[13]++, getTransferKeywords(language));
  var lowerText =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[14]++, text.toLowerCase());
  /* istanbul ignore next */
  cov_1wccg973yc().s[15]++;
  return keywords.filter(function (keyword) {
    /* istanbul ignore next */
    cov_1wccg973yc().f[4]++;
    cov_1wccg973yc().s[16]++;
    return lowerText.includes(keyword.toLowerCase());
  });
};

/**
 * Determine transfer type based on context
 */
/* istanbul ignore next */
cov_1wccg973yc().s[17]++;
export var determineTransferType = function determineTransferType(text, language) {
  /* istanbul ignore next */
  cov_1wccg973yc().f[5]++;
  var lowerText =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[18]++, text.toLowerCase());
  var contexts =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[19]++, TRANSFER_CONTEXTS[language]);

  // Check each transfer type
  /* istanbul ignore next */
  cov_1wccg973yc().s[20]++;
  for (
  /* istanbul ignore next */
  var _i = 0, _Object$entries = Object.entries(contexts);
  /* istanbul ignore next */
  _i < _Object$entries.length;
  /* istanbul ignore next */
  _i++) {
    var
      /* istanbul ignore next */
      _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
      /* istanbul ignore next */
      type = _Object$entries$_i[0],
      /* istanbul ignore next */
      patterns = _Object$entries$_i[1];
    /* istanbul ignore next */
    cov_1wccg973yc().s[21]++;
    if (patterns.some(function (pattern) {
      /* istanbul ignore next */
      cov_1wccg973yc().f[6]++;
      cov_1wccg973yc().s[22]++;
      return lowerText.includes(pattern.toLowerCase());
    })) {
      /* istanbul ignore next */
      cov_1wccg973yc().b[3][0]++;
      cov_1wccg973yc().s[23]++;
      return type;
    } else
    /* istanbul ignore next */
    {
      cov_1wccg973yc().b[3][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1wccg973yc().s[24]++;
  return undefined;
};

/**
 * Calculate confidence score based on multiple factors
 */
/* istanbul ignore next */
cov_1wccg973yc().s[25]++;
export var calculateConfidence = function calculateConfidence(text, keywords, source, transferType) {
  /* istanbul ignore next */
  cov_1wccg973yc().f[7]++;
  var confidence =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[26]++, 0);

  // Keyword density (30% weight)
  var keywordDensity =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[27]++, keywords.length / text.split(" ").length);
  /* istanbul ignore next */
  cov_1wccg973yc().s[28]++;
  confidence += Math.min(keywordDensity * 3, 0.3);

  // Source reliability (40% weight)
  /* istanbul ignore next */
  cov_1wccg973yc().s[29]++;
  if (source) {
    /* istanbul ignore next */
    cov_1wccg973yc().b[4][0]++;
    cov_1wccg973yc().s[30]++;
    confidence += source.reliability * 0.4;
  } else {
    /* istanbul ignore next */
    cov_1wccg973yc().b[4][1]++;
    cov_1wccg973yc().s[31]++;
    confidence += 0.1; // Unknown source penalty
  }

  // Transfer type specificity (20% weight)
  /* istanbul ignore next */
  cov_1wccg973yc().s[32]++;
  if (transferType) {
    /* istanbul ignore next */
    cov_1wccg973yc().b[5][0]++;
    var typeScores =
    /* istanbul ignore next */
    (cov_1wccg973yc().s[33]++, {
      confirmed: 0.2,
      signing: 0.18,
      medical: 0.15,
      bid: 0.12,
      personal_terms: 0.15,
      rumour: 0.08
    });
    /* istanbul ignore next */
    cov_1wccg973yc().s[34]++;
    confidence +=
    /* istanbul ignore next */
    (cov_1wccg973yc().b[6][0]++, typeScores[transferType]) ||
    /* istanbul ignore next */
    (cov_1wccg973yc().b[6][1]++, 0.1);
  } else
  /* istanbul ignore next */
  {
    cov_1wccg973yc().b[5][1]++;
  }

  // Content quality indicators (10% weight)
  var qualityIndicators =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[35]++, ["exclusive", "breaking", "🚨", "✅", "here we go"]);
  var hasQualityIndicators =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[36]++, qualityIndicators.some(function (indicator) {
    /* istanbul ignore next */
    cov_1wccg973yc().f[8]++;
    cov_1wccg973yc().s[37]++;
    return text.toLowerCase().includes(indicator.toLowerCase());
  }));
  /* istanbul ignore next */
  cov_1wccg973yc().s[38]++;
  if (hasQualityIndicators) {
    /* istanbul ignore next */
    cov_1wccg973yc().b[7][0]++;
    cov_1wccg973yc().s[39]++;
    confidence += 0.1;
  } else
  /* istanbul ignore next */
  {
    cov_1wccg973yc().b[7][1]++;
  }
  cov_1wccg973yc().s[40]++;
  return Math.min(confidence, 1.0);
};

/**
 * Main classification function
 */
/* istanbul ignore next */
cov_1wccg973yc().s[41]++;
export var classifyTransferContent = function classifyTransferContent(tweet) {
  /* istanbul ignore next */
  cov_1wccg973yc().f[9]++;
  var text =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[42]++, tweet.text);
  var detectedLanguage =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[43]++, detectLanguage(text));
  var source =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[44]++, getSourceByHandle(tweet.author.username));

  // Extract transfer keywords
  var keywords =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[45]++, extractTransferKeywords(text, detectedLanguage));

  // Early exit if no transfer keywords found
  /* istanbul ignore next */
  cov_1wccg973yc().s[46]++;
  if (keywords.length === 0) {
    /* istanbul ignore next */
    cov_1wccg973yc().b[8][0]++;
    cov_1wccg973yc().s[47]++;
    return {
      isTransferRelated: false,
      confidence: 0,
      keywords: [],
      language: detectedLanguage,
      reasonCode: "NO_TRANSFER_KEYWORDS",
      explanation: "No transfer-related keywords found in the content"
    };
  } else
  /* istanbul ignore next */
  {
    cov_1wccg973yc().b[8][1]++;
  }

  // Determine transfer type
  var transferType =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[48]++, determineTransferType(text, detectedLanguage));

  // Calculate confidence
  var confidence =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[49]++, calculateConfidence(text, keywords, source, transferType));

  // Determine if transfer-related based on confidence threshold
  var isTransferRelated =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[50]++, confidence >= 0.3); // 30% minimum confidence

  // Generate explanation
  var explanation =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[51]++, "Found ".concat(keywords.length, " transfer keywords in ").concat(detectedLanguage, " text"));
  /* istanbul ignore next */
  cov_1wccg973yc().s[52]++;
  if (source) {
    /* istanbul ignore next */
    cov_1wccg973yc().b[9][0]++;
    cov_1wccg973yc().s[53]++;
    explanation +=
    /* istanbul ignore next */
    " from ".concat(source.name, " (").concat(Math.round(source.reliability * 100), "% reliability)");
  } else
  /* istanbul ignore next */
  {
    cov_1wccg973yc().b[9][1]++;
  }
  cov_1wccg973yc().s[54]++;
  if (transferType) {
    /* istanbul ignore next */
    cov_1wccg973yc().b[10][0]++;
    cov_1wccg973yc().s[55]++;
    explanation +=
    /* istanbul ignore next */
    " indicating ".concat(transferType);
  } else
  /* istanbul ignore next */
  {
    cov_1wccg973yc().b[10][1]++;
  }
  cov_1wccg973yc().s[56]++;
  return {
    isTransferRelated: isTransferRelated,
    confidence: Math.round(confidence * 100) / 100,
    // Round to 2 decimal places
    transferType: transferType,
    keywords: keywords,
    language: detectedLanguage,
    reasonCode: isTransferRelated ?
    /* istanbul ignore next */
    (cov_1wccg973yc().b[11][0]++, "TRANSFER_DETECTED") :
    /* istanbul ignore next */
    (cov_1wccg973yc().b[11][1]++, "LOW_CONFIDENCE"),
    explanation: explanation
  };
};

/**
 * Batch classification for multiple tweets
 */
/* istanbul ignore next */
cov_1wccg973yc().s[57]++;
export var classifyBatchTransferContent = function classifyBatchTransferContent(tweets) {
  /* istanbul ignore next */
  cov_1wccg973yc().f[10]++;
  cov_1wccg973yc().s[58]++;
  return tweets.map(classifyTransferContent);
};

/**
 * Filter tweets by confidence threshold
 */
/* istanbul ignore next */
cov_1wccg973yc().s[59]++;
export var filterByConfidence = function filterByConfidence(classifications) {
  /* istanbul ignore next */
  var minConfidence = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_1wccg973yc().b[12][0]++, 0.5);
  /* istanbul ignore next */
  cov_1wccg973yc().f[11]++;
  cov_1wccg973yc().s[60]++;
  return classifications.filter(function (result) {
    /* istanbul ignore next */
    cov_1wccg973yc().f[12]++;
    cov_1wccg973yc().s[61]++;
    return /* istanbul ignore next */(cov_1wccg973yc().b[13][0]++, result.isTransferRelated) &&
    /* istanbul ignore next */
    (cov_1wccg973yc().b[13][1]++, result.confidence >= minConfidence);
  });
};

/**
 * Get classification statistics
 */
/* istanbul ignore next */
cov_1wccg973yc().s[62]++;
export var getClassificationStats = function getClassificationStats(classifications) {
  /* istanbul ignore next */
  cov_1wccg973yc().f[13]++;
  var total =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[63]++, classifications.length);
  var transferRelated =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[64]++, classifications.filter(function (c) {
    /* istanbul ignore next */
    cov_1wccg973yc().f[14]++;
    cov_1wccg973yc().s[65]++;
    return c.isTransferRelated;
  }).length);
  var highConfidence =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[66]++, classifications.filter(function (c) {
    /* istanbul ignore next */
    cov_1wccg973yc().f[15]++;
    cov_1wccg973yc().s[67]++;
    return c.confidence >= 0.7;
  }).length);
  var languageStats =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[68]++, classifications.reduce(function (acc, c) {
    /* istanbul ignore next */
    cov_1wccg973yc().f[16]++;
    var lang =
    /* istanbul ignore next */
    (cov_1wccg973yc().s[69]++,
    /* istanbul ignore next */
    (cov_1wccg973yc().b[14][0]++, c.language) ||
    /* istanbul ignore next */
    (cov_1wccg973yc().b[14][1]++, "unknown"));
    /* istanbul ignore next */
    cov_1wccg973yc().s[70]++;
    acc[lang] = (
    /* istanbul ignore next */
    (cov_1wccg973yc().b[15][0]++, acc[lang]) ||
    /* istanbul ignore next */
    (cov_1wccg973yc().b[15][1]++, 0)) + 1;
    /* istanbul ignore next */
    cov_1wccg973yc().s[71]++;
    return acc;
  }, {}));
  var typeStats =
  /* istanbul ignore next */
  (cov_1wccg973yc().s[72]++, classifications.reduce(function (acc, c) {
    /* istanbul ignore next */
    cov_1wccg973yc().f[17]++;
    cov_1wccg973yc().s[73]++;
    if (c.transferType) {
      /* istanbul ignore next */
      cov_1wccg973yc().b[16][0]++;
      cov_1wccg973yc().s[74]++;
      acc[c.transferType] = (
      /* istanbul ignore next */
      (cov_1wccg973yc().b[17][0]++, acc[c.transferType]) ||
      /* istanbul ignore next */
      (cov_1wccg973yc().b[17][1]++, 0)) + 1;
    } else
    /* istanbul ignore next */
    {
      cov_1wccg973yc().b[16][1]++;
    }
    cov_1wccg973yc().s[75]++;
    return acc;
  }, {}));
  /* istanbul ignore next */
  cov_1wccg973yc().s[76]++;
  return {
    total: total,
    transferRelated: transferRelated,
    highConfidence: highConfidence,
    transferRate: Math.round(transferRelated / total * 100),
    averageConfidence: Math.round(classifications.reduce(function (sum, c) {
      /* istanbul ignore next */
      cov_1wccg973yc().f[18]++;
      cov_1wccg973yc().s[77]++;
      return sum + c.confidence;
    }, 0) / total * 100),
    languageStats: languageStats,
    typeStats: typeStats
  };
};

/**
 * Alias for classifyTransferContent to match expected import
 */
/* istanbul ignore next */
cov_1wccg973yc().s[78]++;
export var classifyTransferTweet =
/* istanbul ignore next */
/*#__PURE__*/function () {
  var _ref5 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(text)
  /* istanbul ignore next */
  {
    var tweet;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_1wccg973yc().f[19]++;
          // Create a minimal tweet object for classification
          tweet = (cov_1wccg973yc().s[79]++, {
            id: "temp",
            text: text,
            author: {
              username: "unknown",
              displayName: "Unknown"
            },
            createdAt: new Date().toISOString()
          });
          cov_1wccg973yc().s[80]++;
          return _context.a(2, classifyTransferContent(tweet));
      }
    }, _callee);
  }));
  return function classifyTransferTweet(_x) {
    return _ref5.apply(this, arguments);
  };
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,