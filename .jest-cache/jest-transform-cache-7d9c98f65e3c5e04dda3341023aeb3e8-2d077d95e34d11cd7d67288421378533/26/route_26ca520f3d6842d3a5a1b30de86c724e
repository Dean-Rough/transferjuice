f3f75c49fd63eca4e6148883974a42b9
/* istanbul ignore next */ function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["id"];
function cov_20ovzszryo() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/app/api/stories/route.ts";
  var hash = "68bb47dcfa50b586e1debffc2f738a920bdacd14";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/app/api/stories/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "1": {
        start: {
          line: 27,
          column: 26
        },
        end: {
          line: 41,
          column: 2
        }
      },
      "2": {
        start: {
          line: 31,
          column: 40
        },
        end: {
          line: 31,
          column: 62
        }
      },
      "3": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 45,
          column: 2
        }
      },
      "4": {
        start: {
          line: 49,
          column: 2
        },
        end: {
          line: 216,
          column: 3
        }
      },
      "5": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 36
        }
      },
      "6": {
        start: {
          line: 51,
          column: 25
        },
        end: {
          line: 51,
          column: 41
        }
      },
      "7": {
        start: {
          line: 54,
          column: 18
        },
        end: {
          line: 54,
          column: 76
        }
      },
      "8": {
        start: {
          line: 55,
          column: 19
        },
        end: {
          line: 55,
          column: 62
        }
      },
      "9": {
        start: {
          line: 56,
          column: 22
        },
        end: {
          line: 56,
          column: 48
        }
      },
      "10": {
        start: {
          line: 57,
          column: 19
        },
        end: {
          line: 57,
          column: 62
        }
      },
      "11": {
        start: {
          line: 58,
          column: 21
        },
        end: {
          line: 58,
          column: 49
        }
      },
      "12": {
        start: {
          line: 59,
          column: 19
        },
        end: {
          line: 59,
          column: 45
        }
      },
      "13": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "14": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "15": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 71
        }
      },
      "16": {
        start: {
          line: 75,
          column: 6
        },
        end: {
          line: 77,
          column: 8
        }
      },
      "17": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "18": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 81,
          column: 28
        }
      },
      "19": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "20": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 86,
          column: 29
        }
      },
      "21": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 89,
          column: 7
        }
      },
      "22": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 51
        }
      },
      "23": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 92,
          column: 7
        }
      },
      "24": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 49
        }
      },
      "25": {
        start: {
          line: 96,
          column: 20
        },
        end: {
          line: 133,
          column: 6
        }
      },
      "26": {
        start: {
          line: 136,
          column: 31
        },
        end: {
          line: 161,
          column: 7
        }
      },
      "27": {
        start: {
          line: 136,
          column: 55
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "28": {
        start: {
          line: 149,
          column: 40
        },
        end: {
          line: 149,
          column: 58
        }
      },
      "29": {
        start: {
          line: 151,
          column: 34
        },
        end: {
          line: 151,
          column: 44
        }
      },
      "30": {
        start: {
          line: 164,
          column: 23
        },
        end: {
          line: 164,
          column: 61
        }
      },
      "31": {
        start: {
          line: 167,
          column: 25
        },
        end: {
          line: 186,
          column: 6
        }
      },
      "32": {
        start: {
          line: 170,
          column: 56
        },
        end: {
          line: 170,
          column: 62
        }
      },
      "33": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 204,
          column: 7
        }
      },
      "34": {
        start: {
          line: 191,
          column: 45
        },
        end: {
          line: 194,
          column: 7
        }
      },
      "35": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 206,
          column: 61
        }
      },
      "36": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 215,
          column: 6
        }
      },
      "37": {
        start: {
          line: 221,
          column: 2
        },
        end: {
          line: 354,
          column: 3
        }
      },
      "38": {
        start: {
          line: 222,
          column: 17
        },
        end: {
          line: 222,
          column: 37
        }
      },
      "39": {
        start: {
          line: 225,
          column: 26
        },
        end: {
          line: 225,
          column: 55
        }
      },
      "40": {
        start: {
          line: 229,
          column: 6
        },
        end: {
          line: 229,
          column: 78
        }
      },
      "41": {
        start: {
          line: 230,
          column: 17
        },
        end: {
          line: 232,
          column: 6
        }
      },
      "42": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 248,
          column: 5
        }
      },
      "43": {
        start: {
          line: 236,
          column: 6
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "44": {
        start: {
          line: 251,
          column: 18
        },
        end: {
          line: 283,
          column: 6
        }
      },
      "45": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 322,
          column: 5
        }
      },
      "46": {
        start: {
          line: 287,
          column: 6
        },
        end: {
          line: 321,
          column: 7
        }
      },
      "47": {
        start: {
          line: 289,
          column: 18
        },
        end: {
          line: 293,
          column: 10
        }
      },
      "48": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "49": {
        start: {
          line: 296,
          column: 10
        },
        end: {
          line: 302,
          column: 13
        }
      },
      "50": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 311,
          column: 11
        }
      },
      "51": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 320,
          column: 11
        }
      },
      "52": {
        start: {
          line: 324,
          column: 4
        },
        end: {
          line: 331,
          column: 6
        }
      },
      "53": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 342,
          column: 5
        }
      },
      "54": {
        start: {
          line: 334,
          column: 6
        },
        end: {
          line: 341,
          column: 8
        }
      },
      "55": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 344,
          column: 60
        }
      },
      "56": {
        start: {
          line: 346,
          column: 4
        },
        end: {
          line: 353,
          column: 6
        }
      },
      "57": {
        start: {
          line: 359,
          column: 2
        },
        end: {
          line: 410,
          column: 3
        }
      },
      "58": {
        start: {
          line: 360,
          column: 17
        },
        end: {
          line: 360,
          column: 37
        }
      },
      "59": {
        start: {
          line: 363,
          column: 26
        },
        end: {
          line: 363,
          column: 55
        }
      },
      "60": {
        start: {
          line: 364,
          column: 34
        },
        end: {
          line: 364,
          column: 47
        }
      },
      "61": {
        start: {
          line: 367,
          column: 25
        },
        end: {
          line: 381,
          column: 6
        }
      },
      "62": {
        start: {
          line: 383,
          column: 4
        },
        end: {
          line: 387,
          column: 7
        }
      },
      "63": {
        start: {
          line: 389,
          column: 4
        },
        end: {
          line: 398,
          column: 5
        }
      },
      "64": {
        start: {
          line: 390,
          column: 6
        },
        end: {
          line: 397,
          column: 8
        }
      },
      "65": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 400,
          column: 60
        }
      },
      "66": {
        start: {
          line: 402,
          column: 4
        },
        end: {
          line: 409,
          column: 6
        }
      },
      "67": {
        start: {
          line: 415,
          column: 2
        },
        end: {
          line: 454,
          column: 3
        }
      },
      "68": {
        start: {
          line: 416,
          column: 16
        },
        end: {
          line: 416,
          column: 36
        }
      },
      "69": {
        start: {
          line: 417,
          column: 15
        },
        end: {
          line: 417,
          column: 41
        }
      },
      "70": {
        start: {
          line: 419,
          column: 4
        },
        end: {
          line: 427,
          column: 5
        }
      },
      "71": {
        start: {
          line: 420,
          column: 6
        },
        end: {
          line: 426,
          column: 8
        }
      },
      "72": {
        start: {
          line: 430,
          column: 4
        },
        end: {
          line: 437,
          column: 7
        }
      },
      "73": {
        start: {
          line: 439,
          column: 4
        },
        end: {
          line: 442,
          column: 7
        }
      },
      "74": {
        start: {
          line: 444,
          column: 4
        },
        end: {
          line: 444,
          column: 61
        }
      },
      "75": {
        start: {
          line: 446,
          column: 4
        },
        end: {
          line: 453,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 31,
            column: 32
          }
        },
        loc: {
          start: {
            line: 31,
            column: 40
          },
          end: {
            line: 31,
            column: 62
          }
        },
        line: 31
      },
      "1": {
        name: "GET",
        decl: {
          start: {
            line: 48,
            column: 22
          },
          end: {
            line: 48,
            column: 25
          }
        },
        loc: {
          start: {
            line: 48,
            column: 48
          },
          end: {
            line: 217,
            column: 1
          }
        },
        line: 48
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 136,
            column: 43
          },
          end: {
            line: 136,
            column: 44
          }
        },
        loc: {
          start: {
            line: 136,
            column: 55
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 136
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 149,
            column: 33
          },
          end: {
            line: 149,
            column: 34
          }
        },
        loc: {
          start: {
            line: 149,
            column: 40
          },
          end: {
            line: 149,
            column: 58
          }
        },
        line: 149
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 151,
            column: 27
          },
          end: {
            line: 151,
            column: 28
          }
        },
        loc: {
          start: {
            line: 151,
            column: 34
          },
          end: {
            line: 151,
            column: 44
          }
        },
        line: 151
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 170,
            column: 49
          },
          end: {
            line: 170,
            column: 50
          }
        },
        loc: {
          start: {
            line: 170,
            column: 56
          },
          end: {
            line: 170,
            column: 62
          }
        },
        line: 170
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 191,
            column: 37
          },
          end: {
            line: 191,
            column: 38
          }
        },
        loc: {
          start: {
            line: 191,
            column: 45
          },
          end: {
            line: 194,
            column: 7
          }
        },
        line: 191
      },
      "7": {
        name: "POST",
        decl: {
          start: {
            line: 220,
            column: 22
          },
          end: {
            line: 220,
            column: 26
          }
        },
        loc: {
          start: {
            line: 220,
            column: 49
          },
          end: {
            line: 355,
            column: 1
          }
        },
        line: 220
      },
      "8": {
        name: "PUT",
        decl: {
          start: {
            line: 358,
            column: 22
          },
          end: {
            line: 358,
            column: 25
          }
        },
        loc: {
          start: {
            line: 358,
            column: 48
          },
          end: {
            line: 411,
            column: 1
          }
        },
        line: 358
      },
      "9": {
        name: "DELETE",
        decl: {
          start: {
            line: 414,
            column: 22
          },
          end: {
            line: 414,
            column: 28
          }
        },
        loc: {
          start: {
            line: 414,
            column: 51
          },
          end: {
            line: 455,
            column: 1
          }
        },
        line: 414
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 54,
            column: 36
          },
          end: {
            line: 54,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 36
          },
          end: {
            line: 54,
            column: 61
          }
        }, {
          start: {
            line: 54,
            column: 65
          },
          end: {
            line: 54,
            column: 69
          }
        }],
        line: 54
      },
      "1": {
        loc: {
          start: {
            line: 55,
            column: 28
          },
          end: {
            line: 55,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 28
          },
          end: {
            line: 55,
            column: 54
          }
        }, {
          start: {
            line: 55,
            column: 58
          },
          end: {
            line: 55,
            column: 61
          }
        }],
        line: 55
      },
      "2": {
        loc: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "3": {
        loc: {
          start: {
            line: 70,
            column: 6
          },
          end: {
            line: 71,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 6
          },
          end: {
            line: 70,
            column: 15
          }
        }, {
          start: {
            line: 71,
            column: 6
          },
          end: {
            line: 71,
            column: 64
          }
        }],
        line: 70
      },
      "4": {
        loc: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "5": {
        loc: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "6": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 85,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 85,
            column: 16
          }
        }, {
          start: {
            line: 85,
            column: 20
          },
          end: {
            line: 85,
            column: 26
          }
        }],
        line: 85
      },
      "7": {
        loc: {
          start: {
            line: 87,
            column: 6
          },
          end: {
            line: 89,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 6
          },
          end: {
            line: 89,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "8": {
        loc: {
          start: {
            line: 90,
            column: 6
          },
          end: {
            line: 92,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 6
          },
          end: {
            line: 92,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "9": {
        loc: {
          start: {
            line: 138,
            column: 13
          },
          end: {
            line: 138,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 13
          },
          end: {
            line: 138,
            column: 41
          }
        }, {
          start: {
            line: 138,
            column: 45
          },
          end: {
            line: 138,
            column: 58
          }
        }],
        line: 138
      },
      "10": {
        loc: {
          start: {
            line: 212,
            column: 17
          },
          end: {
            line: 212,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 212,
            column: 42
          },
          end: {
            line: 212,
            column: 55
          }
        }, {
          start: {
            line: 212,
            column: 58
          },
          end: {
            line: 212,
            column: 73
          }
        }],
        line: 212
      },
      "11": {
        loc: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "12": {
        loc: {
          start: {
            line: 263,
            column: 21
          },
          end: {
            line: 265,
            column: 22
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 264,
            column: 47
          }
        }, {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 265,
            column: 22
          }
        }],
        line: 263
      },
      "13": {
        loc: {
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 277,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 269,
            column: 34
          }
        }, {
          start: {
            line: 269,
            column: 38
          },
          end: {
            line: 277,
            column: 9
          }
        }],
        line: 269
      },
      "14": {
        loc: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 322,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 322,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "15": {
        loc: {
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 286,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 286,
            column: 26
          }
        }, {
          start: {
            line: 286,
            column: 30
          },
          end: {
            line: 286,
            column: 59
          }
        }],
        line: 286
      },
      "16": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "17": {
        loc: {
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 342,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 342,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "18": {
        loc: {
          start: {
            line: 350,
            column: 17
          },
          end: {
            line: 350,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 350,
            column: 42
          },
          end: {
            line: 350,
            column: 55
          }
        }, {
          start: {
            line: 350,
            column: 58
          },
          end: {
            line: 350,
            column: 73
          }
        }],
        line: 350
      },
      "19": {
        loc: {
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 370,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 370,
            column: 30
          }
        }, {
          start: {
            line: 370,
            column: 34
          },
          end: {
            line: 370,
            column: 65
          }
        }],
        line: 370
      },
      "20": {
        loc: {
          start: {
            line: 371,
            column: 12
          },
          end: {
            line: 371,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 371,
            column: 12
          },
          end: {
            line: 371,
            column: 30
          }
        }, {
          start: {
            line: 371,
            column: 34
          },
          end: {
            line: 371,
            column: 73
          }
        }],
        line: 371
      },
      "21": {
        loc: {
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 372,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 372,
            column: 28
          }
        }, {
          start: {
            line: 372,
            column: 32
          },
          end: {
            line: 372,
            column: 66
          }
        }],
        line: 372
      },
      "22": {
        loc: {
          start: {
            line: 373,
            column: 12
          },
          end: {
            line: 373,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 373,
            column: 12
          },
          end: {
            line: 373,
            column: 34
          }
        }, {
          start: {
            line: 373,
            column: 38
          },
          end: {
            line: 373,
            column: 77
          }
        }],
        line: 373
      },
      "23": {
        loc: {
          start: {
            line: 374,
            column: 12
          },
          end: {
            line: 374,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 374,
            column: 12
          },
          end: {
            line: 374,
            column: 31
          }
        }, {
          start: {
            line: 374,
            column: 35
          },
          end: {
            line: 374,
            column: 68
          }
        }],
        line: 374
      },
      "24": {
        loc: {
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 375,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 375,
            column: 29
          }
        }, {
          start: {
            line: 375,
            column: 33
          },
          end: {
            line: 375,
            column: 62
          }
        }],
        line: 375
      },
      "25": {
        loc: {
          start: {
            line: 376,
            column: 12
          },
          end: {
            line: 378,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 12
          },
          end: {
            line: 376,
            column: 34
          }
        }, {
          start: {
            line: 376,
            column: 38
          },
          end: {
            line: 378,
            column: 9
          }
        }],
        line: 376
      },
      "26": {
        loc: {
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 398,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 398,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "27": {
        loc: {
          start: {
            line: 406,
            column: 17
          },
          end: {
            line: 406,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 406,
            column: 42
          },
          end: {
            line: 406,
            column: 55
          }
        }, {
          start: {
            line: 406,
            column: 58
          },
          end: {
            line: 406,
            column: 73
          }
        }],
        line: 406
      },
      "28": {
        loc: {
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 427,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 427,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 419
      },
      "29": {
        loc: {
          start: {
            line: 450,
            column: 17
          },
          end: {
            line: 450,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 450,
            column: 42
          },
          end: {
            line: 450,
            column: 55
          }
        }, {
          start: {
            line: 450,
            column: 58
          },
          end: {
            line: 450,
            column: 73
          }
        }],
        line: 450
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "68bb47dcfa50b586e1debffc2f738a920bdacd14"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_20ovzszryo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_20ovzszryo();
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * API Route: Partner Stories/Content Integration
 * Manages partner content from The Upshot, FourFourTwo, Football Ramble, etc.
 */

import { NextResponse } from 'next/server';
import { prisma } from '@/lib/prisma';
import { z } from 'zod';
import { FeedType, Priority, League } from '@prisma/client';

// Partner sources configuration
var PARTNER_SOURCES =
/* istanbul ignore next */
(cov_20ovzszryo().s[0]++, {
  'the-upshot': {
    name: 'The Upshot',
    tier: 2,
    reliability: 0.85
  },
  fourfourtwo: {
    name: 'FourFourTwo',
    tier: 2,
    reliability: 0.82
  },
  'football-ramble': {
    name: 'The Football Ramble',
    tier: 3,
    reliability: 0.75
  },
  'espn-fc': {
    name: 'ESPN FC',
    tier: 2,
    reliability: 0.8
  },
  'the-athletic': {
    name: 'The Athletic',
    tier: 1,
    reliability: 0.9
  },
  'sky-sports': {
    name: 'Sky Sports',
    tier: 1,
    reliability: 0.88
  },
  'bbc-sport': {
    name: 'BBC Sport',
    tier: 1,
    reliability: 0.92
  }
});

// Validation schemas
var CreateStorySchema =
/* istanbul ignore next */
(cov_20ovzszryo().s[1]++, z.object({
  title: z.string().min(1).max(200),
  content: z.string().min(1),
  excerpt: z.string().optional(),
  sourceKey: z.string().refine(function (key) {
    /* istanbul ignore next */
    cov_20ovzszryo().f[0]++;
    cov_20ovzszryo().s[2]++;
    return key in PARTNER_SOURCES;
  }, {
    message: 'Invalid partner source'
  }),
  originalUrl: z.string().url(),
  author: z.string().optional(),
  publishedAt: z.string().datetime().optional(),
  imageUrl: z.string().url().optional(),
  league: z.nativeEnum(League).optional(),
  tags: z.array(z.string()).optional(),
  priority: z.nativeEnum(Priority)[
  /* istanbul ignore next */
  "default"]('MEDIUM')
}));
var UpdateStorySchema =
/* istanbul ignore next */
(cov_20ovzszryo().s[3]++, CreateStorySchema.partial().extend({
  id: z.string()
}));

// GET - Retrieve partner stories
export
/* istanbul ignore next */
function GET(_x) {
  return _GET.apply(this, arguments);
}

// POST - Add partner story
/* istanbul ignore next */
function _GET() {
  _GET = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(request)
  /* istanbul ignore next */
  {
    var url, searchParams, limit, offset, sourceKey, league, fromDate, toDate, where, sourceName, stories, transformedStories, totalCount, partnerStats, _t;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_20ovzszryo().f[1]++;
          cov_20ovzszryo().s[4]++;
          _context.p = 1;
          url = (cov_20ovzszryo().s[5]++, new URL(request.url));
          searchParams = (cov_20ovzszryo().s[6]++, url.searchParams); // Parse query parameters
          limit = (cov_20ovzszryo().s[7]++, Math.min(parseInt(
          /* istanbul ignore next */
          (cov_20ovzszryo().b[0][0]++, searchParams.get('limit')) ||
          /* istanbul ignore next */
          (cov_20ovzszryo().b[0][1]++, '50')), 100));
          offset = (cov_20ovzszryo().s[8]++, parseInt(
          /* istanbul ignore next */
          (cov_20ovzszryo().b[1][0]++, searchParams.get('offset')) ||
          /* istanbul ignore next */
          (cov_20ovzszryo().b[1][1]++, '0')));
          sourceKey = (cov_20ovzszryo().s[9]++, searchParams.get('source'));
          league = (cov_20ovzszryo().s[10]++, searchParams.get('league'));
          fromDate = (cov_20ovzszryo().s[11]++, searchParams.get('fromDate'));
          toDate = (cov_20ovzszryo().s[12]++, searchParams.get('toDate')); // Build where clause
          where = (cov_20ovzszryo().s[13]++, {
            type: FeedType.PARTNER,
            isPublished: true,
            isArchived: false
          }); // Filter by partner source
          cov_20ovzszryo().s[14]++;
          if (
          /* istanbul ignore next */
          (cov_20ovzszryo().b[3][0]++, sourceKey) &&
          /* istanbul ignore next */
          (cov_20ovzszryo().b[3][1]++, PARTNER_SOURCES[sourceKey])) {
            /* istanbul ignore next */
            cov_20ovzszryo().b[2][0]++;
            sourceName = (cov_20ovzszryo().s[15]++, PARTNER_SOURCES[sourceKey].name);
            /* istanbul ignore next */
            cov_20ovzszryo().s[16]++;
            where.source = {
              name: sourceName
            };
          } else
          /* istanbul ignore next */
          {
            cov_20ovzszryo().b[2][1]++;
          }
          cov_20ovzszryo().s[17]++;
          if (league) {
            /* istanbul ignore next */
            cov_20ovzszryo().b[4][0]++;
            cov_20ovzszryo().s[18]++;
            where.league = league;
          } else
          /* istanbul ignore next */
          {
            cov_20ovzszryo().b[4][1]++;
          }

          // Date range filter
          cov_20ovzszryo().s[19]++;
          if (
          /* istanbul ignore next */
          (cov_20ovzszryo().b[6][0]++, fromDate) ||
          /* istanbul ignore next */
          (cov_20ovzszryo().b[6][1]++, toDate)) {
            /* istanbul ignore next */
            cov_20ovzszryo().b[5][0]++;
            cov_20ovzszryo().s[20]++;
            where.publishedAt = {};
            /* istanbul ignore next */
            cov_20ovzszryo().s[21]++;
            if (fromDate) {
              /* istanbul ignore next */
              cov_20ovzszryo().b[7][0]++;
              cov_20ovzszryo().s[22]++;
              where.publishedAt.gte = new Date(fromDate);
            } else
            /* istanbul ignore next */
            {
              cov_20ovzszryo().b[7][1]++;
            }
            cov_20ovzszryo().s[23]++;
            if (toDate) {
              /* istanbul ignore next */
              cov_20ovzszryo().b[8][0]++;
              cov_20ovzszryo().s[24]++;
              where.publishedAt.lte = new Date(toDate);
            } else
            /* istanbul ignore next */
            {
              cov_20ovzszryo().b[8][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_20ovzszryo().b[5][1]++;
          }

          // Fetch stories
          cov_20ovzszryo().s[25]++;
          _context.n = 2;
          return prisma.feedItem.findMany({
            where: where,
            include: {
              source: {
                select: {
                  id: true,
                  name: true,
                  username: true,
                  tier: true,
                  reliability: true,
                  isVerified: true
                }
              },
              tags: {
                include: {
                  tag: {
                    select: {
                      id: true,
                      name: true,
                      type: true
                    }
                  }
                }
              },
              media: {
                select: {
                  id: true,
                  type: true,
                  url: true,
                  thumbnailUrl: true,
                  altText: true
                }
              }
            },
            orderBy: [{
              priority: 'desc'
            }, {
              publishedAt: 'desc'
            }],
            take: limit,
            skip: offset
          });
        case 2:
          stories = _context.v;
          // Transform to story format
          transformedStories = (cov_20ovzszryo().s[26]++, stories.map(function (story) {
            /* istanbul ignore next */
            var _story$media$find;
            cov_20ovzszryo().f[2]++;
            cov_20ovzszryo().s[27]++;
            return {
              id: story.id,
              title:
              /* istanbul ignore next */
              (cov_20ovzszryo().b[9][0]++, story.content.split('\n')[0]) ||
              /* istanbul ignore next */
              (cov_20ovzszryo().b[9][1]++, story.content),
              // First line as title
              content: story.content,
              excerpt: story.terryCommentary,
              source: {
                name: story.source.name,
                tier: story.source.tier,
                reliability: story.source.reliability,
                isVerified: story.source.isVerified
              },
              originalUrl: story.originalUrl,
              publishedAt: story.publishedAt,
              imageUrl:
              /* istanbul ignore next */
              (_story$media$find = story.media.find(function (m) {
                /* istanbul ignore next */
                cov_20ovzszryo().f[3]++;
                cov_20ovzszryo().s[28]++;
                return m.type === 'IMAGE';
              })) === null || _story$media$find === void 0 ? void 0 :
              /* istanbul ignore next */
              _story$media$find.url,
              league: story.league,
              tags: story.tags.map(function (t) {
                /* istanbul ignore next */
                cov_20ovzszryo().f[4]++;
                cov_20ovzszryo().s[29]++;
                return t.tag.name;
              }),
              engagement: {
                shares: story.originalShares + story.ourShares,
                reactions: story.originalLikes + story.ourReactions,
                clicks: story.ourClicks
              },
              metadata: {
                priority: story.priority.toLowerCase(),
                relevanceScore: story.relevanceScore
              }
            };
          })); // Get total count
          cov_20ovzszryo().s[30]++;
          _context.n = 3;
          return prisma.feedItem.count({
            where: where
          });
        case 3:
          totalCount = _context.v;
          cov_20ovzszryo().s[31]++;
          _context.n = 4;
          return prisma.iTKSource.findMany({
            where: {
              name: {
                /* istanbul ignore next */
                "in": Object.values(PARTNER_SOURCES).map(function (p) {
                  /* istanbul ignore next */
                  cov_20ovzszryo().f[5]++;
                  cov_20ovzszryo().s[32]++;
                  return p.name;
                })
              }
            },
            select: {
              name: true,
              _count: {
                select: {
                  feedItems: {
                    where: {
                      type: FeedType.PARTNER,
                      isPublished: true
                    }
                  }
                }
              }
            }
          });
        case 4:
          partnerStats = _context.v;
          cov_20ovzszryo().s[33]++;
          return _context.a(2, NextResponse.json({
            success: true,
            data: transformedStories,
            partnerStats: partnerStats.map(function (p) {
              /* istanbul ignore next */
              cov_20ovzszryo().f[6]++;
              cov_20ovzszryo().s[34]++;
              return {
                name: p.name,
                storyCount: p._count.feedItems
              };
            }),
            pagination: {
              total: totalCount,
              limit: limit,
              offset: offset,
              hasMore: offset + limit < totalCount
            },
            meta: {
              fetchedAt: new Date().toISOString()
            }
          }));
        case 5:
          _context.p = 5;
          _t = _context.v;
          cov_20ovzszryo().s[35]++;
          console.error('Failed to fetch partner stories:',
          /* istanbul ignore next */
          _t);
          cov_20ovzszryo().s[36]++;
          return _context.a(2, NextResponse.json({
            success: false,
            error: 'Failed to fetch partner stories',
            details:
            /* istanbul ignore next */
            _t instanceof Error ?
            /* istanbul ignore next */
            (cov_20ovzszryo().b[10][0]++,
            /* istanbul ignore next */
            _t.message) :
            /* istanbul ignore next */
            (cov_20ovzszryo().b[10][1]++, 'Unknown error')
          }, {
            status: 500
          }));
      }
    }, _callee, null, [[1, 5]]);
  }));
  return _GET.apply(this, arguments);
}
export
/* istanbul ignore next */
function POST(_x2) {
  return _POST.apply(this, arguments);
}

// PUT - Update partner story
/* istanbul ignore next */
function _POST() {
  _POST = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2(request)
  /* istanbul ignore next */
  {
    var body, validatedData, partnerConfig, source, story, _iterator, _step, tagName, tag, _t2, _t3;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_20ovzszryo().f[7]++;
          cov_20ovzszryo().s[37]++;
          _context2.p = 1;
          cov_20ovzszryo().s[38]++;
          _context2.n = 2;
          return request.json();
        case 2:
          body = _context2.v;
          // Validate input
          validatedData = (cov_20ovzszryo().s[39]++, CreateStorySchema.parse(body)); // Get or create partner source
          partnerConfig = (cov_20ovzszryo().s[40]++, PARTNER_SOURCES[validatedData.sourceKey]);
          cov_20ovzszryo().s[41]++;
          _context2.n = 3;
          return prisma.iTKSource.findUnique({
            where: {
              name: partnerConfig.name
            }
          });
        case 3:
          source = _context2.v;
          cov_20ovzszryo().s[42]++;
          if (source) {
            _context2.n = 5;
            break;
          }
          cov_20ovzszryo().b[11][0]++;
          cov_20ovzszryo().s[43]++;
          _context2.n = 4;
          return prisma.iTKSource.create({
            data: {
              name: partnerConfig.name,
              username: validatedData.sourceKey,
              tier: partnerConfig.tier,
              reliability: partnerConfig.reliability,
              region: 'GLOBAL',
              isActive: true,
              isVerified: true,
              description:
              /* istanbul ignore next */
              "Official ".concat(partnerConfig.name, " partnership")
            }
          });
        case 4:
          source = _context2.v;
          _context2.n = 6;
          break;
        case 5:
          cov_20ovzszryo().b[11][1]++;
        case 6:
          cov_20ovzszryo().s[44]++;
          _context2.n = 7;
          return prisma.feedItem.create({
            data:
            /* istanbul ignore next */
            _objectSpread({
              type: FeedType.PARTNER,
              content: validatedData.content,
              terryCommentary: validatedData.excerpt,
              originalText: validatedData.title,
              sourceId: source.id,
              originalUrl: validatedData.originalUrl,
              transferType: null,
              // Partner content doesn't have transfer type
              priority: validatedData.priority,
              relevanceScore: partnerConfig.reliability,
              league: validatedData.league,
              publishedAt: validatedData.publishedAt ?
              /* istanbul ignore next */
              (cov_20ovzszryo().b[12][0]++, new Date(validatedData.publishedAt)) :
              /* istanbul ignore next */
              (cov_20ovzszryo().b[12][1]++, new Date()),
              isProcessed: true,
              isPublished: true
            },
            /* istanbul ignore next */
            (cov_20ovzszryo().b[13][0]++, validatedData.imageUrl) &&
            /* istanbul ignore next */
            (cov_20ovzszryo().b[13][1]++, {
              media: {
                create: {
                  type: 'IMAGE',
                  url: validatedData.imageUrl,
                  altText: validatedData.title
                }
              }
            })),
            include: {
              source: true,
              media: true
            }
          });
        case 7:
          story = _context2.v;
          cov_20ovzszryo().s[45]++;
          if (!(
          /* istanbul ignore next */
          (cov_20ovzszryo().b[15][0]++, validatedData.tags) &&
          /* istanbul ignore next */
          (cov_20ovzszryo().b[15][1]++, validatedData.tags.length > 0))) {
            _context2.n = 20;
            break;
          }
          cov_20ovzszryo().b[14][0]++;
          cov_20ovzszryo().s[46]++;
          _iterator = _createForOfIteratorHelper(validatedData.tags);
          _context2.p = 8;
          _iterator.s();
        case 9:
          if ((_step = _iterator.n()).done) {
            _context2.n = 16;
            break;
          }
          tagName = _step.value;
          cov_20ovzszryo().s[47]++;
          _context2.n = 10;
          return prisma.tag.findFirst({
            where: {
              normalizedName: tagName.toLowerCase().replace(/\s+/g, '')
            }
          });
        case 10:
          tag = _context2.v;
          cov_20ovzszryo().s[48]++;
          if (tag) {
            _context2.n = 12;
            break;
          }
          cov_20ovzszryo().b[16][0]++;
          cov_20ovzszryo().s[49]++;
          _context2.n = 11;
          return prisma.tag.create({
            data: {
              name: tagName,
              type: 'GENERAL',
              normalizedName: tagName.toLowerCase().replace(/\s+/g, '')
            }
          });
        case 11:
          tag = _context2.v;
          _context2.n = 13;
          break;
        case 12:
          cov_20ovzszryo().b[16][1]++;
        case 13:
          cov_20ovzszryo().s[50]++;
          _context2.n = 14;
          return prisma.feedItemTag.create({
            data: {
              feedItemId: story.id,
              tagId: tag.id
            }
          });
        case 14:
          cov_20ovzszryo().s[51]++;
          _context2.n = 15;
          return prisma.tag.update({
            where: {
              id: tag.id
            },
            data: {
              usageCount: {
                increment: 1
              },
              lastUsedAt: new Date()
            }
          });
        case 15:
          _context2.n = 9;
          break;
        case 16:
          _context2.n = 18;
          break;
        case 17:
          _context2.p = 17;
          _t2 = _context2.v;
          _iterator.e(_t2);
        case 18:
          _context2.p = 18;
          _iterator.f();
          return _context2.f(18);
        case 19:
          _context2.n = 21;
          break;
        case 20:
          cov_20ovzszryo().b[14][1]++;
        case 21:
          cov_20ovzszryo().s[52]++;
          return _context2.a(2, NextResponse.json({
            success: true,
            data: story,
            message: 'Partner story created successfully'
          }, {
            status: 201
          }));
        case 22:
          _context2.p = 22;
          _t3 = _context2.v;
          cov_20ovzszryo().s[53]++;
          if (!(
          /* istanbul ignore next */
          _t3 instanceof z.ZodError)) {
            _context2.n = 23;
            break;
          }
          cov_20ovzszryo().b[17][0]++;
          cov_20ovzszryo().s[54]++;
          return _context2.a(2, NextResponse.json({
            success: false,
            error: 'Invalid story data',
            details:
            /* istanbul ignore next */
            _t3.errors
          }, {
            status: 400
          }));
        case 23:
          cov_20ovzszryo().b[17][1]++;
        case 24:
          cov_20ovzszryo().s[55]++;
          console.error('Failed to create partner story:',
          /* istanbul ignore next */
          _t3);
          cov_20ovzszryo().s[56]++;
          return _context2.a(2, NextResponse.json({
            success: false,
            error: 'Failed to create partner story',
            details:
            /* istanbul ignore next */
            _t3 instanceof Error ?
            /* istanbul ignore next */
            (cov_20ovzszryo().b[18][0]++,
            /* istanbul ignore next */
            _t3.message) :
            /* istanbul ignore next */
            (cov_20ovzszryo().b[18][1]++, 'Unknown error')
          }, {
            status: 500
          }));
      }
    }, _callee2, null, [[8, 17, 18, 19], [1, 22]]);
  }));
  return _POST.apply(this, arguments);
}
export
/* istanbul ignore next */
function PUT(_x3) {
  return _PUT.apply(this, arguments);
}

// DELETE - Archive partner story
/* istanbul ignore next */
function _PUT() {
  _PUT = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee3(request)
  /* istanbul ignore next */
  {
    var body, validatedData, _ref, id, updateData, updatedStory, _t4;
    return _regenerator().w(function (_context3) {
      while (1) switch (_context3.n) {
        case 0:
          cov_20ovzszryo().f[8]++;
          cov_20ovzszryo().s[57]++;
          _context3.p = 1;
          cov_20ovzszryo().s[58]++;
          _context3.n = 2;
          return request.json();
        case 2:
          body = _context3.v;
          // Validate input
          validatedData = (cov_20ovzszryo().s[59]++, UpdateStorySchema.parse(body));
          _ref = (cov_20ovzszryo().s[60]++, validatedData), id = _ref.id, updateData = _objectWithoutProperties(_ref, _excluded); // Update feed item
          cov_20ovzszryo().s[61]++;
          _context3.n = 3;
          return prisma.feedItem.update({
            where: {
              id: id
            },
            data:
            /* istanbul ignore next */
            _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},
            /* istanbul ignore next */
            (cov_20ovzszryo().b[19][0]++, updateData.content) &&
            /* istanbul ignore next */
            (cov_20ovzszryo().b[19][1]++, {
              content: updateData.content
            })),
            /* istanbul ignore next */
            (cov_20ovzszryo().b[20][0]++, updateData.excerpt) &&
            /* istanbul ignore next */
            (cov_20ovzszryo().b[20][1]++, {
              terryCommentary: updateData.excerpt
            })),
            /* istanbul ignore next */
            (cov_20ovzszryo().b[21][0]++, updateData.title) &&
            /* istanbul ignore next */
            (cov_20ovzszryo().b[21][1]++, {
              originalText: updateData.title
            })),
            /* istanbul ignore next */
            (cov_20ovzszryo().b[22][0]++, updateData.originalUrl) &&
            /* istanbul ignore next */
            (cov_20ovzszryo().b[22][1]++, {
              originalUrl: updateData.originalUrl
            })),
            /* istanbul ignore next */
            (cov_20ovzszryo().b[23][0]++, updateData.priority) &&
            /* istanbul ignore next */
            (cov_20ovzszryo().b[23][1]++, {
              priority: updateData.priority
            })),
            /* istanbul ignore next */
            (cov_20ovzszryo().b[24][0]++, updateData.league) &&
            /* istanbul ignore next */
            (cov_20ovzszryo().b[24][1]++, {
              league: updateData.league
            })),
            /* istanbul ignore next */
            (cov_20ovzszryo().b[25][0]++, updateData.publishedAt) &&
            /* istanbul ignore next */
            (cov_20ovzszryo().b[25][1]++, {
              publishedAt: new Date(updateData.publishedAt)
            })), {}, {
              updatedAt: new Date()
            })
          });
        case 3:
          updatedStory = _context3.v;
          cov_20ovzszryo().s[62]++;
          return _context3.a(2, NextResponse.json({
            success: true,
            data: updatedStory,
            message: 'Partner story updated successfully'
          }));
        case 4:
          _context3.p = 4;
          _t4 = _context3.v;
          cov_20ovzszryo().s[63]++;
          if (!(
          /* istanbul ignore next */
          _t4 instanceof z.ZodError)) {
            _context3.n = 5;
            break;
          }
          cov_20ovzszryo().b[26][0]++;
          cov_20ovzszryo().s[64]++;
          return _context3.a(2, NextResponse.json({
            success: false,
            error: 'Invalid update data',
            details:
            /* istanbul ignore next */
            _t4.errors
          }, {
            status: 400
          }));
        case 5:
          cov_20ovzszryo().b[26][1]++;
        case 6:
          cov_20ovzszryo().s[65]++;
          console.error('Failed to update partner story:',
          /* istanbul ignore next */
          _t4);
          cov_20ovzszryo().s[66]++;
          return _context3.a(2, NextResponse.json({
            success: false,
            error: 'Failed to update partner story',
            details:
            /* istanbul ignore next */
            _t4 instanceof Error ?
            /* istanbul ignore next */
            (cov_20ovzszryo().b[27][0]++,
            /* istanbul ignore next */
            _t4.message) :
            /* istanbul ignore next */
            (cov_20ovzszryo().b[27][1]++, 'Unknown error')
          }, {
            status: 500
          }));
      }
    }, _callee3, null, [[1, 4]]);
  }));
  return _PUT.apply(this, arguments);
}
export
/* istanbul ignore next */
function DELETE(_x4) {
  return _DELETE.apply(this, arguments);
}
/* istanbul ignore next */
function _DELETE() {
  _DELETE = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee4(request)
  /* istanbul ignore next */
  {
    var url, id, _t5;
    return _regenerator().w(function (_context4) {
      while (1) switch (_context4.n) {
        case 0:
          cov_20ovzszryo().f[9]++;
          cov_20ovzszryo().s[67]++;
          _context4.p = 1;
          url = (cov_20ovzszryo().s[68]++, new URL(request.url));
          id = (cov_20ovzszryo().s[69]++, url.searchParams.get('id'));
          cov_20ovzszryo().s[70]++;
          if (id) {
            _context4.n = 2;
            break;
          }
          cov_20ovzszryo().b[28][0]++;
          cov_20ovzszryo().s[71]++;
          return _context4.a(2, NextResponse.json({
            success: false,
            error: 'Story ID is required'
          }, {
            status: 400
          }));
        case 2:
          cov_20ovzszryo().b[28][1]++;
        case 3:
          cov_20ovzszryo().s[72]++;
          _context4.n = 4;
          return prisma.feedItem.update({
            where: {
              id: id
            },
            data: {
              isArchived: true,
              isPublished: false,
              updatedAt: new Date()
            }
          });
        case 4:
          cov_20ovzszryo().s[73]++;
          return _context4.a(2, NextResponse.json({
            success: true,
            message: 'Partner story archived successfully'
          }));
        case 5:
          _context4.p = 5;
          _t5 = _context4.v;
          cov_20ovzszryo().s[74]++;
          console.error('Failed to archive partner story:',
          /* istanbul ignore next */
          _t5);
          cov_20ovzszryo().s[75]++;
          return _context4.a(2, NextResponse.json({
            success: false,
            error: 'Failed to archive partner story',
            details:
            /* istanbul ignore next */
            _t5 instanceof Error ?
            /* istanbul ignore next */
            (cov_20ovzszryo().b[29][0]++,
            /* istanbul ignore next */
            _t5.message) :
            /* istanbul ignore next */
            (cov_20ovzszryo().b[29][1]++, 'Unknown error')
          }, {
            status: 500
          }));
      }
    }, _callee4, null, [[1, 5]]);
  }));
  return _DELETE.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,