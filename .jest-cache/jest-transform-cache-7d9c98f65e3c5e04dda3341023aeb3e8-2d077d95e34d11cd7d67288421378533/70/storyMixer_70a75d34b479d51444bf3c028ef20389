cc81d9e45a61034a9e96ffc8745e5ed9
/* istanbul ignore next */ function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function cov_2ezafhrkh4() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/partnerships/storyMixer.ts";
  var hash = "e44cff9c13a5229eb63fc272fb40f4b3eb82b626";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/partnerships/storyMixer.ts",
    statementMap: {
      "0": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 13
        }
      },
      "1": {
        start: {
          line: 54,
          column: 2
        },
        end: {
          line: 56,
          column: 4
        }
      },
      "2": {
        start: {
          line: 58,
          column: 38
        },
        end: {
          line: 58,
          column: 40
        }
      },
      "3": {
        start: {
          line: 60,
          column: 2
        },
        end: {
          line: 87,
          column: 3
        }
      },
      "4": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "5": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 63,
          column: 64
        }
      },
      "6": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 64,
          column: 34
        }
      },
      "7": {
        start: {
          line: 68,
          column: 28
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "8": {
        start: {
          line: 69,
          column: 6
        },
        end: {
          line: 69,
          column: 41
        }
      },
      "9": {
        start: {
          line: 73,
          column: 26
        },
        end: {
          line: 77,
          column: 6
        }
      },
      "10": {
        start: {
          line: 74,
          column: 21
        },
        end: {
          line: 74,
          column: 71
        }
      },
      "11": {
        start: {
          line: 75,
          column: 21
        },
        end: {
          line: 75,
          column: 71
        }
      },
      "12": {
        start: {
          line: 76,
          column: 6
        },
        end: {
          line: 76,
          column: 29
        }
      },
      "13": {
        start: {
          line: 80,
          column: 28
        },
        end: {
          line: 80,
          column: 63
        }
      },
      "14": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 73
        }
      },
      "15": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 27
        }
      },
      "16": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 62
        }
      },
      "17": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 86,
          column: 14
        }
      },
      "18": {
        start: {
          line: 97,
          column: 2
        },
        end: {
          line: 111,
          column: 3
        }
      },
      "19": {
        start: {
          line: 99,
          column: 6
        },
        end: {
          line: 99,
          column: 44
        }
      },
      "20": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 101,
          column: 49
        }
      },
      "21": {
        start: {
          line: 103,
          column: 6
        },
        end: {
          line: 103,
          column: 52
        }
      },
      "22": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 105,
          column: 46
        }
      },
      "23": {
        start: {
          line: 107,
          column: 6
        },
        end: {
          line: 107,
          column: 44
        }
      },
      "24": {
        start: {
          line: 109,
          column: 6
        },
        end: {
          line: 109,
          column: 52
        }
      },
      "25": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 110,
          column: 16
        }
      },
      "26": {
        start: {
          line: 118,
          column: 2
        },
        end: {
          line: 172,
          column: 3
        }
      },
      "27": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 168,
          column: 6
        }
      },
      "28": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 170,
          column: 60
        }
      },
      "29": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 171,
          column: 14
        }
      },
      "30": {
        start: {
          line: 179,
          column: 2
        },
        end: {
          line: 207,
          column: 3
        }
      },
      "31": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 203,
          column: 6
        }
      },
      "32": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 205,
          column: 65
        }
      },
      "33": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 206,
          column: 14
        }
      },
      "34": {
        start: {
          line: 216,
          column: 2
        },
        end: {
          line: 245,
          column: 3
        }
      },
      "35": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 241,
          column: 6
        }
      },
      "36": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 243,
          column: 69
        }
      },
      "37": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 244,
          column: 14
        }
      },
      "38": {
        start: {
          line: 252,
          column: 2
        },
        end: {
          line: 281,
          column: 3
        }
      },
      "39": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 277,
          column: 6
        }
      },
      "40": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 279,
          column: 62
        }
      },
      "41": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 280,
          column: 14
        }
      },
      "42": {
        start: {
          line: 288,
          column: 2
        },
        end: {
          line: 317,
          column: 3
        }
      },
      "43": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 313,
          column: 6
        }
      },
      "44": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 315,
          column: 60
        }
      },
      "45": {
        start: {
          line: 316,
          column: 4
        },
        end: {
          line: 316,
          column: 14
        }
      },
      "46": {
        start: {
          line: 324,
          column: 19
        },
        end: {
          line: 324,
          column: 74
        }
      },
      "47": {
        start: {
          line: 326,
          column: 2
        },
        end: {
          line: 326,
          column: 30
        }
      },
      "48": {
        start: {
          line: 326,
          column: 20
        },
        end: {
          line: 326,
          column: 30
        }
      },
      "49": {
        start: {
          line: 327,
          column: 2
        },
        end: {
          line: 327,
          column: 30
        }
      },
      "50": {
        start: {
          line: 327,
          column: 20
        },
        end: {
          line: 327,
          column: 30
        }
      },
      "51": {
        start: {
          line: 328,
          column: 2
        },
        end: {
          line: 328,
          column: 31
        }
      },
      "52": {
        start: {
          line: 328,
          column: 21
        },
        end: {
          line: 328,
          column: 31
        }
      },
      "53": {
        start: {
          line: 329,
          column: 2
        },
        end: {
          line: 329,
          column: 30
        }
      },
      "54": {
        start: {
          line: 329,
          column: 21
        },
        end: {
          line: 329,
          column: 30
        }
      },
      "55": {
        start: {
          line: 330,
          column: 2
        },
        end: {
          line: 330,
          column: 11
        }
      },
      "56": {
        start: {
          line: 337,
          column: 20
        },
        end: {
          line: 343,
          column: 3
        }
      },
      "57": {
        start: {
          line: 345,
          column: 2
        },
        end: {
          line: 345,
          column: 65
        }
      },
      "58": {
        start: {
          line: 353,
          column: 32
        },
        end: {
          line: 353,
          column: 72
        }
      },
      "59": {
        start: {
          line: 354,
          column: 18
        },
        end: {
          line: 354,
          column: 67
        }
      },
      "60": {
        start: {
          line: 356,
          column: 2
        },
        end: {
          line: 361,
          column: 3
        }
      },
      "61": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 360,
          column: 5
        }
      },
      "62": {
        start: {
          line: 358,
          column: 6
        },
        end: {
          line: 358,
          column: 75
        }
      },
      "63": {
        start: {
          line: 359,
          column: 6
        },
        end: {
          line: 359,
          column: 19
        }
      },
      "64": {
        start: {
          line: 364,
          column: 2
        },
        end: {
          line: 367,
          column: 3
        }
      },
      "65": {
        start: {
          line: 365,
          column: 4
        },
        end: {
          line: 365,
          column: 60
        }
      },
      "66": {
        start: {
          line: 366,
          column: 4
        },
        end: {
          line: 366,
          column: 17
        }
      },
      "67": {
        start: {
          line: 369,
          column: 2
        },
        end: {
          line: 369,
          column: 14
        }
      },
      "68": {
        start: {
          line: 380,
          column: 16
        },
        end: {
          line: 380,
          column: 18
        }
      },
      "69": {
        start: {
          line: 381,
          column: 22
        },
        end: {
          line: 381,
          column: 23
        }
      },
      "70": {
        start: {
          line: 382,
          column: 19
        },
        end: {
          line: 382,
          column: 20
        }
      },
      "71": {
        start: {
          line: 385,
          column: 24
        },
        end: {
          line: 385,
          column: 27
        }
      },
      "72": {
        start: {
          line: 386,
          column: 21
        },
        end: {
          line: 386,
          column: 24
        }
      },
      "73": {
        start: {
          line: 388,
          column: 2
        },
        end: {
          line: 406,
          column: 3
        }
      },
      "74": {
        start: {
          line: 388,
          column: 15
        },
        end: {
          line: 388,
          column: 16
        }
      },
      "75": {
        start: {
          line: 390,
          column: 6
        },
        end: {
          line: 394,
          column: 44
        }
      },
      "76": {
        start: {
          line: 390,
          column: 30
        },
        end: {
          line: 390,
          column: 61
        }
      },
      "77": {
        start: {
          line: 396,
          column: 4
        },
        end: {
          line: 405,
          column: 5
        }
      },
      "78": {
        start: {
          line: 397,
          column: 6
        },
        end: {
          line: 397,
          column: 51
        }
      },
      "79": {
        start: {
          line: 398,
          column: 11
        },
        end: {
          line: 405,
          column: 5
        }
      },
      "80": {
        start: {
          line: 399,
          column: 6
        },
        end: {
          line: 402,
          column: 9
        }
      },
      "81": {
        start: {
          line: 403,
          column: 11
        },
        end: {
          line: 405,
          column: 5
        }
      },
      "82": {
        start: {
          line: 404,
          column: 6
        },
        end: {
          line: 404,
          column: 51
        }
      },
      "83": {
        start: {
          line: 408,
          column: 2
        },
        end: {
          line: 408,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "getEngagingStories",
        decl: {
          start: {
            line: 44,
            column: 22
          },
          end: {
            line: 44,
            column: 40
          }
        },
        loc: {
          start: {
            line: 46,
            column: 28
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 46
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 68,
            column: 46
          },
          end: {
            line: 68,
            column: 47
          }
        },
        loc: {
          start: {
            line: 69,
            column: 6
          },
          end: {
            line: 69,
            column: 41
          }
        },
        line: 69
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 73,
            column: 47
          },
          end: {
            line: 73,
            column: 48
          }
        },
        loc: {
          start: {
            line: 73,
            column: 57
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 73
      },
      "3": {
        name: "getStoriesFromSource",
        decl: {
          start: {
            line: 93,
            column: 15
          },
          end: {
            line: 93,
            column: 35
          }
        },
        loc: {
          start: {
            line: 96,
            column: 28
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 96
      },
      "4": {
        name: "getUpshotStories",
        decl: {
          start: {
            line: 117,
            column: 15
          },
          end: {
            line: 117,
            column: 31
          }
        },
        loc: {
          start: {
            line: 117,
            column: 74
          },
          end: {
            line: 173,
            column: 1
          }
        },
        line: 117
      },
      "5": {
        name: "getFourFourTwoStories",
        decl: {
          start: {
            line: 178,
            column: 15
          },
          end: {
            line: 178,
            column: 36
          }
        },
        loc: {
          start: {
            line: 178,
            column: 79
          },
          end: {
            line: 208,
            column: 1
          }
        },
        line: 178
      },
      "6": {
        name: "getFootballRambleStories",
        decl: {
          start: {
            line: 213,
            column: 15
          },
          end: {
            line: 213,
            column: 39
          }
        },
        loc: {
          start: {
            line: 215,
            column: 28
          },
          end: {
            line: 246,
            column: 1
          }
        },
        line: 215
      },
      "7": {
        name: "getAthleticStories",
        decl: {
          start: {
            line: 251,
            column: 15
          },
          end: {
            line: 251,
            column: 33
          }
        },
        loc: {
          start: {
            line: 251,
            column: 76
          },
          end: {
            line: 282,
            column: 1
          }
        },
        line: 251
      },
      "8": {
        name: "getRedditStories",
        decl: {
          start: {
            line: 287,
            column: 15
          },
          end: {
            line: 287,
            column: 31
          }
        },
        loc: {
          start: {
            line: 287,
            column: 74
          },
          end: {
            line: 318,
            column: 1
          }
        },
        line: 287
      },
      "9": {
        name: "getRecencyBonus",
        decl: {
          start: {
            line: 323,
            column: 9
          },
          end: {
            line: 323,
            column: 24
          }
        },
        loc: {
          start: {
            line: 323,
            column: 52
          },
          end: {
            line: 331,
            column: 1
          }
        },
        line: 323
      },
      "10": {
        name: "generateAttribution",
        decl: {
          start: {
            line: 336,
            column: 16
          },
          end: {
            line: 336,
            column: 35
          }
        },
        loc: {
          start: {
            line: 336,
            column: 66
          },
          end: {
            line: 346,
            column: 1
          }
        },
        line: 336
      },
      "11": {
        name: "validateStoryContent",
        decl: {
          start: {
            line: 351,
            column: 16
          },
          end: {
            line: 351,
            column: 36
          }
        },
        loc: {
          start: {
            line: 351,
            column: 68
          },
          end: {
            line: 370,
            column: 1
          }
        },
        line: 351
      },
      "12": {
        name: "mixStoriesWithTransfers",
        decl: {
          start: {
            line: 375,
            column: 16
          },
          end: {
            line: 375,
            column: 39
          }
        },
        loc: {
          start: {
            line: 379,
            column: 9
          },
          end: {
            line: 409,
            column: 1
          }
        },
        line: 379
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 390,
            column: 20
          },
          end: {
            line: 390,
            column: 21
          }
        },
        loc: {
          start: {
            line: 390,
            column: 30
          },
          end: {
            line: 390,
            column: 61
          }
        },
        line: 390
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 52
          }
        }],
        line: 50
      },
      "1": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 51,
            column: 13
          },
          end: {
            line: 51,
            column: 16
          }
        }],
        line: 51
      },
      "2": {
        loc: {
          start: {
            line: 97,
            column: 2
          },
          end: {
            line: 111,
            column: 3
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 99,
            column: 44
          }
        }, {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 101,
            column: 49
          }
        }, {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 103,
            column: 52
          }
        }, {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 105,
            column: 46
          }
        }, {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 107,
            column: 44
          }
        }, {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 110,
            column: 16
          }
        }],
        line: 97
      },
      "3": {
        loc: {
          start: {
            line: 326,
            column: 2
          },
          end: {
            line: 326,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 2
          },
          end: {
            line: 326,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "4": {
        loc: {
          start: {
            line: 327,
            column: 2
          },
          end: {
            line: 327,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 2
          },
          end: {
            line: 327,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "5": {
        loc: {
          start: {
            line: 328,
            column: 2
          },
          end: {
            line: 328,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 2
          },
          end: {
            line: 328,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "6": {
        loc: {
          start: {
            line: 329,
            column: 2
          },
          end: {
            line: 329,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 2
          },
          end: {
            line: 329,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "7": {
        loc: {
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 360,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 360,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 357
      },
      "8": {
        loc: {
          start: {
            line: 364,
            column: 2
          },
          end: {
            line: 367,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 364,
            column: 2
          },
          end: {
            line: 367,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 364
      },
      "9": {
        loc: {
          start: {
            line: 378,
            column: 2
          },
          end: {
            line: 378,
            column: 23
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 378,
            column: 21
          },
          end: {
            line: 378,
            column: 23
          }
        }],
        line: 378
      },
      "10": {
        loc: {
          start: {
            line: 390,
            column: 6
          },
          end: {
            line: 394,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 7
          },
          end: {
            line: 392,
            column: 21
          }
        }, {
          start: {
            line: 393,
            column: 8
          },
          end: {
            line: 393,
            column: 36
          }
        }, {
          start: {
            line: 394,
            column: 6
          },
          end: {
            line: 394,
            column: 44
          }
        }],
        line: 390
      },
      "11": {
        loc: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        }, {
          start: {
            line: 398,
            column: 11
          },
          end: {
            line: 405,
            column: 5
          }
        }],
        line: 396
      },
      "12": {
        loc: {
          start: {
            line: 398,
            column: 11
          },
          end: {
            line: 405,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 11
          },
          end: {
            line: 405,
            column: 5
          }
        }, {
          start: {
            line: 403,
            column: 11
          },
          end: {
            line: 405,
            column: 5
          }
        }],
        line: 398
      },
      "13": {
        loc: {
          start: {
            line: 403,
            column: 11
          },
          end: {
            line: 405,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 11
          },
          end: {
            line: 405,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0, 0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e44cff9c13a5229eb63fc272fb40f4b3eb82b626"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ezafhrkh4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ezafhrkh4();
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Story Mixer - Smart Content Padding System
 *
 * During quiet transfer periods, mix in engaging football stories
 * from partner sources with proper attribution:
 * - The Upshot (player antics and culture)
 * - FourFourTwo (historical chaos and features)
 * - Football Ramble (weekly mishaps and comedy)
 * - The Athletic (deep dives and analysis)
 * - Reddit r/soccer (community stories)
 */

/**
 * Get engaging football stories for content padding
 */
export
/* istanbul ignore next */
function getEngagingStories(_x) {
  return _getEngagingStories.apply(this, arguments);
}

/**
 * Get stories from a specific source
 */
/* istanbul ignore next */
function _getEngagingStories() {
  _getEngagingStories = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(options)
  /* istanbul ignore next */
  {
    var _ref, minRequired, sources, _ref$categories, categories, _ref$maxAge, maxAge, allStories, _iterator, _step, source, stories, filteredStories, sortedStories, selectedStories, _t, _t2;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_2ezafhrkh4().f[0]++;
          _ref = (cov_2ezafhrkh4().s[0]++, options), minRequired = _ref.minRequired, sources = _ref.sources, _ref$categories = _ref.categories, categories = _ref$categories === void 0 ? (cov_2ezafhrkh4().b[0][0]++, ["antics", "historical", "culture"]) : _ref$categories, _ref$maxAge = _ref.maxAge, maxAge = _ref$maxAge === void 0 ? (cov_2ezafhrkh4().b[1][0]++, 168) : _ref$maxAge;
          cov_2ezafhrkh4().s[1]++;
          console.log(
          /* istanbul ignore next */
          "\uD83C\uDFAD Fetching ".concat(minRequired, " engaging stories from ").concat(sources.length, " sources"));
          allStories = (cov_2ezafhrkh4().s[2]++, []);
          cov_2ezafhrkh4().s[3]++;
          _context.p = 1;
          cov_2ezafhrkh4().s[4]++;
          // Fetch stories from each source
          _iterator = _createForOfIteratorHelper(sources);
          _context.p = 2;
          _iterator.s();
        case 3:
          if ((_step = _iterator.n()).done) {
            _context.n = 6;
            break;
          }
          source = _step.value;
          cov_2ezafhrkh4().s[5]++;
          _context.n = 4;
          return getStoriesFromSource(source, maxAge);
        case 4:
          stories = _context.v;
          cov_2ezafhrkh4().s[6]++;
          /* istanbul ignore next */
          allStories.push.apply(allStories,
          /* istanbul ignore next */
          _toConsumableArray(stories));
        case 5:
          _context.n = 3;
          break;
        case 6:
          _context.n = 8;
          break;
        case 7:
          _context.p = 7;
          _t = _context.v;
          _iterator.e(_t);
        case 8:
          _context.p = 8;
          _iterator.f();
          return _context.f(8);
        case 9:
          // Filter by categories
          filteredStories = (cov_2ezafhrkh4().s[7]++, allStories.filter(function (story) {
            /* istanbul ignore next */
            cov_2ezafhrkh4().f[1]++;
            cov_2ezafhrkh4().s[8]++;
            return categories.includes(story.category);
          })); // Sort by engagement score and recency
          sortedStories = (cov_2ezafhrkh4().s[9]++, filteredStories.sort(function (a, b) {
            /* istanbul ignore next */
            cov_2ezafhrkh4().f[2]++;
            var aScore =
            /* istanbul ignore next */
            (cov_2ezafhrkh4().s[10]++, a.engagementScore + getRecencyBonus(a.publishedAt));
            var bScore =
            /* istanbul ignore next */
            (cov_2ezafhrkh4().s[11]++, b.engagementScore + getRecencyBonus(b.publishedAt));
            /* istanbul ignore next */
            cov_2ezafhrkh4().s[12]++;
            return bScore - aScore;
          })); // Return top stories
          selectedStories = (cov_2ezafhrkh4().s[13]++, sortedStories.slice(0, minRequired));
          cov_2ezafhrkh4().s[14]++;
          console.log(
          /* istanbul ignore next */
          "\u2705 Selected ".concat(selectedStories.length, " engaging stories"));
          cov_2ezafhrkh4().s[15]++;
          return _context.a(2, selectedStories);
        case 10:
          _context.p = 10;
          _t2 = _context.v;
          cov_2ezafhrkh4().s[16]++;
          console.error("❌ Failed to get engaging stories:",
          /* istanbul ignore next */
          _t2);
          cov_2ezafhrkh4().s[17]++;
          return _context.a(2, []);
      }
    }, _callee, null, [[2, 7, 8, 9], [1, 10]]);
  }));
  return _getEngagingStories.apply(this, arguments);
}
/* istanbul ignore next */
function getStoriesFromSource(_x2, _x3) {
  return _getStoriesFromSource.apply(this, arguments);
}
/**
 * Get stories from The Upshot (player antics and culture)
 */
/* istanbul ignore next */
function _getStoriesFromSource() {
  _getStoriesFromSource = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2(sourceName, maxAge)
  /* istanbul ignore next */
  {
    var _t3;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_2ezafhrkh4().f[3]++;
          cov_2ezafhrkh4().s[18]++;
          _t3 = sourceName.toLowerCase();
          _context2.n = _t3 === "theupshot" ? 1 : _t3 === "fourfourtwo" ? 3 : _t3 === "footballramble" ? 5 : _t3 === "theathletic" ? 7 : _t3 === "reddit" ? 9 : 11;
          break;
        case 1:
          cov_2ezafhrkh4().b[2][0]++;
          cov_2ezafhrkh4().s[19]++;
          _context2.n = 2;
          return getUpshotStories(maxAge);
        case 2:
          return _context2.a(2, _context2.v);
        case 3:
          cov_2ezafhrkh4().b[2][1]++;
          cov_2ezafhrkh4().s[20]++;
          _context2.n = 4;
          return getFourFourTwoStories(maxAge);
        case 4:
          return _context2.a(2, _context2.v);
        case 5:
          cov_2ezafhrkh4().b[2][2]++;
          cov_2ezafhrkh4().s[21]++;
          _context2.n = 6;
          return getFootballRambleStories(maxAge);
        case 6:
          return _context2.a(2, _context2.v);
        case 7:
          cov_2ezafhrkh4().b[2][3]++;
          cov_2ezafhrkh4().s[22]++;
          _context2.n = 8;
          return getAthleticStories(maxAge);
        case 8:
          return _context2.a(2, _context2.v);
        case 9:
          cov_2ezafhrkh4().b[2][4]++;
          cov_2ezafhrkh4().s[23]++;
          _context2.n = 10;
          return getRedditStories(maxAge);
        case 10:
          return _context2.a(2, _context2.v);
        case 11:
          cov_2ezafhrkh4().b[2][5]++;
          cov_2ezafhrkh4().s[24]++;
          console.warn(
          /* istanbul ignore next */
          "Unknown source: ".concat(sourceName));
          cov_2ezafhrkh4().s[25]++;
          return _context2.a(2, []);
        case 12:
          return _context2.a(2);
      }
    }, _callee2);
  }));
  return _getStoriesFromSource.apply(this, arguments);
}
/* istanbul ignore next */
function getUpshotStories(_x4) {
  return _getUpshotStories.apply(this, arguments);
}
/**
 * Get stories from FourFourTwo (historical chaos and features)
 */
/* istanbul ignore next */
function _getUpshotStories() {
  _getUpshotStories = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee3(maxAge)
  /* istanbul ignore next */
  {
    var _t4;
    return _regenerator().w(function (_context3) {
      while (1) switch (_context3.n) {
        case 0:
          cov_2ezafhrkh4().f[4]++;
          cov_2ezafhrkh4().s[26]++;
          _context3.p = 1;
          cov_2ezafhrkh4().s[27]++;
          return _context3.a(2, [{
            id: "upshot_1",
            content: 'Erling Haaland spotted at Manchester Tesco Metro buying 47 bananas and nothing else, reportedly for "pre-match fuel optimization"',
            title: "Haaland's Banana Strategy Revealed",
            summary: "The Norwegian striker's peculiar shopping habits continue to baffle nutritionists",
            url: "https://theupshot.co.uk/haaland-banana-strategy",
            source: {
              name: "The Upshot",
              url: "https://theupshot.co.uk",
              type: "partner"
            },
            attribution: "The brilliant lads at [The Upshot](https://theupshot.co.uk) covered this perfectly...",
            tags: [{
              name: "Haaland",
              type: "player"
            }, {
              name: "Manchester City",
              type: "club"
            }],
            category: "antics",
            publishedAt: new Date(Date.now() - 2 * 60 * 60 * 1000),
            // 2 hours ago
            engagementScore: 85
          }, {
            id: "upshot_2",
            content: 'Arsenal\'s Mikel Arteta reportedly practicing "passionate touchline celebrations" in front of mirror for 2 hours daily',
            title: "Arteta's Secret Celebration Training",
            summary: "Sources close to the manager reveal his dedication to perfecting sideline passion",
            url: "https://theupshot.co.uk/arteta-celebration-training",
            source: {
              name: "The Upshot",
              url: "https://theupshot.co.uk",
              type: "partner"
            },
            attribution: "The brilliant lads at [The Upshot](https://theupshot.co.uk) uncovered this gem...",
            tags: [{
              name: "Arteta",
              type: "player"
            }, {
              name: "Arsenal",
              type: "club"
            }],
            category: "antics",
            publishedAt: new Date(Date.now() - 6 * 60 * 60 * 1000),
            // 6 hours ago
            engagementScore: 78
          }]);
        case 2:
          _context3.p = 2;
          _t4 = _context3.v;
          cov_2ezafhrkh4().s[28]++;
          console.error("Failed to fetch Upshot stories:",
          /* istanbul ignore next */
          _t4);
          cov_2ezafhrkh4().s[29]++;
          return _context3.a(2, []);
      }
    }, _callee3, null, [[1, 2]]);
  }));
  return _getUpshotStories.apply(this, arguments);
}
/* istanbul ignore next */
function getFourFourTwoStories(_x5) {
  return _getFourFourTwoStories.apply(this, arguments);
}
/**
 * Get stories from Football Ramble (weekly mishaps and comedy)
 */
/* istanbul ignore next */
function _getFourFourTwoStories() {
  _getFourFourTwoStories = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee4(maxAge)
  /* istanbul ignore next */
  {
    var _t5;
    return _regenerator().w(function (_context4) {
      while (1) switch (_context4.n) {
        case 0:
          cov_2ezafhrkh4().f[5]++;
          cov_2ezafhrkh4().s[30]++;
          _context4.p = 1;
          cov_2ezafhrkh4().s[31]++;
          return _context4.a(2, [{
            id: "fft_1",
            content: "Remember when David Beckham once got a red card for sarcastically applauding the referee, then immediately regretted it when he realized he was being filmed for a documentary",
            title: "Beckham's Most Awkward Red Card",
            summary: "A reminder that even legends have their cringeworthy moments",
            url: "https://fourfourtwo.com/beckham-red-card-regret",
            source: {
              name: "FourFourTwo",
              url: "https://fourfourtwo.com",
              type: "partner"
            },
            attribution: "The football historians at [FourFourTwo](https://fourfourtwo.com) reminded us...",
            tags: [{
              name: "Beckham",
              type: "player"
            }, {
              name: "England",
              type: "club"
            }],
            category: "historical",
            publishedAt: new Date(Date.now() - 12 * 60 * 60 * 1000),
            // 12 hours ago
            engagementScore: 72
          }]);
        case 2:
          _context4.p = 2;
          _t5 = _context4.v;
          cov_2ezafhrkh4().s[32]++;
          console.error("Failed to fetch FourFourTwo stories:",
          /* istanbul ignore next */
          _t5);
          cov_2ezafhrkh4().s[33]++;
          return _context4.a(2, []);
      }
    }, _callee4, null, [[1, 2]]);
  }));
  return _getFourFourTwoStories.apply(this, arguments);
}
/* istanbul ignore next */
function getFootballRambleStories(_x6) {
  return _getFootballRambleStories.apply(this, arguments);
}
/**
 * Get stories from The Athletic (deep dives and analysis)
 */
/* istanbul ignore next */
function _getFootballRambleStories() {
  _getFootballRambleStories = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee5(maxAge)
  /* istanbul ignore next */
  {
    var _t6;
    return _regenerator().w(function (_context5) {
      while (1) switch (_context5.n) {
        case 0:
          cov_2ezafhrkh4().f[6]++;
          cov_2ezafhrkh4().s[34]++;
          _context5.p = 1;
          cov_2ezafhrkh4().s[35]++;
          return _context5.a(2, [{
            id: "ramble_1",
            content: "Local pub league player attempts Messi-style nutmeg, accidentally nutmegs himself, somehow scores anyway",
            title: "Accidental Genius at Sunday League Level",
            summary: "Sometimes the beautiful game is beautiful in the most chaotic way possible",
            url: "https://footballramble.com/sunday-league-chaos",
            source: {
              name: "Football Ramble",
              url: "https://footballramble.com",
              type: "partner"
            },
            attribution: "The comedy geniuses at [Football Ramble](https://footballramble.com) brought us this beauty...",
            tags: [{
              name: "Sunday League",
              type: "club"
            }, {
              name: "Messi",
              type: "player"
            }],
            category: "culture",
            publishedAt: new Date(Date.now() - 8 * 60 * 60 * 1000),
            // 8 hours ago
            engagementScore: 80
          }]);
        case 2:
          _context5.p = 2;
          _t6 = _context5.v;
          cov_2ezafhrkh4().s[36]++;
          console.error("Failed to fetch Football Ramble stories:",
          /* istanbul ignore next */
          _t6);
          cov_2ezafhrkh4().s[37]++;
          return _context5.a(2, []);
      }
    }, _callee5, null, [[1, 2]]);
  }));
  return _getFootballRambleStories.apply(this, arguments);
}
/* istanbul ignore next */
function getAthleticStories(_x7) {
  return _getAthleticStories.apply(this, arguments);
}
/**
 * Get stories from Reddit r/soccer (community stories)
 */
/* istanbul ignore next */
function _getAthleticStories() {
  _getAthleticStories = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee6(maxAge)
  /* istanbul ignore next */
  {
    var _t7;
    return _regenerator().w(function (_context6) {
      while (1) switch (_context6.n) {
        case 0:
          cov_2ezafhrkh4().f[7]++;
          cov_2ezafhrkh4().s[38]++;
          _context6.p = 1;
          cov_2ezafhrkh4().s[39]++;
          return _context6.a(2, [{
            id: "athletic_1",
            content: "How Barcelona's financial situation has become so complex that they need a team of accountants just to figure out if they can afford a packet of crisps from the vending machine",
            title: "Barcelona's Accounting Nightmare",
            summary: "A deep dive into the labyrinthine world of modern football finances",
            url: "https://theathletic.com/barcelona-finances-deep-dive",
            source: {
              name: "The Athletic",
              url: "https://theathletic.com",
              type: "partner"
            },
            attribution: "The investigative minds at [The Athletic](https://theathletic.com) broke this down perfectly...",
            tags: [{
              name: "Barcelona",
              type: "club"
            }, {
              name: "La Liga",
              type: "source"
            }],
            category: "analysis",
            publishedAt: new Date(Date.now() - 18 * 60 * 60 * 1000),
            // 18 hours ago
            engagementScore: 68
          }]);
        case 2:
          _context6.p = 2;
          _t7 = _context6.v;
          cov_2ezafhrkh4().s[40]++;
          console.error("Failed to fetch Athletic stories:",
          /* istanbul ignore next */
          _t7);
          cov_2ezafhrkh4().s[41]++;
          return _context6.a(2, []);
      }
    }, _callee6, null, [[1, 2]]);
  }));
  return _getAthleticStories.apply(this, arguments);
}
/* istanbul ignore next */
function getRedditStories(_x8) {
  return _getRedditStories.apply(this, arguments);
}
/**
 * Calculate recency bonus for story scoring
 */
/* istanbul ignore next */
function _getRedditStories() {
  _getRedditStories = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee7(maxAge)
  /* istanbul ignore next */
  {
    var _t8;
    return _regenerator().w(function (_context7) {
      while (1) switch (_context7.n) {
        case 0:
          cov_2ezafhrkh4().f[8]++;
          cov_2ezafhrkh4().s[42]++;
          _context7.p = 1;
          cov_2ezafhrkh4().s[43]++;
          return _context7.a(2, [{
            id: "reddit_1",
            content: 'Local football fan discovers that screaming "PASS THE BALL" at his TV actually improves his team\'s passing accuracy by exactly 0%',
            title: "Groundbreaking Research from r/soccer",
            summary: "The community continues to provide valuable scientific insights",
            url: "https://reddit.com/r/soccer/comments/tv-shouting-study",
            source: {
              name: "r/soccer",
              url: "https://reddit.com/r/soccer",
              type: "community"
            },
            attribution: "The brilliant minds over at [r/soccer](https://reddit.com/r/soccer) conducted this vital research...",
            tags: [{
              name: "Community",
              type: "source"
            }, {
              name: "Research",
              type: "source"
            }],
            category: "community",
            publishedAt: new Date(Date.now() - 4 * 60 * 60 * 1000),
            // 4 hours ago
            engagementScore: 75
          }]);
        case 2:
          _context7.p = 2;
          _t8 = _context7.v;
          cov_2ezafhrkh4().s[44]++;
          console.error("Failed to fetch Reddit stories:",
          /* istanbul ignore next */
          _t8);
          cov_2ezafhrkh4().s[45]++;
          return _context7.a(2, []);
      }
    }, _callee7, null, [[1, 2]]);
  }));
  return _getRedditStories.apply(this, arguments);
}
function getRecencyBonus(publishedAt) {
  /* istanbul ignore next */
  cov_2ezafhrkh4().f[9]++;
  var hoursAgo =
  /* istanbul ignore next */
  (cov_2ezafhrkh4().s[46]++, (Date.now() - publishedAt.getTime()) / (1000 * 60 * 60));
  /* istanbul ignore next */
  cov_2ezafhrkh4().s[47]++;
  if (hoursAgo < 2) {
    /* istanbul ignore next */
    cov_2ezafhrkh4().b[3][0]++;
    cov_2ezafhrkh4().s[48]++;
    return 20;
  } else
  /* istanbul ignore next */
  {
    cov_2ezafhrkh4().b[3][1]++;
  } // Very recent
  cov_2ezafhrkh4().s[49]++;
  if (hoursAgo < 6) {
    /* istanbul ignore next */
    cov_2ezafhrkh4().b[4][0]++;
    cov_2ezafhrkh4().s[50]++;
    return 15;
  } else
  /* istanbul ignore next */
  {
    cov_2ezafhrkh4().b[4][1]++;
  } // Recent
  cov_2ezafhrkh4().s[51]++;
  if (hoursAgo < 12) {
    /* istanbul ignore next */
    cov_2ezafhrkh4().b[5][0]++;
    cov_2ezafhrkh4().s[52]++;
    return 10;
  } else
  /* istanbul ignore next */
  {
    cov_2ezafhrkh4().b[5][1]++;
  } // Somewhat recent
  cov_2ezafhrkh4().s[53]++;
  if (hoursAgo < 24) {
    /* istanbul ignore next */
    cov_2ezafhrkh4().b[6][0]++;
    cov_2ezafhrkh4().s[54]++;
    return 5;
  } else
  /* istanbul ignore next */
  {
    cov_2ezafhrkh4().b[6][1]++;
  } // Yesterday
  cov_2ezafhrkh4().s[55]++;
  return 0; // Older
}

/**
 * Generate attribution text for a story
 */
export function generateAttribution(story) {
  /* istanbul ignore next */
  cov_2ezafhrkh4().f[10]++;
  var templates =
  /* istanbul ignore next */
  (cov_2ezafhrkh4().s[56]++, [
  /* istanbul ignore next */
  "The brilliant lads at [".concat(story.source.name, "](").concat(story.url, ") covered this perfectly..."),
  /* istanbul ignore next */
  "Our friends over at [".concat(story.source.name, "](").concat(story.url, ") brought us this gem..."),
  /* istanbul ignore next */
  "The legends at [".concat(story.source.name, "](").concat(story.url, ") uncovered this beauty..."),
  /* istanbul ignore next */
  "Credit where it's due - [".concat(story.source.name, "](").concat(story.url, ") nailed this one..."),
  /* istanbul ignore next */
  "Hat tip to the geniuses at [".concat(story.source.name, "](").concat(story.url, ") for this...")]);
  /* istanbul ignore next */
  cov_2ezafhrkh4().s[57]++;
  return templates[Math.floor(Math.random() * templates.length)];
}

/**
 * Validate story content for appropriateness
 */
export function validateStoryContent(story) {
  /* istanbul ignore next */
  cov_2ezafhrkh4().f[11]++;
  // Check for inappropriate content
  var inappropriateKeywords =
  /* istanbul ignore next */
  (cov_2ezafhrkh4().s[58]++, ["violence", "racism", "discrimination"]);
  var content =
  /* istanbul ignore next */
  (cov_2ezafhrkh4().s[59]++, (story.content + " " + story.title).toLowerCase());
  /* istanbul ignore next */
  cov_2ezafhrkh4().s[60]++;
  for (
  /* istanbul ignore next */
  var _i = 0, _inappropriateKeyword = inappropriateKeywords;
  /* istanbul ignore next */
  _i < _inappropriateKeyword.length;
  /* istanbul ignore next */
  _i++) {
    var keyword =
    /* istanbul ignore next */
    _inappropriateKeyword[_i];
    /* istanbul ignore next */
    cov_2ezafhrkh4().s[61]++;
    if (content.includes(keyword)) {
      /* istanbul ignore next */
      cov_2ezafhrkh4().b[7][0]++;
      cov_2ezafhrkh4().s[62]++;
      console.warn(
      /* istanbul ignore next */
      "Story rejected for inappropriate content: ".concat(keyword));
      /* istanbul ignore next */
      cov_2ezafhrkh4().s[63]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2ezafhrkh4().b[7][1]++;
    }
  }

  // Ensure minimum quality
  /* istanbul ignore next */
  cov_2ezafhrkh4().s[64]++;
  if (story.engagementScore < 50) {
    /* istanbul ignore next */
    cov_2ezafhrkh4().b[8][0]++;
    cov_2ezafhrkh4().s[65]++;
    console.warn("Story rejected for low engagement score");
    /* istanbul ignore next */
    cov_2ezafhrkh4().s[66]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_2ezafhrkh4().b[8][1]++;
  }
  cov_2ezafhrkh4().s[67]++;
  return true;
}

/**
 * Mix stories with transfer content intelligently
 */
export function mixStoriesWithTransfers(transferUpdates, stories) {
  /* istanbul ignore next */
  var maxTotal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (cov_2ezafhrkh4().b[9][0]++, 10);
  /* istanbul ignore next */
  cov_2ezafhrkh4().f[12]++;
  var mixed =
  /* istanbul ignore next */
  (cov_2ezafhrkh4().s[68]++, []);
  var transferIndex =
  /* istanbul ignore next */
  (cov_2ezafhrkh4().s[69]++, 0);
  var storyIndex =
  /* istanbul ignore next */
  (cov_2ezafhrkh4().s[70]++, 0);

  // Aim for 70% transfers, 30% stories when mixing
  var transferRatio =
  /* istanbul ignore next */
  (cov_2ezafhrkh4().s[71]++, 0.7);
  var storyRatio =
  /* istanbul ignore next */
  (cov_2ezafhrkh4().s[72]++, 0.3);
  /* istanbul ignore next */
  cov_2ezafhrkh4().s[73]++;
  for (var i =
  /* istanbul ignore next */
  (cov_2ezafhrkh4().s[74]++, 0); i < maxTotal; i++) {
    var shouldUseTransfer =
    /* istanbul ignore next */
    (cov_2ezafhrkh4().s[75]++, (
    /* istanbul ignore next */
    (cov_2ezafhrkh4().b[10][0]++, mixed.filter(function (item) {
      /* istanbul ignore next */
      cov_2ezafhrkh4().f[13]++;
      cov_2ezafhrkh4().s[76]++;
      return item.type === "transfer_update";
    }).length / mixed.length < transferRatio) ||
    /* istanbul ignore next */
    (cov_2ezafhrkh4().b[10][1]++, storyIndex >= stories.length)) &&
    /* istanbul ignore next */
    (cov_2ezafhrkh4().b[10][2]++, transferIndex < transferUpdates.length));
    /* istanbul ignore next */
    cov_2ezafhrkh4().s[77]++;
    if (shouldUseTransfer) {
      /* istanbul ignore next */
      cov_2ezafhrkh4().b[11][0]++;
      cov_2ezafhrkh4().s[78]++;
      mixed.push(transferUpdates[transferIndex++]);
    } else {
      /* istanbul ignore next */
      cov_2ezafhrkh4().b[11][1]++;
      cov_2ezafhrkh4().s[79]++;
      if (storyIndex < stories.length) {
        /* istanbul ignore next */
        cov_2ezafhrkh4().b[12][0]++;
        cov_2ezafhrkh4().s[80]++;
        mixed.push(
        /* istanbul ignore next */
        _objectSpread(_objectSpread({}, stories[storyIndex++]), {}, {
          type: "story_mix"
        }));
      } else {
        /* istanbul ignore next */
        cov_2ezafhrkh4().b[12][1]++;
        cov_2ezafhrkh4().s[81]++;
        if (transferIndex < transferUpdates.length) {
          /* istanbul ignore next */
          cov_2ezafhrkh4().b[13][0]++;
          cov_2ezafhrkh4().s[82]++;
          mixed.push(transferUpdates[transferIndex++]);
        } else
        /* istanbul ignore next */
        {
          cov_2ezafhrkh4().b[13][1]++;
        }
      }
    }
  }
  /* istanbul ignore next */
  cov_2ezafhrkh4().s[83]++;
  return mixed;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,