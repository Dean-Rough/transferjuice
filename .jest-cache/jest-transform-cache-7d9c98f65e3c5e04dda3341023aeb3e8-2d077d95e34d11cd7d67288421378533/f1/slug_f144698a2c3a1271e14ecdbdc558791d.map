{"version":3,"names":["cov_1s501iumw5","actualCoverage","_slicedToArray","r","e","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","a","_arrayLikeToArray","t","toString","call","slice","constructor","name","Array","from","test","length","n","l","Symbol","iterator","i","u","f","o","next","Object","done","push","value","isArray","generateSlug","title","timestamp","dateStr","s","toISOString","replace","titleSlug","toLowerCase","concat","getTimestampFromSlug","slug","match","b","_ref","_ref2","_","year","month","day","hour","Date","_unused","isValidSlug"],"sources":["slug.ts"],"sourcesContent":["/**\n * Slug Generation Utilities\n * URL-friendly slug creation for briefings\n */\n\n/**\n * Generate URL-friendly slug from title and timestamp\n */\nexport function generateSlug(title: string, timestamp: Date): string {\n  // Format date as YYYY-MM-DD-HH\n  const dateStr = timestamp\n    .toISOString()\n    .slice(0, 13)\n    .replace(\"T\", \"-\")\n    .replace(/:/g, \"\");\n\n  // Create slug from title\n  const titleSlug = title\n    .toLowerCase()\n    .replace(/[^a-z0-9]+/g, \"-\")\n    .replace(/^-+|-+$/g, \"\")\n    .slice(0, 50); // Limit length\n\n  return `${dateStr}-${titleSlug}`;\n}\n\n/**\n * Extract timestamp from slug\n */\nexport function getTimestampFromSlug(slug: string): Date | null {\n  try {\n    // Extract date part (YYYY-MM-DD-HH)\n    const match = slug.match(/^(\\d{4})-(\\d{2})-(\\d{2})-(\\d{2})/);\n    if (!match) return null;\n\n    const [_, year, month, day, hour] = match;\n    return new Date(`${year}-${month}-${day}T${hour}:00:00Z`);\n  } catch {\n    return null;\n  }\n}\n\n/**\n * Validate slug format\n */\nexport function isValidSlug(slug: string): boolean {\n  return /^\\d{4}-\\d{2}-\\d{2}-\\d{2}-[a-z0-9-]+$/.test(slug);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAeY;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAA,SAAAE,eAAAC,CAAA,EAAAC,CAAA,WAAAC,eAAA,CAAAF,CAAA,KAAAG,qBAAA,CAAAH,CAAA,EAAAC,CAAA,KAAAG,2BAAA,CAAAJ,CAAA,EAAAC,CAAA,KAAAI,gBAAA;AAAA,SAAAA,iBAAA,cAAAC,SAAA;AAAA,SAAAF,4BAAAJ,CAAA,EAAAO,CAAA,QAAAP,CAAA,2BAAAA,CAAA,SAAAQ,iBAAA,CAAAR,CAAA,EAAAO,CAAA,OAAAE,CAAA,MAAAC,QAAA,CAAAC,IAAA,CAAAX,CAAA,EAAAY,KAAA,6BAAAH,CAAA,IAAAT,CAAA,CAAAa,WAAA,KAAAJ,CAAA,GAAAT,CAAA,CAAAa,WAAA,CAAAC,IAAA,aAAAL,CAAA,cAAAA,CAAA,GAAAM,KAAA,CAAAC,IAAA,CAAAhB,CAAA,oBAAAS,CAAA,+CAAAQ,IAAA,CAAAR,CAAA,IAAAD,iBAAA,CAAAR,CAAA,EAAAO,CAAA;AAAA,SAAAC,kBAAAR,CAAA,EAAAO,CAAA,aAAAA,CAAA,IAAAA,CAAA,GAAAP,CAAA,CAAAkB,MAAA,MAAAX,CAAA,GAAAP,CAAA,CAAAkB,MAAA,YAAAjB,CAAA,MAAAkB,CAAA,GAAAJ,KAAA,CAAAR,CAAA,GAAAN,CAAA,GAAAM,CAAA,EAAAN,CAAA,IAAAkB,CAAA,CAAAlB,CAAA,IAAAD,CAAA,CAAAC,CAAA,UAAAkB,CAAA;AAAA,SAAAhB,sBAAAH,CAAA,EAAAoB,CAAA,QAAAX,CAAA,WAAAT,CAAA,gCAAAqB,MAAA,IAAArB,CAAA,CAAAqB,MAAA,CAAAC,QAAA,KAAAtB,CAAA,4BAAAS,CAAA,QAAAR,CAAA,EAAAkB,CAAA,EAAAI,CAAA,EAAAC,CAAA,EAAAjB,CAAA,OAAAkB,CAAA,OAAAC,CAAA,iBAAAH,CAAA,IAAAd,CAAA,GAAAA,CAAA,CAAAE,IAAA,CAAAX,CAAA,GAAA2B,IAAA,QAAAP,CAAA,QAAAQ,MAAA,CAAAnB,CAAA,MAAAA,CAAA,UAAAgB,CAAA,uBAAAA,CAAA,IAAAxB,CAAA,GAAAsB,CAAA,CAAAZ,IAAA,CAAAF,CAAA,GAAAoB,IAAA,MAAAtB,CAAA,CAAAuB,IAAA,CAAA7B,CAAA,CAAA8B,KAAA,GAAAxB,CAAA,CAAAW,MAAA,KAAAE,CAAA,GAAAK,CAAA,iBAAAzB,CAAA,IAAA0B,CAAA,OAAAP,CAAA,GAAAnB,CAAA,yBAAAyB,CAAA,YAAAhB,CAAA,eAAAe,CAAA,GAAAf,CAAA,cAAAmB,MAAA,CAAAJ,CAAA,MAAAA,CAAA,2BAAAE,CAAA,QAAAP,CAAA,aAAAZ,CAAA;AAAA,SAAAL,gBAAAF,CAAA,QAAAe,KAAA,CAAAiB,OAAA,CAAAhC,CAAA,UAAAA,CAAA;AAfZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,SAASiC,YAAYA,CAACC,KAAa,EAAEC,SAAe,EAAU;EAAA;EAAAtC,cAAA,GAAA4B,CAAA;EACnE;EACA,IAAMW,OAAO;EAAA;EAAA,CAAAvC,cAAA,GAAAwC,CAAA,OAAGF,SAAS,CACtBG,WAAW,CAAC,CAAC,CACb1B,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CACZ2B,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CACjBA,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;;EAEpB;EACA,IAAMC,SAAS;EAAA;EAAA,CAAA3C,cAAA,GAAAwC,CAAA,OAAGH,KAAK,CACpBO,WAAW,CAAC,CAAC,CACbF,OAAO,CAAC,aAAa,EAAE,GAAG,CAAC,CAC3BA,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CACvB3B,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC,CAAC;EAAA;EAAAf,cAAA,GAAAwC,CAAA;EAEjB,oCAAAK,MAAA,CAAUN,OAAO,OAAAM,MAAA,CAAIF,SAAS;AAChC;;AAEA;AACA;AACA;AACA,OAAO,SAASG,oBAAoBA,CAACC,IAAY,EAAe;EAAA;EAAA/C,cAAA,GAAA4B,CAAA;EAAA5B,cAAA,GAAAwC,CAAA;EAC9D,IAAI;IACF;IACA,IAAMQ,KAAK;IAAA;IAAA,CAAAhD,cAAA,GAAAwC,CAAA,OAAGO,IAAI,CAACC,KAAK,CAAC,kCAAkC,CAAC;IAAC;IAAAhD,cAAA,GAAAwC,CAAA;IAC7D,IAAI,CAACQ,KAAK,EAAE;MAAA;MAAAhD,cAAA,GAAAiD,CAAA;MAAAjD,cAAA,GAAAwC,CAAA;MAAA,OAAO,IAAI;IAAA,CAAC;IAAA;IAAA;MAAAxC,cAAA,GAAAiD,CAAA;IAAA;IAExB;MAAA;MAAAC,IAAA,IAAAlD,cAAA,GAAAwC,CAAA,OAAoCQ,KAAK;MAAA;MAAAG,KAAA,GAAAjD,cAAA,CAAAgD,IAAA;MAAA;MAAlCE,CAAC,GAAAD,KAAA;MAAA;MAAEE,IAAI,GAAAF,KAAA;MAAA;MAAEG,KAAK,GAAAH,KAAA;MAAA;MAAEI,GAAG,GAAAJ,KAAA;MAAA;MAAEK,IAAI,GAAAL,KAAA;IAAU;IAAAnD,cAAA,GAAAwC,CAAA;IAC1C,OAAO,IAAIiB,IAAI;IAAA;IAAA,GAAAZ,MAAA,CAAIQ,IAAI,OAAAR,MAAA,CAAIS,KAAK,OAAAT,MAAA,CAAIU,GAAG,OAAAV,MAAA,CAAIW,IAAI,YAAS,CAAC;EAC3D,CAAC,CAAC;EAAA;EAAAE,OAAA,EAAM;IAAA;IAAA1D,cAAA,GAAAwC,CAAA;IACN,OAAO,IAAI;EACb;AACF;;AAEA;AACA;AACA;AACA,OAAO,SAASmB,WAAWA,CAACZ,IAAY,EAAW;EAAA;EAAA/C,cAAA,GAAA4B,CAAA;EAAA5B,cAAA,GAAAwC,CAAA;EACjD,OAAO,sCAAsC,CAACpB,IAAI,CAAC2B,IAAI,CAAC;AAC1D","ignoreList":[]}