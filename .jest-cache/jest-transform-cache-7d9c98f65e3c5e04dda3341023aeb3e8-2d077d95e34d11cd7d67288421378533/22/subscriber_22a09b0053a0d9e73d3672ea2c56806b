cd424cdf13b1bc9cd1b5c74e560f27ae
/* istanbul ignore next */
function cov_2p073au1g1() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/validations/subscriber.ts";
  var hash = "fddf909eb876747e499d96b78b7be8debab97949";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/validations/subscriber.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 40
        },
        end: {
          line: 16,
          column: 2
        }
      },
      "1": {
        start: {
          line: 19,
          column: 36
        },
        end: {
          line: 24,
          column: 2
        }
      },
      "2": {
        start: {
          line: 27,
          column: 35
        },
        end: {
          line: 48,
          column: 2
        }
      },
      "3": {
        start: {
          line: 51,
          column: 43
        },
        end: {
          line: 69,
          column: 2
        }
      },
      "4": {
        start: {
          line: 72,
          column: 27
        },
        end: {
          line: 103,
          column: 3
        }
      },
      "5": {
        start: {
          line: 80,
          column: 30
        },
        end: {
          line: 86,
          column: 7
        }
      },
      "6": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 87,
          column: 69
        }
      },
      "7": {
        start: {
          line: 87,
          column: 48
        },
        end: {
          line: 87,
          column: 67
        }
      },
      "8": {
        start: {
          line: 94,
          column: 25
        },
        end: {
          line: 94,
          column: 44
        }
      },
      "9": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 100,
          column: 8
        }
      },
      "10": {
        start: {
          line: 106,
          column: 32
        },
        end: {
          line: 186,
          column: 2
        }
      },
      "11": {
        start: {
          line: 189,
          column: 35
        },
        end: {
          line: 261,
          column: 2
        }
      },
      "12": {
        start: {
          line: 264,
          column: 38
        },
        end: {
          line: 290,
          column: 2
        }
      },
      "13": {
        start: {
          line: 267,
          column: 43
        },
        end: {
          line: 267,
          column: 55
        }
      },
      "14": {
        start: {
          line: 292,
          column: 39
        },
        end: {
          line: 292,
          column: 76
        }
      },
      "15": {
        start: {
          line: 294,
          column: 40
        },
        end: {
          line: 307,
          column: 2
        }
      },
      "16": {
        start: {
          line: 310,
          column: 36
        },
        end: {
          line: 323,
          column: 2
        }
      },
      "17": {
        start: {
          line: 325,
          column: 37
        },
        end: {
          line: 333,
          column: 2
        }
      },
      "18": {
        start: {
          line: 336,
          column: 46
        },
        end: {
          line: 343,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        loc: {
          start: {
            line: 78,
            column: 15
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 78
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 87,
            column: 35
          },
          end: {
            line: 87,
            column: 36
          }
        },
        loc: {
          start: {
            line: 87,
            column: 48
          },
          end: {
            line: 87,
            column: 67
          }
        },
        line: 87
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        loc: {
          start: {
            line: 92,
            column: 15
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 92
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 267,
            column: 34
          },
          end: {
            line: 267,
            column: 35
          }
        },
        loc: {
          start: {
            line: 267,
            column: 43
          },
          end: {
            line: 267,
            column: 55
          }
        },
        line: 267
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 99,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 96,
            column: 18
          }
        }, {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 97,
            column: 32
          }
        }, {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 98,
            column: 35
          }
        }, {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 99,
            column: 33
          }
        }],
        line: 96
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fddf909eb876747e499d96b78b7be8debab97949"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2p073au1g1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2p073au1g1();
import { z } from 'zod';

/**
 * Subscriber and Email Management Schemas
 * Validates subscriber data and email campaign structures
 */

// Subscription status
export var SubscriptionStatusSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[0]++, z[
/* istanbul ignore next */
"enum"](['pending',
// Waiting for email confirmation
'active',
// Confirmed and receiving emails
'paused',
// Temporarily paused by user
'unsubscribed',
// Permanently unsubscribed
'bounced',
// Email bounced
'complained' // Marked as spam
]));

// Email frequency preferences
export var EmailFrequencySchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[1]++, z[
/* istanbul ignore next */
"enum"](['all',
// All briefings (3x daily)
'daily',
// Once daily (evening summary)
'weekly',
// Weekly digest
'major_only' // Only major transfer news
]));

// Preferred teams (for personalization)
export var PreferredTeamSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[2]++, z[
/* istanbul ignore next */
"enum"](['arsenal', 'aston_villa', 'bournemouth', 'brentford', 'brighton', 'burnley', 'chelsea', 'crystal_palace', 'everton', 'fulham', 'liverpool', 'luton', 'manchester_city', 'manchester_united', 'newcastle', 'nottingham_forest', 'sheffield_united', 'tottenham', 'west_ham', 'wolves']));

// Subscriber preferences
export var SubscriberPreferencesSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[3]++, z.object({
  emailFrequency: EmailFrequencySchema[
  /* istanbul ignore next */
  "default"]('all'),
  preferredTeams: z.array(PreferredTeamSchema).max(5)[
  /* istanbul ignore next */
  "default"]([]),
  receiveBreakingNews: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](true),
  emailFormat: z[
  /* istanbul ignore next */
  "enum"](['html', 'text'])[
  /* istanbul ignore next */
  "default"]('html'),
  timezone: z.string()[
  /* istanbul ignore next */
  "default"]('Europe/London'),
  language: z[
  /* istanbul ignore next */
  "enum"](['en'])[
  /* istanbul ignore next */
  "default"]('en'),
  // Future expansion

  // Content preferences
  includeRumours: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](true),
  includeConfirmed: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](true),
  includeLoanDeals: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](true),
  includeYouthPlayers: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](false),
  // Communication preferences
  marketingEmails: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](false),
  surveyParticipation: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](false),
  feedbackRequests: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](true)
}));

// Email validation with comprehensive checks
export var EmailSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[4]++, z.string().email({
  message: 'Please enter a valid email address'
}).min(5, {
  message: 'Email must be at least 5 characters long'
}).max(254, {
  message: 'Email must be no more than 254 characters long'
}).refine(function (email) {
  /* istanbul ignore next */
  cov_2p073au1g1().f[0]++;
  // Check for common invalid patterns
  var invalidPatterns =
  /* istanbul ignore next */
  (cov_2p073au1g1().s[5]++, [/\.\./,
  // Double dots
  /^\./,
  // Starting with dot
  /\.$/,
  // Ending with dot
  /@.*@/,
  // Multiple @ symbols
  /\s/ // Whitespace
  ]);
  /* istanbul ignore next */
  cov_2p073au1g1().s[6]++;
  return !invalidPatterns.some(function (pattern) {
    /* istanbul ignore next */
    cov_2p073au1g1().f[1]++;
    cov_2p073au1g1().s[7]++;
    return pattern.test(email);
  });
}, {
  message: 'Email format is invalid'
}).refine(function (email) {
  /* istanbul ignore next */
  cov_2p073au1g1().f[2]++;
  // Check for valid domain structure
  var domainPart =
  /* istanbul ignore next */
  (cov_2p073au1g1().s[8]++, email.split('@')[1]);
  /* istanbul ignore next */
  cov_2p073au1g1().s[9]++;
  return /* istanbul ignore next */(cov_2p073au1g1().b[0][0]++, domainPart) &&
  /* istanbul ignore next */
  (cov_2p073au1g1().b[0][1]++, domainPart.includes('.')) &&
  /* istanbul ignore next */
  (cov_2p073au1g1().b[0][2]++, !domainPart.startsWith('.')) &&
  /* istanbul ignore next */
  (cov_2p073au1g1().b[0][3]++, !domainPart.endsWith('.'));
}, {
  message: 'Email domain is invalid'
}));

// Main subscriber schema
export var SubscriberSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[10]++, z.object({
  id: z.string(),
  email: EmailSchema,
  status: SubscriptionStatusSchema,
  preferences: SubscriberPreferencesSchema,
  // Subscription tracking
  subscribedAt: z.date(),
  confirmedAt: z.date().optional(),
  lastEmailSent: z.date().optional(),
  lastEngagement: z.date().optional(),
  // Source tracking
  subscriptionSource: z[
  /* istanbul ignore next */
  "enum"](['website', 'social_media', 'referral', 'organic', 'paid_ad', 'other'])[
  /* istanbul ignore next */
  "default"]('website'),
  referrerUrl: z.string().url().optional(),
  utmParameters: z.object({
    source: z.string().optional(),
    medium: z.string().optional(),
    campaign: z.string().optional(),
    term: z.string().optional(),
    content: z.string().optional()
  }).optional(),
  // Engagement metrics
  emailsReceived: z.number().min(0)[
  /* istanbul ignore next */
  "default"](0),
  emailsOpened: z.number().min(0)[
  /* istanbul ignore next */
  "default"](0),
  linksClicked: z.number().min(0)[
  /* istanbul ignore next */
  "default"](0),
  lastOpenedAt: z.date().optional(),
  lastClickedAt: z.date().optional(),
  // Device and location info (anonymized)
  lastKnownLocation: z.object({
    country: z.string().length(2).optional(),
    // ISO country code
    region: z.string().optional(),
    city: z.string().optional()
  }).optional(),
  deviceInfo: z.object({
    platform: z[
    /* istanbul ignore next */
    "enum"](['mobile', 'tablet', 'desktop', 'unknown']).optional(),
    emailClient: z.string().optional()
  }).optional(),
  // Unsubscribe tracking
  unsubscribedAt: z.date().optional(),
  unsubscribeReason: z[
  /* istanbul ignore next */
  "enum"](['too_frequent', 'not_relevant', 'poor_quality', 'changed_email', 'privacy_concerns', 'other']).optional(),
  unsubscribeFeedback: z.string().max(500).optional(),
  // Data compliance
  gdprConsent: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](false),
  consentDate: z.date().optional(),
  dataProcessingConsent: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](false),
  ipAddress: z.string().ip().optional(),
  // For audit trail

  // System fields
  createdAt: z.date(),
  updatedAt: z.date(),
  isTestAccount: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](false)
}));

// Email campaign schemas
export var EmailCampaignSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[11]++, z.object({
  id: z.string(),
  name: z.string().min(1).max(255),
  type: z[
  /* istanbul ignore next */
  "enum"](['briefing', 'breaking_news', 'weekly_digest', 'welcome', 'reengagement']),
  // Content
  subject: z.string().min(5).max(100),
  preheader: z.string().min(10).max(200).optional(),
  htmlContent: z.string().min(100),
  textContent: z.string().min(100),
  // Targeting
  targetAudience: z.object({
    includeStatuses: z.array(SubscriptionStatusSchema)[
    /* istanbul ignore next */
    "default"](['active']),
    excludeStatuses: z.array(SubscriptionStatusSchema)[
    /* istanbul ignore next */
    "default"](['unsubscribed', 'bounced', 'complained']),
    preferredTeams: z.array(PreferredTeamSchema).optional(),
    emailFrequency: z.array(EmailFrequencySchema).optional(),
    lastEngagementBefore: z.date().optional(),
    lastEngagementAfter: z.date().optional()
  }),
  // Scheduling
  scheduledAt: z.date().optional(),
  sentAt: z.date().optional(),
  status: z[
  /* istanbul ignore next */
  "enum"](['draft', 'scheduled', 'sending', 'sent', 'cancelled']),
  // Performance metrics
  metrics: z.object({
    recipientCount: z.number().min(0)[
    /* istanbul ignore next */
    "default"](0),
    deliveredCount: z.number().min(0)[
    /* istanbul ignore next */
    "default"](0),
    bouncedCount: z.number().min(0)[
    /* istanbul ignore next */
    "default"](0),
    openedCount: z.number().min(0)[
    /* istanbul ignore next */
    "default"](0),
    clickedCount: z.number().min(0)[
    /* istanbul ignore next */
    "default"](0),
    unsubscribedCount: z.number().min(0)[
    /* istanbul ignore next */
    "default"](0),
    complainedCount: z.number().min(0)[
    /* istanbul ignore next */
    "default"](0),
    // Calculated rates
    deliveryRate: z.number().min(0).max(1)[
    /* istanbul ignore next */
    "default"](0),
    openRate: z.number().min(0).max(1)[
    /* istanbul ignore next */
    "default"](0),
    clickRate: z.number().min(0).max(1)[
    /* istanbul ignore next */
    "default"](0),
    unsubscribeRate: z.number().min(0).max(1)[
    /* istanbul ignore next */
    "default"](0),
    complaintRate: z.number().min(0).max(1)[
    /* istanbul ignore next */
    "default"](0)
  })[
  /* istanbul ignore next */
  "default"]({
    recipientCount: 0,
    deliveredCount: 0,
    bouncedCount: 0,
    openedCount: 0,
    clickedCount: 0,
    unsubscribedCount: 0,
    complainedCount: 0,
    deliveryRate: 0,
    openRate: 0,
    clickRate: 0,
    unsubscribeRate: 0,
    complaintRate: 0
  }).optional(),
  // System fields
  createdAt: z.date(),
  updatedAt: z.date(),
  createdBy: z.string()
}));

// Subscriber action schemas
export var SubscribeRequestSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[12]++, z.object({
  email: EmailSchema,
  preferences: SubscriberPreferencesSchema.partial().optional(),
  gdprConsent: z[
  /* istanbul ignore next */
  "boolean"]().refine(function (val) {
    /* istanbul ignore next */
    cov_2p073au1g1().f[3]++;
    cov_2p073au1g1().s[13]++;
    return val === true;
  }, {
    message: 'GDPR consent is required'
  }),
  subscriptionSource: z[
  /* istanbul ignore next */
  "enum"](['website', 'social_media', 'referral', 'organic', 'paid_ad', 'other'])[
  /* istanbul ignore next */
  "default"]('website'),
  referrerUrl: z.string().url().optional(),
  utmParameters: z.object({
    source: z.string().optional(),
    medium: z.string().optional(),
    campaign: z.string().optional(),
    term: z.string().optional(),
    content: z.string().optional()
  }).optional()
}));
export var UpdatePreferencesSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[14]++, SubscriberPreferencesSchema.partial());
export var UnsubscribeRequestSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[15]++, z.object({
  email: EmailSchema,
  reason: z[
  /* istanbul ignore next */
  "enum"](['too_frequent', 'not_relevant', 'poor_quality', 'changed_email', 'privacy_concerns', 'other']).optional(),
  feedback: z.string().max(500).optional()
}));

// Email tracking schemas
export var EmailOpenEventSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[16]++, z.object({
  subscriberId: z.string(),
  campaignId: z.string(),
  openedAt: z.date(),
  ipAddress: z.string().ip().optional(),
  userAgent: z.string().optional(),
  location: z.object({
    country: z.string().length(2).optional(),
    region: z.string().optional(),
    city: z.string().optional()
  }).optional()
}));
export var EmailClickEventSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[17]++, z.object({
  subscriberId: z.string(),
  campaignId: z.string(),
  clickedAt: z.date(),
  url: z.string().url(),
  linkText: z.string().optional(),
  ipAddress: z.string().ip().optional(),
  userAgent: z.string().optional()
}));

// Subscriber analytics query schema
export var SubscriberAnalyticsQuerySchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[18]++, z.object({
  dateFrom: z.date().optional(),
  dateTo: z.date().optional(),
  segmentBy: z[
  /* istanbul ignore next */
  "enum"](['status', 'source', 'team', 'frequency']).optional(),
  metrics: z.array(z[
  /* istanbul ignore next */
  "enum"](['growth', 'engagement', 'churn', 'ltv']))[
  /* istanbul ignore next */
  "default"](['growth'])
}));

// Export types
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMnAwNzNhdTFnMSIsImFjdHVhbENvdmVyYWdlIiwieiIsIlN1YnNjcmlwdGlvblN0YXR1c1NjaGVtYSIsInMiLCJFbWFpbEZyZXF1ZW5jeVNjaGVtYSIsIlByZWZlcnJlZFRlYW1TY2hlbWEiLCJTdWJzY3JpYmVyUHJlZmVyZW5jZXNTY2hlbWEiLCJvYmplY3QiLCJlbWFpbEZyZXF1ZW5jeSIsInByZWZlcnJlZFRlYW1zIiwiYXJyYXkiLCJtYXgiLCJyZWNlaXZlQnJlYWtpbmdOZXdzIiwiZW1haWxGb3JtYXQiLCJ0aW1lem9uZSIsInN0cmluZyIsImxhbmd1YWdlIiwiaW5jbHVkZVJ1bW91cnMiLCJpbmNsdWRlQ29uZmlybWVkIiwiaW5jbHVkZUxvYW5EZWFscyIsImluY2x1ZGVZb3V0aFBsYXllcnMiLCJtYXJrZXRpbmdFbWFpbHMiLCJzdXJ2ZXlQYXJ0aWNpcGF0aW9uIiwiZmVlZGJhY2tSZXF1ZXN0cyIsIkVtYWlsU2NoZW1hIiwiZW1haWwiLCJtZXNzYWdlIiwibWluIiwicmVmaW5lIiwiZiIsImludmFsaWRQYXR0ZXJucyIsInNvbWUiLCJwYXR0ZXJuIiwidGVzdCIsImRvbWFpblBhcnQiLCJzcGxpdCIsImIiLCJpbmNsdWRlcyIsInN0YXJ0c1dpdGgiLCJlbmRzV2l0aCIsIlN1YnNjcmliZXJTY2hlbWEiLCJpZCIsInN0YXR1cyIsInByZWZlcmVuY2VzIiwic3Vic2NyaWJlZEF0IiwiZGF0ZSIsImNvbmZpcm1lZEF0Iiwib3B0aW9uYWwiLCJsYXN0RW1haWxTZW50IiwibGFzdEVuZ2FnZW1lbnQiLCJzdWJzY3JpcHRpb25Tb3VyY2UiLCJyZWZlcnJlclVybCIsInVybCIsInV0bVBhcmFtZXRlcnMiLCJzb3VyY2UiLCJtZWRpdW0iLCJjYW1wYWlnbiIsInRlcm0iLCJjb250ZW50IiwiZW1haWxzUmVjZWl2ZWQiLCJudW1iZXIiLCJlbWFpbHNPcGVuZWQiLCJsaW5rc0NsaWNrZWQiLCJsYXN0T3BlbmVkQXQiLCJsYXN0Q2xpY2tlZEF0IiwibGFzdEtub3duTG9jYXRpb24iLCJjb3VudHJ5IiwibGVuZ3RoIiwicmVnaW9uIiwiY2l0eSIsImRldmljZUluZm8iLCJwbGF0Zm9ybSIsImVtYWlsQ2xpZW50IiwidW5zdWJzY3JpYmVkQXQiLCJ1bnN1YnNjcmliZVJlYXNvbiIsInVuc3Vic2NyaWJlRmVlZGJhY2siLCJnZHByQ29uc2VudCIsImNvbnNlbnREYXRlIiwiZGF0YVByb2Nlc3NpbmdDb25zZW50IiwiaXBBZGRyZXNzIiwiaXAiLCJjcmVhdGVkQXQiLCJ1cGRhdGVkQXQiLCJpc1Rlc3RBY2NvdW50IiwiRW1haWxDYW1wYWlnblNjaGVtYSIsIm5hbWUiLCJ0eXBlIiwic3ViamVjdCIsInByZWhlYWRlciIsImh0bWxDb250ZW50IiwidGV4dENvbnRlbnQiLCJ0YXJnZXRBdWRpZW5jZSIsImluY2x1ZGVTdGF0dXNlcyIsImV4Y2x1ZGVTdGF0dXNlcyIsImxhc3RFbmdhZ2VtZW50QmVmb3JlIiwibGFzdEVuZ2FnZW1lbnRBZnRlciIsInNjaGVkdWxlZEF0Iiwic2VudEF0IiwibWV0cmljcyIsInJlY2lwaWVudENvdW50IiwiZGVsaXZlcmVkQ291bnQiLCJib3VuY2VkQ291bnQiLCJvcGVuZWRDb3VudCIsImNsaWNrZWRDb3VudCIsInVuc3Vic2NyaWJlZENvdW50IiwiY29tcGxhaW5lZENvdW50IiwiZGVsaXZlcnlSYXRlIiwib3BlblJhdGUiLCJjbGlja1JhdGUiLCJ1bnN1YnNjcmliZVJhdGUiLCJjb21wbGFpbnRSYXRlIiwiY3JlYXRlZEJ5IiwiU3Vic2NyaWJlUmVxdWVzdFNjaGVtYSIsInBhcnRpYWwiLCJ2YWwiLCJVcGRhdGVQcmVmZXJlbmNlc1NjaGVtYSIsIlVuc3Vic2NyaWJlUmVxdWVzdFNjaGVtYSIsInJlYXNvbiIsImZlZWRiYWNrIiwiRW1haWxPcGVuRXZlbnRTY2hlbWEiLCJzdWJzY3JpYmVySWQiLCJjYW1wYWlnbklkIiwib3BlbmVkQXQiLCJ1c2VyQWdlbnQiLCJsb2NhdGlvbiIsIkVtYWlsQ2xpY2tFdmVudFNjaGVtYSIsImNsaWNrZWRBdCIsImxpbmtUZXh0IiwiU3Vic2NyaWJlckFuYWx5dGljc1F1ZXJ5U2NoZW1hIiwiZGF0ZUZyb20iLCJkYXRlVG8iLCJzZWdtZW50QnkiXSwic291cmNlcyI6WyJzdWJzY3JpYmVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHogfSBmcm9tICd6b2QnO1xuXG4vKipcbiAqIFN1YnNjcmliZXIgYW5kIEVtYWlsIE1hbmFnZW1lbnQgU2NoZW1hc1xuICogVmFsaWRhdGVzIHN1YnNjcmliZXIgZGF0YSBhbmQgZW1haWwgY2FtcGFpZ24gc3RydWN0dXJlc1xuICovXG5cbi8vIFN1YnNjcmlwdGlvbiBzdGF0dXNcbmV4cG9ydCBjb25zdCBTdWJzY3JpcHRpb25TdGF0dXNTY2hlbWEgPSB6LmVudW0oW1xuICAncGVuZGluZycsIC8vIFdhaXRpbmcgZm9yIGVtYWlsIGNvbmZpcm1hdGlvblxuICAnYWN0aXZlJywgLy8gQ29uZmlybWVkIGFuZCByZWNlaXZpbmcgZW1haWxzXG4gICdwYXVzZWQnLCAvLyBUZW1wb3JhcmlseSBwYXVzZWQgYnkgdXNlclxuICAndW5zdWJzY3JpYmVkJywgLy8gUGVybWFuZW50bHkgdW5zdWJzY3JpYmVkXG4gICdib3VuY2VkJywgLy8gRW1haWwgYm91bmNlZFxuICAnY29tcGxhaW5lZCcsIC8vIE1hcmtlZCBhcyBzcGFtXG5dKTtcblxuLy8gRW1haWwgZnJlcXVlbmN5IHByZWZlcmVuY2VzXG5leHBvcnQgY29uc3QgRW1haWxGcmVxdWVuY3lTY2hlbWEgPSB6LmVudW0oW1xuICAnYWxsJywgLy8gQWxsIGJyaWVmaW5ncyAoM3ggZGFpbHkpXG4gICdkYWlseScsIC8vIE9uY2UgZGFpbHkgKGV2ZW5pbmcgc3VtbWFyeSlcbiAgJ3dlZWtseScsIC8vIFdlZWtseSBkaWdlc3RcbiAgJ21ham9yX29ubHknLCAvLyBPbmx5IG1ham9yIHRyYW5zZmVyIG5ld3Ncbl0pO1xuXG4vLyBQcmVmZXJyZWQgdGVhbXMgKGZvciBwZXJzb25hbGl6YXRpb24pXG5leHBvcnQgY29uc3QgUHJlZmVycmVkVGVhbVNjaGVtYSA9IHouZW51bShbXG4gICdhcnNlbmFsJyxcbiAgJ2FzdG9uX3ZpbGxhJyxcbiAgJ2JvdXJuZW1vdXRoJyxcbiAgJ2JyZW50Zm9yZCcsXG4gICdicmlnaHRvbicsXG4gICdidXJubGV5JyxcbiAgJ2NoZWxzZWEnLFxuICAnY3J5c3RhbF9wYWxhY2UnLFxuICAnZXZlcnRvbicsXG4gICdmdWxoYW0nLFxuICAnbGl2ZXJwb29sJyxcbiAgJ2x1dG9uJyxcbiAgJ21hbmNoZXN0ZXJfY2l0eScsXG4gICdtYW5jaGVzdGVyX3VuaXRlZCcsXG4gICduZXdjYXN0bGUnLFxuICAnbm90dGluZ2hhbV9mb3Jlc3QnLFxuICAnc2hlZmZpZWxkX3VuaXRlZCcsXG4gICd0b3R0ZW5oYW0nLFxuICAnd2VzdF9oYW0nLFxuICAnd29sdmVzJyxcbl0pO1xuXG4vLyBTdWJzY3JpYmVyIHByZWZlcmVuY2VzXG5leHBvcnQgY29uc3QgU3Vic2NyaWJlclByZWZlcmVuY2VzU2NoZW1hID0gei5vYmplY3Qoe1xuICBlbWFpbEZyZXF1ZW5jeTogRW1haWxGcmVxdWVuY3lTY2hlbWEuZGVmYXVsdCgnYWxsJyksXG4gIHByZWZlcnJlZFRlYW1zOiB6LmFycmF5KFByZWZlcnJlZFRlYW1TY2hlbWEpLm1heCg1KS5kZWZhdWx0KFtdKSxcbiAgcmVjZWl2ZUJyZWFraW5nTmV3czogei5ib29sZWFuKCkuZGVmYXVsdCh0cnVlKSxcbiAgZW1haWxGb3JtYXQ6IHouZW51bShbJ2h0bWwnLCAndGV4dCddKS5kZWZhdWx0KCdodG1sJyksXG4gIHRpbWV6b25lOiB6LnN0cmluZygpLmRlZmF1bHQoJ0V1cm9wZS9Mb25kb24nKSxcbiAgbGFuZ3VhZ2U6IHouZW51bShbJ2VuJ10pLmRlZmF1bHQoJ2VuJyksIC8vIEZ1dHVyZSBleHBhbnNpb25cblxuICAvLyBDb250ZW50IHByZWZlcmVuY2VzXG4gIGluY2x1ZGVSdW1vdXJzOiB6LmJvb2xlYW4oKS5kZWZhdWx0KHRydWUpLFxuICBpbmNsdWRlQ29uZmlybWVkOiB6LmJvb2xlYW4oKS5kZWZhdWx0KHRydWUpLFxuICBpbmNsdWRlTG9hbkRlYWxzOiB6LmJvb2xlYW4oKS5kZWZhdWx0KHRydWUpLFxuICBpbmNsdWRlWW91dGhQbGF5ZXJzOiB6LmJvb2xlYW4oKS5kZWZhdWx0KGZhbHNlKSxcblxuICAvLyBDb21tdW5pY2F0aW9uIHByZWZlcmVuY2VzXG4gIG1hcmtldGluZ0VtYWlsczogei5ib29sZWFuKCkuZGVmYXVsdChmYWxzZSksXG4gIHN1cnZleVBhcnRpY2lwYXRpb246IHouYm9vbGVhbigpLmRlZmF1bHQoZmFsc2UpLFxuICBmZWVkYmFja1JlcXVlc3RzOiB6LmJvb2xlYW4oKS5kZWZhdWx0KHRydWUpLFxufSk7XG5cbi8vIEVtYWlsIHZhbGlkYXRpb24gd2l0aCBjb21wcmVoZW5zaXZlIGNoZWNrc1xuZXhwb3J0IGNvbnN0IEVtYWlsU2NoZW1hID0gelxuICAuc3RyaW5nKClcbiAgLmVtYWlsKHsgbWVzc2FnZTogJ1BsZWFzZSBlbnRlciBhIHZhbGlkIGVtYWlsIGFkZHJlc3MnIH0pXG4gIC5taW4oNSwgeyBtZXNzYWdlOiAnRW1haWwgbXVzdCBiZSBhdCBsZWFzdCA1IGNoYXJhY3RlcnMgbG9uZycgfSlcbiAgLm1heCgyNTQsIHsgbWVzc2FnZTogJ0VtYWlsIG11c3QgYmUgbm8gbW9yZSB0aGFuIDI1NCBjaGFyYWN0ZXJzIGxvbmcnIH0pXG4gIC5yZWZpbmUoXG4gICAgKGVtYWlsKSA9PiB7XG4gICAgICAvLyBDaGVjayBmb3IgY29tbW9uIGludmFsaWQgcGF0dGVybnNcbiAgICAgIGNvbnN0IGludmFsaWRQYXR0ZXJucyA9IFtcbiAgICAgICAgL1xcLlxcLi8sIC8vIERvdWJsZSBkb3RzXG4gICAgICAgIC9eXFwuLywgLy8gU3RhcnRpbmcgd2l0aCBkb3RcbiAgICAgICAgL1xcLiQvLCAvLyBFbmRpbmcgd2l0aCBkb3RcbiAgICAgICAgL0AuKkAvLCAvLyBNdWx0aXBsZSBAIHN5bWJvbHNcbiAgICAgICAgL1xccy8sIC8vIFdoaXRlc3BhY2VcbiAgICAgIF07XG4gICAgICByZXR1cm4gIWludmFsaWRQYXR0ZXJucy5zb21lKChwYXR0ZXJuKSA9PiBwYXR0ZXJuLnRlc3QoZW1haWwpKTtcbiAgICB9LFxuICAgIHsgbWVzc2FnZTogJ0VtYWlsIGZvcm1hdCBpcyBpbnZhbGlkJyB9XG4gIClcbiAgLnJlZmluZShcbiAgICAoZW1haWwpID0+IHtcbiAgICAgIC8vIENoZWNrIGZvciB2YWxpZCBkb21haW4gc3RydWN0dXJlXG4gICAgICBjb25zdCBkb21haW5QYXJ0ID0gZW1haWwuc3BsaXQoJ0AnKVsxXTtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIGRvbWFpblBhcnQgJiZcbiAgICAgICAgZG9tYWluUGFydC5pbmNsdWRlcygnLicpICYmXG4gICAgICAgICFkb21haW5QYXJ0LnN0YXJ0c1dpdGgoJy4nKSAmJlxuICAgICAgICAhZG9tYWluUGFydC5lbmRzV2l0aCgnLicpXG4gICAgICApO1xuICAgIH0sXG4gICAgeyBtZXNzYWdlOiAnRW1haWwgZG9tYWluIGlzIGludmFsaWQnIH1cbiAgKTtcblxuLy8gTWFpbiBzdWJzY3JpYmVyIHNjaGVtYVxuZXhwb3J0IGNvbnN0IFN1YnNjcmliZXJTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGlkOiB6LnN0cmluZygpLFxuICBlbWFpbDogRW1haWxTY2hlbWEsXG4gIHN0YXR1czogU3Vic2NyaXB0aW9uU3RhdHVzU2NoZW1hLFxuICBwcmVmZXJlbmNlczogU3Vic2NyaWJlclByZWZlcmVuY2VzU2NoZW1hLFxuXG4gIC8vIFN1YnNjcmlwdGlvbiB0cmFja2luZ1xuICBzdWJzY3JpYmVkQXQ6IHouZGF0ZSgpLFxuICBjb25maXJtZWRBdDogei5kYXRlKCkub3B0aW9uYWwoKSxcbiAgbGFzdEVtYWlsU2VudDogei5kYXRlKCkub3B0aW9uYWwoKSxcbiAgbGFzdEVuZ2FnZW1lbnQ6IHouZGF0ZSgpLm9wdGlvbmFsKCksXG5cbiAgLy8gU291cmNlIHRyYWNraW5nXG4gIHN1YnNjcmlwdGlvblNvdXJjZTogelxuICAgIC5lbnVtKFtcbiAgICAgICd3ZWJzaXRlJyxcbiAgICAgICdzb2NpYWxfbWVkaWEnLFxuICAgICAgJ3JlZmVycmFsJyxcbiAgICAgICdvcmdhbmljJyxcbiAgICAgICdwYWlkX2FkJyxcbiAgICAgICdvdGhlcicsXG4gICAgXSlcbiAgICAuZGVmYXVsdCgnd2Vic2l0ZScpLFxuICByZWZlcnJlclVybDogei5zdHJpbmcoKS51cmwoKS5vcHRpb25hbCgpLFxuICB1dG1QYXJhbWV0ZXJzOiB6XG4gICAgLm9iamVjdCh7XG4gICAgICBzb3VyY2U6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICAgIG1lZGl1bTogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICAgICAgY2FtcGFpZ246IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICAgIHRlcm06IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICAgIGNvbnRlbnQ6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICB9KVxuICAgIC5vcHRpb25hbCgpLFxuXG4gIC8vIEVuZ2FnZW1lbnQgbWV0cmljc1xuICBlbWFpbHNSZWNlaXZlZDogei5udW1iZXIoKS5taW4oMCkuZGVmYXVsdCgwKSxcbiAgZW1haWxzT3BlbmVkOiB6Lm51bWJlcigpLm1pbigwKS5kZWZhdWx0KDApLFxuICBsaW5rc0NsaWNrZWQ6IHoubnVtYmVyKCkubWluKDApLmRlZmF1bHQoMCksXG4gIGxhc3RPcGVuZWRBdDogei5kYXRlKCkub3B0aW9uYWwoKSxcbiAgbGFzdENsaWNrZWRBdDogei5kYXRlKCkub3B0aW9uYWwoKSxcblxuICAvLyBEZXZpY2UgYW5kIGxvY2F0aW9uIGluZm8gKGFub255bWl6ZWQpXG4gIGxhc3RLbm93bkxvY2F0aW9uOiB6XG4gICAgLm9iamVjdCh7XG4gICAgICBjb3VudHJ5OiB6LnN0cmluZygpLmxlbmd0aCgyKS5vcHRpb25hbCgpLCAvLyBJU08gY291bnRyeSBjb2RlXG4gICAgICByZWdpb246IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICAgIGNpdHk6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICB9KVxuICAgIC5vcHRpb25hbCgpLFxuICBkZXZpY2VJbmZvOiB6XG4gICAgLm9iamVjdCh7XG4gICAgICBwbGF0Zm9ybTogei5lbnVtKFsnbW9iaWxlJywgJ3RhYmxldCcsICdkZXNrdG9wJywgJ3Vua25vd24nXSkub3B0aW9uYWwoKSxcbiAgICAgIGVtYWlsQ2xpZW50OiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gICAgfSlcbiAgICAub3B0aW9uYWwoKSxcblxuICAvLyBVbnN1YnNjcmliZSB0cmFja2luZ1xuICB1bnN1YnNjcmliZWRBdDogei5kYXRlKCkub3B0aW9uYWwoKSxcbiAgdW5zdWJzY3JpYmVSZWFzb246IHpcbiAgICAuZW51bShbXG4gICAgICAndG9vX2ZyZXF1ZW50JyxcbiAgICAgICdub3RfcmVsZXZhbnQnLFxuICAgICAgJ3Bvb3JfcXVhbGl0eScsXG4gICAgICAnY2hhbmdlZF9lbWFpbCcsXG4gICAgICAncHJpdmFjeV9jb25jZXJucycsXG4gICAgICAnb3RoZXInLFxuICAgIF0pXG4gICAgLm9wdGlvbmFsKCksXG4gIHVuc3Vic2NyaWJlRmVlZGJhY2s6IHouc3RyaW5nKCkubWF4KDUwMCkub3B0aW9uYWwoKSxcblxuICAvLyBEYXRhIGNvbXBsaWFuY2VcbiAgZ2RwckNvbnNlbnQ6IHouYm9vbGVhbigpLmRlZmF1bHQoZmFsc2UpLFxuICBjb25zZW50RGF0ZTogei5kYXRlKCkub3B0aW9uYWwoKSxcbiAgZGF0YVByb2Nlc3NpbmdDb25zZW50OiB6LmJvb2xlYW4oKS5kZWZhdWx0KGZhbHNlKSxcbiAgaXBBZGRyZXNzOiB6LnN0cmluZygpLmlwKCkub3B0aW9uYWwoKSwgLy8gRm9yIGF1ZGl0IHRyYWlsXG5cbiAgLy8gU3lzdGVtIGZpZWxkc1xuICBjcmVhdGVkQXQ6IHouZGF0ZSgpLFxuICB1cGRhdGVkQXQ6IHouZGF0ZSgpLFxuICBpc1Rlc3RBY2NvdW50OiB6LmJvb2xlYW4oKS5kZWZhdWx0KGZhbHNlKSxcbn0pO1xuXG4vLyBFbWFpbCBjYW1wYWlnbiBzY2hlbWFzXG5leHBvcnQgY29uc3QgRW1haWxDYW1wYWlnblNjaGVtYSA9IHoub2JqZWN0KHtcbiAgaWQ6IHouc3RyaW5nKCksXG4gIG5hbWU6IHouc3RyaW5nKCkubWluKDEpLm1heCgyNTUpLFxuICB0eXBlOiB6LmVudW0oW1xuICAgICdicmllZmluZycsXG4gICAgJ2JyZWFraW5nX25ld3MnLFxuICAgICd3ZWVrbHlfZGlnZXN0JyxcbiAgICAnd2VsY29tZScsXG4gICAgJ3JlZW5nYWdlbWVudCcsXG4gIF0pLFxuXG4gIC8vIENvbnRlbnRcbiAgc3ViamVjdDogei5zdHJpbmcoKS5taW4oNSkubWF4KDEwMCksXG4gIHByZWhlYWRlcjogei5zdHJpbmcoKS5taW4oMTApLm1heCgyMDApLm9wdGlvbmFsKCksXG4gIGh0bWxDb250ZW50OiB6LnN0cmluZygpLm1pbigxMDApLFxuICB0ZXh0Q29udGVudDogei5zdHJpbmcoKS5taW4oMTAwKSxcblxuICAvLyBUYXJnZXRpbmdcbiAgdGFyZ2V0QXVkaWVuY2U6IHoub2JqZWN0KHtcbiAgICBpbmNsdWRlU3RhdHVzZXM6IHouYXJyYXkoU3Vic2NyaXB0aW9uU3RhdHVzU2NoZW1hKS5kZWZhdWx0KFsnYWN0aXZlJ10pLFxuICAgIGV4Y2x1ZGVTdGF0dXNlczogelxuICAgICAgLmFycmF5KFN1YnNjcmlwdGlvblN0YXR1c1NjaGVtYSlcbiAgICAgIC5kZWZhdWx0KFsndW5zdWJzY3JpYmVkJywgJ2JvdW5jZWQnLCAnY29tcGxhaW5lZCddKSxcbiAgICBwcmVmZXJyZWRUZWFtczogei5hcnJheShQcmVmZXJyZWRUZWFtU2NoZW1hKS5vcHRpb25hbCgpLFxuICAgIGVtYWlsRnJlcXVlbmN5OiB6LmFycmF5KEVtYWlsRnJlcXVlbmN5U2NoZW1hKS5vcHRpb25hbCgpLFxuICAgIGxhc3RFbmdhZ2VtZW50QmVmb3JlOiB6LmRhdGUoKS5vcHRpb25hbCgpLFxuICAgIGxhc3RFbmdhZ2VtZW50QWZ0ZXI6IHouZGF0ZSgpLm9wdGlvbmFsKCksXG4gIH0pLFxuXG4gIC8vIFNjaGVkdWxpbmdcbiAgc2NoZWR1bGVkQXQ6IHouZGF0ZSgpLm9wdGlvbmFsKCksXG4gIHNlbnRBdDogei5kYXRlKCkub3B0aW9uYWwoKSxcbiAgc3RhdHVzOiB6LmVudW0oWydkcmFmdCcsICdzY2hlZHVsZWQnLCAnc2VuZGluZycsICdzZW50JywgJ2NhbmNlbGxlZCddKSxcblxuICAvLyBQZXJmb3JtYW5jZSBtZXRyaWNzXG4gIG1ldHJpY3M6IHpcbiAgICAub2JqZWN0KHtcbiAgICAgIHJlY2lwaWVudENvdW50OiB6Lm51bWJlcigpLm1pbigwKS5kZWZhdWx0KDApLFxuICAgICAgZGVsaXZlcmVkQ291bnQ6IHoubnVtYmVyKCkubWluKDApLmRlZmF1bHQoMCksXG4gICAgICBib3VuY2VkQ291bnQ6IHoubnVtYmVyKCkubWluKDApLmRlZmF1bHQoMCksXG4gICAgICBvcGVuZWRDb3VudDogei5udW1iZXIoKS5taW4oMCkuZGVmYXVsdCgwKSxcbiAgICAgIGNsaWNrZWRDb3VudDogei5udW1iZXIoKS5taW4oMCkuZGVmYXVsdCgwKSxcbiAgICAgIHVuc3Vic2NyaWJlZENvdW50OiB6Lm51bWJlcigpLm1pbigwKS5kZWZhdWx0KDApLFxuICAgICAgY29tcGxhaW5lZENvdW50OiB6Lm51bWJlcigpLm1pbigwKS5kZWZhdWx0KDApLFxuXG4gICAgICAvLyBDYWxjdWxhdGVkIHJhdGVzXG4gICAgICBkZWxpdmVyeVJhdGU6IHoubnVtYmVyKCkubWluKDApLm1heCgxKS5kZWZhdWx0KDApLFxuICAgICAgb3BlblJhdGU6IHoubnVtYmVyKCkubWluKDApLm1heCgxKS5kZWZhdWx0KDApLFxuICAgICAgY2xpY2tSYXRlOiB6Lm51bWJlcigpLm1pbigwKS5tYXgoMSkuZGVmYXVsdCgwKSxcbiAgICAgIHVuc3Vic2NyaWJlUmF0ZTogei5udW1iZXIoKS5taW4oMCkubWF4KDEpLmRlZmF1bHQoMCksXG4gICAgICBjb21wbGFpbnRSYXRlOiB6Lm51bWJlcigpLm1pbigwKS5tYXgoMSkuZGVmYXVsdCgwKSxcbiAgICB9KVxuICAgIC5kZWZhdWx0KHtcbiAgICAgIHJlY2lwaWVudENvdW50OiAwLFxuICAgICAgZGVsaXZlcmVkQ291bnQ6IDAsXG4gICAgICBib3VuY2VkQ291bnQ6IDAsXG4gICAgICBvcGVuZWRDb3VudDogMCxcbiAgICAgIGNsaWNrZWRDb3VudDogMCxcbiAgICAgIHVuc3Vic2NyaWJlZENvdW50OiAwLFxuICAgICAgY29tcGxhaW5lZENvdW50OiAwLFxuICAgICAgZGVsaXZlcnlSYXRlOiAwLFxuICAgICAgb3BlblJhdGU6IDAsXG4gICAgICBjbGlja1JhdGU6IDAsXG4gICAgICB1bnN1YnNjcmliZVJhdGU6IDAsXG4gICAgICBjb21wbGFpbnRSYXRlOiAwLFxuICAgIH0pXG4gICAgLm9wdGlvbmFsKCksXG5cbiAgLy8gU3lzdGVtIGZpZWxkc1xuICBjcmVhdGVkQXQ6IHouZGF0ZSgpLFxuICB1cGRhdGVkQXQ6IHouZGF0ZSgpLFxuICBjcmVhdGVkQnk6IHouc3RyaW5nKCksXG59KTtcblxuLy8gU3Vic2NyaWJlciBhY3Rpb24gc2NoZW1hc1xuZXhwb3J0IGNvbnN0IFN1YnNjcmliZVJlcXVlc3RTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGVtYWlsOiBFbWFpbFNjaGVtYSxcbiAgcHJlZmVyZW5jZXM6IFN1YnNjcmliZXJQcmVmZXJlbmNlc1NjaGVtYS5wYXJ0aWFsKCkub3B0aW9uYWwoKSxcbiAgZ2RwckNvbnNlbnQ6IHouYm9vbGVhbigpLnJlZmluZSgodmFsKSA9PiB2YWwgPT09IHRydWUsIHtcbiAgICBtZXNzYWdlOiAnR0RQUiBjb25zZW50IGlzIHJlcXVpcmVkJyxcbiAgfSksXG4gIHN1YnNjcmlwdGlvblNvdXJjZTogelxuICAgIC5lbnVtKFtcbiAgICAgICd3ZWJzaXRlJyxcbiAgICAgICdzb2NpYWxfbWVkaWEnLFxuICAgICAgJ3JlZmVycmFsJyxcbiAgICAgICdvcmdhbmljJyxcbiAgICAgICdwYWlkX2FkJyxcbiAgICAgICdvdGhlcicsXG4gICAgXSlcbiAgICAuZGVmYXVsdCgnd2Vic2l0ZScpLFxuICByZWZlcnJlclVybDogei5zdHJpbmcoKS51cmwoKS5vcHRpb25hbCgpLFxuICB1dG1QYXJhbWV0ZXJzOiB6XG4gICAgLm9iamVjdCh7XG4gICAgICBzb3VyY2U6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICAgIG1lZGl1bTogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICAgICAgY2FtcGFpZ246IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICAgIHRlcm06IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICAgIGNvbnRlbnQ6IHouc3RyaW5nKCkub3B0aW9uYWwoKSxcbiAgICB9KVxuICAgIC5vcHRpb25hbCgpLFxufSk7XG5cbmV4cG9ydCBjb25zdCBVcGRhdGVQcmVmZXJlbmNlc1NjaGVtYSA9IFN1YnNjcmliZXJQcmVmZXJlbmNlc1NjaGVtYS5wYXJ0aWFsKCk7XG5cbmV4cG9ydCBjb25zdCBVbnN1YnNjcmliZVJlcXVlc3RTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGVtYWlsOiBFbWFpbFNjaGVtYSxcbiAgcmVhc29uOiB6XG4gICAgLmVudW0oW1xuICAgICAgJ3Rvb19mcmVxdWVudCcsXG4gICAgICAnbm90X3JlbGV2YW50JyxcbiAgICAgICdwb29yX3F1YWxpdHknLFxuICAgICAgJ2NoYW5nZWRfZW1haWwnLFxuICAgICAgJ3ByaXZhY3lfY29uY2VybnMnLFxuICAgICAgJ290aGVyJyxcbiAgICBdKVxuICAgIC5vcHRpb25hbCgpLFxuICBmZWVkYmFjazogei5zdHJpbmcoKS5tYXgoNTAwKS5vcHRpb25hbCgpLFxufSk7XG5cbi8vIEVtYWlsIHRyYWNraW5nIHNjaGVtYXNcbmV4cG9ydCBjb25zdCBFbWFpbE9wZW5FdmVudFNjaGVtYSA9IHoub2JqZWN0KHtcbiAgc3Vic2NyaWJlcklkOiB6LnN0cmluZygpLFxuICBjYW1wYWlnbklkOiB6LnN0cmluZygpLFxuICBvcGVuZWRBdDogei5kYXRlKCksXG4gIGlwQWRkcmVzczogei5zdHJpbmcoKS5pcCgpLm9wdGlvbmFsKCksXG4gIHVzZXJBZ2VudDogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICBsb2NhdGlvbjogelxuICAgIC5vYmplY3Qoe1xuICAgICAgY291bnRyeTogei5zdHJpbmcoKS5sZW5ndGgoMikub3B0aW9uYWwoKSxcbiAgICAgIHJlZ2lvbjogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICAgICAgY2l0eTogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuICAgIH0pXG4gICAgLm9wdGlvbmFsKCksXG59KTtcblxuZXhwb3J0IGNvbnN0IEVtYWlsQ2xpY2tFdmVudFNjaGVtYSA9IHoub2JqZWN0KHtcbiAgc3Vic2NyaWJlcklkOiB6LnN0cmluZygpLFxuICBjYW1wYWlnbklkOiB6LnN0cmluZygpLFxuICBjbGlja2VkQXQ6IHouZGF0ZSgpLFxuICB1cmw6IHouc3RyaW5nKCkudXJsKCksXG4gIGxpbmtUZXh0OiB6LnN0cmluZygpLm9wdGlvbmFsKCksXG4gIGlwQWRkcmVzczogei5zdHJpbmcoKS5pcCgpLm9wdGlvbmFsKCksXG4gIHVzZXJBZ2VudDogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxufSk7XG5cbi8vIFN1YnNjcmliZXIgYW5hbHl0aWNzIHF1ZXJ5IHNjaGVtYVxuZXhwb3J0IGNvbnN0IFN1YnNjcmliZXJBbmFseXRpY3NRdWVyeVNjaGVtYSA9IHoub2JqZWN0KHtcbiAgZGF0ZUZyb206IHouZGF0ZSgpLm9wdGlvbmFsKCksXG4gIGRhdGVUbzogei5kYXRlKCkub3B0aW9uYWwoKSxcbiAgc2VnbWVudEJ5OiB6LmVudW0oWydzdGF0dXMnLCAnc291cmNlJywgJ3RlYW0nLCAnZnJlcXVlbmN5J10pLm9wdGlvbmFsKCksXG4gIG1ldHJpY3M6IHpcbiAgICAuYXJyYXkoei5lbnVtKFsnZ3Jvd3RoJywgJ2VuZ2FnZW1lbnQnLCAnY2h1cm4nLCAnbHR2J10pKVxuICAgIC5kZWZhdWx0KFsnZ3Jvd3RoJ10pLFxufSk7XG5cbi8vIEV4cG9ydCB0eXBlc1xuZXhwb3J0IHR5cGUgU3Vic2NyaXB0aW9uU3RhdHVzID0gei5pbmZlcjx0eXBlb2YgU3Vic2NyaXB0aW9uU3RhdHVzU2NoZW1hPjtcbmV4cG9ydCB0eXBlIEVtYWlsRnJlcXVlbmN5ID0gei5pbmZlcjx0eXBlb2YgRW1haWxGcmVxdWVuY3lTY2hlbWE+O1xuZXhwb3J0IHR5cGUgUHJlZmVycmVkVGVhbSA9IHouaW5mZXI8dHlwZW9mIFByZWZlcnJlZFRlYW1TY2hlbWE+O1xuZXhwb3J0IHR5cGUgU3Vic2NyaWJlclByZWZlcmVuY2VzID0gei5pbmZlcjx0eXBlb2YgU3Vic2NyaWJlclByZWZlcmVuY2VzU2NoZW1hPjtcbmV4cG9ydCB0eXBlIFN1YnNjcmliZXIgPSB6LmluZmVyPHR5cGVvZiBTdWJzY3JpYmVyU2NoZW1hPjtcbmV4cG9ydCB0eXBlIEVtYWlsQ2FtcGFpZ24gPSB6LmluZmVyPHR5cGVvZiBFbWFpbENhbXBhaWduU2NoZW1hPjtcbmV4cG9ydCB0eXBlIFN1YnNjcmliZVJlcXVlc3QgPSB6LmluZmVyPHR5cGVvZiBTdWJzY3JpYmVSZXF1ZXN0U2NoZW1hPjtcbmV4cG9ydCB0eXBlIFVwZGF0ZVByZWZlcmVuY2VzID0gei5pbmZlcjx0eXBlb2YgVXBkYXRlUHJlZmVyZW5jZXNTY2hlbWE+O1xuZXhwb3J0IHR5cGUgVW5zdWJzY3JpYmVSZXF1ZXN0ID0gei5pbmZlcjx0eXBlb2YgVW5zdWJzY3JpYmVSZXF1ZXN0U2NoZW1hPjtcbmV4cG9ydCB0eXBlIEVtYWlsT3BlbkV2ZW50ID0gei5pbmZlcjx0eXBlb2YgRW1haWxPcGVuRXZlbnRTY2hlbWE+O1xuZXhwb3J0IHR5cGUgRW1haWxDbGlja0V2ZW50ID0gei5pbmZlcjx0eXBlb2YgRW1haWxDbGlja0V2ZW50U2NoZW1hPjtcbmV4cG9ydCB0eXBlIFN1YnNjcmliZXJBbmFseXRpY3NRdWVyeSA9IHouaW5mZXI8XG4gIHR5cGVvZiBTdWJzY3JpYmVyQW5hbHl0aWNzUXVlcnlTY2hlbWFcbj47XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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