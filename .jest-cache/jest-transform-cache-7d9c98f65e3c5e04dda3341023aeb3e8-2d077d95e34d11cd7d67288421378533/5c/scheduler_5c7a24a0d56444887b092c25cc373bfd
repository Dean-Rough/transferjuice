88c37bb5b022e5279a8dc839962c009b
/* istanbul ignore next */
function cov_1mnoktkoja() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/briefings/scheduler.ts";
  var hash = "053d77f3685f0bc0589fed3e7351cd042bbf34b7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/briefings/scheduler.ts",
    statementMap: {
      "0": {
        start: {
          line: 25,
          column: 39
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "1": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 50
        }
      },
      "2": {
        start: {
          line: 44,
          column: 22
        },
        end: {
          line: 44,
          column: 32
        }
      },
      "3": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 26
        }
      },
      "4": {
        start: {
          line: 48,
          column: 22
        },
        end: {
          line: 48,
          column: 49
        }
      },
      "5": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 52,
          column: 6
        }
      },
      "6": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "7": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 57,
          column: 8
        }
      },
      "8": {
        start: {
          line: 58,
          column: 6
        },
        end: {
          line: 64,
          column: 8
        }
      },
      "9": {
        start: {
          line: 67,
          column: 21
        },
        end: {
          line: 67,
          column: 22
        }
      },
      "10": {
        start: {
          line: 68,
          column: 34
        },
        end: {
          line: 68,
          column: 38
        }
      },
      "11": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "12": {
        start: {
          line: 72,
          column: 6
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "13": {
        start: {
          line: 74,
          column: 23
        },
        end: {
          line: 74,
          column: 64
        }
      },
      "14": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "15": {
        start: {
          line: 76,
          column: 10
        },
        end: {
          line: 78,
          column: 12
        }
      },
      "16": {
        start: {
          line: 79,
          column: 10
        },
        end: {
          line: 85,
          column: 12
        }
      },
      "17": {
        start: {
          line: 89,
          column: 25
        },
        end: {
          line: 92,
          column: 10
        }
      },
      "18": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 57
        }
      },
      "19": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 99,
          column: 10
        }
      },
      "20": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "21": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 80
        }
      },
      "22": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 21
        }
      },
      "23": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 115,
          column: 10
        }
      },
      "24": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "25": {
        start: {
          line: 118,
          column: 10
        },
        end: {
          line: 120,
          column: 12
        }
      },
      "26": {
        start: {
          line: 121,
          column: 10
        },
        end: {
          line: 121,
          column: 51
        }
      },
      "27": {
        start: {
          line: 127,
          column: 25
        },
        end: {
          line: 127,
          column: 96
        }
      },
      "28": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 52
        }
      },
      "29": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 136,
          column: 6
        }
      },
      "30": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 148,
          column: 16
        }
      },
      "31": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "32": {
        start: {
          line: 164,
          column: 6
        },
        end: {
          line: 164,
          column: 19
        }
      },
      "33": {
        start: {
          line: 166,
          column: 6
        },
        end: {
          line: 169,
          column: 8
        }
      },
      "34": {
        start: {
          line: 170,
          column: 6
        },
        end: {
          line: 170,
          column: 19
        }
      },
      "35": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 181,
          column: 49
        }
      },
      "36": {
        start: {
          line: 181,
          column: 42
        },
        end: {
          line: 181,
          column: 49
        }
      },
      "37": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "38": {
        start: {
          line: 184,
          column: 6
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "39": {
        start: {
          line: 195,
          column: 6
        },
        end: {
          line: 198,
          column: 8
        }
      },
      "40": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 209,
          column: 6
        }
      },
      "41": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 211,
          column: 49
        }
      },
      "42": {
        start: {
          line: 211,
          column: 42
        },
        end: {
          line: 211,
          column: 49
        }
      },
      "43": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 229,
          column: 5
        }
      },
      "44": {
        start: {
          line: 214,
          column: 6
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "45": {
        start: {
          line: 225,
          column: 6
        },
        end: {
          line: 228,
          column: 8
        }
      },
      "46": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 236,
          column: 61
        }
      },
      "47": {
        start: {
          line: 236,
          column: 36
        },
        end: {
          line: 236,
          column: 59
        }
      },
      "48": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 26
        }
      },
      "49": {
        start: {
          line: 248,
          column: 21
        },
        end: {
          line: 248,
          column: 34
        }
      },
      "50": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 249,
          column: 56
        }
      },
      "51": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 255,
          column: 6
        }
      },
      "52": {
        start: {
          line: 260,
          column: 33
        },
        end: {
          line: 266,
          column: 2
        }
      },
      "53": {
        start: {
          line: 279,
          column: 2
        },
        end: {
          line: 279,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 35,
            column: 3
          }
        },
        loc: {
          start: {
            line: 35,
            column: 53
          },
          end: {
            line: 37,
            column: 3
          }
        },
        line: 35
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 43,
            column: 3
          }
        },
        loc: {
          start: {
            line: 43,
            column: 44
          },
          end: {
            line: 137,
            column: 3
          }
        },
        line: 43
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 142,
            column: 2
          },
          end: {
            line: 142,
            column: 3
          }
        },
        loc: {
          start: {
            line: 142,
            column: 48
          },
          end: {
            line: 149,
            column: 3
          }
        },
        line: 142
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 154,
            column: 2
          },
          end: {
            line: 154,
            column: 3
          }
        },
        loc: {
          start: {
            line: 154,
            column: 73
          },
          end: {
            line: 172,
            column: 3
          }
        },
        line: 154
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 177,
            column: 2
          },
          end: {
            line: 177,
            column: 3
          }
        },
        loc: {
          start: {
            line: 180,
            column: 19
          },
          end: {
            line: 200,
            column: 3
          }
        },
        line: 180
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 205,
            column: 2
          },
          end: {
            line: 205,
            column: 3
          }
        },
        loc: {
          start: {
            line: 205,
            column: 77
          },
          end: {
            line: 230,
            column: 3
          }
        },
        line: 205
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 235,
            column: 2
          },
          end: {
            line: 235,
            column: 3
          }
        },
        loc: {
          start: {
            line: 235,
            column: 43
          },
          end: {
            line: 237,
            column: 3
          }
        },
        line: 235
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 236,
            column: 23
          },
          end: {
            line: 236,
            column: 24
          }
        },
        loc: {
          start: {
            line: 236,
            column: 36
          },
          end: {
            line: 236,
            column: 59
          }
        },
        line: 236
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 242,
            column: 2
          },
          end: {
            line: 242,
            column: 3
          }
        },
        loc: {
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 256,
            column: 3
          }
        },
        line: 246
      },
      "9": {
        name: "handleCronJob",
        decl: {
          start: {
            line: 278,
            column: 22
          },
          end: {
            line: 278,
            column: 35
          }
        },
        loc: {
          start: {
            line: 278,
            column: 64
          },
          end: {
            line: 280,
            column: 1
          }
        },
        line: 278
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 14
          },
          end: {
            line: 35,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 35,
            column: 49
          },
          end: {
            line: 35,
            column: 51
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "2": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "3": {
        loc: {
          start: {
            line: 109,
            column: 20
          },
          end: {
            line: 109,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 45
          },
          end: {
            line: 109,
            column: 50
          }
        }, {
          start: {
            line: 109,
            column: 53
          },
          end: {
            line: 109,
            column: 79
          }
        }],
        line: 109
      },
      "4": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "5": {
        loc: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "6": {
        loc: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "7": {
        loc: {
          start: {
            line: 264,
            column: 23
          },
          end: {
            line: 264,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 23
          },
          end: {
            line: 264,
            column: 55
          }
        }, {
          start: {
            line: 264,
            column: 59
          },
          end: {
            line: 264,
            column: 62
          }
        }],
        line: 264
      },
      "8": {
        loc: {
          start: {
            line: 265,
            column: 23
          },
          end: {
            line: 265,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 23
          },
          end: {
            line: 265,
            column: 55
          }
        }, {
          start: {
            line: 265,
            column: 59
          },
          end: {
            line: 265,
            column: 65
          }
        }],
        line: 265
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "053d77f3685f0bc0589fed3e7351cd042bbf34b7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1mnoktkoja = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1mnoktkoja();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Briefing Scheduler for Cron Job Integration
 * Handles automated hourly briefing generation
 */

import { generateBriefing } from "./generator";
var defaultConfig =
/* istanbul ignore next */
(cov_1mnoktkoja().s[0]++, {
  enabled: true,
  testMode: false,
  maxRetries: 3,
  retryDelay: 5000 // 5 seconds
});
export
/* istanbul ignore next */
var BriefingScheduler = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  BriefingScheduler() {
    /* istanbul ignore next */
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_1mnoktkoja().b[0][0]++, {});
    /* istanbul ignore next */
    _classCallCheck(this, BriefingScheduler);
    cov_1mnoktkoja().f[0]++;
    cov_1mnoktkoja().s[1]++;
    this.config =
    /* istanbul ignore next */
    _objectSpread(_objectSpread({}, defaultConfig), config);
  }

  /**
   * Execute scheduled briefing generation
   * Called by Vercel Cron or other scheduling systems
   */
  return _createClass(BriefingScheduler, [{
    key: "execute",
    value: (function () {
      var _execute = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee()
      /* istanbul ignore next */
      {
        var _lastError;
        var startTime, now, timestamp, retryCount, lastError, exists, briefing, errorMessage, _t;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              cov_1mnoktkoja().f[1]++;
              startTime = (cov_1mnoktkoja().s[2]++, Date.now());
              now = (cov_1mnoktkoja().s[3]++, new Date()); // Generate timestamp for current hour
              timestamp = (cov_1mnoktkoja().s[4]++, this.generateTimestamp(now));
              cov_1mnoktkoja().s[5]++;
              console.log(
              /* istanbul ignore next */
              "[BriefingScheduler] Starting scheduled generation for ".concat(timestamp));
              cov_1mnoktkoja().s[6]++;
              if (this.config.enabled) {
                _context.n = 1;
                break;
              }
              cov_1mnoktkoja().b[1][0]++;
              cov_1mnoktkoja().s[7]++;
              console.log("[BriefingScheduler] Scheduler is disabled, skipping generation");
              cov_1mnoktkoja().s[8]++;
              return _context.a(2, {
                success: false,
                timestamp: timestamp,
                error: "Scheduler disabled",
                retryCount: 0,
                duration: Date.now() - startTime
              });
            case 1:
              cov_1mnoktkoja().b[1][1]++;
            case 2:
              retryCount = (cov_1mnoktkoja().s[9]++, 0);
              lastError = (cov_1mnoktkoja().s[10]++, null); // Retry logic for resilience
              cov_1mnoktkoja().s[11]++;
            case 3:
              if (!(retryCount <= this.config.maxRetries)) {
                _context.n = 14;
                break;
              }
              cov_1mnoktkoja().s[12]++;
              _context.p = 4;
              cov_1mnoktkoja().s[13]++;
              _context.n = 5;
              return this.checkBriefingExists(timestamp);
            case 5:
              exists = _context.v;
              cov_1mnoktkoja().s[14]++;
              if (!exists) {
                _context.n = 6;
                break;
              }
              cov_1mnoktkoja().b[2][0]++;
              cov_1mnoktkoja().s[15]++;
              console.log(
              /* istanbul ignore next */
              "[BriefingScheduler] Briefing already exists for ".concat(timestamp));
              cov_1mnoktkoja().s[16]++;
              return _context.a(2, {
                success: true,
                briefingId:
                /* istanbul ignore next */
                "briefing-".concat(timestamp),
                timestamp: timestamp,
                retryCount: retryCount,
                duration: Date.now() - startTime
              });
            case 6:
              cov_1mnoktkoja().b[2][1]++;
            case 7:
              cov_1mnoktkoja().s[17]++;
              _context.n = 8;
              return generateBriefing({
                timestamp: timestamp,
                testMode: this.config.testMode
              });
            case 8:
              briefing = _context.v;
              cov_1mnoktkoja().s[18]++;
              _context.n = 9;
              return this.notifySuccess(briefing.id, timestamp);
            case 9:
              cov_1mnoktkoja().s[19]++;
              console.log(
              /* istanbul ignore next */
              "[BriefingScheduler] Successfully generated briefing ".concat(briefing.id));
              cov_1mnoktkoja().s[20]++;
              return _context.a(2, {
                success: true,
                briefingId: briefing.id,
                timestamp: timestamp,
                retryCount: retryCount,
                duration: Date.now() - startTime
              });
            case 10:
              _context.p = 10;
              _t = _context.v;
              cov_1mnoktkoja().s[21]++;
              lastError =
              /* istanbul ignore next */
              _t instanceof Error ?
              /* istanbul ignore next */
              (cov_1mnoktkoja().b[3][0]++, _t) :
              /* istanbul ignore next */
              (cov_1mnoktkoja().b[3][1]++, new Error("Unknown error"));
              cov_1mnoktkoja().s[22]++;
              retryCount++;
              cov_1mnoktkoja().s[23]++;
              console.error(
              /* istanbul ignore next */
              "[BriefingScheduler] Generation attempt ".concat(retryCount, " failed:"), lastError.message);
              cov_1mnoktkoja().s[24]++;
              if (!(retryCount <= this.config.maxRetries)) {
                _context.n = 12;
                break;
              }
              cov_1mnoktkoja().b[4][0]++;
              cov_1mnoktkoja().s[25]++;
              console.log(
              /* istanbul ignore next */
              "[BriefingScheduler] Retrying in ".concat(this.config.retryDelay, "ms..."));
              cov_1mnoktkoja().s[26]++;
              _context.n = 11;
              return this.delay(this.config.retryDelay);
            case 11:
              _context.n = 13;
              break;
            case 12:
              cov_1mnoktkoja().b[4][1]++;
            case 13:
              _context.n = 3;
              break;
            case 14:
              // All retries exhausted
              errorMessage = (cov_1mnoktkoja().s[27]++, "Generation failed after ".concat(retryCount, " attempts: ").concat((_lastError = lastError) === null || _lastError === void 0 ? void 0 :
              /* istanbul ignore next */
              _lastError.message));
              cov_1mnoktkoja().s[28]++;
              _context.n = 15;
              return this.notifyError(errorMessage, timestamp);
            case 15:
              cov_1mnoktkoja().s[29]++;
              return _context.a(2, {
                success: false,
                timestamp: timestamp,
                error: errorMessage,
                retryCount: retryCount,
                duration: Date.now() - startTime
              });
          }
        }, _callee, this, [[4, 10]]);
      }));
      function execute() {
        return _execute.apply(this, arguments);
      }
      return execute;
    }()
    /**
     * Generate timestamp in YYYY-MM-DD-HH format
     */
    )
  }, {
    key: "generateTimestamp",
    value: function generateTimestamp(date) {
      /* istanbul ignore next */
      cov_1mnoktkoja().f[2]++;
      cov_1mnoktkoja().s[30]++;
      return [date.getFullYear(), String(date.getMonth() + 1).padStart(2, "0"), String(date.getDate()).padStart(2, "0"), String(date.getHours()).padStart(2, "0")].join("-");
    }

    /**
     * Check if briefing already exists (for idempotency)
     */
  }, {
    key: "checkBriefingExists",
    value: (function () {
      var _checkBriefingExists = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(timestamp)
      /* istanbul ignore next */
      {
        var _t2;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              cov_1mnoktkoja().f[3]++;
              cov_1mnoktkoja().s[31]++;
              _context2.p = 1;
              cov_1mnoktkoja().s[32]++;
              return _context2.a(2, false);
            case 2:
              _context2.p = 2;
              _t2 = _context2.v;
              cov_1mnoktkoja().s[33]++;
              console.error("[BriefingScheduler] Error checking existing briefing:",
              /* istanbul ignore next */
              _t2);
              cov_1mnoktkoja().s[34]++;
              return _context2.a(2, false);
          }
        }, _callee2, null, [[1, 2]]);
      }));
      function checkBriefingExists(_x) {
        return _checkBriefingExists.apply(this, arguments);
      }
      return checkBriefingExists;
    }()
    /**
     * Send success notification
     */
    )
  }, {
    key: "notifySuccess",
    value: (function () {
      var _notifySuccess = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3(briefingId, timestamp)
      /* istanbul ignore next */
      {
        var _t3;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              cov_1mnoktkoja().f[4]++;
              cov_1mnoktkoja().s[35]++;
              if (this.config.notificationWebhook) {
                _context3.n = 1;
                break;
              }
              cov_1mnoktkoja().b[5][0]++;
              cov_1mnoktkoja().s[36]++;
              return _context3.a(2);
            case 1:
              cov_1mnoktkoja().b[5][1]++;
            case 2:
              cov_1mnoktkoja().s[37]++;
              _context3.p = 3;
              cov_1mnoktkoja().s[38]++;
              _context3.n = 4;
              return fetch(this.config.notificationWebhook, {
                method: "POST",
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify({
                  event: "briefing.generated",
                  briefingId: briefingId,
                  timestamp: timestamp,
                  success: true
                })
              });
            case 4:
              _context3.n = 6;
              break;
            case 5:
              _context3.p = 5;
              _t3 = _context3.v;
              cov_1mnoktkoja().s[39]++;
              console.error("[BriefingScheduler] Failed to send success notification:",
              /* istanbul ignore next */
              _t3);
            case 6:
              return _context3.a(2);
          }
        }, _callee3, this, [[3, 5]]);
      }));
      function notifySuccess(_x2, _x3) {
        return _notifySuccess.apply(this, arguments);
      }
      return notifySuccess;
    }()
    /**
     * Send error notification
     */
    )
  }, {
    key: "notifyError",
    value: (function () {
      var _notifyError = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4(error, timestamp)
      /* istanbul ignore next */
      {
        var _t4;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_1mnoktkoja().f[5]++;
              cov_1mnoktkoja().s[40]++;
              console.error(
              /* istanbul ignore next */
              "[BriefingScheduler] Generation failed for ".concat(timestamp, ":"), error);
              cov_1mnoktkoja().s[41]++;
              if (this.config.notificationWebhook) {
                _context4.n = 1;
                break;
              }
              cov_1mnoktkoja().b[6][0]++;
              cov_1mnoktkoja().s[42]++;
              return _context4.a(2);
            case 1:
              cov_1mnoktkoja().b[6][1]++;
            case 2:
              cov_1mnoktkoja().s[43]++;
              _context4.p = 3;
              cov_1mnoktkoja().s[44]++;
              _context4.n = 4;
              return fetch(this.config.notificationWebhook, {
                method: "POST",
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify({
                  event: "briefing.generation.failed",
                  timestamp: timestamp,
                  error: error,
                  success: false
                })
              });
            case 4:
              _context4.n = 6;
              break;
            case 5:
              _context4.p = 5;
              _t4 = _context4.v;
              cov_1mnoktkoja().s[45]++;
              console.error("[BriefingScheduler] Failed to send error notification:",
              /* istanbul ignore next */
              _t4);
            case 6:
              return _context4.a(2);
          }
        }, _callee4, this, [[3, 5]]);
      }));
      function notifyError(_x4, _x5) {
        return _notifyError.apply(this, arguments);
      }
      return notifyError;
    }()
    /**
     * Delay helper for retries
     */
    )
  }, {
    key: "delay",
    value: function delay(ms) {
      /* istanbul ignore next */
      cov_1mnoktkoja().f[6]++;
      cov_1mnoktkoja().s[46]++;
      return new Promise(function (resolve) {
        /* istanbul ignore next */
        cov_1mnoktkoja().f[7]++;
        cov_1mnoktkoja().s[47]++;
        return setTimeout(resolve, ms);
      });
    }

    /**
     * Get scheduler status
     */
  }, {
    key: "getStatus",
    value: function getStatus() {
      /* istanbul ignore next */
      cov_1mnoktkoja().f[8]++;
      var now =
      /* istanbul ignore next */
      (cov_1mnoktkoja().s[48]++, new Date());
      var nextHour =
      /* istanbul ignore next */
      (cov_1mnoktkoja().s[49]++, new Date(now));
      /* istanbul ignore next */
      cov_1mnoktkoja().s[50]++;
      nextHour.setHours(nextHour.getHours() + 1, 0, 0, 0);
      /* istanbul ignore next */
      cov_1mnoktkoja().s[51]++;
      return {
        enabled: this.config.enabled,
        testMode: this.config.testMode,
        nextRun: nextHour.toISOString()
      };
    }
  }]);
}();

// Export singleton instance for cron job
export var briefingScheduler =
/* istanbul ignore next */
(cov_1mnoktkoja().s[52]++, new BriefingScheduler({
  enabled: process.env.ENABLE_BRIEFING_GENERATION === "true",
  testMode: process.env.NODE_ENV === "development",
  notificationWebhook: process.env.BRIEFING_NOTIFICATION_WEBHOOK,
  maxRetries: parseInt(
  /* istanbul ignore next */
  (cov_1mnoktkoja().b[7][0]++, process.env.BRIEFING_MAX_RETRIES) ||
  /* istanbul ignore next */
  (cov_1mnoktkoja().b[7][1]++, "3")),
  retryDelay: parseInt(
  /* istanbul ignore next */
  (cov_1mnoktkoja().b[8][0]++, process.env.BRIEFING_RETRY_DELAY) ||
  /* istanbul ignore next */
  (cov_1mnoktkoja().b[8][1]++, "5000"))
}));

/**
 * Vercel Cron Job Handler
 * Add to vercel.json:
 * {
 *   "crons": [{
 *     "path": "/api/cron/briefings",
 *     "schedule": "0 * * * *"
 *   }]
 * }
 */
export
/* istanbul ignore next */
function handleCronJob() {
  return _handleCronJob.apply(this, arguments);
}
/* istanbul ignore next */
function _handleCronJob() {
  _handleCronJob = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee5()
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context5) {
      while (1) switch (_context5.n) {
        case 0:
          cov_1mnoktkoja().f[9]++;
          cov_1mnoktkoja().s[53]++;
          return _context5.a(2, briefingScheduler.execute());
      }
    }, _callee5);
  }));
  return _handleCronJob.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,