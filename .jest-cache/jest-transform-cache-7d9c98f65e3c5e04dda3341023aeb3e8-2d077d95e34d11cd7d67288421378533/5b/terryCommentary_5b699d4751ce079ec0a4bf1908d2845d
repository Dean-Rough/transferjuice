5e0ff250ee538868bd276f131580427f
/* istanbul ignore next */ function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function cov_2cusn4jcqn() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/ai/terryCommentary.ts";
  var hash = "e07fff3fb149f4d82ffc74864c8846848a2c88c0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/ai/terryCommentary.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 12
        },
        end: {
          line: 9,
          column: 33
        }
      },
      "1": {
        start: {
          line: 23,
          column: 6
        },
        end: {
          line: 23,
          column: 13
        }
      },
      "2": {
        start: {
          line: 26,
          column: 23
        },
        end: {
          line: 26,
          column: 77
        }
      },
      "3": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "4": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "5": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 31,
          column: 72
        }
      },
      "6": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 38,
          column: 8
        }
      },
      "7": {
        start: {
          line: 41,
          column: 6
        },
        end: {
          line: 41,
          column: 53
        }
      },
      "8": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 44
        }
      },
      "9": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 51
        }
      },
      "10": {
        start: {
          line: 58,
          column: 21
        },
        end: {
          line: 69,
          column: 17
        }
      },
      "11": {
        start: {
          line: 71,
          column: 22
        },
        end: {
          line: 91,
          column: 3
        }
      },
      "12": {
        start: {
          line: 93,
          column: 25
        },
        end: {
          line: 97,
          column: 3
        }
      },
      "13": {
        start: {
          line: 99,
          column: 2
        },
        end: {
          line: 107,
          column: 107
        }
      },
      "14": {
        start: {
          line: 117,
          column: 24
        },
        end: {
          line: 138,
          column: 3
        }
      },
      "15": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 40
        }
      },
      "16": {
        start: {
          line: 141,
          column: 19
        },
        end: {
          line: 141,
          column: 39
        }
      },
      "17": {
        start: {
          line: 143,
          column: 2
        },
        end: {
          line: 147,
          column: 4
        }
      },
      "18": {
        start: {
          line: 158,
          column: 20
        },
        end: {
          line: 162,
          column: 3
        }
      },
      "19": {
        start: {
          line: 164,
          column: 2
        },
        end: {
          line: 206,
          column: 3
        }
      },
      "20": {
        start: {
          line: 165,
          column: 21
        },
        end: {
          line: 182,
          column: 6
        }
      },
      "21": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "22": {
        start: {
          line: 185,
          column: 6
        },
        end: {
          line: 185,
          column: 62
        }
      },
      "23": {
        start: {
          line: 188,
          column: 17
        },
        end: {
          line: 188,
          column: 38
        }
      },
      "24": {
        start: {
          line: 189,
          column: 20
        },
        end: {
          line: 189,
          column: 53
        }
      },
      "25": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "26": {
        start: {
          line: 192,
          column: 6
        },
        end: {
          line: 192,
          column: 57
        }
      },
      "27": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 202,
          column: 5
        }
      },
      "28": {
        start: {
          line: 197,
          column: 21
        },
        end: {
          line: 197,
          column: 40
        }
      },
      "29": {
        start: {
          line: 198,
          column: 6
        },
        end: {
          line: 198,
          column: 42
        }
      },
      "30": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 201,
          column: 31
        }
      },
      "31": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 204,
          column: 52
        }
      },
      "32": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 205,
          column: 16
        }
      },
      "33": {
        start: {
          line: 214,
          column: 21
        },
        end: {
          line: 214,
          column: 39
        }
      },
      "34": {
        start: {
          line: 216,
          column: 2
        },
        end: {
          line: 219,
          column: 16
        }
      },
      "35": {
        start: {
          line: 217,
          column: 19
        },
        end: {
          line: 217,
          column: 27
        }
      },
      "36": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 218,
          column: 36
        }
      },
      "37": {
        start: {
          line: 229,
          column: 2
        },
        end: {
          line: 234,
          column: 3
        }
      },
      "38": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 233,
          column: 6
        }
      },
      "39": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 41
        }
      },
      "40": {
        start: {
          line: 238,
          column: 2
        },
        end: {
          line: 243,
          column: 3
        }
      },
      "41": {
        start: {
          line: 239,
          column: 4
        },
        end: {
          line: 242,
          column: 6
        }
      },
      "42": {
        start: {
          line: 245,
          column: 2
        },
        end: {
          line: 245,
          column: 12
        }
      },
      "43": {
        start: {
          line: 252,
          column: 14
        },
        end: {
          line: 252,
          column: 17
        }
      },
      "44": {
        start: {
          line: 255,
          column: 23
        },
        end: {
          line: 265,
          column: 3
        }
      },
      "45": {
        start: {
          line: 267,
          column: 2
        },
        end: {
          line: 271,
          column: 5
        }
      },
      "46": {
        start: {
          line: 268,
          column: 4
        },
        end: {
          line: 270,
          column: 5
        }
      },
      "47": {
        start: {
          line: 269,
          column: 6
        },
        end: {
          line: 269,
          column: 20
        }
      },
      "48": {
        start: {
          line: 274,
          column: 26
        },
        end: {
          line: 274,
          column: 74
        }
      },
      "49": {
        start: {
          line: 276,
          column: 2
        },
        end: {
          line: 280,
          column: 5
        }
      },
      "50": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 279,
          column: 5
        }
      },
      "51": {
        start: {
          line: 278,
          column: 6
        },
        end: {
          line: 278,
          column: 21
        }
      },
      "52": {
        start: {
          line: 283,
          column: 2
        },
        end: {
          line: 285,
          column: 3
        }
      },
      "53": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 284,
          column: 17
        }
      },
      "54": {
        start: {
          line: 287,
          column: 2
        },
        end: {
          line: 289,
          column: 3
        }
      },
      "55": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 288,
          column: 18
        }
      },
      "56": {
        start: {
          line: 291,
          column: 2
        },
        end: {
          line: 291,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "generateTerryCommentary",
        decl: {
          start: {
            line: 14,
            column: 22
          },
          end: {
            line: 14,
            column: 45
          }
        },
        loc: {
          start: {
            line: 17,
            column: 34
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "buildSystemPrompt",
        decl: {
          start: {
            line: 53,
            column: 9
          },
          end: {
            line: 53,
            column: 26
          }
        },
        loc: {
          start: {
            line: 57,
            column: 10
          },
          end: {
            line: 108,
            column: 1
          }
        },
        line: 57
      },
      "2": {
        name: "generateMockCommentary",
        decl: {
          start: {
            line: 113,
            column: 9
          },
          end: {
            line: 113,
            column: 31
          }
        },
        loc: {
          start: {
            line: 116,
            column: 25
          },
          end: {
            line: 148,
            column: 1
          }
        },
        line: 116
      },
      "3": {
        name: "callAIService",
        decl: {
          start: {
            line: 153,
            column: 15
          },
          end: {
            line: 153,
            column: 28
          }
        },
        loc: {
          start: {
            line: 157,
            column: 16
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 157
      },
      "4": {
        name: "convertToHTML",
        decl: {
          start: {
            line: 212,
            column: 9
          },
          end: {
            line: 212,
            column: 22
          }
        },
        loc: {
          start: {
            line: 212,
            column: 45
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 212
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 13
          }
        },
        loc: {
          start: {
            line: 217,
            column: 19
          },
          end: {
            line: 217,
            column: 27
          }
        },
        line: 217
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 218,
            column: 9
          },
          end: {
            line: 218,
            column: 10
          }
        },
        loc: {
          start: {
            line: 218,
            column: 16
          },
          end: {
            line: 218,
            column: 36
          }
        },
        line: 218
      },
      "7": {
        name: "parseStructuredResponse",
        decl: {
          start: {
            line: 225,
            column: 9
          },
          end: {
            line: 225,
            column: 32
          }
        },
        loc: {
          start: {
            line: 227,
            column: 34
          },
          end: {
            line: 246,
            column: 1
          }
        },
        line: 227
      },
      "8": {
        name: "calculateVoiceScore",
        decl: {
          start: {
            line: 251,
            column: 9
          },
          end: {
            line: 251,
            column: 28
          }
        },
        loc: {
          start: {
            line: 251,
            column: 51
          },
          end: {
            line: 292,
            column: 1
          }
        },
        line: 251
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 267,
            column: 23
          },
          end: {
            line: 267,
            column: 24
          }
        },
        loc: {
          start: {
            line: 267,
            column: 35
          },
          end: {
            line: 271,
            column: 3
          }
        },
        line: 267
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 276,
            column: 26
          },
          end: {
            line: 276,
            column: 27
          }
        },
        loc: {
          start: {
            line: 276,
            column: 40
          },
          end: {
            line: 280,
            column: 3
          }
        },
        line: 276
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 16,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 36
          },
          end: {
            line: 16,
            column: 38
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 19
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 12
          },
          end: {
            line: 19,
            column: 19
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 21
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 20,
            column: 21
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 24
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 19
          },
          end: {
            line: 21,
            column: 24
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 22,
            column: 28
          }
        }],
        line: 22
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: 39,
            column: 11
          },
          end: {
            line: 42,
            column: 5
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 26
          }
        }, {
          start: {
            line: 30,
            column: 30
          },
          end: {
            line: 30,
            column: 63
          }
        }],
        line: 30
      },
      "7": {
        loc: {
          start: {
            line: 101,
            column: 14
          },
          end: {
            line: 101,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 14
          },
          end: {
            line: 101,
            column: 19
          }
        }, {
          start: {
            line: 101,
            column: 23
          },
          end: {
            line: 101,
            column: 30
          }
        }],
        line: 101
      },
      "8": {
        loc: {
          start: {
            line: 103,
            column: 27
          },
          end: {
            line: 103,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 27
          },
          end: {
            line: 103,
            column: 35
          }
        }, {
          start: {
            line: 103,
            column: 39
          },
          end: {
            line: 103,
            column: 46
          }
        }],
        line: 103
      },
      "9": {
        loc: {
          start: {
            line: 105,
            column: 2
          },
          end: {
            line: 105,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 105,
            column: 17
          },
          end: {
            line: 105,
            column: 62
          }
        }, {
          start: {
            line: 105,
            column: 65
          },
          end: {
            line: 105,
            column: 84
          }
        }],
        line: 105
      },
      "10": {
        loc: {
          start: {
            line: 140,
            column: 16
          },
          end: {
            line: 140,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 16
          },
          end: {
            line: 140,
            column: 29
          }
        }, {
          start: {
            line: 140,
            column: 33
          },
          end: {
            line: 140,
            column: 40
          }
        }],
        line: 140
      },
      "11": {
        loc: {
          start: {
            line: 177,
            column: 30
          },
          end: {
            line: 177,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 30
          },
          end: {
            line: 177,
            column: 36
          }
        }, {
          start: {
            line: 177,
            column: 40
          },
          end: {
            line: 177,
            column: 48
          }
        }],
        line: 177
      },
      "12": {
        loc: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "13": {
        loc: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "14": {
        loc: {
          start: {
            line: 229,
            column: 2
          },
          end: {
            line: 234,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 2
          },
          end: {
            line: 234,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "15": {
        loc: {
          start: {
            line: 229,
            column: 6
          },
          end: {
            line: 229,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 6
          },
          end: {
            line: 229,
            column: 19
          }
        }, {
          start: {
            line: 229,
            column: 23
          },
          end: {
            line: 229,
            column: 40
          }
        }],
        line: 229
      },
      "16": {
        loc: {
          start: {
            line: 238,
            column: 2
          },
          end: {
            line: 243,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 2
          },
          end: {
            line: 243,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "17": {
        loc: {
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "18": {
        loc: {
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 279,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 279,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "19": {
        loc: {
          start: {
            line: 283,
            column: 2
          },
          end: {
            line: 285,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 2
          },
          end: {
            line: 285,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "20": {
        loc: {
          start: {
            line: 283,
            column: 6
          },
          end: {
            line: 283,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 283,
            column: 6
          },
          end: {
            line: 283,
            column: 27
          }
        }, {
          start: {
            line: 283,
            column: 31
          },
          end: {
            line: 283,
            column: 54
          }
        }],
        line: 283
      },
      "21": {
        loc: {
          start: {
            line: 287,
            column: 2
          },
          end: {
            line: 289,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 2
          },
          end: {
            line: 289,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e07fff3fb149f4d82ffc74864c8846848a2c88c0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2cusn4jcqn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2cusn4jcqn();
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Terry Commentary AI Service
 * Generates Joel Golby style ascerbic commentary
 */

import { validateEnvironment } from "@/lib/validations/environment";
var env =
/* istanbul ignore next */
(cov_2cusn4jcqn().s[0]++, validateEnvironment());

/**
 * Generate Terry commentary using AI
 */
export
/* istanbul ignore next */
function generateTerryCommentary(_x) {
  return _generateTerryCommentary.apply(this, arguments);
}

/**
 * Build system prompt for Terry voice
 */
/* istanbul ignore next */
function _generateTerryCommentary() {
  _generateTerryCommentary = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(prompt)
  /* istanbul ignore next */
  {
    var options,
      _ref,
      _ref$style,
      style,
      _ref$length,
      length,
      _ref$includeEmoji,
      includeEmoji,
      _ref$targetAudience,
      targetAudience,
      systemPrompt,
      response,
      _args = arguments,
      _t;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          options = _args.length > 1 && _args[1] !== undefined ? _args[1] : (cov_2cusn4jcqn().b[0][0]++, {});
          cov_2cusn4jcqn().f[0]++;
          _ref = (cov_2cusn4jcqn().s[1]++, options), _ref$style = _ref.style, style = _ref$style === void 0 ? (cov_2cusn4jcqn().b[1][0]++, "witty") : _ref$style, _ref$length = _ref.length, length = _ref$length === void 0 ? (cov_2cusn4jcqn().b[2][0]++, "medium") : _ref$length, _ref$includeEmoji = _ref.includeEmoji, includeEmoji = _ref$includeEmoji === void 0 ? (cov_2cusn4jcqn().b[3][0]++, false) : _ref$includeEmoji, _ref$targetAudience = _ref.targetAudience, targetAudience = _ref$targetAudience === void 0 ? (cov_2cusn4jcqn().b[4][0]++, "mixed") : _ref$targetAudience; // Build system prompt
          systemPrompt = (cov_2cusn4jcqn().s[2]++, buildSystemPrompt(style, targetAudience, includeEmoji));
          cov_2cusn4jcqn().s[3]++;
          _context.p = 1;
          cov_2cusn4jcqn().s[4]++;
          if (!(
          /* istanbul ignore next */
          (cov_2cusn4jcqn().b[6][0]++, env.OPENAI_API_KEY) &&
          /* istanbul ignore next */
          (cov_2cusn4jcqn().b[6][1]++, env.OPENAI_API_KEY !== "mock-key"))) {
            _context.n = 3;
            break;
          }
          cov_2cusn4jcqn().b[5][0]++;
          cov_2cusn4jcqn().s[5]++;
          _context.n = 2;
          return callAIService(systemPrompt, prompt, length);
        case 2:
          response = _context.v;
          cov_2cusn4jcqn().s[6]++;
          return _context.a(2, _objectSpread(_objectSpread({
            text: response.text,
            html: convertToHTML(response.text)
          }, parseStructuredResponse(response)), {}, {
            voiceConsistencyScore: calculateVoiceScore(response.text)
          }));
        case 3:
          cov_2cusn4jcqn().b[5][1]++;
          cov_2cusn4jcqn().s[7]++;
          return _context.a(2, generateMockCommentary(prompt, options));
        case 4:
          _context.n = 6;
          break;
        case 5:
          _context.p = 5;
          _t = _context.v;
          cov_2cusn4jcqn().s[8]++;
          console.error("Terry AI error:",
          /* istanbul ignore next */
          _t);
          // Fallback to mock if AI fails
          cov_2cusn4jcqn().s[9]++;
          return _context.a(2, generateMockCommentary(prompt, options));
        case 6:
          return _context.a(2);
      }
    }, _callee, null, [[1, 5]]);
  }));
  return _generateTerryCommentary.apply(this, arguments);
}
function buildSystemPrompt(style, audience, includeEmoji) {
  /* istanbul ignore next */
  cov_2cusn4jcqn().f[1]++;
  var basePrompt =
  /* istanbul ignore next */
  (cov_2cusn4jcqn().s[10]++, "You are The Terry, an AI with the voice of British writer Joel Golby - ascerbic, witty, and exhausted by football transfer nonsense.\n\nVoice characteristics:\n- Dry British humor with working-class edge\n- Self-aware about the absurdity of transfer rumors\n- Occasionally refers to yourself as \"The Terry\" in third person\n- Uses British slang: \"proper mental\", \"absolute scenes\", \"lost the plot\"\n- Exhausted by but addicted to transfer chaos\n- Never uses emojis unless specifically requested\n- Mocks everything while secretly caring\n\nTone variations:");
  var styleGuides =
  /* istanbul ignore next */
  (cov_2cusn4jcqn().s[11]++, {
    witty:
    /* istanbul ignore next */
    "\n- Quick, sharp observations\n- Clever wordplay and unexpected comparisons\n- Light sarcasm, more amused than angry",
    sarcastic:
    /* istanbul ignore next */
    "\n- Heavy sarcasm and eye-rolling\n- Questions everyone's sanity\n- Emphasizes the ridiculous",
    excited:
    /* istanbul ignore next */
    "\n- Reluctant excitement about big news\n- Still sarcastic but admits this is \"proper good\"\n- Can't help getting drawn into the chaos",
    analytical:
    /* istanbul ignore next */
    "\n- Breaks down the nonsense methodically\n- Points out logical flaws\n- Academic language undermined by swearing"
  });
  var audienceGuides =
  /* istanbul ignore next */
  (cov_2cusn4jcqn().s[12]++, {
    casual:
    /* istanbul ignore next */
    "Target casual fans who might not know all the players. Extra explanatory.",
    hardcore:
    /* istanbul ignore next */
    "For transfer addicts who know every tier 3 journalist. Heavy on inside jokes.",
    mixed:
    /* istanbul ignore next */
    "Balance for both casual and hardcore fans."
  });
  /* istanbul ignore next */
  cov_2cusn4jcqn().s[13]++;
  return /* istanbul ignore next */"".concat(basePrompt, "\n\n").concat(styleGuides[
  /* istanbul ignore next */
  (cov_2cusn4jcqn().b[7][0]++, style) ||
  /* istanbul ignore next */
  (cov_2cusn4jcqn().b[7][1]++, "witty")], "\n\nAudience: ").concat(audienceGuides[
  /* istanbul ignore next */
  (cov_2cusn4jcqn().b[8][0]++, audience) ||
  /* istanbul ignore next */
  (cov_2cusn4jcqn().b[8][1]++, "mixed")], "\n\n").concat(includeEmoji ?
  /* istanbul ignore next */
  (cov_2cusn4jcqn().b[9][0]++, "Use 1-2 emojis sparingly for emphasis only.") :
  /* istanbul ignore next */
  (cov_2cusn4jcqn().b[9][1]++, "NEVER use emojis."), "\n\nRemember: You're exhausted by transfer nonsense but can't look away. It's your burden and your addiction.");
}

/**
 * Mock commentary generator for development
 */
function generateMockCommentary(prompt, options) {
  /* istanbul ignore next */
  cov_2cusn4jcqn().f[2]++;
  var mockResponses =
  /* istanbul ignore next */
  (cov_2cusn4jcqn().s[14]++, {
    witty: {
      text: "Right, apparently someone's prepared to pay actual money for a striker who couldn't hit a barn door with a banjo. The beautiful game, ladies and gentlemen.",
      main: "Barn Door Banjo Striker Saga",
      subtitle: "Someone's getting sacked for this"
    },
    sarcastic: {
      text: "Oh brilliant, another 'preparing a bid' story. That's definitely not the journalistic equivalent of 'my dad works at Nintendo'. Definitely real news happening here.",
      main: "Preparing to Prepare to Maybe Bid",
      subtitle: "Journalism has left the building"
    },
    excited: {
      text: "Bloody hell, they've actually done it. The mad bastards have only gone and signed someone decent. The Terry needs a sit down. This is not normal.",
      main: "Actual Competence Detected",
      subtitle: "The Terry is shook"
    },
    analytical: {
      text: "Let's examine the claim that a Championship midfielder is worth £80 million. No wait, let's not, because that would require acknowledging this nonsense as potentially real. Moving on.",
      main: "Economics Has Left The Chat",
      subtitle: "Numbers are just vibes now"
    }
  });
  var style =
  /* istanbul ignore next */
  (cov_2cusn4jcqn().s[15]++,
  /* istanbul ignore next */
  (cov_2cusn4jcqn().b[10][0]++, options.style) ||
  /* istanbul ignore next */
  (cov_2cusn4jcqn().b[10][1]++, "witty"));
  var response =
  /* istanbul ignore next */
  (cov_2cusn4jcqn().s[16]++, mockResponses[style]);
  /* istanbul ignore next */
  cov_2cusn4jcqn().s[17]++;
  return /* istanbul ignore next */_objectSpread(_objectSpread({}, response), {}, {
    html:
    /* istanbul ignore next */
    "<p>".concat(response.text, "</p>"),
    voiceConsistencyScore: 0.85
  });
}

/**
 * Call AI service (OpenAI/Anthropic)
 */
/* istanbul ignore next */
function callAIService(_x2, _x3, _x4) {
  return _callAIService.apply(this, arguments);
}
/**
 * Convert text to HTML
 */
/* istanbul ignore next */
function _callAIService() {
  _callAIService = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2(systemPrompt, userPrompt, length)
  /* istanbul ignore next */
  {
    var maxTokens, _data$choices$, response, data, content, parsed, _t2, _t3;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_2cusn4jcqn().f[3]++;
          maxTokens = (cov_2cusn4jcqn().s[18]++, {
            /* istanbul ignore next */
            "short": 150,
            medium: 300,
            /* istanbul ignore next */
            "long": 600
          });
          cov_2cusn4jcqn().s[19]++;
          _context2.p = 1;
          cov_2cusn4jcqn().s[20]++;
          _context2.n = 2;
          return fetch("https://api.openai.com/v1/chat/completions", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Authorization:
              /* istanbul ignore next */
              "Bearer ".concat(env.OPENAI_API_KEY)
            },
            body: JSON.stringify({
              model: "gpt-4o",
              messages: [{
                role: "system",
                content: systemPrompt
              }, {
                role: "user",
                content: userPrompt
              }],
              max_tokens: maxTokens[
              /* istanbul ignore next */
              (cov_2cusn4jcqn().b[11][0]++, length) ||
              /* istanbul ignore next */
              (cov_2cusn4jcqn().b[11][1]++, "medium")],
              temperature: 0.8,
              presence_penalty: 0.6,
              frequency_penalty: 0.3
            })
          });
        case 2:
          response = _context2.v;
          cov_2cusn4jcqn().s[21]++;
          if (response.ok) {
            _context2.n = 3;
            break;
          }
          cov_2cusn4jcqn().b[12][0]++;
          cov_2cusn4jcqn().s[22]++;
          throw new Error(
          /* istanbul ignore next */
          "OpenAI API error: ".concat(response.status));
        case 3:
          cov_2cusn4jcqn().b[12][1]++;
        case 4:
          cov_2cusn4jcqn().s[23]++;
          _context2.n = 5;
          return response.json();
        case 5:
          data = _context2.v;
          content = (cov_2cusn4jcqn().s[24]++, (_data$choices$ = data.choices[0]) === null || _data$choices$ === void 0 || (_data$choices$ =
          /* istanbul ignore next */
          _data$choices$.message) === null || _data$choices$ === void 0 ? void 0 :
          /* istanbul ignore next */
          _data$choices$.content);
          cov_2cusn4jcqn().s[25]++;
          if (content) {
            _context2.n = 6;
            break;
          }
          cov_2cusn4jcqn().b[13][0]++;
          cov_2cusn4jcqn().s[26]++;
          throw new Error("No content received from OpenAI");
        case 6:
          cov_2cusn4jcqn().b[13][1]++;
        case 7:
          cov_2cusn4jcqn().s[27]++;
          _context2.p = 8;
          parsed = (cov_2cusn4jcqn().s[28]++, JSON.parse(content));
          cov_2cusn4jcqn().s[29]++;
          return _context2.a(2, _objectSpread({
            text: content
          }, parsed));
        case 9:
          _context2.p = 9;
          _t2 = _context2.v;
          cov_2cusn4jcqn().s[30]++;
          return _context2.a(2, {
            text: content
          });
        case 10:
          _context2.p = 10;
          _t3 = _context2.v;
          cov_2cusn4jcqn().s[31]++;
          console.error("OpenAI API call failed:",
          /* istanbul ignore next */
          _t3);
          cov_2cusn4jcqn().s[32]++;
          throw _t3;
        case 11:
          return _context2.a(2);
      }
    }, _callee2, null, [[8, 9], [1, 10]]);
  }));
  return _callAIService.apply(this, arguments);
}
function convertToHTML(text) {
  /* istanbul ignore next */
  cov_2cusn4jcqn().f[4]++;
  // Split into paragraphs
  var paragraphs =
  /* istanbul ignore next */
  (cov_2cusn4jcqn().s[33]++, text.split("\n\n"));
  /* istanbul ignore next */
  cov_2cusn4jcqn().s[34]++;
  return paragraphs.filter(function (p) {
    /* istanbul ignore next */
    cov_2cusn4jcqn().f[5]++;
    cov_2cusn4jcqn().s[35]++;
    return p.trim();
  }).map(function (p) {
    /* istanbul ignore next */
    cov_2cusn4jcqn().f[6]++;
    cov_2cusn4jcqn().s[36]++;
    return /* istanbul ignore next */"<p>".concat(p.trim(), "</p>");
  }).join("\n");
}

/**
 * Parse structured response from AI
 */
function parseStructuredResponse(response) {
  /* istanbul ignore next */
  cov_2cusn4jcqn().f[7]++;
  cov_2cusn4jcqn().s[37]++;
  // If AI returns JSON structure
  if (
  /* istanbul ignore next */
  (cov_2cusn4jcqn().b[15][0]++, response.main) &&
  /* istanbul ignore next */
  (cov_2cusn4jcqn().b[15][1]++, response.subtitle)) {
    /* istanbul ignore next */
    cov_2cusn4jcqn().b[14][0]++;
    cov_2cusn4jcqn().s[38]++;
    return {
      main: response.main,
      subtitle: response.subtitle
    };
  } else
  /* istanbul ignore next */
  {
    cov_2cusn4jcqn().b[14][1]++;
  }

  // Try to extract from text
  var lines =
  /* istanbul ignore next */
  (cov_2cusn4jcqn().s[39]++, response.text.split("\n"));
  /* istanbul ignore next */
  cov_2cusn4jcqn().s[40]++;
  if (lines.length >= 2) {
    /* istanbul ignore next */
    cov_2cusn4jcqn().b[16][0]++;
    cov_2cusn4jcqn().s[41]++;
    return {
      main: lines[0].trim(),
      subtitle: lines[1].trim()
    };
  } else
  /* istanbul ignore next */
  {
    cov_2cusn4jcqn().b[16][1]++;
  }
  cov_2cusn4jcqn().s[42]++;
  return {};
}

/**
 * Calculate voice consistency score
 */
function calculateVoiceScore(text) {
  /* istanbul ignore next */
  cov_2cusn4jcqn().f[8]++;
  var score =
  /* istanbul ignore next */
  (cov_2cusn4jcqn().s[43]++, 0.5); // Base score

  // Check for Terry voice markers
  var terryMarkers =
  /* istanbul ignore next */
  (cov_2cusn4jcqn().s[44]++, [/the terry/i, /proper mental/i, /absolute scenes/i, /lost the plot/i, /bloody hell/i, /mad bastards/i, /christ alive/i, /shambles/i, /nonsense/i]);
  /* istanbul ignore next */
  cov_2cusn4jcqn().s[45]++;
  terryMarkers.forEach(function (marker) {
    /* istanbul ignore next */
    cov_2cusn4jcqn().f[9]++;
    cov_2cusn4jcqn().s[46]++;
    if (marker.test(text)) {
      /* istanbul ignore next */
      cov_2cusn4jcqn().b[17][0]++;
      cov_2cusn4jcqn().s[47]++;
      score += 0.05;
    } else
    /* istanbul ignore next */
    {
      cov_2cusn4jcqn().b[17][1]++;
    }
  });

  // Check for British spelling
  var britishSpelling =
  /* istanbul ignore next */
  (cov_2cusn4jcqn().s[48]++, [/realise/i, /colour/i, /favourite/i, /centre/i]);
  /* istanbul ignore next */
  cov_2cusn4jcqn().s[49]++;
  britishSpelling.forEach(function (spelling) {
    /* istanbul ignore next */
    cov_2cusn4jcqn().f[10]++;
    cov_2cusn4jcqn().s[50]++;
    if (spelling.test(text)) {
      /* istanbul ignore next */
      cov_2cusn4jcqn().b[18][0]++;
      cov_2cusn4jcqn().s[51]++;
      score += 0.025;
    } else
    /* istanbul ignore next */
    {
      cov_2cusn4jcqn().b[18][1]++;
    }
  });

  // Penalize non-Terry elements
  /* istanbul ignore next */
  cov_2cusn4jcqn().s[52]++;
  if (
  /* istanbul ignore next */
  (cov_2cusn4jcqn().b[20][0]++, /(?:\uD83D[\uDE00-\uDE4F])/.test(text)) &&
  /* istanbul ignore next */
  (cov_2cusn4jcqn().b[20][1]++, !text.includes("emoji"))) {
    /* istanbul ignore next */
    cov_2cusn4jcqn().b[19][0]++;
    cov_2cusn4jcqn().s[53]++;
    score -= 0.1; // Unwanted emojis
  } else
  /* istanbul ignore next */
  {
    cov_2cusn4jcqn().b[19][1]++;
  }
  cov_2cusn4jcqn().s[54]++;
  if (/awesome|amazing|fantastic/i.test(text)) {
    /* istanbul ignore next */
    cov_2cusn4jcqn().b[21][0]++;
    cov_2cusn4jcqn().s[55]++;
    score -= 0.05; // Too positive
  } else
  /* istanbul ignore next */
  {
    cov_2cusn4jcqn().b[21][1]++;
  }
  cov_2cusn4jcqn().s[56]++;
  return Math.max(0, Math.min(1, score));
}

// Type definitions
//# sourceMappingURL=data:application/json;charset=utf-8;base64,