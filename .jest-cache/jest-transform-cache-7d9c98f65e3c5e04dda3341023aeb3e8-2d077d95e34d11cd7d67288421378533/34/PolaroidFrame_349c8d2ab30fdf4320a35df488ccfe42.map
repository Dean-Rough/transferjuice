{"version":3,"names":["cov_18pouekgdh","actualCoverage","React","Image","jsx","_jsx","jsxs","_jsxs","PolaroidFrame","_ref","image","caption","timestamp","_ref$angle","angle","b","_ref$className","className","f","s","concat","style","transform","children","src","url","alt","altText","fill","sizes","toLocaleDateString","day","month","hour","minute"],"sources":["PolaroidFrame.tsx"],"sourcesContent":["/**\n * Polaroid Frame Component\n * Instagram-style instant photo frames with captions\n */\n\nimport React from \"react\";\nimport Image from \"next/image\";\n\ninterface PolaroidFrameProps {\n  image: {\n    url: string;\n    altText: string;\n  };\n  caption?: string;\n  timestamp: Date;\n  angle?: number;\n  className?: string;\n}\n\nexport function PolaroidFrame({\n  image,\n  caption,\n  timestamp,\n  angle = 0,\n  className = \"\",\n}: PolaroidFrameProps) {\n  return (\n    <div\n      className={`inline-block ${className}`}\n      style={{ transform: `rotate(${angle}deg)` }}\n    >\n      <div className=\"bg-white p-3 shadow-xl\">\n        <div className=\"relative w-64 h-64 bg-zinc-100\">\n          <Image\n            src={image.url}\n            alt={image.altText}\n            fill\n            className=\"object-cover\"\n            sizes=\"256px\"\n          />\n        </div>\n\n        <div className=\"mt-3 space-y-1\">\n          {caption && (\n            <p className=\"text-sm text-black font-handwriting text-center px-2\">\n              {caption}\n            </p>\n          )}\n\n          <time className=\"block text-xs text-gray-600 text-center\">\n            {timestamp.toLocaleDateString(\"en-GB\", {\n              day: \"numeric\",\n              month: \"short\",\n              hour: \"2-digit\",\n              minute: \"2-digit\",\n            })}\n          </time>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAeY;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAfZ;AACA;AACA;AACA;;AAEA,OAAOE,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,YAAY;AAAC;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAa/B,OAAO,SAASC,aAAaA;AAAA;AAAAC,IAAA,EAMN;EAAA;EAAA,IALrBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IACLC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IACPC,SAAS,GAAAH,IAAA,CAATG,SAAS;IAAAC,UAAA,GAAAJ,IAAA,CACTK,KAAK;IAALA,KAAK,GAAAD,UAAA,eAAAb,cAAA,GAAAe,CAAA,UAAG,CAAC,IAAAF,UAAA;IAAAG,cAAA,GAAAP,IAAA,CACTQ,SAAS;IAATA,SAAS,GAAAD,cAAA,eAAAhB,cAAA,GAAAe,CAAA,UAAG,EAAE,IAAAC,cAAA;EAAA;EAAAhB,cAAA,GAAAkB,CAAA;EAAAlB,cAAA,GAAAmB,CAAA;EAEd,oBACE,2BAAAd,IAAA;EAAA;EAAA;EAAA;EAAA;IACEY,SAAS;IAAA;IAAA,gBAAAG,MAAA,CAAkBH,SAAS,CAAG;IACvCI,KAAK,EAAE;MAAEC,SAAS;MAAA;MAAA,UAAAF,MAAA,CAAYN,KAAK;IAAO,CAAE;IAAAS,QAAA;IAE5C;IAAAhB,KAAA;IAAA;IAAA;IAAA;IAAA;MAAKU,SAAS,EAAC,wBAAwB;MAAAM,QAAA;MACrC;MAAAlB,IAAA;MAAA;MAAA;MAAA;MAAA;QAAKY,SAAS,EAAC,gCAAgC;QAAAM,QAAA;QAC7C;QAAAlB,IAAA,CAACF,KAAK;QAAA;QAAA;UACJqB,GAAG,EAAEd,KAAK,CAACe,GAAI;UACfC,GAAG,EAAEhB,KAAK,CAACiB,OAAQ;UACnBC,IAAI;UAAA;UAAA;UACJX,SAAS,EAAC,cAAc;UACxBY,KAAK,EAAC;QAAO,CACd;MAAC,CACC,CAAC;MAEN;MAAAtB,KAAA;MAAA;MAAA;MAAA;MAAA;QAAKU,SAAS,EAAC,gBAAgB;QAAAM,QAAA;QAC5B;QAAA,CAAAvB,cAAA,GAAAe,CAAA,UAAAJ,OAAO;QAAA;QAAA,CAAAX,cAAA,GAAAe,CAAA;QACN;QAAAV,IAAA;QAAA;QAAA;QAAA;QAAA;UAAGY,SAAS,EAAC,sDAAsD;UAAAM,QAAA,EAChEZ;QAAO,CACP,CAAC,CACL;QAED;QAAAN,IAAA;QAAA;QAAA;QAAA;QAAA;UAAMY,SAAS,EAAC,yCAAyC;UAAAM,QAAA,EACtDX,SAAS,CAACkB,kBAAkB,CAAC,OAAO,EAAE;YACrCC,GAAG,EAAE,SAAS;YACdC,KAAK,EAAE,OAAO;YACdC,IAAI,EAAE,SAAS;YACfC,MAAM,EAAE;UACV,CAAC;QAAC,CACE,CAAC;MAAA,CACJ,CAAC;IAAA,CACH;EAAC,CACH,CAAC;AAEV","ignoreList":[]}