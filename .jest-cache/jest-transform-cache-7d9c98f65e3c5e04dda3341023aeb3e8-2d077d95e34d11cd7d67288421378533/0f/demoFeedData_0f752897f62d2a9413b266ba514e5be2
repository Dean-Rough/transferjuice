43ca832d3b6c360229c01b63512a3fdd
/* istanbul ignore next */
function cov_5cdr9k97x() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/data/demoFeedData.ts";
  var hash = "3c70f27083bc91a04d35c4bcba5c11766702a410";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/data/demoFeedData.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 42
        },
        end: {
          line: 321,
          column: 1
        }
      },
      "1": {
        start: {
          line: 328,
          column: 2
        },
        end: {
          line: 331,
          column: 6
        }
      },
      "2": {
        start: {
          line: 328,
          column: 39
        },
        end: {
          line: 331,
          column: 3
        }
      },
      "3": {
        start: {
          line: 338,
          column: 19
        },
        end: {
          line: 338,
          column: 36
        }
      },
      "4": {
        start: {
          line: 341,
          column: 26
        },
        end: {
          line: 352,
          column: 5
        }
      },
      "5": {
        start: {
          line: 341,
          column: 57
        },
        end: {
          line: 352,
          column: 3
        }
      },
      "6": {
        start: {
          line: 354,
          column: 2
        },
        end: {
          line: 354,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "getDemoFeedData",
        decl: {
          start: {
            line: 326,
            column: 16
          },
          end: {
            line: 326,
            column: 31
          }
        },
        loc: {
          start: {
            line: 326,
            column: 46
          },
          end: {
            line: 332,
            column: 1
          }
        },
        line: 326
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 328,
            column: 28
          },
          end: {
            line: 328,
            column: 29
          }
        },
        loc: {
          start: {
            line: 328,
            column: 39
          },
          end: {
            line: 331,
            column: 3
          }
        },
        line: 328
      },
      "2": {
        name: "getMoreDemoFeedData",
        decl: {
          start: {
            line: 337,
            column: 16
          },
          end: {
            line: 337,
            column: 35
          }
        },
        loc: {
          start: {
            line: 337,
            column: 68
          },
          end: {
            line: 355,
            column: 1
          }
        },
        line: 337
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 341,
            column: 39
          },
          end: {
            line: 341,
            column: 40
          }
        },
        loc: {
          start: {
            line: 341,
            column: 57
          },
          end: {
            line: 352,
            column: 3
          }
        },
        line: 341
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 337,
            column: 36
          },
          end: {
            line: 337,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 337,
            column: 53
          },
          end: {
            line: 337,
            column: 54
          }
        }],
        line: 337
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3c70f27083bc91a04d35c4bcba5c11766702a410"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_5cdr9k97x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_5cdr9k97x();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Demo Feed Data
 * Sample transfer feed items for development and demonstration
 */

export var DEMO_FEED_DATA =
/* istanbul ignore next */
(cov_5cdr9k97x().s[0]++, [{
  id: "demo-1",
  type: "breaking",
  timestamp: new Date(Date.now() - 15 * 60 * 1000),
  // 15 minutes ago
  content: "ðŸš¨ BREAKING: Arsenal agree â‚¬65M fee for Declan Rice! Medical scheduled for tomorrow. Personal terms already agreed. Here we go! âœ…",
  terryCommentary: "Right, Arsenal spending â‚¬65M on Declan Rice is either genius or the most expensive way to disappoint their fanbase.",
  source: {
    name: "Fabrizio Romano",
    handle: "@FabrizioRomano",
    tier: 1,
    reliability: 0.95,
    region: "GLOBAL"
  },
  tags: {
    clubs: ["Arsenal"],
    players: ["Declan Rice"],
    sources: ["Fabrizio Romano"]
  },
  engagement: {
    shares: 847,
    reactions: 3201,
    clicks: 156
  },
  metadata: {
    transferType: "confirmed",
    priority: "breaking",
    relevanceScore: 0.95,
    league: "PL"
  }
}, {
  id: "demo-2",
  type: "itk",
  timestamp: new Date(Date.now() - 32 * 60 * 1000),
  // 32 minutes ago
  content: "Personal terms agreed between Kylian MbappÃ© and Real Madrid. Club-to-club negotiations ongoing for final fee structure. Deal expected to be completed within 48-72 hours.",
  terryCommentary: "When David Ornstein says something, football Twitter collectively holds its breath. Kylian MbappÃ© to Real Madrid is as good as done.",
  source: {
    name: "David Ornstein",
    handle: "@David_Ornstein",
    tier: 1,
    reliability: 0.93,
    region: "UK"
  },
  tags: {
    clubs: ["Real Madrid"],
    players: ["Kylian MbappÃ©"],
    sources: ["David Ornstein"]
  },
  engagement: {
    shares: 623,
    reactions: 2187,
    clicks: 89
  },
  metadata: {
    transferType: "personal_terms",
    priority: "high",
    relevanceScore: 0.91,
    league: "LaLiga"
  }
}, {
  id: "demo-3",
  type: "itk",
  timestamp: new Date(Date.now() - 45 * 60 * 1000),
  // 45 minutes ago
  content: "UFFICIALE: Juventus confermato accordo per Victor Osimhen! Visite mediche programmate per domani mattina. Contratto di 5 anni. ðŸ‡³ðŸ‡¬âš«âšª",
  terryCommentary: "Gianluca Di Marzio with the Italian exclusive. Victor Osimhen to Juventus because apparently Serie A needed more drama.",
  source: {
    name: "Gianluca Di Marzio",
    handle: "@DiMarzio",
    tier: 1,
    reliability: 0.9,
    region: "IT"
  },
  tags: {
    clubs: ["Juventus"],
    players: ["Victor Osimhen"],
    sources: ["Gianluca Di Marzio"]
  },
  engagement: {
    shares: 445,
    reactions: 1634,
    clicks: 67
  },
  metadata: {
    transferType: "confirmed",
    priority: "high",
    relevanceScore: 0.87,
    league: "SerieA"
  }
}, {
  id: "demo-4",
  type: "partner",
  timestamp: new Date(Date.now() - 65 * 60 * 1000),
  // 1 hour 5 minutes ago
  content: "Tactical Analysis: How Arsenal's transfer strategy is shaping their season. Deep dive into Arsenal's recent transfer decisions and their tactical implications for the upcoming matches.",
  terryCommentary: 'Quality content from The Upshot to fill the void between "Here we go!" announcements.',
  source: {
    name: "The Upshot",
    tier: 2,
    reliability: 0.88,
    region: "UK"
  },
  tags: {
    clubs: ["Arsenal"],
    players: [],
    sources: ["The Upshot"]
  },
  engagement: {
    shares: 89,
    reactions: 234,
    clicks: 145
  },
  metadata: {
    priority: "medium",
    relevanceScore: 0.75,
    league: "PL",
    attribution: "Originally published by The Upshot - https://www.theupshot.co.uk",
    originalUrl: "https://www.theupshot.co.uk/article/arsenal-transfer-strategy"
  }
}, {
  id: "demo-5",
  type: "itk",
  timestamp: new Date(Date.now() - 78 * 60 * 1000),
  // 1 hour 18 minutes ago
  content: "Bayern Munich officials confident about completing Jamal Musiala contract extension. New deal until 2029 with significant salary increase. Announcement expected this week.",
  source: {
    name: "Sky Sports",
    handle: "@SkySports",
    tier: 2,
    reliability: 0.8,
    region: "UK"
  },
  tags: {
    clubs: ["Bayern Munich"],
    players: ["Jamal Musiala"],
    sources: ["Sky Sports"]
  },
  engagement: {
    shares: 234,
    reactions: 897,
    clicks: 45
  },
  metadata: {
    transferType: "signing",
    priority: "medium",
    relevanceScore: 0.72,
    league: "Bundesliga"
  }
}, {
  id: "demo-6",
  type: "itk",
  timestamp: new Date(Date.now() - 95 * 60 * 1000),
  // 1 hour 35 minutes ago
  content: "EXCLUSIVE: Manchester United monitoring Pedri situation at Barcelona. Initial contact made with player representatives. No formal bid yet but interest is genuine.",
  terryCommentary: 'Manchester United "monitoring" a player is code for "we\'ll probably sign someone else entirely in six months."',
  source: {
    name: "MARCA",
    handle: "@marca",
    tier: 2,
    reliability: 0.82,
    region: "ES"
  },
  tags: {
    clubs: ["Manchester United", "Barcelona"],
    players: ["Pedri"],
    sources: ["MARCA"]
  },
  engagement: {
    shares: 345,
    reactions: 1256,
    clicks: 78
  },
  metadata: {
    transferType: "rumour",
    priority: "medium",
    relevanceScore: 0.69,
    league: "PL"
  }
}, {
  id: "demo-7",
  type: "itk",
  timestamp: new Date(Date.now() - 112 * 60 * 1000),
  // 1 hour 52 minutes ago
  content: "Chelsea preparing improved offer for Rafael LeÃ£o. AC Milan want â‚¬120M, Chelsea willing to pay â‚¬100M plus bonuses. Player keen on Premier League move.",
  terryCommentary: "â‚¬120M for Rafael LeÃ£o? That's either shrewd business or the most expensive midlife crisis in football history.",
  source: {
    name: "L'Ã‰quipe",
    tier: 2,
    reliability: 0.85,
    region: "FR"
  },
  tags: {
    clubs: ["Chelsea", "AC Milan"],
    players: ["Rafael LeÃ£o"],
    sources: ["L'Ã‰quipe"]
  },
  engagement: {
    shares: 278,
    reactions: 967,
    clicks: 56
  },
  metadata: {
    transferType: "bid",
    priority: "medium",
    relevanceScore: 0.78,
    league: "PL"
  }
}, {
  id: "demo-8",
  type: "itk",
  timestamp: new Date(Date.now() - 135 * 60 * 1000),
  // 2 hours 15 minutes ago
  content: "Liverpool close to securing JoÃ£o Palhinha deal. West Ham demanding Â£40M, Liverpool confident of agreement at Â£35M plus add-ons. Medical could be arranged quickly.",
  source: {
    name: "The Times",
    tier: 2,
    reliability: 0.83,
    region: "UK"
  },
  tags: {
    clubs: ["Liverpool", "West Ham"],
    players: ["JoÃ£o Palhinha"],
    sources: ["The Times"]
  },
  engagement: {
    shares: 189,
    reactions: 743,
    clicks: 34
  },
  metadata: {
    transferType: "bid",
    priority: "medium",
    relevanceScore: 0.71,
    league: "PL"
  }
}, {
  id: "demo-9",
  type: "itk",
  timestamp: new Date(Date.now() - 158 * 60 * 1000),
  // 2 hours 38 minutes ago
  content: "PSG exploring move for Marcus Rashford. Manchester United open to offers over â‚¬80M. Player's representatives in contact with multiple clubs.",
  terryCommentary: "PSG \"exploring\" Marcus Rashford like they explore every winger who's had a decent season. Spoiler: they'll sign someone completely different.",
  source: {
    name: "RMC Sport",
    tier: 2,
    reliability: 0.79,
    region: "FR"
  },
  tags: {
    clubs: ["PSG", "Manchester United"],
    players: ["Marcus Rashford"],
    sources: ["RMC Sport"]
  },
  engagement: {
    shares: 412,
    reactions: 1534,
    clicks: 98
  },
  metadata: {
    transferType: "rumour",
    priority: "medium",
    relevanceScore: 0.76,
    league: "PL"
  }
}, {
  id: "demo-10",
  type: "itk",
  timestamp: new Date(Date.now() - 185 * 60 * 1000),
  // 3 hours 5 minutes ago
  content: "Tottenham target Ivan Toney as Harry Kane replacement. Brentford valuation around â‚¬60M. Spurs willing to meet asking price if Kane deal materializes.",
  source: {
    name: "Football London",
    tier: 3,
    reliability: 0.72,
    region: "UK"
  },
  tags: {
    clubs: ["Tottenham", "Brentford"],
    players: ["Ivan Toney", "Harry Kane"],
    sources: ["Football London"]
  },
  engagement: {
    shares: 156,
    reactions: 623,
    clicks: 29
  },
  metadata: {
    transferType: "rumour",
    priority: "low",
    relevanceScore: 0.65,
    league: "PL"
  }
}]);

/**
 * Get demo feed data with realistic timestamps
 */
export function getDemoFeedData() {
  /* istanbul ignore next */
  cov_5cdr9k97x().f[0]++;
  cov_5cdr9k97x().s[1]++;
  // Keep timestamps as Date objects as expected by the store
  return DEMO_FEED_DATA.map(function (item) {
    /* istanbul ignore next */
    cov_5cdr9k97x().f[1]++;
    cov_5cdr9k97x().s[2]++;
    return /* istanbul ignore next */_objectSpread(_objectSpread({}, item), {}, {
      timestamp: new Date(item.timestamp) // Ensure it's a proper Date object
    });
  });
}

/**
 * Simulate loading more demo data
 */
export function getMoreDemoFeedData() {
  /* istanbul ignore next */
  var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_5cdr9k97x().b[0][0]++, 0);
  /* istanbul ignore next */
  cov_5cdr9k97x().f[2]++;
  var baseData =
  /* istanbul ignore next */
  (cov_5cdr9k97x().s[3]++, getDemoFeedData());

  // Create additional items by duplicating and modifying existing ones
  var additionalItems =
  /* istanbul ignore next */
  (cov_5cdr9k97x().s[4]++, baseData.map(function (item, index) {
    /* istanbul ignore next */
    cov_5cdr9k97x().f[3]++;
    cov_5cdr9k97x().s[5]++;
    return /* istanbul ignore next */_objectSpread(_objectSpread({}, item), {}, {
      id:
      /* istanbul ignore next */
      "demo-".concat(offset, "-").concat(index + 1),
      timestamp: new Date(Date.now() - (200 + offset * 30 + index * 15) * 60 * 1000),
      engagement: {
        shares: Math.floor(Math.random() * 500),
        reactions: Math.floor(Math.random() * 2000),
        clicks: Math.floor(Math.random() * 100)
      }
    });
  }));
  /* istanbul ignore next */
  cov_5cdr9k97x().s[6]++;
  return additionalItems;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,