{"version":3,"names":["cov_2342aqtw24","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","_coverageSchema","coverage","actualCoverage","_slicedToArray","r","e","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","a","_arrayLikeToArray","t","toString","call","slice","constructor","Array","from","test","length","n","l","Symbol","iterator","i","u","o","next","Object","done","push","value","isArray","useEffect","useState","jsx","_jsx","jsxs","_jsxs","TestFeedPage","_ref","_ref2","apiData","setApiData","_ref3","_ref4","error","setError","_ref5","_ref6","loading","setLoading","fetch","then","res","json","data","console","log","err","message","className","children","JSON","stringify"],"sources":["page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\n\nexport default function TestFeedPage() {\n  const [apiData, setApiData] = useState<any>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch('/api/feed?limit=5')\n      .then(res => res.json())\n      .then(data => {\n        console.log('API Response:', data);\n        setApiData(data);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error('API Error:', err);\n        setError(err.message);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"p-8\">\n      <h1 className=\"text-2xl font-bold mb-4\">Feed API Test</h1>\n      \n      {loading && <p>Loading...</p>}\n      \n      {error && (\n        <div className=\"bg-red-100 text-red-800 p-4 rounded mb-4\">\n          Error: {error}\n        </div>\n      )}\n      \n      {apiData && (\n        <div>\n          <h2 className=\"text-xl font-bold mb-2\">API Response</h2>\n          <pre className=\"bg-gray-100 p-4 rounded overflow-auto\">\n            {JSON.stringify(apiData, null, 2)}\n          </pre>\n        </div>\n      )}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]}