91cf331f7f538365575d5890ed8a589e
/* istanbul ignore next */
function cov_1ew7u42z74() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/twitter/globalMonitor.ts";
  var hash = "6dca5c81fa1a42b1d475b17032cbec2e57c33db4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/twitter/globalMonitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 62,
          column: 48
        },
        end: {
          line: 69,
          column: 1
        }
      },
      "1": {
        start: {
          line: 76,
          column: 31
        },
        end: {
          line: 76,
          column: 36
        }
      },
      "2": {
        start: {
          line: 77,
          column: 37
        },
        end: {
          line: 77,
          column: 41
        }
      },
      "3": {
        start: {
          line: 78,
          column: 46
        },
        end: {
          line: 78,
          column: 50
        }
      },
      "4": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 25
        }
      },
      "5": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "6": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 89,
          column: 60
        }
      },
      "7": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "8": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 26
        }
      },
      "9": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 76
        }
      },
      "10": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 30
        }
      },
      "11": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 105,
          column: 6
        }
      },
      "12": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 34
        }
      },
      "13": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "14": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 113,
          column: 56
        }
      },
      "15": {
        start: {
          line: 114,
          column: 6
        },
        end: {
          line: 114,
          column: 13
        }
      },
      "16": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 117,
          column: 27
        }
      },
      "17": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "18": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 37
        }
      },
      "19": {
        start: {
          line: 120,
          column: 6
        },
        end: {
          line: 120,
          column: 29
        }
      },
      "20": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 123,
          column: 49
        }
      },
      "21": {
        start: {
          line: 130,
          column: 22
        },
        end: {
          line: 130,
          column: 39
        }
      },
      "22": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 131,
          column: 58
        }
      },
      "23": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 133,
          column: 45
        }
      },
      "24": {
        start: {
          line: 134,
          column: 40
        },
        end: {
          line: 134,
          column: 42
        }
      },
      "25": {
        start: {
          line: 135,
          column: 29
        },
        end: {
          line: 135,
          column: 31
        }
      },
      "26": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 160,
          column: 5
        }
      },
      "27": {
        start: {
          line: 139,
          column: 6
        },
        end: {
          line: 142,
          column: 7
        }
      },
      "28": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 64
        }
      },
      "29": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 17
        }
      },
      "30": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 156,
          column: 7
        }
      },
      "31": {
        start: {
          line: 145,
          column: 23
        },
        end: {
          line: 145,
          column: 55
        }
      },
      "32": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 29
        }
      },
      "33": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 151,
          column: 10
        }
      },
      "34": {
        start: {
          line: 153,
          column: 25
        },
        end: {
          line: 153,
          column: 120
        }
      },
      "35": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 30
        }
      },
      "36": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 37
        }
      },
      "37": {
        start: {
          line: 159,
          column: 6
        },
        end: {
          line: 159,
          column: 28
        }
      },
      "38": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 162,
          column: 34
        }
      },
      "39": {
        start: {
          line: 163,
          column: 22
        },
        end: {
          line: 163,
          column: 51
        }
      },
      "40": {
        start: {
          line: 165,
          column: 18
        },
        end: {
          line: 165,
          column: 71
        }
      },
      "41": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 172,
          column: 7
        }
      },
      "42": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 174,
          column: 17
        }
      },
      "43": {
        start: {
          line: 181,
          column: 22
        },
        end: {
          line: 181,
          column: 39
        }
      },
      "44": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 228,
          column: 5
        }
      },
      "45": {
        start: {
          line: 185,
          column: 21
        },
        end: {
          line: 185,
          column: 57
        }
      },
      "46": {
        start: {
          line: 188,
          column: 30
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "47": {
        start: {
          line: 188,
          column: 53
        },
        end: {
          line: 191,
          column: 7
        }
      },
      "48": {
        start: {
          line: 194,
          column: 29
        },
        end: {
          line: 198,
          column: 7
        }
      },
      "49": {
        start: {
          line: 196,
          column: 10
        },
        end: {
          line: 197,
          column: 73
        }
      },
      "50": {
        start: {
          line: 200,
          column: 35
        },
        end: {
          line: 202,
          column: 7
        }
      },
      "51": {
        start: {
          line: 201,
          column: 32
        },
        end: {
          line: 201,
          column: 64
        }
      },
      "52": {
        start: {
          line: 205,
          column: 6
        },
        end: {
          line: 207,
          column: 7
        }
      },
      "53": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 70
        }
      },
      "54": {
        start: {
          line: 209,
          column: 6
        },
        end: {
          line: 217,
          column: 8
        }
      },
      "55": {
        start: {
          line: 219,
          column: 6
        },
        end: {
          line: 227,
          column: 8
        }
      },
      "56": {
        start: {
          line: 239,
          column: 36
        },
        end: {
          line: 239,
          column: 67
        }
      },
      "57": {
        start: {
          line: 242,
          column: 26
        },
        end: {
          line: 245,
          column: 5
        }
      },
      "58": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 251,
          column: 6
        }
      },
      "59": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 253,
          column: 22
        }
      },
      "60": {
        start: {
          line: 261,
          column: 6
        },
        end: {
          line: 261,
          column: 68
        }
      },
      "61": {
        start: {
          line: 262,
          column: 32
        },
        end: {
          line: 262,
          column: 34
        }
      },
      "62": {
        start: {
          line: 264,
          column: 30
        },
        end: {
          line: 301,
          column: 5
        }
      },
      "63": {
        start: {
          line: 303,
          column: 20
        },
        end: {
          line: 310,
          column: 5
        }
      },
      "64": {
        start: {
          line: 311,
          column: 18
        },
        end: {
          line: 318,
          column: 5
        }
      },
      "65": {
        start: {
          line: 320,
          column: 4
        },
        end: {
          line: 347,
          column: 5
        }
      },
      "66": {
        start: {
          line: 320,
          column: 17
        },
        end: {
          line: 320,
          column: 18
        }
      },
      "67": {
        start: {
          line: 321,
          column: 24
        },
        end: {
          line: 321,
          column: 58
        }
      },
      "68": {
        start: {
          line: 322,
          column: 23
        },
        end: {
          line: 322,
          column: 78
        }
      },
      "69": {
        start: {
          line: 324,
          column: 19
        },
        end: {
          line: 330,
          column: 76
        }
      },
      "70": {
        start: {
          line: 332,
          column: 6
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "71": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 349,
          column: 18
        }
      },
      "72": {
        start: {
          line: 362,
          column: 4
        },
        end: {
          line: 366,
          column: 7
        }
      },
      "73": {
        start: {
          line: 377,
          column: 4
        },
        end: {
          line: 381,
          column: 6
        }
      },
      "74": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 380,
          column: 54
        }
      },
      "75": {
        start: {
          line: 392,
          column: 31
        },
        end: {
          line: 395,
          column: 5
        }
      },
      "76": {
        start: {
          line: 393,
          column: 18
        },
        end: {
          line: 393,
          column: 39
        }
      },
      "77": {
        start: {
          line: 396,
          column: 32
        },
        end: {
          line: 399,
          column: 5
        }
      },
      "78": {
        start: {
          line: 397,
          column: 18
        },
        end: {
          line: 397,
          column: 40
        }
      },
      "79": {
        start: {
          line: 401,
          column: 20
        },
        end: {
          line: 401,
          column: 45
        }
      },
      "80": {
        start: {
          line: 402,
          column: 26
        },
        end: {
          line: 404,
          column: 12
        }
      },
      "81": {
        start: {
          line: 403,
          column: 13
        },
        end: {
          line: 403,
          column: 39
        }
      },
      "82": {
        start: {
          line: 405,
          column: 31
        },
        end: {
          line: 405,
          column: 61
        }
      },
      "83": {
        start: {
          line: 407,
          column: 24
        },
        end: {
          line: 424,
          column: 5
        }
      },
      "84": {
        start: {
          line: 409,
          column: 23
        },
        end: {
          line: 409,
          column: 68
        }
      },
      "85": {
        start: {
          line: 409,
          column: 43
        },
        end: {
          line: 409,
          column: 67
        }
      },
      "86": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 412,
          column: 9
        }
      },
      "87": {
        start: {
          line: 411,
          column: 10
        },
        end: {
          line: 411,
          column: 71
        }
      },
      "88": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 413,
          column: 40
        }
      },
      "89": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 417,
          column: 9
        }
      },
      "90": {
        start: {
          line: 415,
          column: 10
        },
        end: {
          line: 415,
          column: 60
        }
      },
      "91": {
        start: {
          line: 416,
          column: 10
        },
        end: {
          line: 416,
          column: 64
        }
      },
      "92": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 418,
          column: 19
        }
      },
      "93": {
        start: {
          line: 426,
          column: 26
        },
        end: {
          line: 432,
          column: 5
        }
      },
      "94": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 428,
          column: 63
        }
      },
      "95": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 429,
          column: 19
        }
      },
      "96": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 448,
          column: 6
        }
      },
      "97": {
        start: {
          line: 455,
          column: 4
        },
        end: {
          line: 455,
          column: 61
        }
      },
      "98": {
        start: {
          line: 455,
          column: 36
        },
        end: {
          line: 455,
          column: 59
        }
      },
      "99": {
        start: {
          line: 462,
          column: 4
        },
        end: {
          line: 467,
          column: 6
        }
      },
      "100": {
        start: {
          line: 474,
          column: 4
        },
        end: {
          line: 474,
          column: 51
        }
      },
      "101": {
        start: {
          line: 475,
          column: 4
        },
        end: {
          line: 475,
          column: 62
        }
      },
      "102": {
        start: {
          line: 480,
          column: 29
        },
        end: {
          line: 480,
          column: 51
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 80,
            column: 2
          },
          end: {
            line: 80,
            column: 3
          }
        },
        loc: {
          start: {
            line: 80,
            column: 57
          },
          end: {
            line: 82,
            column: 3
          }
        },
        line: 80
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 87,
            column: 2
          },
          end: {
            line: 87,
            column: 3
          }
        },
        loc: {
          start: {
            line: 87,
            column: 23
          },
          end: {
            line: 106,
            column: 3
          }
        },
        line: 87
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 101,
            column: 6
          },
          end: {
            line: 101,
            column: 7
          }
        },
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 103,
            column: 7
          }
        },
        line: 101
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 111,
            column: 2
          },
          end: {
            line: 111,
            column: 3
          }
        },
        loc: {
          start: {
            line: 111,
            column: 22
          },
          end: {
            line: 124,
            column: 3
          }
        },
        line: 111
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 129,
            column: 2
          },
          end: {
            line: 129,
            column: 3
          }
        },
        loc: {
          start: {
            line: 129,
            column: 68
          },
          end: {
            line: 175,
            column: 3
          }
        },
        line: 129
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 180,
            column: 2
          },
          end: {
            line: 180,
            column: 3
          }
        },
        loc: {
          start: {
            line: 180,
            column: 76
          },
          end: {
            line: 229,
            column: 3
          }
        },
        line: 180
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 188,
            column: 41
          },
          end: {
            line: 188,
            column: 42
          }
        },
        loc: {
          start: {
            line: 188,
            column: 53
          },
          end: {
            line: 191,
            column: 7
          }
        },
        line: 188
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        loc: {
          start: {
            line: 196,
            column: 10
          },
          end: {
            line: 197,
            column: 73
          }
        },
        line: 196
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        loc: {
          start: {
            line: 201,
            column: 32
          },
          end: {
            line: 201,
            column: 64
          }
        },
        line: 201
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 235,
            column: 2
          },
          end: {
            line: 235,
            column: 3
          }
        },
        loc: {
          start: {
            line: 235,
            column: 75
          },
          end: {
            line: 254,
            column: 3
          }
        },
        line: 235
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 259,
            column: 2
          },
          end: {
            line: 259,
            column: 3
          }
        },
        loc: {
          start: {
            line: 259,
            column: 61
          },
          end: {
            line: 350,
            column: 3
          }
        },
        line: 259
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 355,
            column: 2
          },
          end: {
            line: 355,
            column: 3
          }
        },
        loc: {
          start: {
            line: 359,
            column: 19
          },
          end: {
            line: 371,
            column: 3
          }
        },
        line: 359
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 376,
            column: 2
          },
          end: {
            line: 376,
            column: 3
          }
        },
        loc: {
          start: {
            line: 376,
            column: 44
          },
          end: {
            line: 382,
            column: 3
          }
        },
        line: 376
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 378,
            column: 6
          },
          end: {
            line: 378,
            column: 7
          }
        },
        loc: {
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 380,
            column: 54
          }
        },
        line: 379
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 387,
            column: 2
          },
          end: {
            line: 387,
            column: 3
          }
        },
        loc: {
          start: {
            line: 391,
            column: 27
          },
          end: {
            line: 449,
            column: 3
          }
        },
        line: 391
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 393,
            column: 6
          },
          end: {
            line: 393,
            column: 7
          }
        },
        loc: {
          start: {
            line: 393,
            column: 18
          },
          end: {
            line: 393,
            column: 39
          }
        },
        line: 393
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 397,
            column: 6
          },
          end: {
            line: 397,
            column: 7
          }
        },
        loc: {
          start: {
            line: 397,
            column: 18
          },
          end: {
            line: 397,
            column: 40
          }
        },
        line: 397
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 403,
            column: 6
          },
          end: {
            line: 403,
            column: 7
          }
        },
        loc: {
          start: {
            line: 403,
            column: 13
          },
          end: {
            line: 403,
            column: 39
          }
        },
        line: 403
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 408,
            column: 6
          },
          end: {
            line: 408,
            column: 7
          }
        },
        loc: {
          start: {
            line: 408,
            column: 23
          },
          end: {
            line: 419,
            column: 7
          }
        },
        line: 408
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 409,
            column: 36
          },
          end: {
            line: 409,
            column: 37
          }
        },
        loc: {
          start: {
            line: 409,
            column: 43
          },
          end: {
            line: 409,
            column: 67
          }
        },
        line: 409
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 427,
            column: 6
          },
          end: {
            line: 427,
            column: 7
          }
        },
        loc: {
          start: {
            line: 427,
            column: 23
          },
          end: {
            line: 430,
            column: 7
          }
        },
        line: 427
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 454,
            column: 2
          },
          end: {
            line: 454,
            column: 3
          }
        },
        loc: {
          start: {
            line: 454,
            column: 43
          },
          end: {
            line: 456,
            column: 3
          }
        },
        line: 454
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 455,
            column: 23
          },
          end: {
            line: 455,
            column: 24
          }
        },
        loc: {
          start: {
            line: 455,
            column: 36
          },
          end: {
            line: 455,
            column: 59
          }
        },
        line: 455
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 461,
            column: 2
          },
          end: {
            line: 461,
            column: 3
          }
        },
        loc: {
          start: {
            line: 461,
            column: 21
          },
          end: {
            line: 468,
            column: 3
          }
        },
        line: 461
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 473,
            column: 2
          },
          end: {
            line: 473,
            column: 3
          }
        },
        loc: {
          start: {
            line: 473,
            column: 66
          },
          end: {
            line: 476,
            column: 3
          }
        },
        line: 473
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 80,
            column: 14
          },
          end: {
            line: 80,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 80,
            column: 41
          },
          end: {
            line: 80,
            column: 55
          }
        }],
        line: 80
      },
      "1": {
        loc: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "2": {
        loc: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "3": {
        loc: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "4": {
        loc: {
          start: {
            line: 139,
            column: 6
          },
          end: {
            line: 142,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 6
          },
          end: {
            line: 142,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "5": {
        loc: {
          start: {
            line: 153,
            column: 62
          },
          end: {
            line: 153,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 153,
            column: 87
          },
          end: {
            line: 153,
            column: 100
          }
        }, {
          start: {
            line: 153,
            column: 103
          },
          end: {
            line: 153,
            column: 118
          }
        }],
        line: 153
      },
      "6": {
        loc: {
          start: {
            line: 196,
            column: 10
          },
          end: {
            line: 197,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 10
          },
          end: {
            line: 196,
            column: 42
          }
        }, {
          start: {
            line: 197,
            column: 10
          },
          end: {
            line: 197,
            column: 73
          }
        }],
        line: 196
      },
      "7": {
        loc: {
          start: {
            line: 225,
            column: 17
          },
          end: {
            line: 225,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 225,
            column: 42
          },
          end: {
            line: 225,
            column: 55
          }
        }, {
          start: {
            line: 225,
            column: 58
          },
          end: {
            line: 225,
            column: 73
          }
        }],
        line: 225
      },
      "8": {
        loc: {
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 380,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 379,
            column: 58
          }
        }, {
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 380,
            column: 54
          }
        }],
        line: 379
      },
      "9": {
        loc: {
          start: {
            line: 410,
            column: 8
          },
          end: {
            line: 412,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 410,
            column: 8
          },
          end: {
            line: 412,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 410
      },
      "10": {
        loc: {
          start: {
            line: 414,
            column: 8
          },
          end: {
            line: 417,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 414,
            column: 8
          },
          end: {
            line: 417,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 414
      },
      "11": {
        loc: {
          start: {
            line: 428,
            column: 32
          },
          end: {
            line: 428,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 428,
            column: 32
          },
          end: {
            line: 428,
            column: 52
          }
        }, {
          start: {
            line: 428,
            column: 56
          },
          end: {
            line: 428,
            column: 57
          }
        }],
        line: 428
      },
      "12": {
        loc: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 443,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 442,
            column: 12
          },
          end: {
            line: 442,
            column: 72
          }
        }, {
          start: {
            line: 443,
            column: 12
          },
          end: {
            line: 443,
            column: 13
          }
        }],
        line: 441
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6dca5c81fa1a42b1d475b17032cbec2e57c33db4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ew7u42z74 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ew7u42z74();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Global ITK Monitoring Service
 * Orchestrates worldwide transfer source monitoring with rate limiting and error handling
 */

import { getMonitoringPriority, updateSourceRateLimit, isSourceRateLimited } from './globalSources';
import { classifyTransferContent } from './transferClassifier';
// Default monitoring configuration
export var DEFAULT_CONFIG =
/* istanbul ignore next */
(cov_1ew7u42z74().s[0]++, {
  intervalMinutes: 60,
  // Check every hour
  maxTweetsPerSource: 20,
  // 20 tweets per source per hour
  minConfidenceThreshold: 0.4,
  // 40% minimum confidence
  enabledRegions: ['UK', 'ES', 'IT', 'FR', 'DE', 'BR', 'GLOBAL'],
  enabledTiers: [1, 2, 3],
  rateLimitBuffer: 0.2 // 20% buffer for rate limits
});

/**
 * Global ITK Monitor Class
 */
export
/* istanbul ignore next */
var GlobalITKMonitor = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  GlobalITKMonitor() {
    /* istanbul ignore next */
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_1ew7u42z74().b[0][0]++, DEFAULT_CONFIG);
    /* istanbul ignore next */
    _classCallCheck(this, GlobalITKMonitor);
    _defineProperty(this, "isRunning", (cov_1ew7u42z74().s[1]++, false));
    /* istanbul ignore next */
    _defineProperty(this, "lastRunTime", (cov_1ew7u42z74().s[2]++, null));
    /* istanbul ignore next */
    _defineProperty(this, "intervalId", (cov_1ew7u42z74().s[3]++, null));
    /* istanbul ignore next */
    cov_1ew7u42z74().f[0]++;
    cov_1ew7u42z74().s[4]++;
    this.config = config;
  }

  /**
   * Start continuous monitoring
   */
  return _createClass(GlobalITKMonitor, [{
    key: "start",
    value: function start() {
      /* istanbul ignore next */
      var _this = this;
      cov_1ew7u42z74().f[1]++;
      cov_1ew7u42z74().s[5]++;
      if (this.isRunning) {
        /* istanbul ignore next */
        cov_1ew7u42z74().b[1][0]++;
        cov_1ew7u42z74().s[6]++;
        console.warn('Global ITK Monitor is already running');
        /* istanbul ignore next */
        cov_1ew7u42z74().s[7]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ew7u42z74().b[1][1]++;
      }
      cov_1ew7u42z74().s[8]++;
      this.isRunning = true;
      /* istanbul ignore next */
      cov_1ew7u42z74().s[9]++;
      console.log('🌍 Starting Global ITK Monitor with config:', this.config);

      // Initial run
      /* istanbul ignore next */
      cov_1ew7u42z74().s[10]++;
      this.runMonitoringCycle();

      // Schedule recurring runs
      /* istanbul ignore next */
      cov_1ew7u42z74().s[11]++;
      this.intervalId = setInterval(function () {
        /* istanbul ignore next */
        cov_1ew7u42z74().f[2]++;
        cov_1ew7u42z74().s[12]++;
        _this.runMonitoringCycle();
      }, this.config.intervalMinutes * 60 * 1000);
    }

    /**
     * Stop monitoring
     */
  }, {
    key: "stop",
    value: function stop() {
      /* istanbul ignore next */
      cov_1ew7u42z74().f[3]++;
      cov_1ew7u42z74().s[13]++;
      if (!this.isRunning) {
        /* istanbul ignore next */
        cov_1ew7u42z74().b[2][0]++;
        cov_1ew7u42z74().s[14]++;
        console.warn('Global ITK Monitor is not running');
        /* istanbul ignore next */
        cov_1ew7u42z74().s[15]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ew7u42z74().b[2][1]++;
      }
      cov_1ew7u42z74().s[16]++;
      this.isRunning = false;
      /* istanbul ignore next */
      cov_1ew7u42z74().s[17]++;
      if (this.intervalId) {
        /* istanbul ignore next */
        cov_1ew7u42z74().b[3][0]++;
        cov_1ew7u42z74().s[18]++;
        clearInterval(this.intervalId);
        /* istanbul ignore next */
        cov_1ew7u42z74().s[19]++;
        this.intervalId = null;
      } else
      /* istanbul ignore next */
      {
        cov_1ew7u42z74().b[3][1]++;
      }
      cov_1ew7u42z74().s[20]++;
      console.log('⏹️ Global ITK Monitor stopped');
    }

    /**
     * Run a single monitoring cycle across all sources
     */
  }, {
    key: "runMonitoringCycle",
    value: (function () {
      var _runMonitoringCycle = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee()
      /* istanbul ignore next */
      {
        var startTime, sources, results, errors, _iterator, _step, source, result, errorMsg, totalTime, stats, _t, _t2;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              cov_1ew7u42z74().f[4]++;
              startTime = (cov_1ew7u42z74().s[21]++, performance.now());
              cov_1ew7u42z74().s[22]++;
              console.log('🔄 Starting global monitoring cycle...');
              sources = (cov_1ew7u42z74().s[23]++, this.getEligibleSources());
              results = (cov_1ew7u42z74().s[24]++, []);
              errors = (cov_1ew7u42z74().s[25]++, []); // Process sources in priority order (Tier 1 first)
              cov_1ew7u42z74().s[26]++;
              _iterator = _createForOfIteratorHelper(sources);
              _context.p = 1;
              _iterator.s();
            case 2:
              if ((_step = _iterator.n()).done) {
                _context.n = 10;
                break;
              }
              source = _step.value;
              cov_1ew7u42z74().s[27]++;
              if (!isSourceRateLimited(source.id)) {
                _context.n = 3;
                break;
              }
              cov_1ew7u42z74().b[4][0]++;
              cov_1ew7u42z74().s[28]++;
              console.log(
              /* istanbul ignore next */
              "\u23F3 Skipping ".concat(source.name, " - rate limited"));
              cov_1ew7u42z74().s[29]++;
              return _context.a(3, 9);
            case 3:
              cov_1ew7u42z74().b[4][1]++;
            case 4:
              cov_1ew7u42z74().s[30]++;
              _context.p = 5;
              cov_1ew7u42z74().s[31]++;
              _context.n = 6;
              return this.monitorSource(source);
            case 6:
              result = _context.v;
              cov_1ew7u42z74().s[32]++;
              results.push(result);

              // Log results
              cov_1ew7u42z74().s[33]++;
              console.log(
              /* istanbul ignore next */
              "\u2705 ".concat(source.name, ": ").concat(result.transferTweets, "/").concat(result.tweetsChecked, " transfer tweets (").concat(result.timeMs, "ms)"));
              _context.n = 8;
              break;
            case 7:
              _context.p = 7;
              _t = _context.v;
              errorMsg = (cov_1ew7u42z74().s[34]++, "Failed to monitor ".concat(source.name, ": ").concat(
              /* istanbul ignore next */
              _t instanceof Error ?
              /* istanbul ignore next */
              (cov_1ew7u42z74().b[5][0]++,
              /* istanbul ignore next */
              _t.message) :
              /* istanbul ignore next */
              (cov_1ew7u42z74().b[5][1]++, 'Unknown error')));
              cov_1ew7u42z74().s[35]++;
              errors.push(errorMsg);
              cov_1ew7u42z74().s[36]++;
              console.error('❌', errorMsg);
            case 8:
              cov_1ew7u42z74().s[37]++;
              _context.n = 9;
              return this.sleep(100);
            case 9:
              _context.n = 2;
              break;
            case 10:
              _context.n = 12;
              break;
            case 11:
              _context.p = 11;
              _t2 = _context.v;
              _iterator.e(_t2);
            case 12:
              _context.p = 12;
              _iterator.f();
              return _context.f(12);
            case 13:
              cov_1ew7u42z74().s[38]++;
              this.lastRunTime = new Date();
              totalTime = (cov_1ew7u42z74().s[39]++, performance.now() - startTime);
              stats = (cov_1ew7u42z74().s[40]++, this.calculateGlobalStats(results, errors, totalTime));
              cov_1ew7u42z74().s[41]++;
              console.log('📊 Global monitoring cycle complete:', {
                duration:
                /* istanbul ignore next */
                "".concat(Math.round(totalTime), "ms"),
                sources: results.length,
                totalTransfers: stats.totalTransferTweets,
                avgConfidence:
                /* istanbul ignore next */
                "".concat(stats.averageConfidence, "%")
              });
              cov_1ew7u42z74().s[42]++;
              return _context.a(2, stats);
          }
        }, _callee, this, [[5, 7], [1, 11, 12, 13]]);
      }));
      function runMonitoringCycle() {
        return _runMonitoringCycle.apply(this, arguments);
      }
      return runMonitoringCycle;
    }()
    /**
     * Monitor a single source
     */
    )
  }, {
    key: "monitorSource",
    value: (function () {
      var _monitorSource = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(source)
      /* istanbul ignore next */
      {
        var _this2 = this;
        var startTime, tweets, classifications, transferTweets, highConfidenceTweets, _iterator2, _step2, _step2$value, tweet, classification, _t3, _t4;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              cov_1ew7u42z74().f[5]++;
              startTime = (cov_1ew7u42z74().s[43]++, performance.now());
              cov_1ew7u42z74().s[44]++;
              _context2.p = 1;
              cov_1ew7u42z74().s[45]++;
              _context2.n = 2;
              return this.fetchSourceTweets(source);
            case 2:
              tweets = _context2.v;
              // Classify each tweet for transfer relevance
              classifications = (cov_1ew7u42z74().s[46]++, tweets.map(function (tweet) {
                /* istanbul ignore next */
                cov_1ew7u42z74().f[6]++;
                cov_1ew7u42z74().s[47]++;
                return {
                  tweet: tweet,
                  classification: classifyTransferContent(tweet)
                };
              })); // Filter by confidence threshold
              transferTweets = (cov_1ew7u42z74().s[48]++, classifications.filter(function (
              /* istanbul ignore next */
              _ref) {
                /* istanbul ignore next */
                var classification = _ref.classification;
                /* istanbul ignore next */
                cov_1ew7u42z74().f[7]++;
                cov_1ew7u42z74().s[49]++;
                return /* istanbul ignore next */(cov_1ew7u42z74().b[6][0]++, classification.isTransferRelated) &&
                /* istanbul ignore next */
                (cov_1ew7u42z74().b[6][1]++, classification.confidence >= _this2.config.minConfidenceThreshold);
              }));
              highConfidenceTweets = (cov_1ew7u42z74().s[50]++, transferTweets.filter(function (
              /* istanbul ignore next */
              _ref2) {
                /* istanbul ignore next */
                var classification = _ref2.classification;
                /* istanbul ignore next */
                cov_1ew7u42z74().f[8]++;
                cov_1ew7u42z74().s[51]++;
                return classification.confidence >= 0.7;
              })); // Process high-confidence transfer tweets (send to feed)
              cov_1ew7u42z74().s[52]++;
              _iterator2 = _createForOfIteratorHelper(transferTweets);
              _context2.p = 3;
              _iterator2.s();
            case 4:
              if ((_step2 = _iterator2.n()).done) {
                _context2.n = 6;
                break;
              }
              _step2$value = _step2.value, tweet = _step2$value.tweet, classification = _step2$value.classification;
              cov_1ew7u42z74().s[53]++;
              _context2.n = 5;
              return this.procesTransferTweet(tweet, classification, source);
            case 5:
              _context2.n = 4;
              break;
            case 6:
              _context2.n = 8;
              break;
            case 7:
              _context2.p = 7;
              _t3 = _context2.v;
              _iterator2.e(_t3);
            case 8:
              _context2.p = 8;
              _iterator2.f();
              return _context2.f(8);
            case 9:
              cov_1ew7u42z74().s[54]++;
              return _context2.a(2, {
                sourceId: source.id,
                sourceName: source.name,
                tweetsChecked: tweets.length,
                transferTweets: transferTweets.length,
                highConfidenceTweets: highConfidenceTweets.length,
                errors: [],
                timeMs: Math.round(performance.now() - startTime)
              });
            case 10:
              _context2.p = 10;
              _t4 = _context2.v;
              cov_1ew7u42z74().s[55]++;
              return _context2.a(2, {
                sourceId: source.id,
                sourceName: source.name,
                tweetsChecked: 0,
                transferTweets: 0,
                highConfidenceTweets: 0,
                errors: [
                /* istanbul ignore next */
                _t4 instanceof Error ?
                /* istanbul ignore next */
                (cov_1ew7u42z74().b[7][0]++,
                /* istanbul ignore next */
                _t4.message) :
                /* istanbul ignore next */
                (cov_1ew7u42z74().b[7][1]++, 'Unknown error')],
                timeMs: Math.round(performance.now() - startTime)
              });
          }
        }, _callee2, this, [[3, 7, 8, 9], [1, 10]]);
      }));
      function monitorSource(_x) {
        return _monitorSource.apply(this, arguments);
      }
      return monitorSource;
    }()
    /**
     * Fetch tweets from a specific source
     * This would integrate with Twitter API v2 in production
     */
    )
  }, {
    key: "fetchSourceTweets",
    value: (function () {
      var _fetchSourceTweets = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3(source)
      /* istanbul ignore next */
      {
        var mockTweets, mockRateLimit;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              cov_1ew7u42z74().f[9]++;
              // In development, return mock tweets
              // In production, this would call Twitter API v2
              mockTweets = (cov_1ew7u42z74().s[56]++, this.generateMockTweets(source)); // Simulate API rate limit response
              mockRateLimit = (cov_1ew7u42z74().s[57]++, {
                remaining: Math.floor(Math.random() * 100) + 50,
                resetTime: new Date(Date.now() + 15 * 60 * 1000) // 15 minutes
              });
              cov_1ew7u42z74().s[58]++;
              updateSourceRateLimit(source.id, mockRateLimit.remaining, mockRateLimit.resetTime);
              cov_1ew7u42z74().s[59]++;
              return _context3.a(2, mockTweets);
          }
        }, _callee3, this);
      }));
      function fetchSourceTweets(_x2) {
        return _fetchSourceTweets.apply(this, arguments);
      }
      return fetchSourceTweets;
    }()
    /**
     * Generate mock tweets for development
     */
    )
  }, {
    key: "generateMockTweets",
    value: function generateMockTweets(source) {
      /* istanbul ignore next */
      cov_1ew7u42z74().f[10]++;
      var count =
      /* istanbul ignore next */
      (cov_1ew7u42z74().s[60]++, Math.floor(Math.random() * this.config.maxTweetsPerSource) + 5);
      var tweets =
      /* istanbul ignore next */
      (cov_1ew7u42z74().s[61]++, []);
      var transferTemplates =
      /* istanbul ignore next */
      (cov_1ew7u42z74().s[62]++, {
        en: ['🚨 BREAKING: {club} agree €{fee}M fee for {player}! Medical scheduled for tomorrow. Here we go! ✅', 'Personal terms agreed between {player} and {club}. Club-to-club negotiations ongoing for final fee structure.', '{club} officials confident about completing {player} signing within 48-72 hours.', 'EXCLUSIVE: {player} has already agreed personal terms with {club}. Just waiting for clubs to finalize deal.'],
        es: ['🚨 ÚLTIMA HORA: {club} acuerda {fee}M€ por {player}! Reconocimiento médico programado. ¡Hecho! ✅', 'Términos personales acordados entre {player} y {club}. Negociaciones en curso para la estructura final.', '{club} confía en completar el fichaje de {player} en las próximas 48-72 horas.', 'EXCLUSIVA: {player} ya acordó términos personales con {club}. Solo esperan finalizar entre clubes.'],
        it: ['🚨 ULTIMA ORA: {club} accordo da {fee}M€ per {player}! Visite mediche programmate. Fatto! ✅', 'Accordo personale tra {player} e {club}. Trattative in corso per la struttura finale.', '{club} fiducioso di completare {player} nelle prossime 48-72 ore.', 'ESCLUSIVA: {player} ha già concordato i termini personali con {club}. Si aspetta solo la chiusura.'],
        fr: ['🚨 DERNIÈRE MINUTE: {club} accord de {fee}M€ pour {player}! Visite médicale programmée. Fait! ✅', 'Accord personnel entre {player} et {club}. Négociations en cours pour la structure finale.', '{club} confiant de finaliser {player} dans les 48-72 prochaines heures.', 'EXCLUSIF: {player} a déjà convenu des termes personnels avec {club}. Attente de la finalisation.'],
        de: ['🚨 EILMELDUNG: {club} Einigung über {fee}M€ für {player}! Medizincheck geplant. Gemacht! ✅', 'Persönliche Bedingungen zwischen {player} und {club} vereinbart. Verhandlungen laufen.', '{club} zuversichtlich {player} in den nächsten 48-72 Stunden zu vervollständigen.', 'EXKLUSIV: {player} hat bereits persönliche Bedingungen mit {club} vereinbart.'],
        pt: ['🚨 ÚLTIMA HORA: {club} acordo de {fee}M€ por {player}! Exames médicos agendados. Feito! ✅', 'Termos pessoais acordados entre {player} e {club}. Negociações em andamento.', '{club} confiante em completar {player} nas próximas 48-72 horas.', 'EXCLUSIVO: {player} já acordou termos pessoais com {club}. Aguardando finalização.']
      });
      var players =
      /* istanbul ignore next */
      (cov_1ew7u42z74().s[63]++, ['Haaland', 'Mbappe', 'Bellingham', 'Vinicius Jr', 'Pedri', 'Musiala']);
      var clubs =
      /* istanbul ignore next */
      (cov_1ew7u42z74().s[64]++, ['Arsenal', 'Chelsea', 'Real Madrid', 'Barcelona', 'Bayern Munich', 'PSG']);
      /* istanbul ignore next */
      cov_1ew7u42z74().s[65]++;
      for (var i =
      /* istanbul ignore next */
      (cov_1ew7u42z74().s[66]++, 0); i < count; i++) {
        var templates =
        /* istanbul ignore next */
        (cov_1ew7u42z74().s[67]++, transferTemplates[source.language]);
        var template =
        /* istanbul ignore next */
        (cov_1ew7u42z74().s[68]++, templates[Math.floor(Math.random() * templates.length)]);
        var text =
        /* istanbul ignore next */
        (cov_1ew7u42z74().s[69]++, template.replace('{club}', clubs[Math.floor(Math.random() * clubs.length)]).replace('{player}', players[Math.floor(Math.random() * players.length)]).replace('{fee}', (Math.floor(Math.random() * 100) + 20).toString()));
        /* istanbul ignore next */
        cov_1ew7u42z74().s[70]++;
        tweets.push({
          id:
          /* istanbul ignore next */
          "tweet-".concat(source.id, "-").concat(i, "-").concat(Date.now()),
          text: text,
          author: {
            username: source.handle.replace('@', ''),
            displayName: source.name
          },
          createdAt: new Date(Date.now() - Math.random() * 3600000).toISOString(),
          // Random time in last hour
          lang: source.language,
          metrics: {
            retweets: Math.floor(Math.random() * 500),
            likes: Math.floor(Math.random() * 2000),
            replies: Math.floor(Math.random() * 200)
          }
        });
      }
      /* istanbul ignore next */
      cov_1ew7u42z74().s[71]++;
      return tweets;
    }

    /**
     * Process a transfer tweet (send to feed store)
     */
  }, {
    key: "procesTransferTweet",
    value: (function () {
      var _procesTransferTweet = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4(tweet, classification, source)
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_1ew7u42z74().f[11]++;
              cov_1ew7u42z74().s[72]++;
              // This would integrate with the feed store to add new items
              // For now, just log the processed tweet
              console.log(
              /* istanbul ignore next */
              "\uD83D\uDCDD Processing transfer tweet from ".concat(source.name, ":"), {
                confidence: classification.confidence,
                type: classification.transferType,
                keywords: classification.keywords.join(', ')
              });

              // In production, this would call:
              // const feedStore = useFeedStore.getState();
              // feedStore.addItem(convertTweetToFeedItem(tweet, classification, source));
            case 1:
              return _context4.a(2);
          }
        }, _callee4);
      }));
      function procesTransferTweet(_x3, _x4, _x5) {
        return _procesTransferTweet.apply(this, arguments);
      }
      return procesTransferTweet;
    }()
    /**
     * Get sources eligible for monitoring based on config
     */
    )
  }, {
    key: "getEligibleSources",
    value: function getEligibleSources() {
      /* istanbul ignore next */
      var _this3 = this;
      cov_1ew7u42z74().f[12]++;
      cov_1ew7u42z74().s[73]++;
      return getMonitoringPriority().filter(function (source) {
        /* istanbul ignore next */
        cov_1ew7u42z74().f[13]++;
        cov_1ew7u42z74().s[74]++;
        return /* istanbul ignore next */(cov_1ew7u42z74().b[8][0]++, _this3.config.enabledRegions.includes(source.region)) &&
        /* istanbul ignore next */
        (cov_1ew7u42z74().b[8][1]++, _this3.config.enabledTiers.includes(source.tier));
      });
    }

    /**
     * Calculate global monitoring statistics
     */
  }, {
    key: "calculateGlobalStats",
    value: function calculateGlobalStats(results, errors, processingTimeMs) {
      /* istanbul ignore next */
      cov_1ew7u42z74().f[14]++;
      var totalTweetsChecked =
      /* istanbul ignore next */
      (cov_1ew7u42z74().s[75]++, results.reduce(function (sum, r) {
        /* istanbul ignore next */
        cov_1ew7u42z74().f[15]++;
        cov_1ew7u42z74().s[76]++;
        return sum + r.tweetsChecked;
      }, 0));
      var totalTransferTweets =
      /* istanbul ignore next */
      (cov_1ew7u42z74().s[77]++, results.reduce(function (sum, r) {
        /* istanbul ignore next */
        cov_1ew7u42z74().f[16]++;
        cov_1ew7u42z74().s[78]++;
        return sum + r.transferTweets;
      }, 0));
      var sources =
      /* istanbul ignore next */
      (cov_1ew7u42z74().s[79]++, this.getEligibleSources());
      var activeSources =
      /* istanbul ignore next */
      (cov_1ew7u42z74().s[80]++, sources.filter(function (s) {
        /* istanbul ignore next */
        cov_1ew7u42z74().f[17]++;
        cov_1ew7u42z74().s[81]++;
        return !isSourceRateLimited(s.id);
      }).length);
      var rateLimitedSources =
      /* istanbul ignore next */
      (cov_1ew7u42z74().s[82]++, sources.length - activeSources);
      var regionStats =
      /* istanbul ignore next */
      (cov_1ew7u42z74().s[83]++, sources.reduce(function (acc, source) {
        /* istanbul ignore next */
        cov_1ew7u42z74().f[18]++;
        var result =
        /* istanbul ignore next */
        (cov_1ew7u42z74().s[84]++, results.find(function (r) {
          /* istanbul ignore next */
          cov_1ew7u42z74().f[19]++;
          cov_1ew7u42z74().s[85]++;
          return r.sourceId === source.id;
        }));
        /* istanbul ignore next */
        cov_1ew7u42z74().s[86]++;
        if (!acc[source.region]) {
          /* istanbul ignore next */
          cov_1ew7u42z74().b[9][0]++;
          cov_1ew7u42z74().s[87]++;
          acc[source.region] = {
            sources: 0,
            tweets: 0,
            transfers: 0
          };
        } else
        /* istanbul ignore next */
        {
          cov_1ew7u42z74().b[9][1]++;
        }
        cov_1ew7u42z74().s[88]++;
        acc[source.region].sources += 1;
        /* istanbul ignore next */
        cov_1ew7u42z74().s[89]++;
        if (result) {
          /* istanbul ignore next */
          cov_1ew7u42z74().b[10][0]++;
          cov_1ew7u42z74().s[90]++;
          acc[source.region].tweets += result.tweetsChecked;
          /* istanbul ignore next */
          cov_1ew7u42z74().s[91]++;
          acc[source.region].transfers += result.transferTweets;
        } else
        /* istanbul ignore next */
        {
          cov_1ew7u42z74().b[10][1]++;
        }
        cov_1ew7u42z74().s[92]++;
        return acc;
      }, {}));
      var languageStats =
      /* istanbul ignore next */
      (cov_1ew7u42z74().s[93]++, sources.reduce(function (acc, source) {
        /* istanbul ignore next */
        cov_1ew7u42z74().f[20]++;
        cov_1ew7u42z74().s[94]++;
        acc[source.language] = (
        /* istanbul ignore next */
        (cov_1ew7u42z74().b[11][0]++, acc[source.language]) ||
        /* istanbul ignore next */
        (cov_1ew7u42z74().b[11][1]++, 0)) + 1;
        /* istanbul ignore next */
        cov_1ew7u42z74().s[95]++;
        return acc;
      }, {}));
      /* istanbul ignore next */
      cov_1ew7u42z74().s[96]++;
      return {
        totalSources: sources.length,
        activeSources: activeSources,
        rateLimitedSources: rateLimitedSources,
        totalTweetsChecked: totalTweetsChecked,
        totalTransferTweets: totalTransferTweets,
        averageConfidence: totalTransferTweets > 0 ?
        /* istanbul ignore next */
        (cov_1ew7u42z74().b[12][0]++, Math.round(totalTransferTweets / totalTweetsChecked * 100)) :
        /* istanbul ignore next */
        (cov_1ew7u42z74().b[12][1]++, 0),
        processingTimeMs: Math.round(processingTimeMs),
        errors: errors,
        regionStats: regionStats,
        languageStats: languageStats
      };
    }

    /**
     * Utility function for delays
     */
  }, {
    key: "sleep",
    value: function sleep(ms) {
      /* istanbul ignore next */
      cov_1ew7u42z74().f[21]++;
      cov_1ew7u42z74().s[97]++;
      return new Promise(function (resolve) {
        /* istanbul ignore next */
        cov_1ew7u42z74().f[22]++;
        cov_1ew7u42z74().s[98]++;
        return setTimeout(resolve, ms);
      });
    }

    /**
     * Get current monitoring status
     */
  }, {
    key: "getStatus",
    value: function getStatus() {
      /* istanbul ignore next */
      cov_1ew7u42z74().f[23]++;
      cov_1ew7u42z74().s[99]++;
      return {
        isRunning: this.isRunning,
        lastRunTime: this.lastRunTime,
        config: this.config,
        eligibleSources: this.getEligibleSources().length
      };
    }

    /**
     * Update monitoring configuration
     */
  }, {
    key: "updateConfig",
    value: function updateConfig(newConfig) {
      /* istanbul ignore next */
      cov_1ew7u42z74().f[24]++;
      cov_1ew7u42z74().s[100]++;
      this.config =
      /* istanbul ignore next */
      _objectSpread(_objectSpread({}, this.config), newConfig);
      /* istanbul ignore next */
      cov_1ew7u42z74().s[101]++;
      console.log('🔧 Updated monitoring config:', this.config);
    }
  }]);
}();

// Export singleton instance
export var globalMonitor =
/* istanbul ignore next */
(cov_1ew7u42z74().s[102]++, new GlobalITKMonitor());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,