fdc18160e55cfed9e1e0134a5b27d6eb
/* istanbul ignore next */
function cov_18pouekgdh() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/components/briefings/PolaroidFrame.tsx";
  var hash = "3389cc9959933cb1c58089a9936f36ee08cfa234";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/components/briefings/PolaroidFrame.tsx",
    statementMap: {
      "0": {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 61,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "PolaroidFrame",
        decl: {
          start: {
            line: 20,
            column: 16
          },
          end: {
            line: 20,
            column: 29
          }
        },
        loc: {
          start: {
            line: 26,
            column: 23
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 26
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 2
          },
          end: {
            line: 24,
            column: 11
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 24,
            column: 10
          },
          end: {
            line: 24,
            column: 11
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 25,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 14
          },
          end: {
            line: 25,
            column: 16
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 11
          },
          end: {
            line: 48,
            column: 11
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 11
          },
          end: {
            line: 44,
            column: 18
          }
        }, {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 47,
            column: 16
          }
        }],
        line: 44
      }
    },
    s: {
      "0": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3389cc9959933cb1c58089a9936f36ee08cfa234"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18pouekgdh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18pouekgdh();
/**
 * Polaroid Frame Component
 * Instagram-style instant photo frames with captions
 */

import React from "react";
import Image from "next/image";
/* istanbul ignore next */
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export function PolaroidFrame(
/* istanbul ignore next */
_ref) {
  /* istanbul ignore next */
  var image = _ref.image,
    caption = _ref.caption,
    timestamp = _ref.timestamp,
    _ref$angle = _ref.angle,
    angle = _ref$angle === void 0 ? (cov_18pouekgdh().b[0][0]++, 0) : _ref$angle,
    _ref$className = _ref.className,
    className = _ref$className === void 0 ? (cov_18pouekgdh().b[1][0]++, "") : _ref$className;
  /* istanbul ignore next */
  cov_18pouekgdh().f[0]++;
  cov_18pouekgdh().s[0]++;
  return /*#__PURE__*/ /* istanbul ignore next */_jsx(
  /* istanbul ignore next */
  "div",
  /* istanbul ignore next */
  {
    className:
    /* istanbul ignore next */
    "inline-block ".concat(className),
    style: {
      transform:
      /* istanbul ignore next */
      "rotate(".concat(angle, "deg)")
    },
    children: /*#__PURE__*/
    /* istanbul ignore next */
    _jsxs(
    /* istanbul ignore next */
    "div",
    /* istanbul ignore next */
    {
      className: "bg-white p-3 shadow-xl",
      children: [/*#__PURE__*/
      /* istanbul ignore next */
      _jsx(
      /* istanbul ignore next */
      "div",
      /* istanbul ignore next */
      {
        className: "relative w-64 h-64 bg-zinc-100",
        children: /*#__PURE__*/
        /* istanbul ignore next */
        _jsx(Image,
        /* istanbul ignore next */
        {
          src: image.url,
          alt: image.altText,
          fill:
          /* istanbul ignore next */
          true,
          className: "object-cover",
          sizes: "256px"
        })
      }), /*#__PURE__*/
      /* istanbul ignore next */
      _jsxs(
      /* istanbul ignore next */
      "div",
      /* istanbul ignore next */
      {
        className: "mt-3 space-y-1",
        children: [
        /* istanbul ignore next */
        (cov_18pouekgdh().b[2][0]++, caption) &&
        /* istanbul ignore next */
        (cov_18pouekgdh().b[2][1]++, /*#__PURE__*/
        /* istanbul ignore next */
        _jsx(
        /* istanbul ignore next */
        "p",
        /* istanbul ignore next */
        {
          className: "text-sm text-black font-handwriting text-center px-2",
          children: caption
        })), /*#__PURE__*/
        /* istanbul ignore next */
        _jsx(
        /* istanbul ignore next */
        "time",
        /* istanbul ignore next */
        {
          className: "block text-xs text-gray-600 text-center",
          children: timestamp.toLocaleDateString("en-GB", {
            day: "numeric",
            month: "short",
            hour: "2-digit",
            minute: "2-digit"
          })
        })]
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMThwb3Vla2dkaCIsImFjdHVhbENvdmVyYWdlIiwiUmVhY3QiLCJJbWFnZSIsImpzeCIsIl9qc3giLCJqc3hzIiwiX2pzeHMiLCJQb2xhcm9pZEZyYW1lIiwiX3JlZiIsImltYWdlIiwiY2FwdGlvbiIsInRpbWVzdGFtcCIsIl9yZWYkYW5nbGUiLCJhbmdsZSIsImIiLCJfcmVmJGNsYXNzTmFtZSIsImNsYXNzTmFtZSIsImYiLCJzIiwiY29uY2F0Iiwic3R5bGUiLCJ0cmFuc2Zvcm0iLCJjaGlsZHJlbiIsInNyYyIsInVybCIsImFsdCIsImFsdFRleHQiLCJmaWxsIiwic2l6ZXMiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJkYXkiLCJtb250aCIsImhvdXIiLCJtaW51dGUiXSwic291cmNlcyI6WyJQb2xhcm9pZEZyYW1lLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFBvbGFyb2lkIEZyYW1lIENvbXBvbmVudFxuICogSW5zdGFncmFtLXN0eWxlIGluc3RhbnQgcGhvdG8gZnJhbWVzIHdpdGggY2FwdGlvbnNcbiAqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgSW1hZ2UgZnJvbSBcIm5leHQvaW1hZ2VcIjtcblxuaW50ZXJmYWNlIFBvbGFyb2lkRnJhbWVQcm9wcyB7XG4gIGltYWdlOiB7XG4gICAgdXJsOiBzdHJpbmc7XG4gICAgYWx0VGV4dDogc3RyaW5nO1xuICB9O1xuICBjYXB0aW9uPzogc3RyaW5nO1xuICB0aW1lc3RhbXA6IERhdGU7XG4gIGFuZ2xlPzogbnVtYmVyO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBQb2xhcm9pZEZyYW1lKHtcbiAgaW1hZ2UsXG4gIGNhcHRpb24sXG4gIHRpbWVzdGFtcCxcbiAgYW5nbGUgPSAwLFxuICBjbGFzc05hbWUgPSBcIlwiLFxufTogUG9sYXJvaWRGcmFtZVByb3BzKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY2xhc3NOYW1lPXtgaW5saW5lLWJsb2NrICR7Y2xhc3NOYW1lfWB9XG4gICAgICBzdHlsZT17eyB0cmFuc2Zvcm06IGByb3RhdGUoJHthbmdsZX1kZWcpYCB9fVxuICAgID5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmctd2hpdGUgcC0zIHNoYWRvdy14bFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlbGF0aXZlIHctNjQgaC02NCBiZy16aW5jLTEwMFwiPlxuICAgICAgICAgIDxJbWFnZVxuICAgICAgICAgICAgc3JjPXtpbWFnZS51cmx9XG4gICAgICAgICAgICBhbHQ9e2ltYWdlLmFsdFRleHR9XG4gICAgICAgICAgICBmaWxsXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJvYmplY3QtY292ZXJcIlxuICAgICAgICAgICAgc2l6ZXM9XCIyNTZweFwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtdC0zIHNwYWNlLXktMVwiPlxuICAgICAgICAgIHtjYXB0aW9uICYmIChcbiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ibGFjayBmb250LWhhbmR3cml0aW5nIHRleHQtY2VudGVyIHB4LTJcIj5cbiAgICAgICAgICAgICAge2NhcHRpb259XG4gICAgICAgICAgICA8L3A+XG4gICAgICAgICAgKX1cblxuICAgICAgICAgIDx0aW1lIGNsYXNzTmFtZT1cImJsb2NrIHRleHQteHMgdGV4dC1ncmF5LTYwMCB0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAge3RpbWVzdGFtcC50b0xvY2FsZURhdGVTdHJpbmcoXCJlbi1HQlwiLCB7XG4gICAgICAgICAgICAgIGRheTogXCJudW1lcmljXCIsXG4gICAgICAgICAgICAgIG1vbnRoOiBcInNob3J0XCIsXG4gICAgICAgICAgICAgIGhvdXI6IFwiMi1kaWdpdFwiLFxuICAgICAgICAgICAgICBtaW51dGU6IFwiMi1kaWdpdFwiLFxuICAgICAgICAgICAgfSl9XG4gICAgICAgICAgPC90aW1lPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWVZO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7QUFmWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxPQUFPRSxLQUFLLE1BQU0sT0FBTztBQUN6QixPQUFPQyxLQUFLLE1BQU0sWUFBWTtBQUFDO0FBQUEsU0FBQUMsR0FBQSxJQUFBQyxJQUFBLEVBQUFDLElBQUEsSUFBQUMsS0FBQTtBQWEvQixPQUFPLFNBQVNDLGFBQWFBO0FBQUE7QUFBQUMsSUFBQSxFQU1OO0VBQUE7RUFBQSxJQUxyQkMsS0FBSyxHQUFBRCxJQUFBLENBQUxDLEtBQUs7SUFDTEMsT0FBTyxHQUFBRixJQUFBLENBQVBFLE9BQU87SUFDUEMsU0FBUyxHQUFBSCxJQUFBLENBQVRHLFNBQVM7SUFBQUMsVUFBQSxHQUFBSixJQUFBLENBQ1RLLEtBQUs7SUFBTEEsS0FBSyxHQUFBRCxVQUFBLGVBQUFiLGNBQUEsR0FBQWUsQ0FBQSxVQUFHLENBQUMsSUFBQUYsVUFBQTtJQUFBRyxjQUFBLEdBQUFQLElBQUEsQ0FDVFEsU0FBUztJQUFUQSxTQUFTLEdBQUFELGNBQUEsZUFBQWhCLGNBQUEsR0FBQWUsQ0FBQSxVQUFHLEVBQUUsSUFBQUMsY0FBQTtFQUFBO0VBQUFoQixjQUFBLEdBQUFrQixDQUFBO0VBQUFsQixjQUFBLEdBQUFtQixDQUFBO0VBRWQsb0JBQ0UsMkJBQUFkLElBQUE7RUFBQTtFQUFBO0VBQUE7RUFBQTtJQUNFWSxTQUFTO0lBQUE7SUFBQSxnQkFBQUcsTUFBQSxDQUFrQkgsU0FBUyxDQUFHO0lBQ3ZDSSxLQUFLLEVBQUU7TUFBRUMsU0FBUztNQUFBO01BQUEsVUFBQUYsTUFBQSxDQUFZTixLQUFLO0lBQU8sQ0FBRTtJQUFBUyxRQUFBO0lBRTVDO0lBQUFoQixLQUFBO0lBQUE7SUFBQTtJQUFBO0lBQUE7TUFBS1UsU0FBUyxFQUFDLHdCQUF3QjtNQUFBTSxRQUFBO01BQ3JDO01BQUFsQixJQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7UUFBS1ksU0FBUyxFQUFDLGdDQUFnQztRQUFBTSxRQUFBO1FBQzdDO1FBQUFsQixJQUFBLENBQUNGLEtBQUs7UUFBQTtRQUFBO1VBQ0pxQixHQUFHLEVBQUVkLEtBQUssQ0FBQ2UsR0FBSTtVQUNmQyxHQUFHLEVBQUVoQixLQUFLLENBQUNpQixPQUFRO1VBQ25CQyxJQUFJO1VBQUE7VUFBQTtVQUNKWCxTQUFTLEVBQUMsY0FBYztVQUN4QlksS0FBSyxFQUFDO1FBQU8sQ0FDZDtNQUFDLENBQ0MsQ0FBQztNQUVOO01BQUF0QixLQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7UUFBS1UsU0FBUyxFQUFDLGdCQUFnQjtRQUFBTSxRQUFBO1FBQzVCO1FBQUEsQ0FBQXZCLGNBQUEsR0FBQWUsQ0FBQSxVQUFBSixPQUFPO1FBQUE7UUFBQSxDQUFBWCxjQUFBLEdBQUFlLENBQUE7UUFDTjtRQUFBVixJQUFBO1FBQUE7UUFBQTtRQUFBO1FBQUE7VUFBR1ksU0FBUyxFQUFDLHNEQUFzRDtVQUFBTSxRQUFBLEVBQ2hFWjtRQUFPLENBQ1AsQ0FBQyxDQUNMO1FBRUQ7UUFBQU4sSUFBQTtRQUFBO1FBQUE7UUFBQTtRQUFBO1VBQU1ZLFNBQVMsRUFBQyx5Q0FBeUM7VUFBQU0sUUFBQSxFQUN0RFgsU0FBUyxDQUFDa0Isa0JBQWtCLENBQUMsT0FBTyxFQUFFO1lBQ3JDQyxHQUFHLEVBQUUsU0FBUztZQUNkQyxLQUFLLEVBQUUsT0FBTztZQUNkQyxJQUFJLEVBQUUsU0FBUztZQUNmQyxNQUFNLEVBQUU7VUFDVixDQUFDO1FBQUMsQ0FDRSxDQUFDO01BQUEsQ0FDSixDQUFDO0lBQUEsQ0FDSDtFQUFDLENBQ0gsQ0FBQztBQUVWIiwiaWdub3JlTGlzdCI6W119