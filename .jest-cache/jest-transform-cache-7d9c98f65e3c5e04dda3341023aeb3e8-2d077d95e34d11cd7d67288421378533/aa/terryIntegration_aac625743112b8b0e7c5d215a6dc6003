309959afb4bab74cbea13e972a997b09
/* istanbul ignore next */
function cov_5apne68yn() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/ai/terryIntegration.ts";
  var hash = "e6ad96ebed44776722ea6cc85911c4916a9701f1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/ai/terryIntegration.ts",
    statementMap: {
      "0": {
        start: {
          line: 68,
          column: 66
        },
        end: {
          line: 75,
          column: 1
        }
      },
      "1": {
        start: {
          line: 84,
          column: 59
        },
        end: {
          line: 84,
          column: 68
        }
      },
      "2": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 25
        }
      },
      "3": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 57
        }
      },
      "4": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 50
        }
      },
      "5": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "6": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 102,
          column: 19
        }
      },
      "7": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 105,
          column: 47
        }
      },
      "8": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "9": {
        start: {
          line: 109,
          column: 6
        },
        end: {
          line: 131,
          column: 7
        }
      },
      "10": {
        start: {
          line: 110,
          column: 26
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "11": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 116,
          column: 14
        }
      },
      "12": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 55
        }
      },
      "13": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 59
        }
      },
      "14": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 20
        }
      },
      "15": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 130,
          column: 10
        }
      },
      "16": {
        start: {
          line: 133,
          column: 6
        },
        end: {
          line: 136,
          column: 8
        }
      },
      "17": {
        start: {
          line: 137,
          column: 6
        },
        end: {
          line: 137,
          column: 19
        }
      },
      "18": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 234,
          column: 5
        }
      },
      "19": {
        start: {
          line: 151,
          column: 31
        },
        end: {
          line: 155,
          column: 7
        }
      },
      "20": {
        start: {
          line: 157,
          column: 6
        },
        end: {
          line: 163,
          column: 7
        }
      },
      "21": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "22": {
        start: {
          line: 160,
          column: 10
        },
        end: {
          line: 160,
          column: 57
        }
      },
      "23": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 21
        }
      },
      "24": {
        start: {
          line: 166,
          column: 6
        },
        end: {
          line: 189,
          column: 7
        }
      },
      "25": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 52
        }
      },
      "26": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "27": {
        start: {
          line: 177,
          column: 10
        },
        end: {
          line: 179,
          column: 12
        }
      },
      "28": {
        start: {
          line: 180,
          column: 10
        },
        end: {
          line: 185,
          column: 12
        }
      },
      "29": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 21
        }
      },
      "30": {
        start: {
          line: 192,
          column: 6
        },
        end: {
          line: 192,
          column: 72
        }
      },
      "31": {
        start: {
          line: 195,
          column: 6
        },
        end: {
          line: 195,
          column: 51
        }
      },
      "32": {
        start: {
          line: 196,
          column: 6
        },
        end: {
          line: 200,
          column: 51
        }
      },
      "33": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 205,
          column: 51
        }
      },
      "34": {
        start: {
          line: 207,
          column: 6
        },
        end: {
          line: 209,
          column: 8
        }
      },
      "35": {
        start: {
          line: 210,
          column: 6
        },
        end: {
          line: 210,
          column: 18
        }
      },
      "36": {
        start: {
          line: 212,
          column: 6
        },
        end: {
          line: 215,
          column: 8
        }
      },
      "37": {
        start: {
          line: 218,
          column: 6
        },
        end: {
          line: 231,
          column: 7
        }
      },
      "38": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 224,
          column: 10
        }
      },
      "39": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 230,
          column: 10
        }
      },
      "40": {
        start: {
          line: 233,
          column: 6
        },
        end: {
          line: 233,
          column: 19
        }
      },
      "41": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 247,
          column: 6
        }
      },
      "42": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 275,
          column: 72
        }
      },
      "43": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 291,
          column: 5
        }
      },
      "44": {
        start: {
          line: 290,
          column: 6
        },
        end: {
          line: 290,
          column: 15
        }
      },
      "45": {
        start: {
          line: 293,
          column: 23
        },
        end: {
          line: 293,
          column: 24
        }
      },
      "46": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 309,
          column: 5
        }
      },
      "47": {
        start: {
          line: 296,
          column: 22
        },
        end: {
          line: 301,
          column: 7
        }
      },
      "48": {
        start: {
          line: 303,
          column: 6
        },
        end: {
          line: 305,
          column: 7
        }
      },
      "49": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 23
        }
      },
      "50": {
        start: {
          line: 308,
          column: 6
        },
        end: {
          line: 308,
          column: 28
        }
      },
      "51": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 313,
          column: 6
        }
      },
      "52": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 314,
          column: 24
        }
      },
      "53": {
        start: {
          line: 324,
          column: 4
        },
        end: {
          line: 326,
          column: 5
        }
      },
      "54": {
        start: {
          line: 325,
          column: 6
        },
        end: {
          line: 325,
          column: 19
        }
      },
      "55": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 352,
          column: 5
        }
      },
      "56": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 333,
          column: 9
        }
      },
      "57": {
        start: {
          line: 335,
          column: 6
        },
        end: {
          line: 337,
          column: 7
        }
      },
      "58": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 336,
          column: 21
        }
      },
      "59": {
        start: {
          line: 340,
          column: 6
        },
        end: {
          line: 340,
          column: 74
        }
      },
      "60": {
        start: {
          line: 342,
          column: 6
        },
        end: {
          line: 344,
          column: 8
        }
      },
      "61": {
        start: {
          line: 345,
          column: 6
        },
        end: {
          line: 345,
          column: 18
        }
      },
      "62": {
        start: {
          line: 347,
          column: 6
        },
        end: {
          line: 350,
          column: 8
        }
      },
      "63": {
        start: {
          line: 351,
          column: 6
        },
        end: {
          line: 351,
          column: 19
        }
      },
      "64": {
        start: {
          line: 359,
          column: 22
        },
        end: {
          line: 359,
          column: 60
        }
      },
      "65": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 364,
          column: 5
        }
      },
      "66": {
        start: {
          line: 361,
          column: 6
        },
        end: {
          line: 361,
          column: 30
        }
      },
      "67": {
        start: {
          line: 362,
          column: 6
        },
        end: {
          line: 362,
          column: 48
        }
      },
      "68": {
        start: {
          line: 363,
          column: 6
        },
        end: {
          line: 363,
          column: 76
        }
      },
      "69": {
        start: {
          line: 372,
          column: 6
        },
        end: {
          line: 376,
          column: 11
        }
      },
      "70": {
        start: {
          line: 378,
          column: 4
        },
        end: {
          line: 382,
          column: 6
        }
      },
      "71": {
        start: {
          line: 389,
          column: 29
        },
        end: {
          line: 389,
          column: 44
        }
      },
      "72": {
        start: {
          line: 390,
          column: 32
        },
        end: {
          line: 390,
          column: 68
        }
      },
      "73": {
        start: {
          line: 391,
          column: 24
        },
        end: {
          line: 391,
          column: 52
        }
      },
      "74": {
        start: {
          line: 393,
          column: 4
        },
        end: {
          line: 398,
          column: 6
        }
      },
      "75": {
        start: {
          line: 405,
          column: 4
        },
        end: {
          line: 405,
          column: 51
        }
      },
      "76": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 406,
          column: 45
        }
      },
      "77": {
        start: {
          line: 407,
          column: 4
        },
        end: {
          line: 407,
          column: 69
        }
      },
      "78": {
        start: {
          line: 414,
          column: 4
        },
        end: {
          line: 414,
          column: 50
        }
      },
      "79": {
        start: {
          line: 415,
          column: 4
        },
        end: {
          line: 415,
          column: 52
        }
      },
      "80": {
        start: {
          line: 422,
          column: 4
        },
        end: {
          line: 430,
          column: 6
        }
      },
      "81": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 437,
          column: 61
        }
      },
      "82": {
        start: {
          line: 437,
          column: 36
        },
        end: {
          line: 437,
          column: 59
        }
      },
      "83": {
        start: {
          line: 445,
          column: 4
        },
        end: {
          line: 448,
          column: 5
        }
      },
      "84": {
        start: {
          line: 446,
          column: 6
        },
        end: {
          line: 446,
          column: 30
        }
      },
      "85": {
        start: {
          line: 447,
          column: 6
        },
        end: {
          line: 447,
          column: 72
        }
      },
      "86": {
        start: {
          line: 449,
          column: 4
        },
        end: {
          line: 449,
          column: 35
        }
      },
      "87": {
        start: {
          line: 454,
          column: 32
        },
        end: {
          line: 454,
          column: 54
        }
      },
      "88": {
        start: {
          line: 463,
          column: 34
        },
        end: {
          line: 473,
          column: 1
        }
      },
      "89": {
        start: {
          line: 468,
          column: 2
        },
        end: {
          line: 472,
          column: 4
        }
      },
      "90": {
        start: {
          line: 478,
          column: 36
        },
        end: {
          line: 483,
          column: 1
        }
      },
      "91": {
        start: {
          line: 482,
          column: 2
        },
        end: {
          line: 482,
          column: 78
        }
      },
      "92": {
        start: {
          line: 488,
          column: 29
        },
        end: {
          line: 490,
          column: 1
        }
      },
      "93": {
        start: {
          line: 489,
          column: 2
        },
        end: {
          line: 489,
          column: 37
        }
      },
      "94": {
        start: {
          line: 495,
          column: 33
        },
        end: {
          line: 497,
          column: 1
        }
      },
      "95": {
        start: {
          line: 496,
          column: 2
        },
        end: {
          line: 496,
          column: 49
        }
      },
      "96": {
        start: {
          line: 502,
          column: 33
        },
        end: {
          line: 504,
          column: 1
        }
      },
      "97": {
        start: {
          line: 503,
          column: 2
        },
        end: {
          line: 503,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 86,
            column: 2
          },
          end: {
            line: 86,
            column: 3
          }
        },
        loc: {
          start: {
            line: 86,
            column: 75
          },
          end: {
            line: 90,
            column: 3
          }
        },
        line: 86
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 95,
            column: 2
          },
          end: {
            line: 95,
            column: 3
          }
        },
        loc: {
          start: {
            line: 100,
            column: 22
          },
          end: {
            line: 139,
            column: 3
          }
        },
        line: 100
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 111,
            column: 10
          },
          end: {
            line: 111,
            column: 11
          }
        },
        loc: {
          start: {
            line: 111,
            column: 22
          },
          end: {
            line: 118,
            column: 11
          }
        },
        line: 111
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 144,
            column: 2
          },
          end: {
            line: 144,
            column: 3
          }
        },
        loc: {
          start: {
            line: 149,
            column: 22
          },
          end: {
            line: 235,
            column: 3
          }
        },
        line: 149
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 240,
            column: 2
          },
          end: {
            line: 240,
            column: 3
          }
        },
        loc: {
          start: {
            line: 243,
            column: 19
          },
          end: {
            line: 276,
            column: 3
          }
        },
        line: 243
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 281,
            column: 2
          },
          end: {
            line: 281,
            column: 3
          }
        },
        loc: {
          start: {
            line: 288,
            column: 21
          },
          end: {
            line: 315,
            column: 3
          }
        },
        line: 288
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 320,
            column: 2
          },
          end: {
            line: 320,
            column: 3
          }
        },
        loc: {
          start: {
            line: 323,
            column: 22
          },
          end: {
            line: 353,
            column: 3
          }
        },
        line: 323
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 358,
            column: 2
          },
          end: {
            line: 358,
            column: 3
          }
        },
        loc: {
          start: {
            line: 358,
            column: 59
          },
          end: {
            line: 365,
            column: 3
          }
        },
        line: 358
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 370,
            column: 2
          },
          end: {
            line: 370,
            column: 3
          }
        },
        loc: {
          start: {
            line: 370,
            column: 68
          },
          end: {
            line: 383,
            column: 3
          }
        },
        line: 370
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 388,
            column: 2
          },
          end: {
            line: 388,
            column: 3
          }
        },
        loc: {
          start: {
            line: 388,
            column: 32
          },
          end: {
            line: 399,
            column: 3
          }
        },
        line: 388
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 404,
            column: 2
          },
          end: {
            line: 404,
            column: 3
          }
        },
        loc: {
          start: {
            line: 404,
            column: 72
          },
          end: {
            line: 408,
            column: 3
          }
        },
        line: 404
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 413,
            column: 2
          },
          end: {
            line: 413,
            column: 3
          }
        },
        loc: {
          start: {
            line: 413,
            column: 28
          },
          end: {
            line: 416,
            column: 3
          }
        },
        line: 413
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 421,
            column: 2
          },
          end: {
            line: 421,
            column: 3
          }
        },
        loc: {
          start: {
            line: 421,
            column: 50
          },
          end: {
            line: 431,
            column: 3
          }
        },
        line: 421
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 436,
            column: 2
          },
          end: {
            line: 436,
            column: 3
          }
        },
        loc: {
          start: {
            line: 436,
            column: 43
          },
          end: {
            line: 438,
            column: 3
          }
        },
        line: 436
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 437,
            column: 23
          },
          end: {
            line: 437,
            column: 24
          }
        },
        loc: {
          start: {
            line: 437,
            column: 36
          },
          end: {
            line: 437,
            column: 59
          }
        },
        line: 437
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 443,
            column: 2
          },
          end: {
            line: 443,
            column: 3
          }
        },
        loc: {
          start: {
            line: 443,
            column: 25
          },
          end: {
            line: 450,
            column: 3
          }
        },
        line: 443
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 463,
            column: 34
          },
          end: {
            line: 463,
            column: 35
          }
        },
        loc: {
          start: {
            line: 467,
            column: 23
          },
          end: {
            line: 473,
            column: 1
          }
        },
        line: 467
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 478,
            column: 36
          },
          end: {
            line: 478,
            column: 37
          }
        },
        loc: {
          start: {
            line: 481,
            column: 23
          },
          end: {
            line: 483,
            column: 1
          }
        },
        line: 481
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 488,
            column: 29
          },
          end: {
            line: 488,
            column: 30
          }
        },
        loc: {
          start: {
            line: 488,
            column: 35
          },
          end: {
            line: 490,
            column: 1
          }
        },
        line: 488
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 495,
            column: 33
          },
          end: {
            line: 495,
            column: 34
          }
        },
        loc: {
          start: {
            line: 495,
            column: 39
          },
          end: {
            line: 497,
            column: 1
          }
        },
        line: 495
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 502,
            column: 33
          },
          end: {
            line: 502,
            column: 34
          }
        },
        loc: {
          start: {
            line: 502,
            column: 78
          },
          end: {
            line: 504,
            column: 1
          }
        },
        line: 502
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 86,
            column: 14
          },
          end: {
            line: 86,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 86,
            column: 47
          },
          end: {
            line: 86,
            column: 73
          }
        }],
        line: 86
      },
      "1": {
        loc: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "2": {
        loc: {
          start: {
            line: 109,
            column: 6
          },
          end: {
            line: 131,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 6
          },
          end: {
            line: 131,
            column: 7
          }
        }, {
          start: {
            line: 124,
            column: 13
          },
          end: {
            line: 131,
            column: 7
          }
        }],
        line: 109
      },
      "3": {
        loc: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 148,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 148,
            column: 25
          },
          end: {
            line: 148,
            column: 26
          }
        }],
        line: 148
      },
      "4": {
        loc: {
          start: {
            line: 157,
            column: 6
          },
          end: {
            line: 163,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 6
          },
          end: {
            line: 163,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "5": {
        loc: {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "6": {
        loc: {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 159,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 159,
            column: 37
          }
        }, {
          start: {
            line: 159,
            column: 41
          },
          end: {
            line: 159,
            column: 57
          }
        }],
        line: 159
      },
      "7": {
        loc: {
          start: {
            line: 166,
            column: 6
          },
          end: {
            line: 189,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 6
          },
          end: {
            line: 189,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "8": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "9": {
        loc: {
          start: {
            line: 174,
            column: 10
          },
          end: {
            line: 175,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 10
          },
          end: {
            line: 174,
            column: 43
          }
        }, {
          start: {
            line: 175,
            column: 10
          },
          end: {
            line: 175,
            column: 45
          }
        }],
        line: 174
      },
      "10": {
        loc: {
          start: {
            line: 218,
            column: 6
          },
          end: {
            line: 231,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 6
          },
          end: {
            line: 231,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "11": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 220,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 219,
            column: 41
          }
        }, {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 220,
            column: 43
          }
        }],
        line: 219
      },
      "12": {
        loc: {
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 291,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 291,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "13": {
        loc: {
          start: {
            line: 303,
            column: 6
          },
          end: {
            line: 305,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 6
          },
          end: {
            line: 305,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "14": {
        loc: {
          start: {
            line: 322,
            column: 4
          },
          end: {
            line: 322,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 322,
            column: 30
          },
          end: {
            line: 322,
            column: 34
          }
        }],
        line: 322
      },
      "15": {
        loc: {
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 324
      },
      "16": {
        loc: {
          start: {
            line: 335,
            column: 6
          },
          end: {
            line: 337,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 6
          },
          end: {
            line: 337,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "17": {
        loc: {
          start: {
            line: 360,
            column: 4
          },
          end: {
            line: 364,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 4
          },
          end: {
            line: 364,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "18": {
        loc: {
          start: {
            line: 372,
            column: 6
          },
          end: {
            line: 376,
            column: 11
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 373,
            column: 10
          },
          end: {
            line: 375,
            column: 13
          }
        }, {
          start: {
            line: 376,
            column: 10
          },
          end: {
            line: 376,
            column: 11
          }
        }],
        line: 372
      },
      "19": {
        loc: {
          start: {
            line: 480,
            column: 2
          },
          end: {
            line: 480,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 480,
            column: 28
          },
          end: {
            line: 480,
            column: 32
          }
        }],
        line: 480
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e6ad96ebed44776722ea6cc85911c4916a9701f1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_5apne68yn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_5apne68yn();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Terry Commentary Integration
 * Connects Terry's system with global monitoring and feed store
 */

// TODO: Fix circular dependency with feedStore
// import { useFeedStore, type FeedItem } from '@/lib/stores/feedStore';

// Temporary type to avoid circular dependency

import { TerryCommentarySystem, DEFAULT_TERRY_CONFIG } from './terryCommentarySystem';
// Default integration configuration
export var DEFAULT_INTEGRATION_CONFIG =
/* istanbul ignore next */
(cov_5apne68yn().s[0]++, _objectSpread(_objectSpread({}, DEFAULT_TERRY_CONFIG), {}, {
  enableRealTimeCommentary: true,
  enableBatchCommentary: true,
  commentaryDelay: 2,
  // 2-minute delay for natural feel
  retryFailedCommentary: true,
  maxRetries: 2
}));

/**
 * Terry Commentary Integration Class
 */
export
/* istanbul ignore next */
var TerryIntegration = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  TerryIntegration() {
    /* istanbul ignore next */
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_5apne68yn().b[0][0]++, DEFAULT_INTEGRATION_CONFIG);
    /* istanbul ignore next */
    _classCallCheck(this, TerryIntegration);
    _defineProperty(this, "pendingCommentary", (cov_5apne68yn().s[1]++, new Map()));
    /* istanbul ignore next */
    cov_5apne68yn().f[0]++;
    cov_5apne68yn().s[2]++;
    this.config = config;
    /* istanbul ignore next */
    cov_5apne68yn().s[3]++;
    this.terrySystem = new TerryCommentarySystem(config);
    /* istanbul ignore next */
    cov_5apne68yn().s[4]++;
    this.processingStats = this.initializeStats();
  }

  /**
   * Process a new feed item for potential Terry commentary
   */
  return _createClass(TerryIntegration, [{
    key: "processFeedItem",
    value: (function () {
      var _processFeedItem = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(feedItem, originalTweet, classification, source)
      /* istanbul ignore next */
      {
        var _this = this;
        var timeoutId, _t;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              cov_5apne68yn().f[1]++;
              cov_5apne68yn().s[5]++;
              if (this.config.enableRealTimeCommentary) {
                _context2.n = 1;
                break;
              }
              cov_5apne68yn().b[1][0]++;
              cov_5apne68yn().s[6]++;
              return _context2.a(2, false);
            case 1:
              cov_5apne68yn().b[1][1]++;
            case 2:
              cov_5apne68yn().s[7]++;
              this.processingStats.totalItemsProcessed++;
              cov_5apne68yn().s[8]++;
              _context2.p = 3;
              cov_5apne68yn().s[9]++;
              if (!(this.config.commentaryDelay > 0)) {
                _context2.n = 4;
                break;
              }
              cov_5apne68yn().b[2][0]++;
              timeoutId = (cov_5apne68yn().s[10]++, setTimeout(
              /* istanbul ignore next */
              /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function
              /* istanbul ignore next */
              _callee()
              /* istanbul ignore next */
              {
                return _regenerator().w(function (_context) {
                  while (1) switch (_context.n) {
                    case 0:
                      cov_5apne68yn().f[2]++;
                      cov_5apne68yn().s[11]++;
                      _context.n = 1;
                      return _this.generateAndAddCommentary(feedItem, originalTweet, classification);
                    case 1:
                      cov_5apne68yn().s[12]++;
                      _this.pendingCommentary[
                      /* istanbul ignore next */
                      "delete"](feedItem.id);
                    case 2:
                      return _context.a(2);
                  }
                }, _callee);
              })), this.config.commentaryDelay * 60 * 1000));
              cov_5apne68yn().s[13]++;
              this.pendingCommentary.set(feedItem.id, timeoutId);
              cov_5apne68yn().s[14]++;
              return _context2.a(2, true);
            case 4:
              cov_5apne68yn().b[2][1]++;
              cov_5apne68yn().s[15]++;
              _context2.n = 5;
              return this.generateAndAddCommentary(feedItem, originalTweet, classification);
            case 5:
              return _context2.a(2, _context2.v);
            case 6:
              _context2.n = 8;
              break;
            case 7:
              _context2.p = 7;
              _t = _context2.v;
              cov_5apne68yn().s[16]++;
              console.error(
              /* istanbul ignore next */
              "Failed to process feed item ".concat(feedItem.id, " for Terry commentary:"),
              /* istanbul ignore next */
              _t);
              cov_5apne68yn().s[17]++;
              return _context2.a(2, false);
            case 8:
              return _context2.a(2);
          }
        }, _callee2, this, [[3, 7]]);
      }));
      function processFeedItem(_x, _x2, _x3, _x4) {
        return _processFeedItem.apply(this, arguments);
      }
      return processFeedItem;
    }()
    /**
     * Generate and add Terry commentary to a feed item
     */
    )
  }, {
    key: "generateAndAddCommentary",
    value: (function () {
      var _generateAndAddCommentary = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3(feedItem, originalTweet, classification)
      /* istanbul ignore next */
      {
        var retryCount,
          commentaryResult,
          _args3 = arguments,
          _t2;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              retryCount = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : (cov_5apne68yn().b[3][0]++, 0);
              cov_5apne68yn().f[3]++;
              cov_5apne68yn().s[18]++;
              _context3.p = 1;
              cov_5apne68yn().s[19]++;
              _context3.n = 2;
              return this.terrySystem.generateCommentary(feedItem, originalTweet, classification);
            case 2:
              commentaryResult = _context3.v;
              cov_5apne68yn().s[20]++;
              if (commentaryResult) {
                _context3.n = 3;
                break;
              }
              cov_5apne68yn().b[4][0]++;
              cov_5apne68yn().s[21]++;
              // Commentary generation was skipped (quota, quality, etc.)
              if (
              /* istanbul ignore next */
              (cov_5apne68yn().b[6][0]++, commentaryResult === null) &&
              /* istanbul ignore next */
              (cov_5apne68yn().b[6][1]++, retryCount === 0)) {
                /* istanbul ignore next */
                cov_5apne68yn().b[5][0]++;
                cov_5apne68yn().s[22]++;
                this.processingStats.rejectionsQuotaExceeded++;
              } else
              /* istanbul ignore next */
              {
                cov_5apne68yn().b[5][1]++;
              }
              cov_5apne68yn().s[23]++;
              return _context3.a(2, false);
            case 3:
              cov_5apne68yn().b[4][1]++;
            case 4:
              cov_5apne68yn().s[24]++;
              if (!(commentaryResult.voiceConsistencyScore < this.config.voiceConsistencyThreshold)) {
                _context3.n = 8;
                break;
              }
              cov_5apne68yn().b[7][0]++;
              cov_5apne68yn().s[25]++;
              this.processingStats.rejectionsLowQuality++;

              // Retry if enabled and under retry limit
              cov_5apne68yn().s[26]++;
              if (!(
              /* istanbul ignore next */
              (cov_5apne68yn().b[9][0]++, this.config.retryFailedCommentary) &&
              /* istanbul ignore next */
              (cov_5apne68yn().b[9][1]++, retryCount < this.config.maxRetries))) {
                _context3.n = 6;
                break;
              }
              cov_5apne68yn().b[8][0]++;
              cov_5apne68yn().s[27]++;
              console.log(
              /* istanbul ignore next */
              "Retrying Terry commentary for ".concat(feedItem.id, " (attempt ").concat(retryCount + 1, ")"));
              cov_5apne68yn().s[28]++;
              _context3.n = 5;
              return this.generateAndAddCommentary(feedItem, originalTweet, classification, retryCount + 1);
            case 5:
              return _context3.a(2, _context3.v);
            case 6:
              cov_5apne68yn().b[8][1]++;
            case 7:
              cov_5apne68yn().s[29]++;
              return _context3.a(2, false);
            case 8:
              cov_5apne68yn().b[7][1]++;
            case 9:
              cov_5apne68yn().s[30]++;
              _context3.n = 10;
              return this.addCommentaryToFeedItem(feedItem.id, commentaryResult);
            case 10:
              cov_5apne68yn().s[31]++;
              // Update stats
              this.processingStats.commentariesGenerated++;
              cov_5apne68yn().s[32]++;
              this.processingStats.averageGenerationTime = (this.processingStats.averageGenerationTime * (this.processingStats.commentariesGenerated - 1) + commentaryResult.generationTimeMs) / this.processingStats.commentariesGenerated;
              cov_5apne68yn().s[33]++;
              this.processingStats.voiceConsistencyAverage = (this.processingStats.voiceConsistencyAverage * (this.processingStats.commentariesGenerated - 1) + commentaryResult.voiceConsistencyScore) / this.processingStats.commentariesGenerated;
              cov_5apne68yn().s[34]++;
              console.log(
              /* istanbul ignore next */
              "\u2705 Terry commentary added to ".concat(feedItem.id, ": ").concat(commentaryResult.commentary.substring(0, 50), "..."));
              cov_5apne68yn().s[35]++;
              return _context3.a(2, true);
            case 11:
              _context3.p = 11;
              _t2 = _context3.v;
              cov_5apne68yn().s[36]++;
              console.error(
              /* istanbul ignore next */
              "Failed to generate Terry commentary for ".concat(feedItem.id, ":"),
              /* istanbul ignore next */
              _t2);

              // Retry if enabled
              cov_5apne68yn().s[37]++;
              if (!(
              /* istanbul ignore next */
              (cov_5apne68yn().b[11][0]++, this.config.retryFailedCommentary) &&
              /* istanbul ignore next */
              (cov_5apne68yn().b[11][1]++, retryCount < this.config.maxRetries))) {
                _context3.n = 13;
                break;
              }
              cov_5apne68yn().b[10][0]++;
              cov_5apne68yn().s[38]++;
              console.log(
              /* istanbul ignore next */
              "Retrying Terry commentary for ".concat(feedItem.id, " (attempt ").concat(retryCount + 1, ")"));
              cov_5apne68yn().s[39]++;
              _context3.n = 12;
              return this.generateAndAddCommentary(feedItem, originalTweet, classification, retryCount + 1);
            case 12:
              return _context3.a(2, _context3.v);
            case 13:
              cov_5apne68yn().b[10][1]++;
            case 14:
              cov_5apne68yn().s[40]++;
              return _context3.a(2, false);
          }
        }, _callee3, this, [[1, 11]]);
      }));
      function generateAndAddCommentary(_x5, _x6, _x7) {
        return _generateAndAddCommentary.apply(this, arguments);
      }
      return generateAndAddCommentary;
    }()
    /**
     * Add commentary to a feed item in the store
     */
    )
  }, {
    key: "addCommentaryToFeedItem",
    value: (function () {
      var _addCommentaryToFeedItem = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4(feedItemId, commentaryResult)
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_5apne68yn().f[4]++;
              cov_5apne68yn().s[41]++;
              // TODO: Re-enable feed store updates once circular dependency is fixed
              console.log(
              /* istanbul ignore next */
              "Terry commentary would be added to ".concat(feedItemId, ": ").concat(commentaryResult.commentary));
              // // Get the current feed store state
              // const feedStore = useFeedStore.getState();
              // const items = feedStore.items;
              //
              // // Find the item to update
              // const itemIndex = items.findIndex((item) => item.id === feedItemId);
              // if (itemIndex === -1) {
              //   console.warn(
              //     `Feed item ${feedItemId} not found for Terry commentary update`
              //   );
              //   return;
              // }
              //
              // // Create updated item with Terry commentary
              // const updatedItem: FeedItem = {
              //   ...items[itemIndex],
              //   terryCommentary: commentaryResult.commentary,
              // };
              //
              // // Create new items array with updated item
              // const updatedItems = [...items];
              // updatedItems[itemIndex] = updatedItem;
              //
              // // Update the store
              // feedStore.items = updatedItems;
              // feedStore.applyFilters(); // Call the function to update filtered items
              cov_5apne68yn().s[42]++;
              console.log(
              /* istanbul ignore next */
              "\uD83D\uDCDD Terry commentary added to feed item ".concat(feedItemId));
            case 1:
              return _context4.a(2);
          }
        }, _callee4);
      }));
      function addCommentaryToFeedItem(_x8, _x9) {
        return _addCommentaryToFeedItem.apply(this, arguments);
      }
      return addCommentaryToFeedItem;
    }()
    /**
     * Process multiple feed items in batch
     */
    )
  }, {
    key: "processBatchFeedItems",
    value: (function () {
      var _processBatchFeedItems = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee5(feedItems)
      /* istanbul ignore next */
      {
        var successCount, _iterator, _step, item, success, _t3;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              cov_5apne68yn().f[5]++;
              cov_5apne68yn().s[43]++;
              if (this.config.enableBatchCommentary) {
                _context5.n = 1;
                break;
              }
              cov_5apne68yn().b[12][0]++;
              cov_5apne68yn().s[44]++;
              return _context5.a(2, 0);
            case 1:
              cov_5apne68yn().b[12][1]++;
            case 2:
              successCount = (cov_5apne68yn().s[45]++, 0);
              cov_5apne68yn().s[46]++;
              _iterator = _createForOfIteratorHelper(feedItems);
              _context5.p = 3;
              _iterator.s();
            case 4:
              if ((_step = _iterator.n()).done) {
                _context5.n = 7;
                break;
              }
              item = _step.value;
              cov_5apne68yn().s[47]++;
              _context5.n = 5;
              return this.processFeedItem(item.feedItem, item.originalTweet, item.classification, item.source);
            case 5:
              success = _context5.v;
              cov_5apne68yn().s[48]++;
              if (success) {
                /* istanbul ignore next */
                cov_5apne68yn().b[13][0]++;
                cov_5apne68yn().s[49]++;
                successCount++;
              } else
              /* istanbul ignore next */
              {
                cov_5apne68yn().b[13][1]++;
              }

              // Small delay between batch items to avoid overwhelming the system
              cov_5apne68yn().s[50]++;
              _context5.n = 6;
              return this.sleep(100);
            case 6:
              _context5.n = 4;
              break;
            case 7:
              _context5.n = 9;
              break;
            case 8:
              _context5.p = 8;
              _t3 = _context5.v;
              _iterator.e(_t3);
            case 9:
              _context5.p = 9;
              _iterator.f();
              return _context5.f(9);
            case 10:
              cov_5apne68yn().s[51]++;
              console.log(
              /* istanbul ignore next */
              "\uD83D\uDCCA Terry batch processing complete: ".concat(successCount, "/").concat(feedItems.length, " commentaries generated"));
              cov_5apne68yn().s[52]++;
              return _context5.a(2, successCount);
          }
        }, _callee5, this, [[3, 8, 9, 10]]);
      }));
      function processBatchFeedItems(_x0) {
        return _processBatchFeedItems.apply(this, arguments);
      }
      return processBatchFeedItems;
    }()
    /**
     * Generate Terry's Breaking News commentary for major transfers
     */
    )
  }, {
    key: "processBreakingNews",
    value: (function () {
      var _processBreakingNews = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee6(feedItem)
      /* istanbul ignore next */
      {
        var isGenuineDrama,
          breakingCommentary,
          _args6 = arguments,
          _t4;
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.n) {
            case 0:
              isGenuineDrama = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : (cov_5apne68yn().b[14][0]++, true);
              cov_5apne68yn().f[6]++;
              cov_5apne68yn().s[53]++;
              if (!(feedItem.type !== 'breaking')) {
                _context6.n = 1;
                break;
              }
              cov_5apne68yn().b[15][0]++;
              cov_5apne68yn().s[54]++;
              return _context6.a(2, false);
            case 1:
              cov_5apne68yn().b[15][1]++;
            case 2:
              cov_5apne68yn().s[55]++;
              _context6.p = 3;
              cov_5apne68yn().s[56]++;
              _context6.n = 4;
              return this.terrySystem.generateBreakingNewsCommentary(feedItem, isGenuineDrama);
            case 4:
              breakingCommentary = _context6.v;
              cov_5apne68yn().s[57]++;
              if (breakingCommentary) {
                _context6.n = 5;
                break;
              }
              cov_5apne68yn().b[16][0]++;
              cov_5apne68yn().s[58]++;
              return _context6.a(2, false);
            case 5:
              cov_5apne68yn().b[16][1]++;
            case 6:
              cov_5apne68yn().s[59]++;
              _context6.n = 7;
              return this.addCommentaryToFeedItem(feedItem.id, breakingCommentary);
            case 7:
              cov_5apne68yn().s[60]++;
              console.log(
              /* istanbul ignore next */
              "\uD83D\uDEA8 Terry breaking news commentary added: ".concat(breakingCommentary.commentary));
              cov_5apne68yn().s[61]++;
              return _context6.a(2, true);
            case 8:
              _context6.p = 8;
              _t4 = _context6.v;
              cov_5apne68yn().s[62]++;
              console.error(
              /* istanbul ignore next */
              "Failed to process breaking news commentary for ".concat(feedItem.id, ":"),
              /* istanbul ignore next */
              _t4);
              cov_5apne68yn().s[63]++;
              return _context6.a(2, false);
          }
        }, _callee6, this, [[3, 8]]);
      }));
      function processBreakingNews(_x1) {
        return _processBreakingNews.apply(this, arguments);
      }
      return processBreakingNews;
    }()
    /**
     * Clean up pending commentary for cancelled/removed feed items
     */
    )
  }, {
    key: "cancelPendingCommentary",
    value: function cancelPendingCommentary(feedItemId) {
      /* istanbul ignore next */
      cov_5apne68yn().f[7]++;
      var timeoutId =
      /* istanbul ignore next */
      (cov_5apne68yn().s[64]++, this.pendingCommentary.get(feedItemId));
      /* istanbul ignore next */
      cov_5apne68yn().s[65]++;
      if (timeoutId) {
        /* istanbul ignore next */
        cov_5apne68yn().b[17][0]++;
        cov_5apne68yn().s[66]++;
        clearTimeout(timeoutId);
        /* istanbul ignore next */
        cov_5apne68yn().s[67]++;
        this.pendingCommentary[
        /* istanbul ignore next */
        "delete"](feedItemId);
        /* istanbul ignore next */
        cov_5apne68yn().s[68]++;
        console.log(
        /* istanbul ignore next */
        "\u23F0 Cancelled pending Terry commentary for ".concat(feedItemId));
      } else
      /* istanbul ignore next */
      {
        cov_5apne68yn().b[17][1]++;
      }
    }

    /**
     * Get Terry integration statistics
     */
  }, {
    key: "getStats",
    value: function getStats() {
      /* istanbul ignore next */
      cov_5apne68yn().f[8]++;
      var successRate =
      /* istanbul ignore next */
      (cov_5apne68yn().s[69]++, this.processingStats.totalItemsProcessed > 0 ?
      /* istanbul ignore next */
      (cov_5apne68yn().b[18][0]++, this.processingStats.commentariesGenerated / this.processingStats.totalItemsProcessed * 100) :
      /* istanbul ignore next */
      (cov_5apne68yn().b[18][1]++, 0));
      /* istanbul ignore next */
      cov_5apne68yn().s[70]++;
      return /* istanbul ignore next */_objectSpread(_objectSpread({}, this.processingStats), {}, {
        commentarySuccessRate: Math.round(successRate * 100) / 100,
        successRate: Math.round(successRate)
      });
    }

    /**
     * Get detailed Terry system analytics
     */
  }, {
    key: "getDetailedAnalytics",
    value: function getDetailedAnalytics() {
      /* istanbul ignore next */
      cov_5apne68yn().f[9]++;
      var integrationStats =
      /* istanbul ignore next */
      (cov_5apne68yn().s[71]++, this.getStats());
      var terryVoiceAnalytics =
      /* istanbul ignore next */
      (cov_5apne68yn().s[72]++, this.terrySystem.getVoiceAnalytics());
      var terryStatus =
      /* istanbul ignore next */
      (cov_5apne68yn().s[73]++, this.terrySystem.getStatus());
      /* istanbul ignore next */
      cov_5apne68yn().s[74]++;
      return {
        integration: integrationStats,
        voiceAnalytics: terryVoiceAnalytics,
        systemStatus: terryStatus,
        pendingCommentaries: this.pendingCommentary.size
      };
    }

    /**
     * Update Terry integration configuration
     */
  }, {
    key: "updateConfig",
    value: function updateConfig(newConfig) {
      /* istanbul ignore next */
      cov_5apne68yn().f[10]++;
      cov_5apne68yn().s[75]++;
      this.config =
      /* istanbul ignore next */
      _objectSpread(_objectSpread({}, this.config), newConfig);
      /* istanbul ignore next */
      cov_5apne68yn().s[76]++;
      this.terrySystem.updateConfig(newConfig);
      /* istanbul ignore next */
      cov_5apne68yn().s[77]++;
      console.log('🔧 Updated Terry integration config:', this.config);
    }

    /**
     * Reset statistics
     */
  }, {
    key: "resetStats",
    value: function resetStats() {
      /* istanbul ignore next */
      cov_5apne68yn().f[11]++;
      cov_5apne68yn().s[78]++;
      this.processingStats = this.initializeStats();
      /* istanbul ignore next */
      cov_5apne68yn().s[79]++;
      console.log('📊 Terry integration stats reset');
    }

    /**
     * Initialize processing statistics
     */
  }, {
    key: "initializeStats",
    value: function initializeStats() {
      /* istanbul ignore next */
      cov_5apne68yn().f[12]++;
      cov_5apne68yn().s[80]++;
      return {
        totalItemsProcessed: 0,
        commentariesGenerated: 0,
        commentarySuccessRate: 0,
        averageGenerationTime: 0,
        voiceConsistencyAverage: 0,
        rejectionsLowQuality: 0,
        rejectionsQuotaExceeded: 0
      };
    }

    /**
     * Utility function for delays
     */
  }, {
    key: "sleep",
    value: function sleep(ms) {
      /* istanbul ignore next */
      cov_5apne68yn().f[13]++;
      cov_5apne68yn().s[81]++;
      return new Promise(function (resolve) {
        /* istanbul ignore next */
        cov_5apne68yn().f[14]++;
        cov_5apne68yn().s[82]++;
        return setTimeout(resolve, ms);
      });
    }

    /**
     * Clean up resources
     */
  }, {
    key: "cleanup",
    value: function cleanup() {
      /* istanbul ignore next */
      cov_5apne68yn().f[15]++;
      cov_5apne68yn().s[83]++;
      // Cancel all pending commentary timeouts
      var _iterator2 = _createForOfIteratorHelper(this.pendingCommentary),
        _step2;
      /* istanbul ignore next */
      try {
        for (
        /* istanbul ignore next */
        _iterator2.s();
        /* istanbul ignore next */
        !(_step2 = _iterator2.n()).done;) {
          /* istanbul ignore next */
          var _step2$value = _slicedToArray(_step2.value, 2),
            feedItemId = _step2$value[0],
            timeoutId = _step2$value[1];
          /* istanbul ignore next */
          cov_5apne68yn().s[84]++;
          clearTimeout(timeoutId);
          /* istanbul ignore next */
          cov_5apne68yn().s[85]++;
          console.log(
          /* istanbul ignore next */
          "\uD83E\uDDF9 Cleaned up pending commentary for ".concat(feedItemId));
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      /* istanbul ignore next */
      cov_5apne68yn().s[86]++;
      this.pendingCommentary.clear();
    }
  }]);
}();

// Export singleton instance
export var terryIntegration =
/* istanbul ignore next */
(cov_5apne68yn().s[87]++, new TerryIntegration());

/**
 * Convenience functions for direct use
 */

/**
 * Process a single feed item for Terry commentary
 */
/* istanbul ignore next */
cov_5apne68yn().s[88]++;
export var addTerryCommentary =
/* istanbul ignore next */
/*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee7(feedItem, originalTweet, classification)
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context7) {
      while (1) switch (_context7.n) {
        case 0:
          cov_5apne68yn().f[16]++;
          cov_5apne68yn().s[89]++;
          _context7.n = 1;
          return terryIntegration.processFeedItem(feedItem, originalTweet, classification);
        case 1:
          return _context7.a(2, _context7.v);
      }
    }, _callee7);
  }));
  return function addTerryCommentary(_x10, _x11, _x12) {
    return _ref2.apply(this, arguments);
  };
}();

/**
 * Process breaking news with Terry commentary
 */
/* istanbul ignore next */
cov_5apne68yn().s[90]++;
export var addTerryBreakingNews =
/* istanbul ignore next */
/*#__PURE__*/function () {
  var _ref3 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee8(feedItem)
  /* istanbul ignore next */
  {
    var isGenuineDrama,
      _args8 = arguments;
    return _regenerator().w(function (_context8) {
      while (1) switch (_context8.n) {
        case 0:
          isGenuineDrama = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : (cov_5apne68yn().b[19][0]++, true);
          cov_5apne68yn().f[17]++;
          cov_5apne68yn().s[91]++;
          _context8.n = 1;
          return terryIntegration.processBreakingNews(feedItem, isGenuineDrama);
        case 1:
          return _context8.a(2, _context8.v);
      }
    }, _callee8);
  }));
  return function addTerryBreakingNews(_x13) {
    return _ref3.apply(this, arguments);
  };
}();

/**
 * Get Terry commentary statistics
 */
/* istanbul ignore next */
cov_5apne68yn().s[92]++;
export var getTerryStats = function getTerryStats() {
  /* istanbul ignore next */
  cov_5apne68yn().f[18]++;
  cov_5apne68yn().s[93]++;
  return terryIntegration.getStats();
};

/**
 * Get detailed Terry analytics
 */
/* istanbul ignore next */
cov_5apne68yn().s[94]++;
export var getTerryAnalytics = function getTerryAnalytics() {
  /* istanbul ignore next */
  cov_5apne68yn().f[19]++;
  cov_5apne68yn().s[95]++;
  return terryIntegration.getDetailedAnalytics();
};

/**
 * Update Terry configuration
 */
/* istanbul ignore next */
cov_5apne68yn().s[96]++;
export var updateTerryConfig = function updateTerryConfig(config) {
  /* istanbul ignore next */
  cov_5apne68yn().f[20]++;
  cov_5apne68yn().s[97]++;
  terryIntegration.updateConfig(config);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,