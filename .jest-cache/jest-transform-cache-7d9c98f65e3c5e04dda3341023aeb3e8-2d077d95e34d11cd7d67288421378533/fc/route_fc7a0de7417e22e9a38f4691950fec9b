cce974e958562113a8a25d61f5f36243
/* istanbul ignore next */
function cov_1m1bhbsu8m() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/app/api/cron/hourly/route.ts";
  var hash = "850b25a0df1878521badbcc89c1245d52f89bcb1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/app/api/cron/hourly/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 16,
          column: 45
        }
      },
      "1": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 65,
          column: 3
        }
      },
      "2": {
        start: {
          line: 20,
          column: 23
        },
        end: {
          line: 20,
          column: 59
        }
      },
      "3": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 21,
          column: 46
        }
      },
      "4": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "5": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 27,
          column: 7
        }
      },
      "6": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 53
        }
      },
      "7": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 77
        }
      },
      "8": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "9": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 44
        }
      },
      "10": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 33,
          column: 43
        }
      },
      "11": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 63
        }
      },
      "12": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 52,
          column: 7
        }
      },
      "13": {
        start: {
          line: 44,
          column: 42
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "14": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 54
        }
      },
      "15": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 64,
          column: 6
        }
      },
      "16": {
        start: {
          line: 70,
          column: 2
        },
        end: {
          line: 74,
          column: 5
        }
      }
    },
    fnMap: {
      "0": {
        name: "POST",
        decl: {
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 15,
            column: 26
          }
        },
        loc: {
          start: {
            line: 15,
            column: 49
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 44,
            column: 29
          },
          end: {
            line: 44,
            column: 30
          }
        },
        loc: {
          start: {
            line: 44,
            column: 42
          },
          end: {
            line: 50,
            column: 9
          }
        },
        line: 44
      },
      "2": {
        name: "GET",
        decl: {
          start: {
            line: 68,
            column: 22
          },
          end: {
            line: 68,
            column: 25
          }
        },
        loc: {
          start: {
            line: 68,
            column: 28
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 68
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 45
          }
        }, {
          start: {
            line: 23,
            column: 49
          },
          end: {
            line: 23,
            column: 59
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 27,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 27,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 10
          },
          end: {
            line: 24,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 10
          },
          end: {
            line: 24,
            column: 21
          }
        }, {
          start: {
            line: 24,
            column: 25
          },
          end: {
            line: 24,
            column: 62
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 35
          }
        }, {
          start: {
            line: 48,
            column: 39
          },
          end: {
            line: 48,
            column: 40
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 49,
            column: 18
          },
          end: {
            line: 49,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 18
          },
          end: {
            line: 49,
            column: 39
          }
        }, {
          start: {
            line: 49,
            column: 43
          },
          end: {
            line: 49,
            column: 44
          }
        }],
        line: 49
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 17
          },
          end: {
            line: 60,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 42
          },
          end: {
            line: 60,
            column: 55
          }
        }, {
          start: {
            line: 60,
            column: 58
          },
          end: {
            line: 60,
            column: 73
          }
        }],
        line: 60
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "850b25a0df1878521badbcc89c1245d52f89bcb1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1m1bhbsu8m = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1m1bhbsu8m();
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Hourly Cron Job Endpoint
 *
 * Triggers the hourly monitoring system:
 * 1. Check all ITK accounts for new tweets
 * 2. Generate Terry-style updates
 * 3. Search for relevant images
 * 4. Mix in engaging stories if needed
 * 5. Broadcast live updates
 */

import { NextResponse } from "next/server";
import { runHourlyMonitor } from "@/lib/monitoring/hourlyMonitor";
export
/* istanbul ignore next */
function POST(_x) {
  return _POST.apply(this, arguments);
}
/* istanbul ignore next */
function _POST() {
  _POST = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(request)
  /* istanbul ignore next */
  {
    var authHeader, cronSecret, startTime, updates, duration, _t;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_1m1bhbsu8m().f[0]++;
          cov_1m1bhbsu8m().s[0]++;
          console.log("⏰ Hourly cron job triggered");
          cov_1m1bhbsu8m().s[1]++;
          _context.p = 1;
          // Verify cron secret if in production
          authHeader = (cov_1m1bhbsu8m().s[2]++, request.headers.get("authorization"));
          cronSecret = (cov_1m1bhbsu8m().s[3]++, process.env.CRON_SECRET);
          cov_1m1bhbsu8m().s[4]++;
          if (!(
          /* istanbul ignore next */
          (cov_1m1bhbsu8m().b[1][0]++, process.env.NODE_ENV === "production") &&
          /* istanbul ignore next */
          (cov_1m1bhbsu8m().b[1][1]++, cronSecret))) {
            _context.n = 4;
            break;
          }
          cov_1m1bhbsu8m().b[0][0]++;
          cov_1m1bhbsu8m().s[5]++;
          if (!(
          /* istanbul ignore next */
          (cov_1m1bhbsu8m().b[3][0]++, !authHeader) ||
          /* istanbul ignore next */
          (cov_1m1bhbsu8m().b[3][1]++, authHeader !==
          /* istanbul ignore next */
          "Bearer ".concat(cronSecret)))) {
            _context.n = 2;
            break;
          }
          cov_1m1bhbsu8m().b[2][0]++;
          cov_1m1bhbsu8m().s[6]++;
          console.warn("🚫 Unauthorized cron request");
          cov_1m1bhbsu8m().s[7]++;
          return _context.a(2, NextResponse.json({
            error: "Unauthorized"
          }, {
            status: 401
          }));
        case 2:
          cov_1m1bhbsu8m().b[2][1]++;
        case 3:
          _context.n = 5;
          break;
        case 4:
          cov_1m1bhbsu8m().b[0][1]++;
        case 5:
          // Run the hourly monitoring
          startTime = (cov_1m1bhbsu8m().s[8]++, Date.now());
          cov_1m1bhbsu8m().s[9]++;
          _context.n = 6;
          return runHourlyMonitor();
        case 6:
          updates = _context.v;
          duration = (cov_1m1bhbsu8m().s[10]++, Date.now() - startTime);
          cov_1m1bhbsu8m().s[11]++;
          console.log(
          /* istanbul ignore next */
          "\u2705 Hourly monitor completed in ".concat(duration, "ms"));
          cov_1m1bhbsu8m().s[12]++;
          return _context.a(2, NextResponse.json({
            success: true,
            message: "Hourly monitoring completed",
            data: {
              updatesGenerated: updates.length,
              duration:
              /* istanbul ignore next */
              "".concat(duration, "ms"),
              timestamp: new Date().toISOString(),
              updates: updates.map(function (update) {
                /* istanbul ignore next */
                var _update$tags, _update$images;
                cov_1m1bhbsu8m().f[1]++;
                cov_1m1bhbsu8m().s[13]++;
                return {
                  id: update.id,
                  type: update.type,
                  priority: update.priority,
                  tags:
                  /* istanbul ignore next */
                  (cov_1m1bhbsu8m().b[4][0]++, (_update$tags = update.tags) === null || _update$tags === void 0 ? void 0 :
                  /* istanbul ignore next */
                  _update$tags.length) ||
                  /* istanbul ignore next */
                  (cov_1m1bhbsu8m().b[4][1]++, 0),
                  images:
                  /* istanbul ignore next */
                  (cov_1m1bhbsu8m().b[5][0]++, (_update$images = update.images) === null || _update$images === void 0 ? void 0 :
                  /* istanbul ignore next */
                  _update$images.length) ||
                  /* istanbul ignore next */
                  (cov_1m1bhbsu8m().b[5][1]++, 0)
                };
              })
            }
          }));
        case 7:
          _context.p = 7;
          _t = _context.v;
          cov_1m1bhbsu8m().s[14]++;
          console.error("❌ Hourly cron job failed:",
          /* istanbul ignore next */
          _t);
          cov_1m1bhbsu8m().s[15]++;
          return _context.a(2, NextResponse.json({
            success: false,
            error: "Hourly monitoring failed",
            details:
            /* istanbul ignore next */
            _t instanceof Error ?
            /* istanbul ignore next */
            (cov_1m1bhbsu8m().b[6][0]++,
            /* istanbul ignore next */
            _t.message) :
            /* istanbul ignore next */
            (cov_1m1bhbsu8m().b[6][1]++, "Unknown error"),
            timestamp: new Date().toISOString()
          }, {
            status: 500
          }));
      }
    }, _callee, null, [[1, 7]]);
  }));
  return _POST.apply(this, arguments);
}
export
/* istanbul ignore next */
function GET() {
  return _GET.apply(this, arguments);
}
/* istanbul ignore next */
function _GET() {
  _GET = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2()
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_1m1bhbsu8m().f[2]++;
          cov_1m1bhbsu8m().s[16]++;
          return _context2.a(2, NextResponse.json({
            message: "Hourly cron endpoint is healthy",
            timestamp: new Date().toISOString(),
            status: "ready"
          }));
      }
    }, _callee2);
  }));
  return _GET.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,