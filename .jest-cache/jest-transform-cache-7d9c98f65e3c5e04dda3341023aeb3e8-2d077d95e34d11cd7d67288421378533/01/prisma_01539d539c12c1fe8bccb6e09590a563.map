{"version":3,"names":["cov_c1pyafbvw","actualCoverage","_regenerator","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","_taggedTemplateLiteral","slice","freeze","defineProperties","raw","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","PrismaClient","s","createPrismaClient","log","process","env","NODE_ENV","b","prisma","_ref","globalThis","__prisma","testDatabaseConnection","_testDatabaseConnection","_callee","_t","_context","$queryRaw","_templateObject","console","error","getDatabaseHealth","_getDatabaseHealth","_callee2","start","end","_t2","_context2","Date","now","_templateObject2","status","responseTime","timestamp","toISOString","Error","message","disconnectDatabase","_disconnectDatabase","_callee3","_t3","_context3","$disconnect"],"sources":["prisma.ts"],"sourcesContent":["/**\n * Prisma Client Singleton\n * Optimized for Next.js development and production environments\n */\n\nimport { PrismaClient } from \"@prisma/client\";\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var __prisma: PrismaClient | undefined;\n}\n\n// Prisma client configuration\nconst createPrismaClient = () => {\n  return new PrismaClient({\n    log:\n      process.env.NODE_ENV === \"development\"\n        ? [\"query\", \"error\", \"warn\"]\n        : [\"error\"],\n  });\n};\n\n// Singleton pattern for Prisma client\nexport const prisma = globalThis.__prisma ?? createPrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") {\n  globalThis.__prisma = prisma;\n}\n\n// Connection testing utility\nexport async function testDatabaseConnection(): Promise<boolean> {\n  try {\n    await prisma.$queryRaw`SELECT 1`;\n    return true;\n  } catch (error) {\n    console.error(\"Database connection failed:\", error);\n    return false;\n  }\n}\n\n// Health check utility\nexport async function getDatabaseHealth() {\n  try {\n    const start = Date.now();\n    await prisma.$queryRaw`SELECT 1`;\n    const end = Date.now();\n\n    return {\n      status: \"healthy\",\n      responseTime: end - start,\n      timestamp: new Date().toISOString(),\n    };\n  } catch (error) {\n    return {\n      status: \"unhealthy\",\n      error: error instanceof Error ? error.message : \"Unknown error\",\n      timestamp: new Date().toISOString(),\n    };\n  }\n}\n\n// Graceful shutdown\nexport async function disconnectDatabase() {\n  try {\n    await prisma.$disconnect();\n  } catch (error) {\n    console.error(\"Error disconnecting from database:\", error);\n  }\n}\n"],"mappings":"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","ignoreList":[]}