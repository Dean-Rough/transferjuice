4725b2df1c49c82b450f1d5f8629ba0f
/* istanbul ignore next */ function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function cov_s1rc4a4s8() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/twitter/client.ts";
  var hash = "92ede1c95b82795af7d8f7e0804ea1be7a83a260";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/twitter/client.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 33
        },
        end: {
          line: 24,
          column: 2
        }
      },
      "1": {
        start: {
          line: 27,
          column: 36
        },
        end: {
          line: 33,
          column: 2
        }
      },
      "2": {
        start: {
          line: 37,
          column: 34
        },
        end: {
          line: 76,
          column: 2
        }
      },
      "3": {
        start: {
          line: 78,
          column: 45
        },
        end: {
          line: 110,
          column: 2
        }
      },
      "4": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 19
        }
      },
      "5": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 141,
          column: 34
        }
      },
      "6": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 150,
          column: 47
        }
      },
      "7": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 151,
          column: 40
        }
      },
      "8": {
        start: {
          line: 161,
          column: 51
        },
        end: {
          line: 161,
          column: 60
        }
      },
      "9": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 164,
          column: 65
        }
      },
      "10": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 165,
          column: 42
        }
      },
      "11": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 166,
          column: 61
        }
      },
      "12": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 167,
          column: 51
        }
      },
      "13": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 168,
          column: 48
        }
      },
      "14": {
        start: {
          line: 175,
          column: 26
        },
        end: {
          line: 175,
          column: 55
        }
      },
      "15": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 176,
          column: 31
        }
      },
      "16": {
        start: {
          line: 176,
          column: 24
        },
        end: {
          line: 176,
          column: 31
        }
      },
      "17": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 45
        }
      },
      "18": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "19": {
        start: {
          line: 180,
          column: 23
        },
        end: {
          line: 180,
          column: 48
        }
      },
      "20": {
        start: {
          line: 181,
          column: 6
        },
        end: {
          line: 184,
          column: 8
        }
      },
      "21": {
        start: {
          line: 192,
          column: 18
        },
        end: {
          line: 192,
          column: 68
        }
      },
      "22": {
        start: {
          line: 193,
          column: 22
        },
        end: {
          line: 193,
          column: 76
        }
      },
      "23": {
        start: {
          line: 194,
          column: 18
        },
        end: {
          line: 194,
          column: 68
        }
      },
      "24": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "25": {
        start: {
          line: 197,
          column: 6
        },
        end: {
          line: 197,
          column: 65
        }
      },
      "26": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 208,
          column: 34
        }
      },
      "27": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 53
        }
      },
      "28": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 213,
          column: 7
        }
      },
      "29": {
        start: {
          line: 212,
          column: 6
        },
        end: {
          line: 212,
          column: 53
        }
      },
      "30": {
        start: {
          line: 212,
          column: 17
        },
        end: {
          line: 212,
          column: 53
        }
      },
      "31": {
        start: {
          line: 215,
          column: 34
        },
        end: {
          line: 215,
          column: 38
        }
      },
      "32": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 276,
          column: 5
        }
      },
      "33": {
        start: {
          line: 217,
          column: 23
        },
        end: {
          line: 217,
          column: 24
        }
      },
      "34": {
        start: {
          line: 218,
          column: 6
        },
        end: {
          line: 275,
          column: 7
        }
      },
      "35": {
        start: {
          line: 219,
          column: 25
        },
        end: {
          line: 224,
          column: 10
        }
      },
      "36": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 57
        }
      },
      "37": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "38": {
        start: {
          line: 230,
          column: 10
        },
        end: {
          line: 238,
          column: 11
        }
      },
      "39": {
        start: {
          line: 231,
          column: 30
        },
        end: {
          line: 233,
          column: 13
        }
      },
      "40": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 237,
          column: 14
        }
      },
      "41": {
        start: {
          line: 240,
          column: 28
        },
        end: {
          line: 240,
          column: 67
        }
      },
      "42": {
        start: {
          line: 240,
          column: 63
        },
        end: {
          line: 240,
          column: 65
        }
      },
      "43": {
        start: {
          line: 241,
          column: 10
        },
        end: {
          line: 246,
          column: 12
        }
      },
      "44": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 24
        }
      },
      "45": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 35
        }
      },
      "46": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "47": {
        start: {
          line: 255,
          column: 10
        },
        end: {
          line: 255,
          column: 22
        }
      },
      "48": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "49": {
        start: {
          line: 264,
          column: 10
        },
        end: {
          line: 264,
          column: 22
        }
      },
      "50": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "51": {
        start: {
          line: 268,
          column: 10
        },
        end: {
          line: 270,
          column: 12
        }
      },
      "52": {
        start: {
          line: 271,
          column: 10
        },
        end: {
          line: 273,
          column: 12
        }
      },
      "53": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 58
        }
      },
      "54": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 280,
          column: 6
        }
      },
      "55": {
        start: {
          line: 296,
          column: 43
        },
        end: {
          line: 320,
          column: 5
        }
      },
      "56": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 322,
          column: 59
        }
      },
      "57": {
        start: {
          line: 322,
          column: 25
        },
        end: {
          line: 322,
          column: 59
        }
      },
      "58": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 323,
          column: 59
        }
      },
      "59": {
        start: {
          line: 323,
          column: 25
        },
        end: {
          line: 323,
          column: 59
        }
      },
      "60": {
        start: {
          line: 324,
          column: 4
        },
        end: {
          line: 324,
          column: 65
        }
      },
      "61": {
        start: {
          line: 324,
          column: 27
        },
        end: {
          line: 324,
          column: 65
        }
      },
      "62": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 325,
          column: 59
        }
      },
      "63": {
        start: {
          line: 325,
          column: 25
        },
        end: {
          line: 325,
          column: 59
        }
      },
      "64": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 344,
          column: 5
        }
      },
      "65": {
        start: {
          line: 328,
          column: 23
        },
        end: {
          line: 331,
          column: 7
        }
      },
      "66": {
        start: {
          line: 332,
          column: 19
        },
        end: {
          line: 332,
          column: 40
        }
      },
      "67": {
        start: {
          line: 334,
          column: 6
        },
        end: {
          line: 334,
          column: 55
        }
      },
      "68": {
        start: {
          line: 336,
          column: 6
        },
        end: {
          line: 342,
          column: 7
        }
      },
      "69": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 341,
          column: 10
        }
      },
      "70": {
        start: {
          line: 339,
          column: 87
        },
        end: {
          line: 339,
          column: 96
        }
      },
      "71": {
        start: {
          line: 343,
          column: 6
        },
        end: {
          line: 343,
          column: 18
        }
      },
      "72": {
        start: {
          line: 351,
          column: 19
        },
        end: {
          line: 359,
          column: 5
        }
      },
      "73": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 386,
          column: 5
        }
      },
      "74": {
        start: {
          line: 362,
          column: 23
        },
        end: {
          line: 365,
          column: 7
        }
      },
      "75": {
        start: {
          line: 366,
          column: 19
        },
        end: {
          line: 366,
          column: 40
        }
      },
      "76": {
        start: {
          line: 368,
          column: 6
        },
        end: {
          line: 374,
          column: 7
        }
      },
      "77": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 373,
          column: 10
        }
      },
      "78": {
        start: {
          line: 376,
          column: 6
        },
        end: {
          line: 376,
          column: 48
        }
      },
      "79": {
        start: {
          line: 378,
          column: 6
        },
        end: {
          line: 384,
          column: 7
        }
      },
      "80": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 383,
          column: 10
        }
      },
      "81": {
        start: {
          line: 385,
          column: 6
        },
        end: {
          line: 385,
          column: 18
        }
      },
      "82": {
        start: {
          line: 393,
          column: 50
        },
        end: {
          line: 393,
          column: 52
        }
      },
      "83": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 396,
          column: 7
        }
      },
      "84": {
        start: {
          line: 395,
          column: 6
        },
        end: {
          line: 395,
          column: 37
        }
      },
      "85": {
        start: {
          line: 397,
          column: 4
        },
        end: {
          line: 397,
          column: 18
        }
      },
      "86": {
        start: {
          line: 404,
          column: 26
        },
        end: {
          line: 404,
          column: 55
        }
      },
      "87": {
        start: {
          line: 405,
          column: 4
        },
        end: {
          line: 405,
          column: 62
        }
      },
      "88": {
        start: {
          line: 405,
          column: 55
        },
        end: {
          line: 405,
          column: 62
        }
      },
      "89": {
        start: {
          line: 407,
          column: 16
        },
        end: {
          line: 407,
          column: 45
        }
      },
      "90": {
        start: {
          line: 408,
          column: 21
        },
        end: {
          line: 408,
          column: 59
        }
      },
      "91": {
        start: {
          line: 410,
          column: 4
        },
        end: {
          line: 417,
          column: 5
        }
      },
      "92": {
        start: {
          line: 411,
          column: 6
        },
        end: {
          line: 415,
          column: 8
        }
      },
      "93": {
        start: {
          line: 416,
          column: 6
        },
        end: {
          line: 416,
          column: 75
        }
      },
      "94": {
        start: {
          line: 416,
          column: 37
        },
        end: {
          line: 416,
          column: 73
        }
      },
      "95": {
        start: {
          line: 424,
          column: 29
        },
        end: {
          line: 424,
          column: 31
        }
      },
      "96": {
        start: {
          line: 426,
          column: 4
        },
        end: {
          line: 428,
          column: 5
        }
      },
      "97": {
        start: {
          line: 427,
          column: 6
        },
        end: {
          line: 427,
          column: 46
        }
      },
      "98": {
        start: {
          line: 430,
          column: 4
        },
        end: {
          line: 432,
          column: 5
        }
      },
      "99": {
        start: {
          line: 431,
          column: 6
        },
        end: {
          line: 431,
          column: 63
        }
      },
      "100": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 437,
          column: 6
        }
      },
      "101": {
        start: {
          line: 436,
          column: 36
        },
        end: {
          line: 436,
          column: 71
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 134,
            column: 2
          },
          end: {
            line: 134,
            column: 3
          }
        },
        loc: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 142,
            column: 3
          }
        },
        line: 139
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 146,
            column: 2
          },
          end: {
            line: 146,
            column: 3
          }
        },
        loc: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 152,
            column: 3
          }
        },
        line: 149
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 163,
            column: 2
          },
          end: {
            line: 163,
            column: 3
          }
        },
        loc: {
          start: {
            line: 163,
            column: 43
          },
          end: {
            line: 169,
            column: 3
          }
        },
        line: 163
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 174,
            column: 2
          },
          end: {
            line: 174,
            column: 3
          }
        },
        loc: {
          start: {
            line: 174,
            column: 49
          },
          end: {
            line: 186,
            column: 3
          }
        },
        line: 174
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 191,
            column: 2
          },
          end: {
            line: 191,
            column: 3
          }
        },
        loc: {
          start: {
            line: 191,
            column: 68
          },
          end: {
            line: 199,
            column: 3
          }
        },
        line: 191
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 204,
            column: 2
          },
          end: {
            line: 204,
            column: 3
          }
        },
        loc: {
          start: {
            line: 207,
            column: 23
          },
          end: {
            line: 281,
            column: 3
          }
        },
        line: 207
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 211,
            column: 35
          },
          end: {
            line: 211,
            column: 36
          }
        },
        loc: {
          start: {
            line: 211,
            column: 53
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 211
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 240,
            column: 56
          },
          end: {
            line: 240,
            column: 57
          }
        },
        loc: {
          start: {
            line: 240,
            column: 63
          },
          end: {
            line: 240,
            column: 65
          }
        },
        line: 240
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 271,
            column: 28
          },
          end: {
            line: 271,
            column: 29
          }
        },
        loc: {
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 272,
            column: 58
          }
        },
        line: 272
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 286,
            column: 2
          },
          end: {
            line: 286,
            column: 3
          }
        },
        loc: {
          start: {
            line: 295,
            column: 38
          },
          end: {
            line: 345,
            column: 3
          }
        },
        line: 295
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 339,
            column: 80
          },
          end: {
            line: 339,
            column: 81
          }
        },
        loc: {
          start: {
            line: 339,
            column: 87
          },
          end: {
            line: 339,
            column: 96
          }
        },
        line: 339
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 350,
            column: 2
          },
          end: {
            line: 350,
            column: 3
          }
        },
        loc: {
          start: {
            line: 350,
            column: 66
          },
          end: {
            line: 387,
            column: 3
          }
        },
        line: 350
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 392,
            column: 2
          },
          end: {
            line: 392,
            column: 3
          }
        },
        loc: {
          start: {
            line: 392,
            column: 54
          },
          end: {
            line: 398,
            column: 3
          }
        },
        line: 392
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 394,
            column: 28
          },
          end: {
            line: 394,
            column: 29
          }
        },
        loc: {
          start: {
            line: 394,
            column: 48
          },
          end: {
            line: 396,
            column: 5
          }
        },
        line: 394
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 403,
            column: 2
          },
          end: {
            line: 403,
            column: 3
          }
        },
        loc: {
          start: {
            line: 403,
            column: 58
          },
          end: {
            line: 418,
            column: 3
          }
        },
        line: 403
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 416,
            column: 24
          },
          end: {
            line: 416,
            column: 25
          }
        },
        loc: {
          start: {
            line: 416,
            column: 37
          },
          end: {
            line: 416,
            column: 73
          }
        },
        line: 416
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 423,
            column: 2
          },
          end: {
            line: 423,
            column: 3
          }
        },
        loc: {
          start: {
            line: 423,
            column: 64
          },
          end: {
            line: 438,
            column: 3
          }
        },
        line: 423
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 436,
            column: 25
          },
          end: {
            line: 436,
            column: 26
          }
        },
        loc: {
          start: {
            line: 436,
            column: 36
          },
          end: {
            line: 436,
            column: 71
          }
        },
        line: 436
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 164,
            column: 19
          },
          end: {
            line: 164,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 19
          },
          end: {
            line: 164,
            column: 33
          }
        }, {
          start: {
            line: 164,
            column: 37
          },
          end: {
            line: 164,
            column: 64
          }
        }],
        line: 164
      },
      "1": {
        loc: {
          start: {
            line: 166,
            column: 29
          },
          end: {
            line: 166,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 29
          },
          end: {
            line: 166,
            column: 53
          }
        }, {
          start: {
            line: 166,
            column: 57
          },
          end: {
            line: 166,
            column: 60
          }
        }],
        line: 166
      },
      "2": {
        loc: {
          start: {
            line: 167,
            column: 25
          },
          end: {
            line: 167,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 25
          },
          end: {
            line: 167,
            column: 45
          }
        }, {
          start: {
            line: 167,
            column: 49
          },
          end: {
            line: 167,
            column: 50
          }
        }],
        line: 167
      },
      "3": {
        loc: {
          start: {
            line: 168,
            column: 22
          },
          end: {
            line: 168,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 22
          },
          end: {
            line: 168,
            column: 39
          }
        }, {
          start: {
            line: 168,
            column: 43
          },
          end: {
            line: 168,
            column: 47
          }
        }],
        line: 168
      },
      "4": {
        loc: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "5": {
        loc: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "6": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 179,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 179,
            column: 36
          }
        }, {
          start: {
            line: 179,
            column: 40
          },
          end: {
            line: 179,
            column: 65
          }
        }],
        line: 179
      },
      "7": {
        loc: {
          start: {
            line: 192,
            column: 27
          },
          end: {
            line: 192,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 27
          },
          end: {
            line: 192,
            column: 60
          }
        }, {
          start: {
            line: 192,
            column: 64
          },
          end: {
            line: 192,
            column: 67
          }
        }],
        line: 192
      },
      "8": {
        loc: {
          start: {
            line: 193,
            column: 31
          },
          end: {
            line: 193,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 31
          },
          end: {
            line: 193,
            column: 68
          }
        }, {
          start: {
            line: 193,
            column: 72
          },
          end: {
            line: 193,
            column: 75
          }
        }],
        line: 193
      },
      "9": {
        loc: {
          start: {
            line: 194,
            column: 27
          },
          end: {
            line: 194,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 27
          },
          end: {
            line: 194,
            column: 60
          }
        }, {
          start: {
            line: 194,
            column: 64
          },
          end: {
            line: 194,
            column: 67
          }
        }],
        line: 194
      },
      "10": {
        loc: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "11": {
        loc: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 206,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 206,
            column: 37
          },
          end: {
            line: 206,
            column: 39
          }
        }],
        line: 206
      },
      "12": {
        loc: {
          start: {
            line: 212,
            column: 6
          },
          end: {
            line: 212,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 6
          },
          end: {
            line: 212,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "13": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "14": {
        loc: {
          start: {
            line: 230,
            column: 10
          },
          end: {
            line: 238,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 10
          },
          end: {
            line: 238,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "15": {
        loc: {
          start: {
            line: 232,
            column: 14
          },
          end: {
            line: 232,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 14
          },
          end: {
            line: 232,
            column: 56
          }
        }, {
          start: {
            line: 232,
            column: 60
          },
          end: {
            line: 232,
            column: 63
          }
        }],
        line: 232
      },
      "16": {
        loc: {
          start: {
            line: 242,
            column: 62
          },
          end: {
            line: 242,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 62
          },
          end: {
            line: 242,
            column: 78
          }
        }, {
          start: {
            line: 242,
            column: 82
          },
          end: {
            line: 242,
            column: 101
          }
        }],
        line: 242
      },
      "17": {
        loc: {
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "18": {
        loc: {
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "19": {
        loc: {
          start: {
            line: 260,
            column: 10
          },
          end: {
            line: 262,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 10
          },
          end: {
            line: 260,
            column: 42
          }
        }, {
          start: {
            line: 261,
            column: 10
          },
          end: {
            line: 261,
            column: 26
          }
        }, {
          start: {
            line: 262,
            column: 10
          },
          end: {
            line: 262,
            column: 32
          }
        }],
        line: 260
      },
      "20": {
        loc: {
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "21": {
        loc: {
          start: {
            line: 269,
            column: 76
          },
          end: {
            line: 269,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 269,
            column: 101
          },
          end: {
            line: 269,
            column: 114
          }
        }, {
          start: {
            line: 269,
            column: 117
          },
          end: {
            line: 269,
            column: 132
          }
        }],
        line: 269
      },
      "22": {
        loc: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 294,
            column: 10
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 294,
            column: 10
          }
        }],
        line: 288
      },
      "23": {
        loc: {
          start: {
            line: 297,
            column: 20
          },
          end: {
            line: 297,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 297,
            column: 20
          },
          end: {
            line: 297,
            column: 38
          }
        }, {
          start: {
            line: 297,
            column: 42
          },
          end: {
            line: 297,
            column: 64
          }
        }],
        line: 297
      },
      "24": {
        loc: {
          start: {
            line: 322,
            column: 4
          },
          end: {
            line: 322,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 4
          },
          end: {
            line: 322,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 322
      },
      "25": {
        loc: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "26": {
        loc: {
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 324,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 324,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 324
      },
      "27": {
        loc: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "28": {
        loc: {
          start: {
            line: 336,
            column: 6
          },
          end: {
            line: 342,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 6
          },
          end: {
            line: 342,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "29": {
        loc: {
          start: {
            line: 368,
            column: 6
          },
          end: {
            line: 374,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 6
          },
          end: {
            line: 374,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 368
      },
      "30": {
        loc: {
          start: {
            line: 378,
            column: 6
          },
          end: {
            line: 384,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 378,
            column: 6
          },
          end: {
            line: 384,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 378
      },
      "31": {
        loc: {
          start: {
            line: 405,
            column: 4
          },
          end: {
            line: 405,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 405,
            column: 4
          },
          end: {
            line: 405,
            column: 62
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 405
      },
      "32": {
        loc: {
          start: {
            line: 405,
            column: 8
          },
          end: {
            line: 405,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 405,
            column: 8
          },
          end: {
            line: 405,
            column: 22
          }
        }, {
          start: {
            line: 405,
            column: 26
          },
          end: {
            line: 405,
            column: 53
          }
        }],
        line: 405
      },
      "33": {
        loc: {
          start: {
            line: 410,
            column: 4
          },
          end: {
            line: 417,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 410,
            column: 4
          },
          end: {
            line: 417,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 410
      },
      "34": {
        loc: {
          start: {
            line: 426,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 426
      },
      "35": {
        loc: {
          start: {
            line: 430,
            column: 4
          },
          end: {
            line: 432,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 4
          },
          end: {
            line: 432,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "92ede1c95b82795af7d8f7e0804ea1be7a83a260"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_s1rc4a4s8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_s1rc4a4s8();
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _regeneratorValues(e) { if (null != e) { var t = e["function" == typeof Symbol && Symbol.iterator || "@@iterator"], r = 0; if (t) return t.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) return { next: function next() { return e && r >= e.length && (e = void 0), { value: e && e[r++], done: !e }; } }; } throw new TypeError(_typeof(e) + " is not iterable"); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }
function _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
/**
 * Twitter/X API v2 Client
 * Handles authentication, rate limiting, and global ITK source monitoring
 */

import { z } from "zod";
import { applyTerryStyle } from "@/lib/terry-style";

// Twitter API v2 Response Schemas
export var TwitterUserSchema =
/* istanbul ignore next */
(cov_s1rc4a4s8().s[0]++, z.object({
  id: z.string(),
  username: z.string(),
  name: z.string(),
  verified: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](false),
  profile_image_url: z.string().optional(),
  description: z.string().optional(),
  public_metrics: z.object({
    followers_count: z.number(),
    following_count: z.number(),
    tweet_count: z.number()
  })
}));

// Missing type exports that are referenced elsewhere
export var TweetMediaInfoSchema =
/* istanbul ignore next */
(cov_s1rc4a4s8().s[1]++, z.object({
  media_key: z.string(),
  type: z[
  /* istanbul ignore next */
  "enum"](["photo", "video", "gif"]),
  url: z.string().optional(),
  preview_image_url: z.string().optional(),
  alt_text: z.string().optional()
}));
export var TwitterTweetSchema =
/* istanbul ignore next */
(cov_s1rc4a4s8().s[2]++, z.object({
  id: z.string(),
  text: z.string(),
  author_id: z.string(),
  created_at: z.string(),
  context_annotations: z.array(z.object({
    domain: z.object({
      id: z.string(),
      name: z.string()
    }),
    entity: z.object({
      id: z.string(),
      name: z.string()
    })
  })).optional(),
  public_metrics: z.object({
    retweet_count: z.number(),
    like_count: z.number(),
    reply_count: z.number(),
    quote_count: z.number()
  }),
  attachments: z.object({
    media_keys: z.array(z.string()).optional()
  }).optional(),
  lang: z.string().optional(),
  referenced_tweets: z.array(z.object({
    type: z.string(),
    id: z.string()
  })).optional()
}));
export var TwitterTimelineResponseSchema =
/* istanbul ignore next */
(cov_s1rc4a4s8().s[3]++, z.object({
  data: z.array(TwitterTweetSchema).optional(),
  includes: z.object({
    users: z.array(TwitterUserSchema).optional(),
    media: z.array(z.object({
      media_key: z.string(),
      type: z.string(),
      url: z.string().optional(),
      preview_image_url: z.string().optional()
    })).optional()
  }).optional(),
  meta: z.object({
    oldest_id: z.string().optional(),
    newest_id: z.string().optional(),
    result_count: z.number(),
    next_token: z.string().optional()
  }),
  errors: z.array(z.object({
    title: z.string(),
    detail: z.string(),
    type: z.string()
  })).optional()
}));

// Rate limiting configuration

export
/* istanbul ignore next */
var TwitterAPIError = /*#__PURE__*/function (_Error) {
  function
  /* istanbul ignore next */
  TwitterAPIError(message, statusCode, errorType, details) {
    /* istanbul ignore next */
    var _this;
    _classCallCheck(this, TwitterAPIError);
    cov_s1rc4a4s8().f[0]++;
    cov_s1rc4a4s8().s[4]++;
    /* istanbul ignore next */
    _this = _callSuper(this, TwitterAPIError, [message]);
    /* istanbul ignore next */
    _this.statusCode = statusCode;
    /* istanbul ignore next */
    _this.errorType = errorType;
    /* istanbul ignore next */
    _this.details = details;
    /* istanbul ignore next */
    cov_s1rc4a4s8().s[5]++;
    /* istanbul ignore next */
    _this.name = "TwitterAPIError";
    /* istanbul ignore next */
    return _this;
  }
  _inherits(TwitterAPIError, _Error);
  return _createClass(TwitterAPIError);
}(/*#__PURE__*/_wrapNativeSuper(Error));
export
/* istanbul ignore next */
var TwitterRateLimitError = /*#__PURE__*/function (_TwitterAPIError) {
  function
  /* istanbul ignore next */
  TwitterRateLimitError(message, resetTime) {
    /* istanbul ignore next */
    var _this2;
    _classCallCheck(this, TwitterRateLimitError);
    cov_s1rc4a4s8().f[1]++;
    cov_s1rc4a4s8().s[6]++;
    /* istanbul ignore next */
    _this2 = _callSuper(this, TwitterRateLimitError, [message, 429, "rate_limit_exceeded"]);
    /* istanbul ignore next */
    _this2.resetTime = resetTime;
    /* istanbul ignore next */
    cov_s1rc4a4s8().s[7]++;
    /* istanbul ignore next */
    _this2.name = "TwitterRateLimitError";
    /* istanbul ignore next */
    return _this2;
  }
  _inherits(TwitterRateLimitError, _TwitterAPIError);
  return _createClass(TwitterRateLimitError);
}(TwitterAPIError);
export
/* istanbul ignore next */
var TwitterClient = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  TwitterClient(config) {
    /* istanbul ignore next */
    _classCallCheck(this, TwitterClient);
    _defineProperty(this, "rateLimits", (cov_s1rc4a4s8().s[8]++, new Map()));
    /* istanbul ignore next */
    cov_s1rc4a4s8().f[2]++;
    cov_s1rc4a4s8().s[9]++;
    this.baseUrl =
    /* istanbul ignore next */
    (cov_s1rc4a4s8().b[0][0]++, config.baseUrl) ||
    /* istanbul ignore next */
    (cov_s1rc4a4s8().b[0][1]++, "https://api.twitter.com/2");
    /* istanbul ignore next */
    cov_s1rc4a4s8().s[10]++;
    this.bearerToken = config.bearerToken;
    /* istanbul ignore next */
    cov_s1rc4a4s8().s[11]++;
    this.defaultMaxResults =
    /* istanbul ignore next */
    (cov_s1rc4a4s8().b[1][0]++, config.defaultMaxResults) ||
    /* istanbul ignore next */
    (cov_s1rc4a4s8().b[1][1]++, 100);
    /* istanbul ignore next */
    cov_s1rc4a4s8().s[12]++;
    this.retryAttempts =
    /* istanbul ignore next */
    (cov_s1rc4a4s8().b[2][0]++, config.retryAttempts) ||
    /* istanbul ignore next */
    (cov_s1rc4a4s8().b[2][1]++, 3);
    /* istanbul ignore next */
    cov_s1rc4a4s8().s[13]++;
    this.retryDelay =
    /* istanbul ignore next */
    (cov_s1rc4a4s8().b[3][0]++, config.retryDelay) ||
    /* istanbul ignore next */
    (cov_s1rc4a4s8().b[3][1]++, 1000);
  }

  /**
   * Check rate limit status for an endpoint
   */
  return _createClass(TwitterClient, [{
    key: "checkRateLimit",
    value: function checkRateLimit(endpoint) {
      /* istanbul ignore next */
      cov_s1rc4a4s8().f[3]++;
      var rateLimitInfo =
      /* istanbul ignore next */
      (cov_s1rc4a4s8().s[14]++, this.rateLimits.get(endpoint));
      /* istanbul ignore next */
      cov_s1rc4a4s8().s[15]++;
      if (!rateLimitInfo) {
        /* istanbul ignore next */
        cov_s1rc4a4s8().b[4][0]++;
        cov_s1rc4a4s8().s[16]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_s1rc4a4s8().b[4][1]++;
      }
      var now =
      /* istanbul ignore next */
      (cov_s1rc4a4s8().s[17]++, Math.floor(Date.now() / 1000));
      /* istanbul ignore next */
      cov_s1rc4a4s8().s[18]++;
      if (
      /* istanbul ignore next */
      (cov_s1rc4a4s8().b[6][0]++, rateLimitInfo.remaining <= 0) &&
      /* istanbul ignore next */
      (cov_s1rc4a4s8().b[6][1]++, now < rateLimitInfo.reset)) {
        /* istanbul ignore next */
        cov_s1rc4a4s8().b[5][0]++;
        var waitTime =
        /* istanbul ignore next */
        (cov_s1rc4a4s8().s[19]++, rateLimitInfo.reset - now);
        /* istanbul ignore next */
        cov_s1rc4a4s8().s[20]++;
        throw new TwitterRateLimitError(
        /* istanbul ignore next */
        "Rate limit exceeded for ".concat(endpoint, ". Reset in ").concat(waitTime, " seconds."), rateLimitInfo.reset);
      } else
      /* istanbul ignore next */
      {
        cov_s1rc4a4s8().b[5][1]++;
      }
    }

    /**
     * Update rate limit information from response headers
     */
  }, {
    key: "updateRateLimit",
    value: function updateRateLimit(endpoint, headers) {
      /* istanbul ignore next */
      cov_s1rc4a4s8().f[4]++;
      var limit =
      /* istanbul ignore next */
      (cov_s1rc4a4s8().s[21]++, parseInt(
      /* istanbul ignore next */
      (cov_s1rc4a4s8().b[7][0]++, headers.get("x-rate-limit-limit")) ||
      /* istanbul ignore next */
      (cov_s1rc4a4s8().b[7][1]++, "0")));
      var remaining =
      /* istanbul ignore next */
      (cov_s1rc4a4s8().s[22]++, parseInt(
      /* istanbul ignore next */
      (cov_s1rc4a4s8().b[8][0]++, headers.get("x-rate-limit-remaining")) ||
      /* istanbul ignore next */
      (cov_s1rc4a4s8().b[8][1]++, "0")));
      var reset =
      /* istanbul ignore next */
      (cov_s1rc4a4s8().s[23]++, parseInt(
      /* istanbul ignore next */
      (cov_s1rc4a4s8().b[9][0]++, headers.get("x-rate-limit-reset")) ||
      /* istanbul ignore next */
      (cov_s1rc4a4s8().b[9][1]++, "0")));
      /* istanbul ignore next */
      cov_s1rc4a4s8().s[24]++;
      if (limit > 0) {
        /* istanbul ignore next */
        cov_s1rc4a4s8().b[10][0]++;
        cov_s1rc4a4s8().s[25]++;
        this.rateLimits.set(endpoint, {
          limit: limit,
          remaining: remaining,
          reset: reset
        });
      } else
      /* istanbul ignore next */
      {
        cov_s1rc4a4s8().b[10][1]++;
      }
    }

    /**
     * Make authenticated request to Twitter API
     */
  }, {
    key: "makeRequest",
    value: (function () {
      var _makeRequest = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee(endpoint)
      /* istanbul ignore next */
      {
        var _this3 = this,
          _lastError;
        var params,
          url,
          lastError,
          _loop,
          _ret,
          attempt,
          _args2 = arguments;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              params = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : (cov_s1rc4a4s8().b[11][0]++, {});
              cov_s1rc4a4s8().f[5]++;
              cov_s1rc4a4s8().s[26]++;
              this.checkRateLimit(endpoint);
              url = (cov_s1rc4a4s8().s[27]++, new URL(
              /* istanbul ignore next */
              "".concat(this.baseUrl).concat(endpoint)));
              cov_s1rc4a4s8().s[28]++;
              Object.entries(params).forEach(function (
              /* istanbul ignore next */
              _ref) {
                /* istanbul ignore next */
                var _ref2 = _slicedToArray(_ref, 2),
                  key = _ref2[0],
                  value = _ref2[1];
                /* istanbul ignore next */
                cov_s1rc4a4s8().f[6]++;
                cov_s1rc4a4s8().s[29]++;
                if (value) {
                  /* istanbul ignore next */
                  cov_s1rc4a4s8().b[12][0]++;
                  cov_s1rc4a4s8().s[30]++;
                  url.searchParams.append(key, value);
                } else
                /* istanbul ignore next */
                {
                  cov_s1rc4a4s8().b[12][1]++;
                }
              });
              lastError = (cov_s1rc4a4s8().s[31]++, null);
              cov_s1rc4a4s8().s[32]++;
              _loop = /*#__PURE__*/_regenerator().m(function _loop(attempt) {
                var response, _resetTime, errorData, _t;
                return _regenerator().w(function (_context) {
                  while (1) switch (_context.n) {
                    case 0:
                      cov_s1rc4a4s8().s[34]++;
                      _context.p = 1;
                      cov_s1rc4a4s8().s[35]++;
                      _context.n = 2;
                      return fetch(url.toString(), {
                        headers: {
                          Authorization:
                          /* istanbul ignore next */
                          "Bearer ".concat(_this3.bearerToken),
                          "User-Agent": "TransferJuice/1.0"
                        }
                      });
                    case 2:
                      response = _context.v;
                      cov_s1rc4a4s8().s[36]++;
                      // Update rate limit info
                      _this3.updateRateLimit(endpoint, response.headers);
                      cov_s1rc4a4s8().s[37]++;
                      if (response.ok) {
                        _context.n = 6;
                        break;
                      }
                      cov_s1rc4a4s8().b[13][0]++;
                      cov_s1rc4a4s8().s[38]++;
                      if (!(response.status === 429)) {
                        _context.n = 3;
                        break;
                      }
                      cov_s1rc4a4s8().b[14][0]++;
                      _resetTime = (cov_s1rc4a4s8().s[39]++, parseInt(
                      /* istanbul ignore next */
                      (cov_s1rc4a4s8().b[15][0]++, response.headers.get("x-rate-limit-reset")) ||
                      /* istanbul ignore next */
                      (cov_s1rc4a4s8().b[15][1]++, "0")));
                      cov_s1rc4a4s8().s[40]++;
                      throw new TwitterRateLimitError("Hit the Twitter rate limit like a proper muppet", _resetTime);
                    case 3:
                      cov_s1rc4a4s8().b[14][1]++;
                    case 4:
                      cov_s1rc4a4s8().s[41]++;
                      _context.n = 5;
                      return response.json()[
                      /* istanbul ignore next */
                      "catch"](function () {
                        /* istanbul ignore next */
                        cov_s1rc4a4s8().f[7]++;
                        cov_s1rc4a4s8().s[42]++;
                        return {};
                      });
                    case 5:
                      errorData = _context.v;
                      cov_s1rc4a4s8().s[43]++;
                      throw new TwitterAPIError(
                      /* istanbul ignore next */
                      "Twitter API responded with ".concat(response.status, ": ").concat(
                      /* istanbul ignore next */
                      (cov_s1rc4a4s8().b[16][0]++, errorData.detail) ||
                      /* istanbul ignore next */
                      (cov_s1rc4a4s8().b[16][1]++, response.statusText)), response.status, errorData.type, errorData);
                    case 6:
                      cov_s1rc4a4s8().b[13][1]++;
                    case 7:
                      cov_s1rc4a4s8().s[44]++;
                      return _context.a(2, {
                        v: response
                      });
                    case 8:
                      _context.p = 8;
                      _t = _context.v;
                      cov_s1rc4a4s8().s[45]++;
                      lastError =
                      /* istanbul ignore next */
                      _t;

                      // Don't retry rate limit errors
                      cov_s1rc4a4s8().s[46]++;
                      if (!(
                      /* istanbul ignore next */
                      _t instanceof TwitterRateLimitError)) {
                        _context.n = 9;
                        break;
                      }
                      cov_s1rc4a4s8().b[17][0]++;
                      cov_s1rc4a4s8().s[47]++;
                      throw _t;
                    case 9:
                      cov_s1rc4a4s8().b[17][1]++;
                    case 10:
                      cov_s1rc4a4s8().s[48]++;
                      if (!(
                      /* istanbul ignore next */
                      (cov_s1rc4a4s8().b[19][0]++,
                      /* istanbul ignore next */
                      _t instanceof TwitterAPIError) &&
                      /* istanbul ignore next */
                      (cov_s1rc4a4s8().b[19][1]++,
                      /* istanbul ignore next */
                      _t.statusCode) &&
                      /* istanbul ignore next */
                      (cov_s1rc4a4s8().b[19][2]++,
                      /* istanbul ignore next */
                      _t.statusCode < 500))) {
                        _context.n = 11;
                        break;
                      }
                      cov_s1rc4a4s8().b[18][0]++;
                      cov_s1rc4a4s8().s[49]++;
                      throw _t;
                    case 11:
                      cov_s1rc4a4s8().b[18][1]++;
                    case 12:
                      cov_s1rc4a4s8().s[50]++;
                      if (!(attempt < _this3.retryAttempts)) {
                        _context.n = 14;
                        break;
                      }
                      cov_s1rc4a4s8().b[20][0]++;
                      cov_s1rc4a4s8().s[51]++;
                      console.warn(
                      /* istanbul ignore next */
                      "Attempt ".concat(attempt, " failed, retrying in ").concat(_this3.retryDelay, "ms: ").concat(
                      /* istanbul ignore next */
                      _t instanceof Error ?
                      /* istanbul ignore next */
                      (cov_s1rc4a4s8().b[21][0]++,
                      /* istanbul ignore next */
                      _t.message) :
                      /* istanbul ignore next */
                      (cov_s1rc4a4s8().b[21][1]++, "Unknown error")));
                      cov_s1rc4a4s8().s[52]++;
                      _context.n = 13;
                      return new Promise(function (resolve) {
                        /* istanbul ignore next */
                        cov_s1rc4a4s8().f[8]++;
                        cov_s1rc4a4s8().s[53]++;
                        return setTimeout(resolve, _this3.retryDelay * attempt);
                      });
                    case 13:
                      _context.n = 15;
                      break;
                    case 14:
                      cov_s1rc4a4s8().b[20][1]++;
                    case 15:
                      return _context.a(2);
                  }
                }, _loop, null, [[1, 8]]);
              });
              attempt = (cov_s1rc4a4s8().s[33]++, 1);
            case 1:
              if (!(attempt <= this.retryAttempts)) {
                _context2.n = 4;
                break;
              }
              return _context2.d(_regeneratorValues(_loop(attempt)), 2);
            case 2:
              _ret = _context2.v;
              if (!_ret) {
                _context2.n = 3;
                break;
              }
              return _context2.a(2, _ret.v);
            case 3:
              attempt++;
              _context2.n = 1;
              break;
            case 4:
              cov_s1rc4a4s8().s[54]++;
              throw new TwitterAPIError(
              /* istanbul ignore next */
              "Failed to make request after ".concat(this.retryAttempts, " attempts: ").concat((_lastError = lastError) === null || _lastError === void 0 ? void 0 :
              /* istanbul ignore next */
              _lastError.message));
            case 5:
              return _context2.a(2);
          }
        }, _callee, this);
      }));
      function makeRequest(_x) {
        return _makeRequest.apply(this, arguments);
      }
      return makeRequest;
    }()
    /**
     * Get user timeline with all relevant tweet data
     */
    )
  }, {
    key: "getUserTimeline",
    value: (function () {
      var _getUserTimeline = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(userId)
      /* istanbul ignore next */
      {
        var options,
          params,
          response,
          data,
          _args3 = arguments,
          _t2;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              options = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : (cov_s1rc4a4s8().b[22][0]++, {});
              cov_s1rc4a4s8().f[9]++;
              params = (cov_s1rc4a4s8().s[55]++, {
                max_results: (
                /* istanbul ignore next */
                (cov_s1rc4a4s8().b[23][0]++, options.maxResults) ||
                /* istanbul ignore next */
                (cov_s1rc4a4s8().b[23][1]++, this.defaultMaxResults)).toString(),
                "tweet.fields": ["id", "text", "author_id", "created_at", "context_annotations", "public_metrics", "attachments", "lang", "referenced_tweets"].join(","),
                "user.fields": ["id", "username", "name", "verified", "public_metrics"].join(","),
                "media.fields": ["media_key", "type", "url", "preview_image_url"].join(","),
                expansions: "author_id,attachments.media_keys"
              });
              cov_s1rc4a4s8().s[56]++;
              if (options.sinceId) {
                /* istanbul ignore next */
                cov_s1rc4a4s8().b[24][0]++;
                cov_s1rc4a4s8().s[57]++;
                params.since_id = options.sinceId;
              } else
              /* istanbul ignore next */
              {
                cov_s1rc4a4s8().b[24][1]++;
              }
              cov_s1rc4a4s8().s[58]++;
              if (options.untilId) {
                /* istanbul ignore next */
                cov_s1rc4a4s8().b[25][0]++;
                cov_s1rc4a4s8().s[59]++;
                params.until_id = options.untilId;
              } else
              /* istanbul ignore next */
              {
                cov_s1rc4a4s8().b[25][1]++;
              }
              cov_s1rc4a4s8().s[60]++;
              if (options.startTime) {
                /* istanbul ignore next */
                cov_s1rc4a4s8().b[26][0]++;
                cov_s1rc4a4s8().s[61]++;
                params.start_time = options.startTime;
              } else
              /* istanbul ignore next */
              {
                cov_s1rc4a4s8().b[26][1]++;
              }
              cov_s1rc4a4s8().s[62]++;
              if (options.endTime) {
                /* istanbul ignore next */
                cov_s1rc4a4s8().b[27][0]++;
                cov_s1rc4a4s8().s[63]++;
                params.end_time = options.endTime;
              } else
              /* istanbul ignore next */
              {
                cov_s1rc4a4s8().b[27][1]++;
              }
              cov_s1rc4a4s8().s[64]++;
              _context3.p = 1;
              cov_s1rc4a4s8().s[65]++;
              _context3.n = 2;
              return this.makeRequest(
              /* istanbul ignore next */
              "/users/".concat(userId, "/tweets"), params);
            case 2:
              response = _context3.v;
              cov_s1rc4a4s8().s[66]++;
              _context3.n = 3;
              return response.json();
            case 3:
              data = _context3.v;
              cov_s1rc4a4s8().s[67]++;
              return _context3.a(2, TwitterTimelineResponseSchema.parse(data));
            case 4:
              _context3.p = 4;
              _t2 = _context3.v;
              cov_s1rc4a4s8().s[68]++;
              if (!(
              /* istanbul ignore next */
              _t2 instanceof z.ZodError)) {
                _context3.n = 5;
                break;
              }
              cov_s1rc4a4s8().b[28][0]++;
              cov_s1rc4a4s8().s[69]++;
              throw new TwitterAPIError(applyTerryStyle.enhanceError(
              /* istanbul ignore next */
              "Twitter API returned unexpected data structure: ".concat(
              /* istanbul ignore next */
              _t2.errors.map(function (e) {
                /* istanbul ignore next */
                cov_s1rc4a4s8().f[10]++;
                cov_s1rc4a4s8().s[70]++;
                return e.message;
              }).join(", "))));
            case 5:
              cov_s1rc4a4s8().b[28][1]++;
            case 6:
              cov_s1rc4a4s8().s[71]++;
              throw _t2;
            case 7:
              return _context3.a(2);
          }
        }, _callee2, this, [[1, 4]]);
      }));
      function getUserTimeline(_x2) {
        return _getUserTimeline.apply(this, arguments);
      }
      return getUserTimeline;
    }()
    /**
     * Get user by username
     */
    )
  }, {
    key: "getUserByUsername",
    value: (function () {
      var _getUserByUsername = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3(username)
      /* istanbul ignore next */
      {
        var params, response, data, _t3;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_s1rc4a4s8().f[11]++;
              params = (cov_s1rc4a4s8().s[72]++, {
                "user.fields": ["id", "username", "name", "verified", "public_metrics"].join(",")
              });
              cov_s1rc4a4s8().s[73]++;
              _context4.p = 1;
              cov_s1rc4a4s8().s[74]++;
              _context4.n = 2;
              return this.makeRequest(
              /* istanbul ignore next */
              "/users/by/username/".concat(username), params);
            case 2:
              response = _context4.v;
              cov_s1rc4a4s8().s[75]++;
              _context4.n = 3;
              return response.json();
            case 3:
              data = _context4.v;
              cov_s1rc4a4s8().s[76]++;
              if (data.data) {
                _context4.n = 4;
                break;
              }
              cov_s1rc4a4s8().b[29][0]++;
              cov_s1rc4a4s8().s[77]++;
              throw new TwitterAPIError(applyTerryStyle.enhanceError(
              /* istanbul ignore next */
              "User @".concat(username, " not found or account is private")));
            case 4:
              cov_s1rc4a4s8().b[29][1]++;
            case 5:
              cov_s1rc4a4s8().s[78]++;
              return _context4.a(2, TwitterUserSchema.parse(data.data));
            case 6:
              _context4.p = 6;
              _t3 = _context4.v;
              cov_s1rc4a4s8().s[79]++;
              if (!(
              /* istanbul ignore next */
              _t3 instanceof z.ZodError)) {
                _context4.n = 7;
                break;
              }
              cov_s1rc4a4s8().b[30][0]++;
              cov_s1rc4a4s8().s[80]++;
              throw new TwitterAPIError(applyTerryStyle.enhanceError(
              /* istanbul ignore next */
              "Invalid user data from Twitter API: ".concat(
              /* istanbul ignore next */
              _t3.message)));
            case 7:
              cov_s1rc4a4s8().b[30][1]++;
            case 8:
              cov_s1rc4a4s8().s[81]++;
              throw _t3;
            case 9:
              return _context4.a(2);
          }
        }, _callee3, this, [[1, 6]]);
      }));
      function getUserByUsername(_x3) {
        return _getUserByUsername.apply(this, arguments);
      }
      return getUserByUsername;
    }()
    /**
     * Get rate limit status for all endpoints
     */
    )
  }, {
    key: "getRateLimitStatus",
    value: function getRateLimitStatus() {
      /* istanbul ignore next */
      cov_s1rc4a4s8().f[12]++;
      var status =
      /* istanbul ignore next */
      (cov_s1rc4a4s8().s[82]++, {});
      /* istanbul ignore next */
      cov_s1rc4a4s8().s[83]++;
      this.rateLimits.forEach(function (info, endpoint) {
        /* istanbul ignore next */
        cov_s1rc4a4s8().f[13]++;
        cov_s1rc4a4s8().s[84]++;
        status[endpoint] =
        /* istanbul ignore next */
        _objectSpread({}, info);
      });
      /* istanbul ignore next */
      cov_s1rc4a4s8().s[85]++;
      return status;
    }

    /**
     * Wait for rate limit reset if needed
     */
  }, {
    key: "waitForRateLimit",
    value: (function () {
      var _waitForRateLimit = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4(endpoint)
      /* istanbul ignore next */
      {
        var rateLimitInfo, now, waitTime;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              cov_s1rc4a4s8().f[14]++;
              rateLimitInfo = (cov_s1rc4a4s8().s[86]++, this.rateLimits.get(endpoint));
              cov_s1rc4a4s8().s[87]++;
              if (!(
              /* istanbul ignore next */
              (cov_s1rc4a4s8().b[32][0]++, !rateLimitInfo) ||
              /* istanbul ignore next */
              (cov_s1rc4a4s8().b[32][1]++, rateLimitInfo.remaining > 0))) {
                _context5.n = 1;
                break;
              }
              cov_s1rc4a4s8().b[31][0]++;
              cov_s1rc4a4s8().s[88]++;
              return _context5.a(2);
            case 1:
              cov_s1rc4a4s8().b[31][1]++;
            case 2:
              now = (cov_s1rc4a4s8().s[89]++, Math.floor(Date.now() / 1000));
              waitTime = (cov_s1rc4a4s8().s[90]++, Math.max(0, rateLimitInfo.reset - now));
              cov_s1rc4a4s8().s[91]++;
              if (!(waitTime > 0)) {
                _context5.n = 4;
                break;
              }
              cov_s1rc4a4s8().b[33][0]++;
              cov_s1rc4a4s8().s[92]++;
              console.log(applyTerryStyle.enhanceMessage(
              /* istanbul ignore next */
              "Waiting ".concat(waitTime, " seconds for rate limit reset on ").concat(endpoint)));
              cov_s1rc4a4s8().s[93]++;
              _context5.n = 3;
              return new Promise(function (resolve) {
                /* istanbul ignore next */
                cov_s1rc4a4s8().f[15]++;
                cov_s1rc4a4s8().s[94]++;
                return setTimeout(resolve, waitTime * 1000);
              });
            case 3:
              _context5.n = 5;
              break;
            case 4:
              cov_s1rc4a4s8().b[33][1]++;
            case 5:
              return _context5.a(2);
          }
        }, _callee4, this);
      }));
      function waitForRateLimit(_x4) {
        return _waitForRateLimit.apply(this, arguments);
      }
      return waitForRateLimit;
    }()
    /**
     * Check if the client is properly configured
     */
    )
  }, {
    key: "validateConfiguration",
    value: function validateConfiguration() {
      /* istanbul ignore next */
      cov_s1rc4a4s8().f[16]++;
      var errors =
      /* istanbul ignore next */
      (cov_s1rc4a4s8().s[95]++, []);
      /* istanbul ignore next */
      cov_s1rc4a4s8().s[96]++;
      if (!this.bearerToken) {
        /* istanbul ignore next */
        cov_s1rc4a4s8().b[34][0]++;
        cov_s1rc4a4s8().s[97]++;
        errors.push("Bearer token is required");
      } else
      /* istanbul ignore next */
      {
        cov_s1rc4a4s8().b[34][1]++;
      }
      cov_s1rc4a4s8().s[98]++;
      if (!this.bearerToken.startsWith("AAAAAAA")) {
        /* istanbul ignore next */
        cov_s1rc4a4s8().b[35][0]++;
        cov_s1rc4a4s8().s[99]++;
        errors.push("Bearer token appears to be invalid format");
      } else
      /* istanbul ignore next */
      {
        cov_s1rc4a4s8().b[35][1]++;
      }
      cov_s1rc4a4s8().s[100]++;
      return {
        valid: errors.length === 0,
        errors: errors.map(function (error) {
          /* istanbul ignore next */
          cov_s1rc4a4s8().f[17]++;
          cov_s1rc4a4s8().s[101]++;
          return applyTerryStyle.enhanceError(error);
        })
      };
    }
  }]);
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,