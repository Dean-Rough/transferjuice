0f56aefb7ff2d2416be08bbdff025363
/* istanbul ignore next */
function cov_1l21obdbp7() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/types/briefing.ts";
  var hash = "b6ab4c717484c4b33331aa972f84be88b0a4a992";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/types/briefing.ts",
    statementMap: {
      "0": {
        start: {
          line: 202,
          column: 29
        },
        end: {
          line: 307,
          column: 1
        }
      },
      "1": {
        start: {
          line: 205,
          column: 17
        },
        end: {
          line: 213,
          column: 5
        }
      },
      "2": {
        start: {
          line: 214,
          column: 19
        },
        end: {
          line: 227,
          column: 5
        }
      },
      "3": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 35
        }
      },
      "4": {
        start: {
          line: 230,
          column: 17
        },
        end: {
          line: 230,
          column: 68
        }
      },
      "5": {
        start: {
          line: 231,
          column: 18
        },
        end: {
          line: 231,
          column: 41
        }
      },
      "6": {
        start: {
          line: 232,
          column: 17
        },
        end: {
          line: 232,
          column: 62
        }
      },
      "7": {
        start: {
          line: 234,
          column: 17
        },
        end: {
          line: 234,
          column: 75
        }
      },
      "8": {
        start: {
          line: 235,
          column: 17
        },
        end: {
          line: 235,
          column: 186
        }
      },
      "9": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 246,
          column: 6
        }
      },
      "10": {
        start: {
          line: 252,
          column: 26
        },
        end: {
          line: 271,
          column: 5
        }
      },
      "11": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 275,
          column: 6
        }
      },
      "12": {
        start: {
          line: 274,
          column: 6
        },
        end: {
          line: 274,
          column: 58
        }
      },
      "13": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 280,
          column: 181
        }
      },
      "14": {
        start: {
          line: 285,
          column: 27
        },
        end: {
          line: 285,
          column: 30
        }
      },
      "15": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 286,
          column: 49
        }
      },
      "16": {
        start: {
          line: 294,
          column: 25
        },
        end: {
          line: 294,
          column: 33
        }
      },
      "17": {
        start: {
          line: 295,
          column: 51
        },
        end: {
          line: 295,
          column: 57
        }
      },
      "18": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 305,
          column: 6
        }
      },
      "19": {
        start: {
          line: 310,
          column: 65
        },
        end: {
          line: 335,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 204,
            column: 15
          },
          end: {
            line: 204,
            column: 16
          }
        },
        loc: {
          start: {
            line: 204,
            column: 66
          },
          end: {
            line: 247,
            column: 3
          }
        },
        line: 204
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 250,
            column: 25
          },
          end: {
            line: 250,
            column: 26
          }
        },
        loc: {
          start: {
            line: 250,
            column: 56
          },
          end: {
            line: 276,
            column: 3
          }
        },
        line: 250
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 273,
            column: 32
          },
          end: {
            line: 273,
            column: 33
          }
        },
        loc: {
          start: {
            line: 274,
            column: 6
          },
          end: {
            line: 274,
            column: 58
          }
        },
        line: 274
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 279,
            column: 16
          },
          end: {
            line: 279,
            column: 17
          }
        },
        loc: {
          start: {
            line: 279,
            column: 40
          },
          end: {
            line: 281,
            column: 3
          }
        },
        line: 279
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 284,
            column: 21
          },
          end: {
            line: 284,
            column: 22
          }
        },
        loc: {
          start: {
            line: 284,
            column: 52
          },
          end: {
            line: 287,
            column: 3
          }
        },
        line: 284
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 290,
            column: 25
          },
          end: {
            line: 290,
            column: 26
          }
        },
        loc: {
          start: {
            line: 293,
            column: 16
          },
          end: {
            line: 306,
            column: 3
          }
        },
        line: 293
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 298,
            column: 6
          },
          end: {
            line: 304,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 6
          },
          end: {
            line: 298,
            column: 47
          }
        }, {
          start: {
            line: 299,
            column: 6
          },
          end: {
            line: 299,
            column: 47
          }
        }, {
          start: {
            line: 300,
            column: 6
          },
          end: {
            line: 300,
            column: 60
          }
        }, {
          start: {
            line: 301,
            column: 6
          },
          end: {
            line: 302,
            column: 44
          }
        }, {
          start: {
            line: 303,
            column: 6
          },
          end: {
            line: 303,
            column: 75
          }
        }, {
          start: {
            line: 304,
            column: 6
          },
          end: {
            line: 304,
            column: 73
          }
        }],
        line: 298
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b6ab4c717484c4b33331aa972f84be88b0a4a992"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1l21obdbp7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1l21obdbp7();
/**
 * Transfer Juice Briefing System Types
 * Defines the structure for hourly editorial briefings
 */

// Helper types for briefing generation

// Utility functions for working with briefings
export var BriefingUtils =
/* istanbul ignore next */
(cov_1l21obdbp7().s[0]++, {
  // Generate title format: "Monday 14:00 Briefing May '25 - [Funny Title]"
  formatTitle: function formatTitle(date, funnyTitle) {
    /* istanbul ignore next */
    cov_1l21obdbp7().f[0]++;
    var days =
    /* istanbul ignore next */
    (cov_1l21obdbp7().s[1]++, ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]);
    var months =
    /* istanbul ignore next */
    (cov_1l21obdbp7().s[2]++, ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]);
    var day =
    /* istanbul ignore next */
    (cov_1l21obdbp7().s[3]++, days[date.getDay()]);
    var hour =
    /* istanbul ignore next */
    (cov_1l21obdbp7().s[4]++, date.getHours().toString().padStart(2, "0") + ":00");
    var month =
    /* istanbul ignore next */
    (cov_1l21obdbp7().s[5]++, months[date.getMonth()]);
    var year =
    /* istanbul ignore next */
    (cov_1l21obdbp7().s[6]++, "'" + date.getFullYear().toString().slice(-2));
    var full =
    /* istanbul ignore next */
    (cov_1l21obdbp7().s[7]++, "".concat(day, " ").concat(hour, " Briefing ").concat(month, " ").concat(year, " - ").concat(funnyTitle));
    var slug =
    /* istanbul ignore next */
    (cov_1l21obdbp7().s[8]++, "".concat(date.getFullYear(), "-").concat((date.getMonth() + 1).toString().padStart(2, "0"), "-").concat(date.getDate().toString().padStart(2, "0"), "-").concat(date.getHours().toString().padStart(2, "0")));
    /* istanbul ignore next */
    cov_1l21obdbp7().s[9]++;
    return {
      full: full,
      funny: funnyTitle,
      day: day,
      hour: hour,
      month: month,
      year: year,
      timestamp: date,
      slug: slug
    };
  },
  // Extract player mentions from content for polaroid triggering
  extractPlayerMentions: function extractPlayerMentions(content) {
    /* istanbul ignore next */
    cov_1l21obdbp7().f[1]++;
    // This would be enhanced with a proper player database
    var commonPlayers =
    /* istanbul ignore next */
    (cov_1l21obdbp7().s[10]++, ["Haaland", "Mbappe", "Bellingham", "Kane", "Salah", "Vinicius", "Pedri", "Gavi", "Musiala", "Camavinga", "Osimhen", "Leao", "Kvaratskhelia", "Vlahovic", "Saka", "Foden", "Wirtz", "Moukoko"]);
    /* istanbul ignore next */
    cov_1l21obdbp7().s[11]++;
    return commonPlayers.filter(function (player) {
      /* istanbul ignore next */
      cov_1l21obdbp7().f[2]++;
      cov_1l21obdbp7().s[12]++;
      return content.toLowerCase().includes(player.toLowerCase());
    });
  },
  // Generate slug for URL
  generateSlug: function generateSlug(date) {
    /* istanbul ignore next */
    cov_1l21obdbp7().f[3]++;
    cov_1l21obdbp7().s[13]++;
    return /* istanbul ignore next */"".concat(date.getFullYear(), "-").concat((date.getMonth() + 1).toString().padStart(2, "0"), "-").concat(date.getDate().toString().padStart(2, "0"), "-").concat(date.getHours().toString().padStart(2, "0"));
  },
  // Calculate estimated read time
  calculateReadTime: function calculateReadTime(wordCount) {
    /* istanbul ignore next */
    cov_1l21obdbp7().f[4]++;
    var wordsPerMinute =
    /* istanbul ignore next */
    (cov_1l21obdbp7().s[14]++, 200); // Average reading speed
    /* istanbul ignore next */
    cov_1l21obdbp7().s[15]++;
    return Math.ceil(wordCount / wordsPerMinute);
  },
  // Check if briefing meets quality standards
  meetsQualityStandards: function meetsQualityStandards(briefing, config) {
    /* istanbul ignore next */
    cov_1l21obdbp7().f[5]++;
    var
      /* istanbul ignore next */
      _ref = (cov_1l21obdbp7().s[16]++, briefing),
      /* istanbul ignore next */
      metadata = _ref.metadata;
    var
      /* istanbul ignore next */
      _ref2 = (cov_1l21obdbp7().s[17]++, config),
      /* istanbul ignore next */
      qualityThresholds = _ref2.qualityThresholds,
      /* istanbul ignore next */
      targetWordCount = _ref2.targetWordCount;
    /* istanbul ignore next */
    cov_1l21obdbp7().s[18]++;
    return /* istanbul ignore next */(cov_1l21obdbp7().b[0][0]++, metadata.wordCount >= targetWordCount.min) &&
    /* istanbul ignore next */
    (cov_1l21obdbp7().b[0][1]++, metadata.wordCount <= targetWordCount.max) &&
    /* istanbul ignore next */
    (cov_1l21obdbp7().b[0][2]++, metadata.terryScore >= qualityThresholds.minTerryScore) &&
    /* istanbul ignore next */
    (cov_1l21obdbp7().b[0][3]++, metadata.qualityMetrics.factualAccuracy >= qualityThresholds.minFactualAccuracy) &&
    /* istanbul ignore next */
    (cov_1l21obdbp7().b[0][4]++, metadata.qualityMetrics.brandVoice >= qualityThresholds.minBrandVoice) &&
    /* istanbul ignore next */
    (cov_1l21obdbp7().b[0][5]++, metadata.qualityMetrics.coherence >= qualityThresholds.minCoherence);
  }
});

// Default configuration for briefing generation
export var DEFAULT_BRIEFING_CONFIG =
/* istanbul ignore next */
(cov_1l21obdbp7().s[19]++, {
  targetWordCount: {
    min: 1200,
    max: 2500,
    ideal: 1800
  },
  qualityThresholds: {
    minTerryScore: 85,
    minFactualAccuracy: 80,
    minBrandVoice: 90,
    minCoherence: 85
  },
  contentMix: {
    maxPartnerContentRatio: 0.25,
    // 25% max partner content
    minShitTierMockery: 2,
    // At least 2 minutes of Fechejes mockery
    preferredSections: ["lead", "context", "analysis", "bullshit_corner"]
  },
  polaroidSettings: {
    maxPerBriefing: 8,
    rotationRange: {
      min: -8,
      max: 8
    },
    triggerThreshold: 1 // 1+ mentions triggers polaroid
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,