1ecb1ebfc666541f8fc0b8a03205963d
/* istanbul ignore next */
function cov_1weemmbyp4() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/players/playerDatabase.ts";
  var hash = "feb879370079402ec54612bedf22b51c9b333d2f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/players/playerDatabase.ts",
    statementMap: {
      "0": {
        start: {
          line: 28,
          column: 54
        },
        end: {
          line: 28,
          column: 63
        }
      },
      "1": {
        start: {
          line: 29,
          column: 52
        },
        end: {
          line: 29,
          column: 61
        }
      },
      "2": {
        start: {
          line: 30,
          column: 31
        },
        end: {
          line: 30,
          column: 36
        }
      },
      "3": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 33
        }
      },
      "4": {
        start: {
          line: 36,
          column: 26
        },
        end: {
          line: 36,
          column: 33
        }
      },
      "5": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 41
        }
      },
      "6": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 26
        }
      },
      "7": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 28
        }
      },
      "8": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 28
        }
      },
      "9": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 50,
          column: 52
        }
      },
      "10": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 59
        }
      },
      "11": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "12": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 54,
          column: 18
        }
      },
      "13": {
        start: {
          line: 58,
          column: 26
        },
        end: {
          line: 61,
          column: 7
        }
      },
      "14": {
        start: {
          line: 58,
          column: 54
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "15": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 62
        }
      },
      "16": {
        start: {
          line: 64,
          column: 33
        },
        end: {
          line: 64,
          column: 60
        }
      },
      "17": {
        start: {
          line: 66,
          column: 22
        },
        end: {
          line: 66,
          column: 38
        }
      },
      "18": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 57
        }
      },
      "19": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 28
        }
      },
      "20": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 40
        }
      },
      "21": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 28
        }
      },
      "22": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 40
        }
      },
      "23": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 32
        }
      },
      "24": {
        start: {
          line: 94,
          column: 56
        },
        end: {
          line: 295,
          column: 5
        }
      },
      "25": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 304,
          column: 7
        }
      },
      "26": {
        start: {
          line: 299,
          column: 35
        },
        end: {
          line: 302,
          column: 7
        }
      },
      "27": {
        start: {
          line: 303,
          column: 6
        },
        end: {
          line: 303,
          column: 42
        }
      },
      "28": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 311,
          column: 27
        }
      },
      "29": {
        start: {
          line: 313,
          column: 4
        },
        end: {
          line: 315,
          column: 5
        }
      },
      "30": {
        start: {
          line: 314,
          column: 6
        },
        end: {
          line: 314,
          column: 34
        }
      },
      "31": {
        start: {
          line: 322,
          column: 18
        },
        end: {
          line: 327,
          column: 5
        }
      },
      "32": {
        start: {
          line: 329,
          column: 4
        },
        end: {
          line: 338,
          column: 5
        }
      },
      "33": {
        start: {
          line: 330,
          column: 25
        },
        end: {
          line: 330,
          column: 49
        }
      },
      "34": {
        start: {
          line: 331,
          column: 6
        },
        end: {
          line: 333,
          column: 7
        }
      },
      "35": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 43
        }
      },
      "36": {
        start: {
          line: 334,
          column: 24
        },
        end: {
          line: 334,
          column: 55
        }
      },
      "37": {
        start: {
          line: 335,
          column: 6
        },
        end: {
          line: 337,
          column: 7
        }
      },
      "38": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 336,
          column: 34
        }
      },
      "39": {
        start: {
          line: 345,
          column: 26
        },
        end: {
          line: 345,
          column: 66
        }
      },
      "40": {
        start: {
          line: 346,
          column: 23
        },
        end: {
          line: 346,
          column: 45
        }
      },
      "41": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 353,
          column: 5
        }
      },
      "42": {
        start: {
          line: 350,
          column: 6
        },
        end: {
          line: 352,
          column: 7
        }
      },
      "43": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 351,
          column: 54
        }
      },
      "44": {
        start: {
          line: 351,
          column: 34
        },
        end: {
          line: 351,
          column: 52
        }
      },
      "45": {
        start: {
          line: 355,
          column: 4
        },
        end: {
          line: 357,
          column: 23
        }
      },
      "46": {
        start: {
          line: 356,
          column: 19
        },
        end: {
          line: 356,
          column: 40
        }
      },
      "47": {
        start: {
          line: 372,
          column: 18
        },
        end: {
          line: 385,
          column: 5
        }
      },
      "48": {
        start: {
          line: 375,
          column: 41
        },
        end: {
          line: 379,
          column: 7
        }
      },
      "49": {
        start: {
          line: 380,
          column: 39
        },
        end: {
          line: 384,
          column: 7
        }
      },
      "50": {
        start: {
          line: 387,
          column: 20
        },
        end: {
          line: 391,
          column: 5
        }
      },
      "51": {
        start: {
          line: 393,
          column: 4
        },
        end: {
          line: 419,
          column: 5
        }
      },
      "52": {
        start: {
          line: 394,
          column: 25
        },
        end: {
          line: 394,
          column: 49
        }
      },
      "53": {
        start: {
          line: 395,
          column: 23
        },
        end: {
          line: 395,
          column: 24
        }
      },
      "54": {
        start: {
          line: 397,
          column: 6
        },
        end: {
          line: 410,
          column: 7
        }
      },
      "55": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 398,
          column: 34
        }
      },
      "56": {
        start: {
          line: 399,
          column: 13
        },
        end: {
          line: 410,
          column: 7
        }
      },
      "57": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 34
        }
      },
      "58": {
        start: {
          line: 405,
          column: 27
        },
        end: {
          line: 408,
          column: 9
        }
      },
      "59": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 409,
          column: 47
        }
      },
      "60": {
        start: {
          line: 412,
          column: 6
        },
        end: {
          line: 418,
          column: 7
        }
      },
      "61": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 417,
          column: 10
        }
      },
      "62": {
        start: {
          line: 422,
          column: 4
        },
        end: {
          line: 424,
          column: 5
        }
      },
      "63": {
        start: {
          line: 423,
          column: 6
        },
        end: {
          line: 423,
          column: 71
        }
      },
      "64": {
        start: {
          line: 426,
          column: 4
        },
        end: {
          line: 426,
          column: 21
        }
      },
      "65": {
        start: {
          line: 433,
          column: 4
        },
        end: {
          line: 433,
          column: 59
        }
      },
      "66": {
        start: {
          line: 433,
          column: 46
        },
        end: {
          line: 433,
          column: 59
        }
      },
      "67": {
        start: {
          line: 436,
          column: 4
        },
        end: {
          line: 436,
          column: 68
        }
      },
      "68": {
        start: {
          line: 436,
          column: 56
        },
        end: {
          line: 436,
          column: 68
        }
      },
      "69": {
        start: {
          line: 439,
          column: 19
        },
        end: {
          line: 439,
          column: 35
        }
      },
      "70": {
        start: {
          line: 440,
          column: 19
        },
        end: {
          line: 440,
          column: 35
        }
      },
      "71": {
        start: {
          line: 442,
          column: 4
        },
        end: {
          line: 450,
          column: 5
        }
      },
      "72": {
        start: {
          line: 443,
          column: 6
        },
        end: {
          line: 449,
          column: 7
        }
      },
      "73": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 448,
          column: 9
        }
      },
      "74": {
        start: {
          line: 445,
          column: 10
        },
        end: {
          line: 447,
          column: 11
        }
      },
      "75": {
        start: {
          line: 446,
          column: 12
        },
        end: {
          line: 446,
          column: 24
        }
      },
      "76": {
        start: {
          line: 452,
          column: 4
        },
        end: {
          line: 452,
          column: 17
        }
      },
      "77": {
        start: {
          line: 459,
          column: 17
        },
        end: {
          line: 459,
          column: 28
        }
      },
      "78": {
        start: {
          line: 460,
          column: 17
        },
        end: {
          line: 460,
          column: 28
        }
      },
      "79": {
        start: {
          line: 462,
          column: 4
        },
        end: {
          line: 462,
          column: 46
        }
      },
      "80": {
        start: {
          line: 462,
          column: 20
        },
        end: {
          line: 462,
          column: 46
        }
      },
      "81": {
        start: {
          line: 463,
          column: 4
        },
        end: {
          line: 463,
          column: 29
        }
      },
      "82": {
        start: {
          line: 463,
          column: 20
        },
        end: {
          line: 463,
          column: 29
        }
      },
      "83": {
        start: {
          line: 465,
          column: 19
        },
        end: {
          line: 467,
          column: 41
        }
      },
      "84": {
        start: {
          line: 467,
          column: 17
        },
        end: {
          line: 467,
          column: 40
        }
      },
      "85": {
        start: {
          line: 469,
          column: 4
        },
        end: {
          line: 469,
          column: 53
        }
      },
      "86": {
        start: {
          line: 469,
          column: 17
        },
        end: {
          line: 469,
          column: 18
        }
      },
      "87": {
        start: {
          line: 469,
          column: 36
        },
        end: {
          line: 469,
          column: 53
        }
      },
      "88": {
        start: {
          line: 470,
          column: 4
        },
        end: {
          line: 470,
          column: 53
        }
      },
      "89": {
        start: {
          line: 470,
          column: 17
        },
        end: {
          line: 470,
          column: 18
        }
      },
      "90": {
        start: {
          line: 470,
          column: 36
        },
        end: {
          line: 470,
          column: 53
        }
      },
      "91": {
        start: {
          line: 472,
          column: 4
        },
        end: {
          line: 481,
          column: 5
        }
      },
      "92": {
        start: {
          line: 472,
          column: 17
        },
        end: {
          line: 472,
          column: 18
        }
      },
      "93": {
        start: {
          line: 473,
          column: 6
        },
        end: {
          line: 480,
          column: 7
        }
      },
      "94": {
        start: {
          line: 473,
          column: 19
        },
        end: {
          line: 473,
          column: 20
        }
      },
      "95": {
        start: {
          line: 474,
          column: 21
        },
        end: {
          line: 474,
          column: 56
        }
      },
      "96": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 479,
          column: 10
        }
      },
      "97": {
        start: {
          line: 483,
          column: 19
        },
        end: {
          line: 483,
          column: 39
        }
      },
      "98": {
        start: {
          line: 484,
          column: 4
        },
        end: {
          line: 484,
          column: 43
        }
      },
      "99": {
        start: {
          line: 491,
          column: 4
        },
        end: {
          line: 497,
          column: 14
        }
      },
      "100": {
        start: {
          line: 509,
          column: 4
        },
        end: {
          line: 509,
          column: 28
        }
      },
      "101": {
        start: {
          line: 511,
          column: 18
        },
        end: {
          line: 511,
          column: 43
        }
      },
      "102": {
        start: {
          line: 512,
          column: 22
        },
        end: {
          line: 512,
          column: 47
        }
      },
      "103": {
        start: {
          line: 514,
          column: 4
        },
        end: {
          line: 524,
          column: 5
        }
      },
      "104": {
        start: {
          line: 515,
          column: 6
        },
        end: {
          line: 517,
          column: 7
        }
      },
      "105": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 516,
          column: 80
        }
      },
      "106": {
        start: {
          line: 518,
          column: 6
        },
        end: {
          line: 523,
          column: 7
        }
      },
      "107": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 522,
          column: 10
        }
      },
      "108": {
        start: {
          line: 526,
          column: 21
        },
        end: {
          line: 529,
          column: 28
        }
      },
      "109": {
        start: {
          line: 527,
          column: 30
        },
        end: {
          line: 527,
          column: 35
        }
      },
      "110": {
        start: {
          line: 529,
          column: 23
        },
        end: {
          line: 529,
          column: 27
        }
      },
      "111": {
        start: {
          line: 531,
          column: 4
        },
        end: {
          line: 536,
          column: 6
        }
      },
      "112": {
        start: {
          line: 541,
          column: 26
        },
        end: {
          line: 541,
          column: 75
        }
      },
      "113": {
        start: {
          line: 541,
          column: 44
        },
        end: {
          line: 541,
          column: 75
        }
      },
      "114": {
        start: {
          line: 542,
          column: 25
        },
        end: {
          line: 542,
          column: 69
        }
      },
      "115": {
        start: {
          line: 542,
          column: 41
        },
        end: {
          line: 542,
          column: 69
        }
      },
      "116": {
        start: {
          line: 543,
          column: 25
        },
        end: {
          line: 544,
          column: 34
        }
      },
      "117": {
        start: {
          line: 544,
          column: 2
        },
        end: {
          line: 544,
          column: 34
        }
      },
      "118": {
        start: {
          line: 545,
          column: 30
        },
        end: {
          line: 545,
          column: 61
        }
      },
      "119": {
        start: {
          line: 545,
          column: 36
        },
        end: {
          line: 545,
          column: 61
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 35,
            column: 3
          }
        },
        loc: {
          start: {
            line: 35,
            column: 43
          },
          end: {
            line: 42,
            column: 3
          }
        },
        line: 35
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        },
        loc: {
          start: {
            line: 47,
            column: 69
          },
          end: {
            line: 68,
            column: 3
          }
        },
        line: 47
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 58,
            column: 41
          },
          end: {
            line: 58,
            column: 42
          }
        },
        loc: {
          start: {
            line: 58,
            column: 54
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 58
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 64,
            column: 23
          },
          end: {
            line: 64,
            column: 24
          }
        },
        loc: {
          start: {
            line: 64,
            column: 33
          },
          end: {
            line: 64,
            column: 60
          }
        },
        line: 64
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 73,
            column: 2
          },
          end: {
            line: 73,
            column: 3
          }
        },
        loc: {
          start: {
            line: 73,
            column: 67
          },
          end: {
            line: 76,
            column: 3
          }
        },
        line: 73
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 81,
            column: 2
          },
          end: {
            line: 81,
            column: 3
          }
        },
        loc: {
          start: {
            line: 81,
            column: 62
          },
          end: {
            line: 86,
            column: 3
          }
        },
        line: 81
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 91,
            column: 2
          },
          end: {
            line: 91,
            column: 3
          }
        },
        loc: {
          start: {
            line: 91,
            column: 64
          },
          end: {
            line: 305,
            column: 3
          }
        },
        line: 91
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 298,
            column: 28
          },
          end: {
            line: 298,
            column: 29
          }
        },
        loc: {
          start: {
            line: 298,
            column: 51
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 298
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 310,
            column: 2
          },
          end: {
            line: 310,
            column: 3
          }
        },
        loc: {
          start: {
            line: 310,
            column: 40
          },
          end: {
            line: 316,
            column: 3
          }
        },
        line: 310
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 321,
            column: 2
          },
          end: {
            line: 321,
            column: 3
          }
        },
        loc: {
          start: {
            line: 321,
            column: 60
          },
          end: {
            line: 339,
            column: 3
          }
        },
        line: 321
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 344,
            column: 2
          },
          end: {
            line: 344,
            column: 3
          }
        },
        loc: {
          start: {
            line: 344,
            column: 72
          },
          end: {
            line: 358,
            column: 3
          }
        },
        line: 344
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 351,
            column: 26
          },
          end: {
            line: 351,
            column: 27
          }
        },
        loc: {
          start: {
            line: 351,
            column: 34
          },
          end: {
            line: 351,
            column: 52
          }
        },
        line: 351
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 356,
            column: 11
          },
          end: {
            line: 356,
            column: 12
          }
        },
        loc: {
          start: {
            line: 356,
            column: 19
          },
          end: {
            line: 356,
            column: 40
          }
        },
        line: 356
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 363,
            column: 2
          },
          end: {
            line: 363,
            column: 3
          }
        },
        loc: {
          start: {
            line: 371,
            column: 4
          },
          end: {
            line: 427,
            column: 3
          }
        },
        line: 371
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 375,
            column: 30
          },
          end: {
            line: 375,
            column: 31
          }
        },
        loc: {
          start: {
            line: 375,
            column: 41
          },
          end: {
            line: 379,
            column: 7
          }
        },
        line: 375
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 380,
            column: 28
          },
          end: {
            line: 380,
            column: 29
          }
        },
        loc: {
          start: {
            line: 380,
            column: 39
          },
          end: {
            line: 384,
            column: 7
          }
        },
        line: 380
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 432,
            column: 2
          },
          end: {
            line: 432,
            column: 3
          }
        },
        loc: {
          start: {
            line: 432,
            column: 69
          },
          end: {
            line: 453,
            column: 3
          }
        },
        line: 432
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 458,
            column: 2
          },
          end: {
            line: 458,
            column: 3
          }
        },
        loc: {
          start: {
            line: 458,
            column: 79
          },
          end: {
            line: 485,
            column: 3
          }
        },
        line: 458
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 467,
            column: 11
          },
          end: {
            line: 467,
            column: 12
          }
        },
        loc: {
          start: {
            line: 467,
            column: 17
          },
          end: {
            line: 467,
            column: 40
          }
        },
        line: 467
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 490,
            column: 2
          },
          end: {
            line: 490,
            column: 3
          }
        },
        loc: {
          start: {
            line: 490,
            column: 53
          },
          end: {
            line: 498,
            column: 3
          }
        },
        line: 490
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 503,
            column: 2
          },
          end: {
            line: 503,
            column: 3
          }
        },
        loc: {
          start: {
            line: 508,
            column: 5
          },
          end: {
            line: 537,
            column: 3
          }
        },
        line: 508
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 527,
            column: 12
          },
          end: {
            line: 527,
            column: 13
          }
        },
        loc: {
          start: {
            line: 527,
            column: 30
          },
          end: {
            line: 527,
            column: 35
          }
        },
        line: 527
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 529,
            column: 11
          },
          end: {
            line: 529,
            column: 12
          }
        },
        loc: {
          start: {
            line: 529,
            column: 23
          },
          end: {
            line: 529,
            column: 27
          }
        },
        line: 529
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 541,
            column: 26
          },
          end: {
            line: 541,
            column: 27
          }
        },
        loc: {
          start: {
            line: 541,
            column: 44
          },
          end: {
            line: 541,
            column: 75
          }
        },
        line: 541
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 542,
            column: 25
          },
          end: {
            line: 542,
            column: 26
          }
        },
        loc: {
          start: {
            line: 542,
            column: 41
          },
          end: {
            line: 542,
            column: 69
          }
        },
        line: 542
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 543,
            column: 25
          },
          end: {
            line: 543,
            column: 26
          }
        },
        loc: {
          start: {
            line: 544,
            column: 2
          },
          end: {
            line: 544,
            column: 34
          }
        },
        line: 544
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 545,
            column: 30
          },
          end: {
            line: 545,
            column: 31
          }
        },
        loc: {
          start: {
            line: 545,
            column: 36
          },
          end: {
            line: 545,
            column: 61
          }
        },
        line: 545
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "2": {
        loc: {
          start: {
            line: 67,
            column: 11
          },
          end: {
            line: 67,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 40
          },
          end: {
            line: 67,
            column: 49
          }
        }, {
          start: {
            line: 67,
            column: 52
          },
          end: {
            line: 67,
            column: 56
          }
        }],
        line: 67
      },
      "3": {
        loc: {
          start: {
            line: 75,
            column: 11
          },
          end: {
            line: 75,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 11
          },
          end: {
            line: 75,
            column: 31
          }
        }, {
          start: {
            line: 75,
            column: 35
          },
          end: {
            line: 75,
            column: 39
          }
        }],
        line: 75
      },
      "4": {
        loc: {
          start: {
            line: 331,
            column: 6
          },
          end: {
            line: 333,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 6
          },
          end: {
            line: 333,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "5": {
        loc: {
          start: {
            line: 335,
            column: 6
          },
          end: {
            line: 337,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 6
          },
          end: {
            line: 337,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "6": {
        loc: {
          start: {
            line: 345,
            column: 26
          },
          end: {
            line: 345,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 26
          },
          end: {
            line: 345,
            column: 60
          }
        }, {
          start: {
            line: 345,
            column: 64
          },
          end: {
            line: 345,
            column: 66
          }
        }],
        line: 345
      },
      "7": {
        loc: {
          start: {
            line: 350,
            column: 6
          },
          end: {
            line: 352,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 350,
            column: 6
          },
          end: {
            line: 352,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 350
      },
      "8": {
        loc: {
          start: {
            line: 397,
            column: 6
          },
          end: {
            line: 410,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 397,
            column: 6
          },
          end: {
            line: 410,
            column: 7
          }
        }, {
          start: {
            line: 399,
            column: 13
          },
          end: {
            line: 410,
            column: 7
          }
        }],
        line: 397
      },
      "9": {
        loc: {
          start: {
            line: 399,
            column: 13
          },
          end: {
            line: 410,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 399,
            column: 13
          },
          end: {
            line: 410,
            column: 7
          }
        }, {
          start: {
            line: 404,
            column: 13
          },
          end: {
            line: 410,
            column: 7
          }
        }],
        line: 399
      },
      "10": {
        loc: {
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 401,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 400,
            column: 44
          }
        }, {
          start: {
            line: 401,
            column: 8
          },
          end: {
            line: 401,
            column: 44
          }
        }],
        line: 400
      },
      "11": {
        loc: {
          start: {
            line: 412,
            column: 6
          },
          end: {
            line: 418,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 6
          },
          end: {
            line: 418,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 412
      },
      "12": {
        loc: {
          start: {
            line: 422,
            column: 4
          },
          end: {
            line: 424,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 4
          },
          end: {
            line: 424,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "13": {
        loc: {
          start: {
            line: 433,
            column: 4
          },
          end: {
            line: 433,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 433,
            column: 4
          },
          end: {
            line: 433,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 433
      },
      "14": {
        loc: {
          start: {
            line: 433,
            column: 8
          },
          end: {
            line: 433,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 433,
            column: 8
          },
          end: {
            line: 433,
            column: 24
          }
        }, {
          start: {
            line: 433,
            column: 28
          },
          end: {
            line: 433,
            column: 44
          }
        }],
        line: 433
      },
      "15": {
        loc: {
          start: {
            line: 436,
            column: 4
          },
          end: {
            line: 436,
            column: 68
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 436,
            column: 4
          },
          end: {
            line: 436,
            column: 68
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 436
      },
      "16": {
        loc: {
          start: {
            line: 436,
            column: 8
          },
          end: {
            line: 436,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 436,
            column: 8
          },
          end: {
            line: 436,
            column: 29
          }
        }, {
          start: {
            line: 436,
            column: 33
          },
          end: {
            line: 436,
            column: 54
          }
        }],
        line: 436
      },
      "17": {
        loc: {
          start: {
            line: 444,
            column: 8
          },
          end: {
            line: 448,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 444,
            column: 8
          },
          end: {
            line: 448,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 444
      },
      "18": {
        loc: {
          start: {
            line: 444,
            column: 12
          },
          end: {
            line: 444,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 444,
            column: 12
          },
          end: {
            line: 444,
            column: 28
          }
        }, {
          start: {
            line: 444,
            column: 32
          },
          end: {
            line: 444,
            column: 48
          }
        }],
        line: 444
      },
      "19": {
        loc: {
          start: {
            line: 445,
            column: 10
          },
          end: {
            line: 447,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 445,
            column: 10
          },
          end: {
            line: 447,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 445
      },
      "20": {
        loc: {
          start: {
            line: 462,
            column: 4
          },
          end: {
            line: 462,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 462,
            column: 4
          },
          end: {
            line: 462,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 462
      },
      "21": {
        loc: {
          start: {
            line: 462,
            column: 27
          },
          end: {
            line: 462,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 462,
            column: 40
          },
          end: {
            line: 462,
            column: 41
          }
        }, {
          start: {
            line: 462,
            column: 44
          },
          end: {
            line: 462,
            column: 45
          }
        }],
        line: 462
      },
      "22": {
        loc: {
          start: {
            line: 463,
            column: 4
          },
          end: {
            line: 463,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 463,
            column: 4
          },
          end: {
            line: 463,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 463
      },
      "23": {
        loc: {
          start: {
            line: 474,
            column: 21
          },
          end: {
            line: 474,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 474,
            column: 51
          },
          end: {
            line: 474,
            column: 52
          }
        }, {
          start: {
            line: 474,
            column: 55
          },
          end: {
            line: 474,
            column: 56
          }
        }],
        line: 474
      },
      "24": {
        loc: {
          start: {
            line: 515,
            column: 6
          },
          end: {
            line: 517,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 515,
            column: 6
          },
          end: {
            line: 517,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 515
      },
      "25": {
        loc: {
          start: {
            line: 516,
            column: 39
          },
          end: {
            line: 516,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 516,
            column: 39
          },
          end: {
            line: 516,
            column: 68
          }
        }, {
          start: {
            line: 516,
            column: 72
          },
          end: {
            line: 516,
            column: 73
          }
        }],
        line: 516
      },
      "26": {
        loc: {
          start: {
            line: 518,
            column: 6
          },
          end: {
            line: 523,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 518,
            column: 6
          },
          end: {
            line: 523,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 518
      },
      "27": {
        loc: {
          start: {
            line: 521,
            column: 11
          },
          end: {
            line: 521,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 521,
            column: 11
          },
          end: {
            line: 521,
            column: 41
          }
        }, {
          start: {
            line: 521,
            column: 45
          },
          end: {
            line: 521,
            column: 46
          }
        }],
        line: 521
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "feb879370079402ec54612bedf22b51c9b333d2f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1weemmbyp4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1weemmbyp4();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Enhanced Player Database and Name Matching System
 * Handles player name variations, nicknames, and intelligent matching
 */

export
/* istanbul ignore next */
var PlayerDatabase = /*#__PURE__*/function () {
  function PlayerDatabase() {
    _classCallCheck(this, PlayerDatabase);
  }
  return _createClass(PlayerDatabase, null, [{
    key: "initialize",
    value: (
    /**
     * Initialize with comprehensive player database
     */
    function () {
      var _initialize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee()
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              cov_1weemmbyp4().f[0]++;
              cov_1weemmbyp4().s[3]++;
              if (!this.initialized) {
                _context.n = 1;
                break;
              }
              cov_1weemmbyp4().b[0][0]++;
              cov_1weemmbyp4().s[4]++;
              return _context.a(2);
            case 1:
              cov_1weemmbyp4().b[0][1]++;
            case 2:
              cov_1weemmbyp4().s[5]++;
              _context.n = 3;
              return this.loadCorePlayersDatabase();
            case 3:
              cov_1weemmbyp4().s[6]++;
              this.buildNameIndex();
              cov_1weemmbyp4().s[7]++;
              this.initialized = true;
            case 4:
              return _context.a(2);
          }
        }, _callee, this);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
    /**
     * Find the best player match for a given name
     */
    )
  }, {
    key: "findPlayer",
    value: (function () {
      var _findPlayer = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(name)
      /* istanbul ignore next */
      {
        var _this = this;
        var normalizedInput, candidates, scoredMatches, bestMatch;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              cov_1weemmbyp4().f[1]++;
              cov_1weemmbyp4().s[8]++;
              _context2.n = 1;
              return this.initialize();
            case 1:
              normalizedInput = (cov_1weemmbyp4().s[9]++, this.normalizeName(name));
              candidates = (cov_1weemmbyp4().s[10]++, this.findCandidates(normalizedInput));
              cov_1weemmbyp4().s[11]++;
              if (!(candidates.length === 0)) {
                _context2.n = 2;
                break;
              }
              cov_1weemmbyp4().b[1][0]++;
              cov_1weemmbyp4().s[12]++;
              return _context2.a(2, null);
            case 2:
              cov_1weemmbyp4().b[1][1]++;
            case 3:
              // Score all candidates
              scoredMatches = (cov_1weemmbyp4().s[13]++, candidates.map(function (player) {
                /* istanbul ignore next */
                cov_1weemmbyp4().f[2]++;
                cov_1weemmbyp4().s[14]++;
                return /* istanbul ignore next */_objectSpread({
                  player: player
                }, _this.calculateMatchScore(normalizedInput, name, player));
              })); // Sort by confidence and return best match
              cov_1weemmbyp4().s[15]++;
              scoredMatches.sort(function (a, b) {
                /* istanbul ignore next */
                cov_1weemmbyp4().f[3]++;
                cov_1weemmbyp4().s[16]++;
                return b.confidence - a.confidence;
              });
              bestMatch = (cov_1weemmbyp4().s[17]++, scoredMatches[0]);
              cov_1weemmbyp4().s[18]++;
              return _context2.a(2, bestMatch.confidence > 0.3 ?
              /* istanbul ignore next */
              (cov_1weemmbyp4().b[2][0]++, bestMatch) :
              /* istanbul ignore next */
              (cov_1weemmbyp4().b[2][1]++, null));
          }
        }, _callee2, this);
      }));
      function findPlayer(_x) {
        return _findPlayer.apply(this, arguments);
      }
      return findPlayer;
    }()
    /**
     * Get player by exact ID
     */
    )
  }, {
    key: "getPlayer",
    value: (function () {
      var _getPlayer = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3(id)
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              cov_1weemmbyp4().f[4]++;
              cov_1weemmbyp4().s[19]++;
              _context3.n = 1;
              return this.initialize();
            case 1:
              cov_1weemmbyp4().s[20]++;
              return _context3.a(2,
              /* istanbul ignore next */
              (cov_1weemmbyp4().b[3][0]++, this.players.get(id)) ||
              /* istanbul ignore next */
              (cov_1weemmbyp4().b[3][1]++, null));
          }
        }, _callee3, this);
      }));
      function getPlayer(_x2) {
        return _getPlayer.apply(this, arguments);
      }
      return getPlayer;
    }()
    /**
     * Add or update a player record
     */
    )
  }, {
    key: "addPlayer",
    value: (function () {
      var _addPlayer = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4(player)
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_1weemmbyp4().f[5]++;
              cov_1weemmbyp4().s[21]++;
              _context4.n = 1;
              return this.initialize();
            case 1:
              cov_1weemmbyp4().s[22]++;
              this.players.set(player.id, player);
              cov_1weemmbyp4().s[23]++;
              this.addToNameIndex(player);
            case 2:
              return _context4.a(2);
          }
        }, _callee4, this);
      }));
      function addPlayer(_x3) {
        return _addPlayer.apply(this, arguments);
      }
      return addPlayer;
    }()
    /**
     * Load core players database
     */
    )
  }, {
    key: "loadCorePlayersDatabase",
    value: (function () {
      var _loadCorePlayersDatabase = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee5()
      /* istanbul ignore next */
      {
        var _this2 = this;
        var corePlayersData;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              cov_1weemmbyp4().f[6]++;
              // This would typically load from a file or API
              // For now, we'll define a comprehensive list of current top players
              corePlayersData = (cov_1weemmbyp4().s[24]++, [
              // Premier League Stars
              {
                fullName: "Erling Braut Haaland",
                commonName: "Erling Haaland",
                nicknames: ["Haaland", "The Terminator", "The Machine"],
                aliases: ["Erling Haaland", "E. Haaland"],
                currentClub: "Manchester City",
                nationality: "Norway",
                position: "Striker",
                birthYear: 2000,
                wikipediaTitle: "Erling Haaland"
              }, {
                fullName: "Kylian Mbappé Lottin",
                commonName: "Kylian Mbappé",
                nicknames: ["Mbappé", "Kylian", "Donatello"],
                aliases: ["Kylian Mbappe", "K. Mbappé", "Mbappe"],
                currentClub: "Paris Saint-Germain",
                nationality: "France",
                position: "Forward",
                birthYear: 1998,
                wikipediaTitle: "Kylian Mbappé"
              }, {
                fullName: "Jude Victor William Bellingham",
                commonName: "Jude Bellingham",
                nicknames: ["Bellingham", "Jude"],
                aliases: ["J. Bellingham"],
                currentClub: "Real Madrid",
                nationality: "England",
                position: "Midfielder",
                birthYear: 2003,
                wikipediaTitle: "Jude Bellingham"
              }, {
                fullName: "Harry Edward Kane",
                commonName: "Harry Kane",
                nicknames: ["Kane", "Harry", "Hurricane"],
                aliases: ["H. Kane"],
                currentClub: "Bayern Munich",
                nationality: "England",
                position: "Striker",
                birthYear: 1993,
                wikipediaTitle: "Harry Kane"
              }, {
                fullName: "Mohamed Salah Hamed Mahrous Ghaly",
                commonName: "Mohamed Salah",
                nicknames: ["Salah", "Mo Salah", "The Egyptian King"],
                aliases: ["M. Salah", "Mohammed Salah"],
                currentClub: "Liverpool",
                nationality: "Egypt",
                position: "Winger",
                birthYear: 1992,
                wikipediaTitle: "Mohamed Salah"
              }, {
                fullName: "Vinícius José Paixão de Oliveira Júnior",
                commonName: "Vinícius Júnior",
                nicknames: ["Vinicius Jr", "Vini Jr", "Vinicius"],
                aliases: ["Vinicius Junior", "V. Júnior", "Vini"],
                currentClub: "Real Madrid",
                nationality: "Brazil",
                position: "Winger",
                birthYear: 2000,
                wikipediaTitle: "Vinícius Júnior"
              }, {
                fullName: "Pedro González López",
                commonName: "Pedri",
                nicknames: ["Pedri", "Pedro"],
                aliases: ["P. González"],
                currentClub: "Barcelona",
                nationality: "Spain",
                position: "Midfielder",
                birthYear: 2002,
                wikipediaTitle: "Pedri"
              }, {
                fullName: "Pablo Martín Páez Gavira",
                commonName: "Gavi",
                nicknames: ["Gavi", "Pablo Gavi"],
                aliases: ["P. Gavira"],
                currentClub: "Barcelona",
                nationality: "Spain",
                position: "Midfielder",
                birthYear: 2004,
                wikipediaTitle: "Gavi (footballer)"
              }, {
                fullName: "Jamal Musiala",
                commonName: "Jamal Musiala",
                nicknames: ["Musiala", "Jamal"],
                aliases: ["J. Musiala"],
                currentClub: "Bayern Munich",
                nationality: "Germany",
                position: "Attacking Midfielder",
                birthYear: 2003,
                wikipediaTitle: "Jamal Musiala"
              }, {
                fullName: "Eduardo Celmi Camavinga",
                commonName: "Eduardo Camavinga",
                nicknames: ["Camavinga", "Eduardo"],
                aliases: ["E. Camavinga"],
                currentClub: "Real Madrid",
                nationality: "France",
                position: "Midfielder",
                birthYear: 2002,
                wikipediaTitle: "Eduardo Camavinga"
              }, {
                fullName: "Victor James Osimhen",
                commonName: "Victor Osimhen",
                nicknames: ["Osimhen", "Victor"],
                aliases: ["V. Osimhen"],
                currentClub: "Napoli",
                nationality: "Nigeria",
                position: "Striker",
                birthYear: 1998,
                wikipediaTitle: "Victor Osimhen"
              }, {
                fullName: "Rafael Alexandre da Conceição Leão",
                commonName: "Rafael Leão",
                nicknames: ["Leão", "Rafael", "Leao"],
                aliases: ["R. Leão", "Rafael Leao"],
                currentClub: "AC Milan",
                nationality: "Portugal",
                position: "Winger",
                birthYear: 1999,
                wikipediaTitle: "Rafael Leão"
              }, {
                fullName: "Khvicha Kvaratskhelia",
                commonName: "Khvicha Kvaratskhelia",
                nicknames: ["Kvaratskhelia", "Kvara", "Kvaradona"],
                aliases: ["K. Kvaratskhelia"],
                currentClub: "Napoli",
                nationality: "Georgia",
                position: "Winger",
                birthYear: 2001,
                wikipediaTitle: "Khvicha Kvaratskhelia"
              }, {
                fullName: "Dušan Vlahović",
                commonName: "Dušan Vlahović",
                nicknames: ["Vlahović", "Dusan", "Vlahovic"],
                aliases: ["D. Vlahović", "Dusan Vlahovic"],
                currentClub: "Juventus",
                nationality: "Serbia",
                position: "Striker",
                birthYear: 2000,
                wikipediaTitle: "Dušan Vlahović"
              }, {
                fullName: "Bukayo Ayoyinka Temidayo Saka",
                commonName: "Bukayo Saka",
                nicknames: ["Saka", "Bukayo"],
                aliases: ["B. Saka"],
                currentClub: "Arsenal",
                nationality: "England",
                position: "Winger",
                birthYear: 2001,
                wikipediaTitle: "Bukayo Saka"
              }, {
                fullName: "Philip Walter Foden",
                commonName: "Phil Foden",
                nicknames: ["Foden", "Phil", "The Stockport Iniesta"],
                aliases: ["P. Foden", "Philip Foden"],
                currentClub: "Manchester City",
                nationality: "England",
                position: "Midfielder",
                birthYear: 2000,
                wikipediaTitle: "Phil Foden"
              }, {
                fullName: "Florian Richard Wirtz",
                commonName: "Florian Wirtz",
                nicknames: ["Wirtz", "Florian"],
                aliases: ["F. Wirtz"],
                currentClub: "Bayer Leverkusen",
                nationality: "Germany",
                position: "Attacking Midfielder",
                birthYear: 2003,
                wikipediaTitle: "Florian Wirtz"
              }, {
                fullName: "Youssoufa Moukoko",
                commonName: "Youssoufa Moukoko",
                nicknames: ["Moukoko", "Youssoufa"],
                aliases: ["Y. Moukoko"],
                currentClub: "Borussia Dortmund",
                nationality: "Germany",
                position: "Striker",
                birthYear: 2004,
                wikipediaTitle: "Youssoufa Moukoko"
              }
              // Add more players as needed...
              ]); // Convert to full PlayerRecord format and add to database
              cov_1weemmbyp4().s[25]++;
              corePlayersData.forEach(function (playerData, index) {
                /* istanbul ignore next */
                cov_1weemmbyp4().f[7]++;
                var player =
                /* istanbul ignore next */
                (cov_1weemmbyp4().s[26]++, _objectSpread({
                  id:
                  /* istanbul ignore next */
                  "player-".concat(index + 1)
                }, playerData));
                /* istanbul ignore next */
                cov_1weemmbyp4().s[27]++;
                _this2.players.set(player.id, player);
              });
            case 1:
              return _context5.a(2);
          }
        }, _callee5);
      }));
      function loadCorePlayersDatabase() {
        return _loadCorePlayersDatabase.apply(this, arguments);
      }
      return loadCorePlayersDatabase;
    }()
    /**
     * Build name index for fast lookup
     */
    )
  }, {
    key: "buildNameIndex",
    value: function buildNameIndex() {
      /* istanbul ignore next */
      cov_1weemmbyp4().f[8]++;
      cov_1weemmbyp4().s[28]++;
      this.nameIndex.clear();
      /* istanbul ignore next */
      cov_1weemmbyp4().s[29]++;
      var _iterator = _createForOfIteratorHelper(this.players.values()),
        _step;
      /* istanbul ignore next */
      try {
        for (
        /* istanbul ignore next */
        _iterator.s();
        /* istanbul ignore next */
        !(_step = _iterator.n()).done;) {
          /* istanbul ignore next */
          var player = _step.value;
          /* istanbul ignore next */
          cov_1weemmbyp4().s[30]++;
          this.addToNameIndex(player);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }

    /**
     * Add player to name index
     */
  }, {
    key: "addToNameIndex",
    value: function addToNameIndex(player) {
      /* istanbul ignore next */
      cov_1weemmbyp4().f[9]++;
      var names =
      /* istanbul ignore next */
      (cov_1weemmbyp4().s[31]++, [player.fullName, player.commonName].concat(_toConsumableArray(player.nicknames), _toConsumableArray(player.aliases)));
      /* istanbul ignore next */
      cov_1weemmbyp4().s[32]++;
      var _iterator2 = _createForOfIteratorHelper(names),
        _step2;
      /* istanbul ignore next */
      try {
        for (
        /* istanbul ignore next */
        _iterator2.s();
        /* istanbul ignore next */
        !(_step2 = _iterator2.n()).done;) {
          /* istanbul ignore next */
          var name = _step2.value;
          var normalized =
          /* istanbul ignore next */
          (cov_1weemmbyp4().s[33]++, this.normalizeName(name));
          /* istanbul ignore next */
          cov_1weemmbyp4().s[34]++;
          if (!this.nameIndex.has(normalized)) {
            /* istanbul ignore next */
            cov_1weemmbyp4().b[4][0]++;
            cov_1weemmbyp4().s[35]++;
            this.nameIndex.set(normalized, []);
          } else
          /* istanbul ignore next */
          {
            cov_1weemmbyp4().b[4][1]++;
          }
          var playerIds =
          /* istanbul ignore next */
          (cov_1weemmbyp4().s[36]++, this.nameIndex.get(normalized));
          /* istanbul ignore next */
          cov_1weemmbyp4().s[37]++;
          if (!playerIds.includes(player.id)) {
            /* istanbul ignore next */
            cov_1weemmbyp4().b[5][0]++;
            cov_1weemmbyp4().s[38]++;
            playerIds.push(player.id);
          } else
          /* istanbul ignore next */
          {
            cov_1weemmbyp4().b[5][1]++;
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }

    /**
     * Find candidate players for a name
     */
  }, {
    key: "findCandidates",
    value: function findCandidates(normalizedName) {
      /* istanbul ignore next */
      var _this3 = this;
      cov_1weemmbyp4().f[10]++;
      var directMatches =
      /* istanbul ignore next */
      (cov_1weemmbyp4().s[39]++,
      /* istanbul ignore next */
      (cov_1weemmbyp4().b[6][0]++, this.nameIndex.get(normalizedName)) ||
      /* istanbul ignore next */
      (cov_1weemmbyp4().b[6][1]++, []));
      var candidates =
      /* istanbul ignore next */
      (cov_1weemmbyp4().s[40]++, new Set(directMatches));

      // Add fuzzy matches
      /* istanbul ignore next */
      cov_1weemmbyp4().s[41]++;
      var _iterator3 = _createForOfIteratorHelper(this.nameIndex.entries()),
        _step3;
      /* istanbul ignore next */
      try {
        for (
        /* istanbul ignore next */
        _iterator3.s();
        /* istanbul ignore next */
        !(_step3 = _iterator3.n()).done;) {
          /* istanbul ignore next */
          var _step3$value = _slicedToArray(_step3.value, 2),
            indexedName = _step3$value[0],
            playerIds = _step3$value[1];
          /* istanbul ignore next */
          cov_1weemmbyp4().s[42]++;
          if (this.isFuzzyMatch(normalizedName, indexedName)) {
            /* istanbul ignore next */
            cov_1weemmbyp4().b[7][0]++;
            cov_1weemmbyp4().s[43]++;
            playerIds.forEach(function (id) {
              /* istanbul ignore next */
              cov_1weemmbyp4().f[11]++;
              cov_1weemmbyp4().s[44]++;
              return candidates.add(id);
            });
          } else
          /* istanbul ignore next */
          {
            cov_1weemmbyp4().b[7][1]++;
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      /* istanbul ignore next */
      cov_1weemmbyp4().s[45]++;
      return Array.from(candidates).map(function (id) {
        /* istanbul ignore next */
        cov_1weemmbyp4().f[12]++;
        cov_1weemmbyp4().s[46]++;
        return _this3.players.get(id);
      }).filter(Boolean);
    }

    /**
     * Calculate match score for a player
     */
  }, {
    key: "calculateMatchScore",
    value: function calculateMatchScore(normalizedInput, originalInput, player) {
      /* istanbul ignore next */
      cov_1weemmbyp4().f[13]++;
      var names =
      /* istanbul ignore next */
      (cov_1weemmbyp4().s[47]++, [{
        name: player.fullName,
        type: "exact",
        weight: 1.0
      }, {
        name: player.commonName,
        type: "common",
        weight: 0.9
      }].concat(_toConsumableArray(player.nicknames.map(function (name) {
        /* istanbul ignore next */
        cov_1weemmbyp4().f[14]++;
        cov_1weemmbyp4().s[48]++;
        return {
          name: name,
          type: "nickname",
          weight: 0.8
        };
      })), _toConsumableArray(player.aliases.map(function (name) {
        /* istanbul ignore next */
        cov_1weemmbyp4().f[15]++;
        cov_1weemmbyp4().s[49]++;
        return {
          name: name,
          type: "alias",
          weight: 0.7
        };
      }))));
      var bestMatch =
      /* istanbul ignore next */
      (cov_1weemmbyp4().s[50]++, {
        confidence: 0,
        matchedName: "",
        matchType: "fuzzy"
      });
      /* istanbul ignore next */
      cov_1weemmbyp4().s[51]++;
      var _iterator4 = _createForOfIteratorHelper(names),
        _step4;
      /* istanbul ignore next */
      try {
        for (
        /* istanbul ignore next */
        _iterator4.s();
        /* istanbul ignore next */
        !(_step4 = _iterator4.n()).done;) {
          /* istanbul ignore next */
          var _step4$value = _step4.value,
            name = _step4$value.name,
            type = _step4$value.type,
            weight = _step4$value.weight;
          var normalized =
          /* istanbul ignore next */
          (cov_1weemmbyp4().s[52]++, this.normalizeName(name));
          var confidence =
          /* istanbul ignore next */
          (cov_1weemmbyp4().s[53]++, 0);
          /* istanbul ignore next */
          cov_1weemmbyp4().s[54]++;
          if (normalized === normalizedInput) {
            /* istanbul ignore next */
            cov_1weemmbyp4().b[8][0]++;
            cov_1weemmbyp4().s[55]++;
            confidence = 1.0 * weight;
          } else {
            /* istanbul ignore next */
            cov_1weemmbyp4().b[8][1]++;
            cov_1weemmbyp4().s[56]++;
            if (
            /* istanbul ignore next */
            (cov_1weemmbyp4().b[10][0]++, normalized.includes(normalizedInput)) ||
            /* istanbul ignore next */
            (cov_1weemmbyp4().b[10][1]++, normalizedInput.includes(normalized))) {
              /* istanbul ignore next */
              cov_1weemmbyp4().b[9][0]++;
              cov_1weemmbyp4().s[57]++;
              confidence = 0.8 * weight;
            } else {
              /* istanbul ignore next */
              cov_1weemmbyp4().b[9][1]++;
              var similarity =
              /* istanbul ignore next */
              (cov_1weemmbyp4().s[58]++, this.calculateStringSimilarity(normalizedInput, normalized));
              /* istanbul ignore next */
              cov_1weemmbyp4().s[59]++;
              confidence = similarity * weight * 0.6; // Fuzzy matches get lower confidence
            }
          }
          /* istanbul ignore next */
          cov_1weemmbyp4().s[60]++;
          if (confidence > bestMatch.confidence) {
            /* istanbul ignore next */
            cov_1weemmbyp4().b[11][0]++;
            cov_1weemmbyp4().s[61]++;
            bestMatch = {
              confidence: confidence,
              matchedName: name,
              matchType: type
            };
          } else
          /* istanbul ignore next */
          {
            cov_1weemmbyp4().b[11][1]++;
          }
        }

        // Boost confidence for exact original input matches
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
      /* istanbul ignore next */
      cov_1weemmbyp4().s[62]++;
      if (originalInput.toLowerCase() === bestMatch.matchedName.toLowerCase()) {
        /* istanbul ignore next */
        cov_1weemmbyp4().b[12][0]++;
        cov_1weemmbyp4().s[63]++;
        bestMatch.confidence = Math.min(bestMatch.confidence * 1.2, 1.0);
      } else
      /* istanbul ignore next */
      {
        cov_1weemmbyp4().b[12][1]++;
      }
      cov_1weemmbyp4().s[64]++;
      return bestMatch;
    }

    /**
     * Check if two normalized names are a fuzzy match
     */
  }, {
    key: "isFuzzyMatch",
    value: function isFuzzyMatch(name1, name2) {
      /* istanbul ignore next */
      cov_1weemmbyp4().f[16]++;
      cov_1weemmbyp4().s[65]++;
      if (
      /* istanbul ignore next */
      (cov_1weemmbyp4().b[14][0]++, name1.length < 3) ||
      /* istanbul ignore next */
      (cov_1weemmbyp4().b[14][1]++, name2.length < 3)) {
        /* istanbul ignore next */
        cov_1weemmbyp4().b[13][0]++;
        cov_1weemmbyp4().s[66]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1weemmbyp4().b[13][1]++;
      }

      // Check for substring matches
      cov_1weemmbyp4().s[67]++;
      if (
      /* istanbul ignore next */
      (cov_1weemmbyp4().b[16][0]++, name1.includes(name2)) ||
      /* istanbul ignore next */
      (cov_1weemmbyp4().b[16][1]++, name2.includes(name1))) {
        /* istanbul ignore next */
        cov_1weemmbyp4().b[15][0]++;
        cov_1weemmbyp4().s[68]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_1weemmbyp4().b[15][1]++;
      }

      // Check for similar words
      var words1 =
      /* istanbul ignore next */
      (cov_1weemmbyp4().s[69]++, name1.split(" "));
      var words2 =
      /* istanbul ignore next */
      (cov_1weemmbyp4().s[70]++, name2.split(" "));
      /* istanbul ignore next */
      cov_1weemmbyp4().s[71]++;
      var _iterator5 = _createForOfIteratorHelper(words1),
        _step5;
      /* istanbul ignore next */
      try {
        for (
        /* istanbul ignore next */
        _iterator5.s();
        /* istanbul ignore next */
        !(_step5 = _iterator5.n()).done;) {
          /* istanbul ignore next */
          var word1 = _step5.value;
          /* istanbul ignore next */
          cov_1weemmbyp4().s[72]++;
          var _iterator6 = _createForOfIteratorHelper(words2),
            _step6;
          /* istanbul ignore next */
          try {
            for (
            /* istanbul ignore next */
            _iterator6.s();
            /* istanbul ignore next */
            !(_step6 = _iterator6.n()).done;) {
              /* istanbul ignore next */
              var word2 = _step6.value;
              /* istanbul ignore next */
              cov_1weemmbyp4().s[73]++;
              if (
              /* istanbul ignore next */
              (cov_1weemmbyp4().b[18][0]++, word1.length > 2) &&
              /* istanbul ignore next */
              (cov_1weemmbyp4().b[18][1]++, word2.length > 2)) {
                /* istanbul ignore next */
                cov_1weemmbyp4().b[17][0]++;
                cov_1weemmbyp4().s[74]++;
                if (this.calculateStringSimilarity(word1, word2) > 0.8) {
                  /* istanbul ignore next */
                  cov_1weemmbyp4().b[19][0]++;
                  cov_1weemmbyp4().s[75]++;
                  return true;
                } else
                /* istanbul ignore next */
                {
                  cov_1weemmbyp4().b[19][1]++;
                }
              } else
              /* istanbul ignore next */
              {
                cov_1weemmbyp4().b[17][1]++;
              }
            }
          } catch (err) {
            _iterator6.e(err);
          } finally {
            _iterator6.f();
          }
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
      /* istanbul ignore next */
      cov_1weemmbyp4().s[76]++;
      return false;
    }

    /**
     * Calculate string similarity using Levenshtein distance
     */
  }, {
    key: "calculateStringSimilarity",
    value: function calculateStringSimilarity(str1, str2) {
      /* istanbul ignore next */
      cov_1weemmbyp4().f[17]++;
      var len1 =
      /* istanbul ignore next */
      (cov_1weemmbyp4().s[77]++, str1.length);
      var len2 =
      /* istanbul ignore next */
      (cov_1weemmbyp4().s[78]++, str2.length);
      /* istanbul ignore next */
      cov_1weemmbyp4().s[79]++;
      if (len1 === 0) {
        /* istanbul ignore next */
        cov_1weemmbyp4().b[20][0]++;
        cov_1weemmbyp4().s[80]++;
        return len2 === 0 ?
        /* istanbul ignore next */
        (cov_1weemmbyp4().b[21][0]++, 1) :
        /* istanbul ignore next */
        (cov_1weemmbyp4().b[21][1]++, 0);
      } else
      /* istanbul ignore next */
      {
        cov_1weemmbyp4().b[20][1]++;
      }
      cov_1weemmbyp4().s[81]++;
      if (len2 === 0) {
        /* istanbul ignore next */
        cov_1weemmbyp4().b[22][0]++;
        cov_1weemmbyp4().s[82]++;
        return 0;
      } else
      /* istanbul ignore next */
      {
        cov_1weemmbyp4().b[22][1]++;
      }
      var matrix =
      /* istanbul ignore next */
      (cov_1weemmbyp4().s[83]++, Array(len1 + 1).fill(null).map(function () {
        /* istanbul ignore next */
        cov_1weemmbyp4().f[18]++;
        cov_1weemmbyp4().s[84]++;
        return Array(len2 + 1).fill(0);
      }));
      /* istanbul ignore next */
      cov_1weemmbyp4().s[85]++;
      for (var i =
      /* istanbul ignore next */
      (cov_1weemmbyp4().s[86]++, 0); i <= len1; i++) {
        /* istanbul ignore next */
        cov_1weemmbyp4().s[87]++;
        matrix[i][0] = i;
      }
      /* istanbul ignore next */
      cov_1weemmbyp4().s[88]++;
      for (var j =
      /* istanbul ignore next */
      (cov_1weemmbyp4().s[89]++, 0); j <= len2; j++) {
        /* istanbul ignore next */
        cov_1weemmbyp4().s[90]++;
        matrix[0][j] = j;
      }
      /* istanbul ignore next */
      cov_1weemmbyp4().s[91]++;
      for (var _i =
      /* istanbul ignore next */
      (cov_1weemmbyp4().s[92]++, 1); _i <= len1; _i++) {
        /* istanbul ignore next */
        cov_1weemmbyp4().s[93]++;
        for (var _j =
        /* istanbul ignore next */
        (cov_1weemmbyp4().s[94]++, 1); _j <= len2; _j++) {
          var cost =
          /* istanbul ignore next */
          (cov_1weemmbyp4().s[95]++, str1[_i - 1] === str2[_j - 1] ?
          /* istanbul ignore next */
          (cov_1weemmbyp4().b[23][0]++, 0) :
          /* istanbul ignore next */
          (cov_1weemmbyp4().b[23][1]++, 1));
          /* istanbul ignore next */
          cov_1weemmbyp4().s[96]++;
          matrix[_i][_j] = Math.min(matrix[_i - 1][_j] + 1,
          // deletion
          matrix[_i][_j - 1] + 1,
          // insertion
          matrix[_i - 1][_j - 1] + cost // substitution
          );
        }
      }
      var maxLen =
      /* istanbul ignore next */
      (cov_1weemmbyp4().s[97]++, Math.max(len1, len2));
      /* istanbul ignore next */
      cov_1weemmbyp4().s[98]++;
      return 1 - matrix[len1][len2] / maxLen;
    }

    /**
     * Normalize name for consistent comparison
     */
  }, {
    key: "normalizeName",
    value: function normalizeName(name) {
      /* istanbul ignore next */
      cov_1weemmbyp4().f[19]++;
      cov_1weemmbyp4().s[99]++;
      return name.toLowerCase().normalize("NFD") // Decompose accented characters
      .replace(/[\u0300-\u036f]/g, "") // Remove accent marks
      .replace(/[^\w\s]/g, " ") // Replace special chars with spaces
      .replace(/\s+/g, " ") // Normalize whitespace
      .trim();
    }

    /**
     * Get database statistics
     */
  }, {
    key: "getStats",
    value: (function () {
      var _getStats = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee6()
      /* istanbul ignore next */
      {
        var clubs, positions, _iterator7, _step7, player, topClubs;
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.n) {
            case 0:
              cov_1weemmbyp4().f[20]++;
              cov_1weemmbyp4().s[100]++;
              _context6.n = 1;
              return this.initialize();
            case 1:
              clubs = (cov_1weemmbyp4().s[101]++, new Map());
              positions = (cov_1weemmbyp4().s[102]++, new Map());
              cov_1weemmbyp4().s[103]++;
              _iterator7 = _createForOfIteratorHelper(this.players.values());
              try {
                for (
                /* istanbul ignore next */
                _iterator7.s();
                /* istanbul ignore next */
                !(_step7 = _iterator7.n()).done;) {
                  /* istanbul ignore next */
                  player = _step7.value;
                  /* istanbul ignore next */
                  cov_1weemmbyp4().s[104]++;
                  if (player.currentClub) {
                    /* istanbul ignore next */
                    cov_1weemmbyp4().b[24][0]++;
                    cov_1weemmbyp4().s[105]++;
                    clubs.set(player.currentClub, (
                    /* istanbul ignore next */
                    (cov_1weemmbyp4().b[25][0]++, clubs.get(player.currentClub)) ||
                    /* istanbul ignore next */
                    (cov_1weemmbyp4().b[25][1]++, 0)) + 1);
                  } else
                  /* istanbul ignore next */
                  {
                    cov_1weemmbyp4().b[24][1]++;
                  }
                  cov_1weemmbyp4().s[106]++;
                  if (player.position) {
                    /* istanbul ignore next */
                    cov_1weemmbyp4().b[26][0]++;
                    cov_1weemmbyp4().s[107]++;
                    positions.set(player.position, (
                    /* istanbul ignore next */
                    (cov_1weemmbyp4().b[27][0]++, positions.get(player.position)) ||
                    /* istanbul ignore next */
                    (cov_1weemmbyp4().b[27][1]++, 0)) + 1);
                  } else
                  /* istanbul ignore next */
                  {
                    cov_1weemmbyp4().b[26][1]++;
                  }
                }
              } catch (err) {
                _iterator7.e(err);
              } finally {
                _iterator7.f();
              }
              topClubs = (cov_1weemmbyp4().s[108]++, Array.from(clubs.entries()).sort(function (
              /* istanbul ignore next */
              _ref,
              /* istanbul ignore next */
              _ref2) {
                /* istanbul ignore next */
                var _ref3 = _slicedToArray(_ref, 2),
                  a = _ref3[1];
                /* istanbul ignore next */
                var _ref4 = _slicedToArray(_ref2, 2),
                  b = _ref4[1];
                /* istanbul ignore next */
                cov_1weemmbyp4().f[21]++;
                cov_1weemmbyp4().s[109]++;
                return b - a;
              }).slice(0, 10).map(function (
              /* istanbul ignore next */
              _ref5) {
                /* istanbul ignore next */
                var _ref6 = _slicedToArray(_ref5, 1),
                  club = _ref6[0];
                /* istanbul ignore next */
                cov_1weemmbyp4().f[22]++;
                cov_1weemmbyp4().s[110]++;
                return club;
              }));
              cov_1weemmbyp4().s[111]++;
              return _context6.a(2, {
                totalPlayers: this.players.size,
                totalNameVariations: this.nameIndex.size,
                topClubs: topClubs,
                coverageByPosition: Object.fromEntries(positions)
              });
          }
        }, _callee6, this);
      }));
      function getStats() {
        return _getStats.apply(this, arguments);
      }
      return getStats;
    }())
  }]);
}();

// Export convenience functions
/* istanbul ignore next */
_defineProperty(PlayerDatabase, "players", (cov_1weemmbyp4().s[0]++, new Map()));
/* istanbul ignore next */
_defineProperty(PlayerDatabase, "nameIndex", (cov_1weemmbyp4().s[1]++, new Map()));
/* istanbul ignore next */
// normalized name -> player IDs
_defineProperty(PlayerDatabase, "initialized", (cov_1weemmbyp4().s[2]++, false));
/* istanbul ignore next */
cov_1weemmbyp4().s[112]++;
export var findPlayer = function findPlayer(name) {
  /* istanbul ignore next */
  cov_1weemmbyp4().f[23]++;
  cov_1weemmbyp4().s[113]++;
  return PlayerDatabase.findPlayer(name);
};
/* istanbul ignore next */
cov_1weemmbyp4().s[114]++;
export var getPlayer = function getPlayer(id) {
  /* istanbul ignore next */
  cov_1weemmbyp4().f[24]++;
  cov_1weemmbyp4().s[115]++;
  return PlayerDatabase.getPlayer(id);
};
/* istanbul ignore next */
cov_1weemmbyp4().s[116]++;
export var addPlayer = function addPlayer(player) {
  /* istanbul ignore next */
  cov_1weemmbyp4().f[25]++;
  cov_1weemmbyp4().s[117]++;
  return PlayerDatabase.addPlayer(player);
};
/* istanbul ignore next */
cov_1weemmbyp4().s[118]++;
export var getPlayerStats = function getPlayerStats() {
  /* istanbul ignore next */
  cov_1weemmbyp4().f[26]++;
  cov_1weemmbyp4().s[119]++;
  return PlayerDatabase.getStats();
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,