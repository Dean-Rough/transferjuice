5fe969dcd0c72faf4135ecf69e7f6d44
/* istanbul ignore next */
function cov_ep6f66xoc() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/validations/api.ts";
  var hash = "ddb4d0f536c7f5a3b4cb3956d85feb6fcf4be76f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/validations/api.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 32
        },
        end: {
          line: 15,
          column: 2
        }
      },
      "1": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "2": {
        start: {
          line: 22,
          column: 31
        },
        end: {
          line: 25,
          column: 2
        }
      },
      "3": {
        start: {
          line: 28,
          column: 33
        },
        end: {
          line: 48,
          column: 4
        }
      },
      "4": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 48,
          column: 4
        }
      },
      "5": {
        start: {
          line: 51,
          column: 30
        },
        end: {
          line: 64,
          column: 2
        }
      },
      "6": {
        start: {
          line: 67,
          column: 33
        },
        end: {
          line: 95,
          column: 2
        }
      },
      "7": {
        start: {
          line: 98,
          column: 44
        },
        end: {
          line: 102,
          column: 2
        }
      },
      "8": {
        start: {
          line: 99,
          column: 43
        },
        end: {
          line: 99,
          column: 78
        }
      },
      "9": {
        start: {
          line: 99,
          column: 69
        },
        end: {
          line: 99,
          column: 77
        }
      },
      "10": {
        start: {
          line: 104,
          column: 40
        },
        end: {
          line: 110,
          column: 2
        }
      },
      "11": {
        start: {
          line: 105,
          column: 37
        },
        end: {
          line: 105,
          column: 74
        }
      },
      "12": {
        start: {
          line: 105,
          column: 64
        },
        end: {
          line: 105,
          column: 73
        }
      },
      "13": {
        start: {
          line: 112,
          column: 46
        },
        end: {
          line: 124,
          column: 2
        }
      },
      "14": {
        start: {
          line: 127,
          column: 42
        },
        end: {
          line: 135,
          column: 2
        }
      },
      "15": {
        start: {
          line: 137,
          column: 42
        },
        end: {
          line: 145,
          column: 2
        }
      },
      "16": {
        start: {
          line: 147,
          column: 35
        },
        end: {
          line: 168,
          column: 2
        }
      },
      "17": {
        start: {
          line: 164,
          column: 24
        },
        end: {
          line: 164,
          column: 59
        }
      },
      "18": {
        start: {
          line: 164,
          column: 50
        },
        end: {
          line: 164,
          column: 58
        }
      },
      "19": {
        start: {
          line: 171,
          column: 38
        },
        end: {
          line: 230,
          column: 2
        }
      },
      "20": {
        start: {
          line: 208,
          column: 43
        },
        end: {
          line: 208,
          column: 55
        }
      },
      "21": {
        start: {
          line: 232,
          column: 45
        },
        end: {
          line: 270,
          column: 2
        }
      },
      "22": {
        start: {
          line: 272,
          column: 40
        },
        end: {
          line: 285,
          column: 2
        }
      },
      "23": {
        start: {
          line: 287,
          column: 38
        },
        end: {
          line: 338,
          column: 2
        }
      },
      "24": {
        start: {
          line: 341,
          column: 36
        },
        end: {
          line: 358,
          column: 2
        }
      },
      "25": {
        start: {
          line: 360,
          column: 39
        },
        end: {
          line: 383,
          column: 2
        }
      },
      "26": {
        start: {
          line: 386,
          column: 43
        },
        end: {
          line: 441,
          column: 2
        }
      },
      "27": {
        start: {
          line: 443,
          column: 36
        },
        end: {
          line: 460,
          column: 2
        }
      },
      "28": {
        start: {
          line: 463,
          column: 44
        },
        end: {
          line: 473,
          column: 2
        }
      },
      "29": {
        start: {
          line: 475,
          column: 44
        },
        end: {
          line: 489,
          column: 2
        }
      },
      "30": {
        start: {
          line: 492,
          column: 37
        },
        end: {
          line: 505,
          column: 2
        }
      },
      "31": {
        start: {
          line: 507,
          column: 40
        },
        end: {
          line: 530,
          column: 2
        }
      },
      "32": {
        start: {
          line: 533,
          column: 34
        },
        end: {
          line: 546,
          column: 2
        }
      },
      "33": {
        start: {
          line: 548,
          column: 37
        },
        end: {
          line: 563,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 28,
            column: 33
          },
          end: {
            line: 28,
            column: 34
          }
        },
        loc: {
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 48,
            column: 4
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 99,
            column: 34
          },
          end: {
            line: 99,
            column: 35
          }
        },
        loc: {
          start: {
            line: 99,
            column: 43
          },
          end: {
            line: 99,
            column: 78
          }
        },
        line: 99
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 99,
            column: 62
          },
          end: {
            line: 99,
            column: 63
          }
        },
        loc: {
          start: {
            line: 99,
            column: 69
          },
          end: {
            line: 99,
            column: 77
          }
        },
        line: 99
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 105,
            column: 28
          },
          end: {
            line: 105,
            column: 29
          }
        },
        loc: {
          start: {
            line: 105,
            column: 37
          },
          end: {
            line: 105,
            column: 74
          }
        },
        line: 105
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 105,
            column: 56
          },
          end: {
            line: 105,
            column: 57
          }
        },
        loc: {
          start: {
            line: 105,
            column: 64
          },
          end: {
            line: 105,
            column: 73
          }
        },
        line: 105
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 164,
            column: 15
          },
          end: {
            line: 164,
            column: 16
          }
        },
        loc: {
          start: {
            line: 164,
            column: 24
          },
          end: {
            line: 164,
            column: 59
          }
        },
        line: 164
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 164,
            column: 43
          },
          end: {
            line: 164,
            column: 44
          }
        },
        loc: {
          start: {
            line: 164,
            column: 50
          },
          end: {
            line: 164,
            column: 58
          }
        },
        line: 164
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 208,
            column: 34
          },
          end: {
            line: 208,
            column: 35
          }
        },
        loc: {
          start: {
            line: 208,
            column: 43
          },
          end: {
            line: 208,
            column: 55
          }
        },
        line: 208
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ddb4d0f536c7f5a3b4cb3956d85feb6fcf4be76f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ep6f66xoc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ep6f66xoc();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
import { z } from 'zod';

/**
 * API Contract Schemas
 * Validates request/response patterns for all API endpoints
 */

// Common API patterns
export var PaginationSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[0]++, z.object({
  page: z.number().min(1)[
  /* istanbul ignore next */
  "default"](1),
  limit: z.number().min(1).max(100)[
  /* istanbul ignore next */
  "default"](10),
  offset: z.number().min(0).optional(),
  total: z.number().min(0).optional(),
  hasMore: z[
  /* istanbul ignore next */
  "boolean"]().optional()
}));
export var SortSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[1]++, z.object({
  field: z.string(),
  order: z[
  /* istanbul ignore next */
  "enum"](['asc', 'desc'])[
  /* istanbul ignore next */
  "default"]('desc')
}));
export var DateRangeSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[2]++, z.object({
  from: z.string().datetime().optional(),
  to: z.string().datetime().optional()
}));

// Standard API response wrapper
/* istanbul ignore next */
cov_ep6f66xoc().s[3]++;
export var ApiResponseSchema = function ApiResponseSchema(dataSchema) {
  /* istanbul ignore next */
  cov_ep6f66xoc().f[0]++;
  cov_ep6f66xoc().s[4]++;
  return z.object({
    success: z[
    /* istanbul ignore next */
    "boolean"](),
    data: dataSchema.optional(),
    message: z.string().optional(),
    errors: z.array(z.object({
      field: z.string().optional(),
      message: z.string(),
      code: z.string().optional()
    })).optional(),
    meta: z.object({
      timestamp: z.string().datetime(),
      requestId: z.string(),
      version: z.string(),
      pagination: PaginationSchema.optional()
    })
  });
};

// Error response schema
export var ApiErrorSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[5]++, z.object({
  success: z.literal(false),
  error: z.object({
    code: z.string(),
    message: z.string(),
    details: z.any().optional(),
    field: z.string().optional()
  }),
  meta: z.object({
    timestamp: z.string().datetime(),
    requestId: z.string(),
    version: z.string()
  })
}));

// Health check schema
export var HealthCheckSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[6]++, z.object({
  status: z[
  /* istanbul ignore next */
  "enum"](['healthy', 'degraded', 'unhealthy']),
  timestamp: z.string().datetime(),
  version: z.string(),
  uptime: z.number().min(0),
  // seconds
  services: z.object({
    database: z.object({
      status: z[
      /* istanbul ignore next */
      "enum"](['up', 'down', 'degraded']),
      responseTime: z.number().min(0).optional(),
      lastCheck: z.string().datetime()
    }),
    twitter: z.object({
      status: z[
      /* istanbul ignore next */
      "enum"](['up', 'down', 'degraded']),
      responseTime: z.number().min(0).optional(),
      rateLimitRemaining: z.number().min(0).optional(),
      lastCheck: z.string().datetime()
    }),
    ai: z.object({
      status: z[
      /* istanbul ignore next */
      "enum"](['up', 'down', 'degraded']),
      responseTime: z.number().min(0).optional(),
      lastCheck: z.string().datetime()
    }),
    email: z.object({
      status: z[
      /* istanbul ignore next */
      "enum"](['up', 'down', 'degraded']),
      responseTime: z.number().min(0).optional(),
      lastCheck: z.string().datetime()
    })
  })
}));

// Twitter API endpoints
export var TwitterUserLookupQuerySchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[7]++, z.object({
  usernames: z.string().transform(function (val) {
    /* istanbul ignore next */
    cov_ep6f66xoc().f[1]++;
    cov_ep6f66xoc().s[8]++;
    return val.split(',').map(function (u) {
      /* istanbul ignore next */
      cov_ep6f66xoc().f[2]++;
      cov_ep6f66xoc().s[9]++;
      return u.trim();
    });
  }),
  user_fields: z.string().optional(),
  expansions: z.string().optional()
}));
export var TwitterTweetsQuerySchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[10]++, z.object({
  ids: z.string().transform(function (val) {
    /* istanbul ignore next */
    cov_ep6f66xoc().f[3]++;
    cov_ep6f66xoc().s[11]++;
    return val.split(',').map(function (id) {
      /* istanbul ignore next */
      cov_ep6f66xoc().f[4]++;
      cov_ep6f66xoc().s[12]++;
      return id.trim();
    });
  }),
  tweet_fields: z.string().optional(),
  user_fields: z.string().optional(),
  media_fields: z.string().optional(),
  expansions: z.string().optional()
}));
export var TwitterUserTimelineQuerySchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[13]++, z.object({
  user_id: z.string(),
  max_results: z.number().min(5).max(100)[
  /* istanbul ignore next */
  "default"](10),
  since_id: z.string().optional(),
  until_id: z.string().optional(),
  start_time: z.string().datetime().optional(),
  end_time: z.string().datetime().optional(),
  tweet_fields: z.string().optional(),
  user_fields: z.string().optional(),
  media_fields: z.string().optional(),
  expansions: z.string().optional(),
  pagination_token: z.string().optional()
}));

// Article API endpoints
export var CreateArticleRequestSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[14]++, z.object({
  title: z.string().min(10).max(255),
  subtitle: z.string().min(10).max(500).optional(),
  briefingType: z[
  /* istanbul ignore next */
  "enum"](['morning', 'afternoon', 'evening']),
  sourceTweetIds: z.array(z.string()).min(1).max(50),
  autoPublish: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](false),
  scheduledFor: z.string().datetime().optional(),
  customInstructions: z.string().max(1000).optional()
}));
export var UpdateArticleRequestSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[15]++, z.object({
  title: z.string().min(10).max(255).optional(),
  subtitle: z.string().min(10).max(500).optional(),
  status: z[
  /* istanbul ignore next */
  "enum"](['draft', 'under_review', 'approved', 'published', 'archived']).optional(),
  scheduledFor: z.string().datetime().optional(),
  reviewNotes: z.string().max(1000).optional()
}));
export var ArticlesQuerySchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[16]++, z.object(
/* istanbul ignore next */
_objectSpread(_objectSpread({
  briefingType: z[
  /* istanbul ignore next */
  "enum"](['morning', 'afternoon', 'evening']).optional(),
  status: z[
  /* istanbul ignore next */
  "enum"](['draft', 'ai_generated', 'under_review', 'approved', 'published', 'archived']).optional(),
  publishedAfter: z.string().datetime().optional(),
  publishedBefore: z.string().datetime().optional(),
  search: z.string().min(3).max(100).optional(),
  tags: z.string().transform(function (val) {
    /* istanbul ignore next */
    cov_ep6f66xoc().f[5]++;
    cov_ep6f66xoc().s[17]++;
    return val.split(',').map(function (t) {
      /* istanbul ignore next */
      cov_ep6f66xoc().f[6]++;
      cov_ep6f66xoc().s[18]++;
      return t.trim();
    });
  }).optional()
}, PaginationSchema.shape), {}, {
  sort: SortSchema.optional()
})));

// Subscriber API endpoints
export var SubscribeRequestSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[19]++, z.object({
  email: z.string().email(),
  preferences: z.object({
    emailFrequency: z[
    /* istanbul ignore next */
    "enum"](['all', 'daily', 'weekly', 'major_only'])[
    /* istanbul ignore next */
    "default"]('all'),
    preferredTeams: z.array(z[
    /* istanbul ignore next */
    "enum"](['arsenal', 'aston_villa', 'bournemouth', 'brentford', 'brighton', 'burnley', 'chelsea', 'crystal_palace', 'everton', 'fulham', 'liverpool', 'luton', 'manchester_city', 'manchester_united', 'newcastle', 'nottingham_forest', 'sheffield_united', 'tottenham', 'west_ham', 'wolves'])).max(5)[
    /* istanbul ignore next */
    "default"]([]),
    receiveBreakingNews: z[
    /* istanbul ignore next */
    "boolean"]()[
    /* istanbul ignore next */
    "default"](true)
  }).optional(),
  gdprConsent: z[
  /* istanbul ignore next */
  "boolean"]().refine(function (val) {
    /* istanbul ignore next */
    cov_ep6f66xoc().f[7]++;
    cov_ep6f66xoc().s[20]++;
    return val === true;
  }, {
    message: 'GDPR consent is required'
  }),
  subscriptionSource: z[
  /* istanbul ignore next */
  "enum"](['website', 'social_media', 'referral', 'organic', 'paid_ad', 'other'])[
  /* istanbul ignore next */
  "default"]('website'),
  utmParameters: z.object({
    source: z.string().optional(),
    medium: z.string().optional(),
    campaign: z.string().optional(),
    term: z.string().optional(),
    content: z.string().optional()
  }).optional()
}));
export var UpdateSubscriberRequestSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[21]++, z.object({
  preferences: z.object({
    emailFrequency: z[
    /* istanbul ignore next */
    "enum"](['all', 'daily', 'weekly', 'major_only']).optional(),
    preferredTeams: z.array(z[
    /* istanbul ignore next */
    "enum"](['arsenal', 'aston_villa', 'bournemouth', 'brentford', 'brighton', 'burnley', 'chelsea', 'crystal_palace', 'everton', 'fulham', 'liverpool', 'luton', 'manchester_city', 'manchester_united', 'newcastle', 'nottingham_forest', 'sheffield_united', 'tottenham', 'west_ham', 'wolves'])).max(5).optional(),
    receiveBreakingNews: z[
    /* istanbul ignore next */
    "boolean"]().optional(),
    emailFormat: z[
    /* istanbul ignore next */
    "enum"](['html', 'text']).optional(),
    timezone: z.string().optional()
  }).optional()
}));
export var UnsubscribeRequestSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[22]++, z.object({
  token: z.string().min(32),
  // Unsubscribe token
  reason: z[
  /* istanbul ignore next */
  "enum"](['too_frequent', 'not_relevant', 'poor_quality', 'changed_email', 'privacy_concerns', 'other']).optional(),
  feedback: z.string().max(500).optional()
}));
export var SubscribersQuerySchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[23]++, z.object(
/* istanbul ignore next */
_objectSpread(_objectSpread({
  status: z[
  /* istanbul ignore next */
  "enum"](['pending', 'active', 'paused', 'unsubscribed', 'bounced', 'complained']).optional(),
  subscribedAfter: z.string().datetime().optional(),
  subscribedBefore: z.string().datetime().optional(),
  lastEngagementAfter: z.string().datetime().optional(),
  lastEngagementBefore: z.string().datetime().optional(),
  source: z[
  /* istanbul ignore next */
  "enum"](['website', 'social_media', 'referral', 'organic', 'paid_ad', 'other']).optional(),
  preferredTeam: z[
  /* istanbul ignore next */
  "enum"](['arsenal', 'aston_villa', 'bournemouth', 'brentford', 'brighton', 'burnley', 'chelsea', 'crystal_palace', 'everton', 'fulham', 'liverpool', 'luton', 'manchester_city', 'manchester_united', 'newcastle', 'nottingham_forest', 'sheffield_united', 'tottenham', 'west_ham', 'wolves']).optional()
}, PaginationSchema.shape), {}, {
  sort: SortSchema.optional()
})));

// Analytics API endpoints
export var AnalyticsQuerySchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[24]++, z.object({
  metrics: z.array(z[
  /* istanbul ignore next */
  "enum"](['content', 'audience', 'engagement', 'technical', 'business'])),
  dateRange: DateRangeSchema,
  granularity: z[
  /* istanbul ignore next */
  "enum"](['hour', 'day', 'week', 'month'])[
  /* istanbul ignore next */
  "default"]('day'),
  filters: z.object({
    articleIds: z.array(z.string()).optional(),
    briefingTypes: z.array(z[
    /* istanbul ignore next */
    "enum"](['morning', 'afternoon', 'evening'])).optional(),
    countries: z.array(z.string().length(2)).optional(),
    devices: z.array(z[
    /* istanbul ignore next */
    "enum"](['mobile', 'tablet', 'desktop'])).optional()
  }).optional(),
  compare: z[
  /* istanbul ignore next */
  "enum"](['previous_period', 'same_period_last_year']).optional()
}));
export var TrackEventRequestSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[25]++, z.object({
  event: z[
  /* istanbul ignore next */
  "enum"](['page_view', 'article_view', 'newsletter_signup', 'email_click', 'search', 'share', 'download']),
  properties: z.object({
    url: z.string().url().optional(),
    articleId: z.string().optional(),
    briefingType: z[
    /* istanbul ignore next */
    "enum"](['morning', 'afternoon', 'evening']).optional(),
    source: z.string().optional(),
    campaign: z.string().optional(),
    customProperties: z.record(z.string(), z.any()).optional()
  }).optional(),
  sessionId: z.string(),
  userId: z.string().optional(),
  timestamp: z.string().datetime().optional()
}));

// Email campaign API endpoints
export var CreateCampaignRequestSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[26]++, z.object({
  name: z.string().min(1).max(255),
  type: z[
  /* istanbul ignore next */
  "enum"](['briefing', 'breaking_news', 'weekly_digest', 'welcome', 'reengagement']),
  subject: z.string().min(5).max(100),
  preheader: z.string().min(10).max(200).optional(),
  articleId: z.string().optional(),
  // For briefing campaigns
  customContent: z.object({
    html: z.string().min(100),
    text: z.string().min(100)
  }).optional(),
  targeting: z.object({
    includeStatuses: z.array(z[
    /* istanbul ignore next */
    "enum"](['active', 'pending']))[
    /* istanbul ignore next */
    "default"](['active']),
    preferredTeams: z.array(z[
    /* istanbul ignore next */
    "enum"](['arsenal', 'aston_villa', 'bournemouth', 'brentford', 'brighton', 'burnley', 'chelsea', 'crystal_palace', 'everton', 'fulham', 'liverpool', 'luton', 'manchester_city', 'manchester_united', 'newcastle', 'nottingham_forest', 'sheffield_united', 'tottenham', 'west_ham', 'wolves'])).optional(),
    emailFrequency: z.array(z[
    /* istanbul ignore next */
    "enum"](['all', 'daily', 'weekly', 'major_only'])).optional()
  }).optional(),
  scheduledFor: z.string().datetime().optional()
}));
export var CampaignsQuerySchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[27]++, z.object(
/* istanbul ignore next */
_objectSpread(_objectSpread({
  type: z[
  /* istanbul ignore next */
  "enum"](['briefing', 'breaking_news', 'weekly_digest', 'welcome', 'reengagement']).optional(),
  status: z[
  /* istanbul ignore next */
  "enum"](['draft', 'scheduled', 'sending', 'sent', 'cancelled']).optional(),
  createdAfter: z.string().datetime().optional(),
  createdBefore: z.string().datetime().optional()
}, PaginationSchema.shape), {}, {
  sort: SortSchema.optional()
})));

// Content generation API endpoints
export var GenerateContentRequestSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[28]++, z.object({
  briefingType: z[
  /* istanbul ignore next */
  "enum"](['morning', 'afternoon', 'evening']),
  sourceTweetIds: z.array(z.string()).min(1).max(50),
  targetWordCount: z.number().min(200).max(2000)[
  /* istanbul ignore next */
  "default"](800),
  tone: z[
  /* istanbul ignore next */
  "enum"](['witty', 'sarcastic', 'informative', 'humorous'])[
  /* istanbul ignore next */
  "default"]('witty'),
  includeImages: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](true),
  customInstructions: z.string().max(1000).optional(),
  draftMode: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](false) // If true, saves as draft instead of processing
}));
export var ValidateContentRequestSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[29]++, z.object({
  content: z.string().min(100),
  type: z[
  /* istanbul ignore next */
  "enum"](['article', 'email_subject', 'social_post']),
  checks: z.array(z[
  /* istanbul ignore next */
  "enum"](['grammar', 'brand_voice', 'fact_check', 'readability', 'sentiment'])).optional()
}));

// Admin API endpoints (protected)
export var AdminStatsQuerySchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[30]++, z.object({
  dateRange: DateRangeSchema,
  metrics: z.array(z[
  /* istanbul ignore next */
  "enum"](['system_health', 'content_pipeline', 'user_growth', 'engagement', 'revenue']))[
  /* istanbul ignore next */
  "default"](['system_health'])
}));
export var SystemConfigUpdateSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[31]++, z.object({
  twitterApi: z.object({
    rateLimitBuffer: z.number().min(0).max(0.5).optional(),
    fetchInterval: z.number().min(300).max(3600).optional(),
    // 5min to 1hour
    targetAccounts: z.array(z.string()).max(20).optional()
  }).optional(),
  aiGeneration: z.object({
    model: z.string().optional(),
    temperature: z.number().min(0).max(2).optional(),
    maxTokens: z.number().min(100).max(4000).optional(),
    qualityThreshold: z.number().min(0).max(100).optional()
  }).optional(),
  emailService: z.object({
    provider: z[
    /* istanbul ignore next */
    "enum"](['convertkit', 'mailerlite', 'postmark']).optional(),
    sendTimeOptimization: z[
    /* istanbul ignore next */
    "boolean"]().optional(),
    frequencyCapping: z[
    /* istanbul ignore next */
    "boolean"]().optional()
  }).optional()
}));

// Webhook schemas
export var WebhookEventSchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[32]++, z.object({
  id: z.string(),
  type: z[
  /* istanbul ignore next */
  "enum"](['article.published', 'subscriber.confirmed', 'subscriber.unsubscribed', 'campaign.sent', 'system.error']),
  data: z.any(),
  timestamp: z.string().datetime(),
  source: z.string(),
  version: z.string()
}));
export var WebhookDeliverySchema =
/* istanbul ignore next */
(cov_ep6f66xoc().s[33]++, z.object({
  url: z.string().url(),
  event: WebhookEventSchema,
  attempt: z.number().min(1),
  response: z.object({
    status: z.number(),
    headers: z.record(z.string(), z.string()),
    body: z.string().optional(),
    duration: z.number().min(0) // milliseconds
  }).optional(),
  success: z[
  /* istanbul ignore next */
  "boolean"](),
  error: z.string().optional(),
  nextRetry: z.string().datetime().optional()
}));

// Export types

// Twitter API types

// Article API types

// Subscriber API types

// Analytics API types

// Campaign API types

// Content generation types

// Admin types

// Webhook types
//# sourceMappingURL=data:application/json;charset=utf-8;base64,