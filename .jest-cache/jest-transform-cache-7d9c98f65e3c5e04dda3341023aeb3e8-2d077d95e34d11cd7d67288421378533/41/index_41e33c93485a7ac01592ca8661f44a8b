3c4870ba840b76d486ed9ad51b77c6b2
/* istanbul ignore next */
function cov_2ldotcnbvt() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/partnerships/index.ts";
  var hash = "18cfcd00ad854f9ab6a11d4324a2d8693855fa1a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/partnerships/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 43,
          column: 71
        }
      },
      "1": {
        start: {
          line: 46,
          column: 2
        },
        end: {
          line: 46,
          column: 63
        }
      },
      "2": {
        start: {
          line: 47,
          column: 2
        },
        end: {
          line: 47,
          column: 61
        }
      },
      "3": {
        start: {
          line: 49,
          column: 2
        },
        end: {
          line: 49,
          column: 66
        }
      },
      "4": {
        start: {
          line: 50,
          column: 2
        },
        end: {
          line: 50,
          column: 64
        }
      },
      "5": {
        start: {
          line: 51,
          column: 2
        },
        end: {
          line: 51,
          column: 61
        }
      },
      "6": {
        start: {
          line: 52,
          column: 2
        },
        end: {
          line: 52,
          column: 58
        }
      },
      "7": {
        start: {
          line: 53,
          column: 2
        },
        end: {
          line: 53,
          column: 64
        }
      },
      "8": {
        start: {
          line: 55,
          column: 2
        },
        end: {
          line: 62,
          column: 4
        }
      },
      "9": {
        start: {
          line: 69,
          column: 2
        },
        end: {
          line: 73,
          column: 4
        }
      },
      "10": {
        start: {
          line: 80,
          column: 2
        },
        end: {
          line: 80,
          column: 63
        }
      },
      "11": {
        start: {
          line: 81,
          column: 2
        },
        end: {
          line: 81,
          column: 60
        }
      },
      "12": {
        start: {
          line: 88,
          column: 2
        },
        end: {
          line: 88,
          column: 55
        }
      },
      "13": {
        start: {
          line: 89,
          column: 2
        },
        end: {
          line: 89,
          column: 49
        }
      }
    },
    fnMap: {
      "0": {
        name: "initializePartnerContentSystem",
        decl: {
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 46
          }
        },
        loc: {
          start: {
            line: 42,
            column: 3
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 42
      },
      "1": {
        name: "getPartnerContentSystemStatus",
        decl: {
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 68,
            column: 45
          }
        },
        loc: {
          start: {
            line: 68,
            column: 48
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 68
      },
      "2": {
        name: "stopPartnerContentMixing",
        decl: {
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 79,
            column: 40
          }
        },
        loc: {
          start: {
            line: 79,
            column: 65
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 79
      },
      "3": {
        name: "resumePartnerContentMixing",
        decl: {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 87,
            column: 42
          }
        },
        loc: {
          start: {
            line: 87,
            column: 45
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 87
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 79,
            column: 41
          },
          end: {
            line: 79,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 79,
            column: 50
          },
          end: {
            line: 79,
            column: 63
          }
        }],
        line: 79
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "18cfcd00ad854f9ab6a11d4324a2d8693855fa1a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ldotcnbvt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ldotcnbvt();
/**
 * Partner Content Integration System
 * Entry point for smart content mixing during ITK quiet periods
 */

export { PARTNER_SOURCES, getPartnerSourceById, getPartnerSourcesByCategory, getHighCredibilityPartners, getActivePartnerSources, formatAttribution } from "./partnerSources";

// TODO: Fix circular dependency with contentMixer
// export {
//   ContentMixer,
//   type PartnerContent,
//   type ContentMixingConfig,
//   type ContentMixingResult,
//   DEFAULT_MIXING_CONFIG,
//   contentMixer,
// } from './contentMixer';

// TODO: Fix circular dependency with smartMixingOrchestrator
// export {
//   SmartMixingOrchestrator,
//   type SmartMixingConfig,
//   type MixingOrchestrationResult,
//   DEFAULT_ORCHESTRATION_CONFIG,
//   smartMixingOrchestrator,
// } from './smartMixingOrchestrator';

/**
 * Initialize the partner content integration system
 */
export function initializePartnerContentSystem(config) {
  /* istanbul ignore next */
  cov_2ldotcnbvt().f[0]++;
  cov_2ldotcnbvt().s[0]++;
  console.log("üéØ Initializing Partner Content Integration System...");

  // TODO: Fix circular dependency issue with smartMixingOrchestrator
  /* istanbul ignore next */
  cov_2ldotcnbvt().s[1]++;
  console.log("Partner content system configuration:", config);
  /* istanbul ignore next */
  cov_2ldotcnbvt().s[2]++;
  console.log("Smart mixing orchestrator start placeholder");
  /* istanbul ignore next */
  cov_2ldotcnbvt().s[3]++;
  console.log("‚úÖ Partner Content Integration System initialized");
  /* istanbul ignore next */
  cov_2ldotcnbvt().s[4]++;
  console.log("   - Smart content mixing during quiet periods");
  /* istanbul ignore next */
  cov_2ldotcnbvt().s[5]++;
  console.log("   - Ethical attribution to partner sources");
  /* istanbul ignore next */
  cov_2ldotcnbvt().s[6]++;
  console.log("   - Terry commentary on partner content");
  /* istanbul ignore next */
  cov_2ldotcnbvt().s[7]++;
  console.log("   - Real-time feed content balance management");
  /* istanbul ignore next */
  cov_2ldotcnbvt().s[8]++;
  return {
    orchestrator: null,
    // TODO: Fix smartMixingOrchestrator reference
    mixer: null,
    // TODO: Fix contentMixer reference
    status: {
      isActive: false,
      error: "Partnership system disabled temporarily"
    }
  };
}

/**
 * Get system status and analytics
 */
export function getPartnerContentSystemStatus() {
  /* istanbul ignore next */
  cov_2ldotcnbvt().f[1]++;
  cov_2ldotcnbvt().s[9]++;
  return {
    orchestrator: {
      isActive: false,
      error: "System disabled temporarily"
    },
    mixer: {
      error: "System disabled temporarily"
    },
    timestamp: new Date().toISOString()
  };
}

/**
 * Emergency stop for partner content mixing
 */
export function stopPartnerContentMixing() {
  /* istanbul ignore next */
  var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_2ldotcnbvt().b[0][0]++, "Manual stop");
  /* istanbul ignore next */
  cov_2ldotcnbvt().f[2]++;
  cov_2ldotcnbvt().s[10]++;
  console.log(
  /* istanbul ignore next */
  "\uD83D\uDED1 Stopping partner content mixing: ".concat(reason));
  /* istanbul ignore next */
  cov_2ldotcnbvt().s[11]++;
  console.log("System already disabled - no action needed");
}

/**
 * Resume partner content mixing
 */
export function resumePartnerContentMixing() {
  /* istanbul ignore next */
  cov_2ldotcnbvt().f[3]++;
  cov_2ldotcnbvt().s[12]++;
  console.log("‚ñ∂Ô∏è Resuming partner content mixing...");
  /* istanbul ignore next */
  cov_2ldotcnbvt().s[13]++;
  console.log("System disabled - cannot resume");
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmxkb3RjbmJ2dCIsImFjdHVhbENvdmVyYWdlIiwiUEFSVE5FUl9TT1VSQ0VTIiwiZ2V0UGFydG5lclNvdXJjZUJ5SWQiLCJnZXRQYXJ0bmVyU291cmNlc0J5Q2F0ZWdvcnkiLCJnZXRIaWdoQ3JlZGliaWxpdHlQYXJ0bmVycyIsImdldEFjdGl2ZVBhcnRuZXJTb3VyY2VzIiwiZm9ybWF0QXR0cmlidXRpb24iLCJpbml0aWFsaXplUGFydG5lckNvbnRlbnRTeXN0ZW0iLCJjb25maWciLCJmIiwicyIsImNvbnNvbGUiLCJsb2ciLCJvcmNoZXN0cmF0b3IiLCJtaXhlciIsInN0YXR1cyIsImlzQWN0aXZlIiwiZXJyb3IiLCJnZXRQYXJ0bmVyQ29udGVudFN5c3RlbVN0YXR1cyIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInN0b3BQYXJ0bmVyQ29udGVudE1peGluZyIsInJlYXNvbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsImIiLCJjb25jYXQiLCJyZXN1bWVQYXJ0bmVyQ29udGVudE1peGluZyJdLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUGFydG5lciBDb250ZW50IEludGVncmF0aW9uIFN5c3RlbVxuICogRW50cnkgcG9pbnQgZm9yIHNtYXJ0IGNvbnRlbnQgbWl4aW5nIGR1cmluZyBJVEsgcXVpZXQgcGVyaW9kc1xuICovXG5cbmV4cG9ydCB7XG4gIFBBUlRORVJfU09VUkNFUyxcbiAgdHlwZSBQYXJ0bmVyU291cmNlLFxuICBnZXRQYXJ0bmVyU291cmNlQnlJZCxcbiAgZ2V0UGFydG5lclNvdXJjZXNCeUNhdGVnb3J5LFxuICBnZXRIaWdoQ3JlZGliaWxpdHlQYXJ0bmVycyxcbiAgZ2V0QWN0aXZlUGFydG5lclNvdXJjZXMsXG4gIGZvcm1hdEF0dHJpYnV0aW9uLFxufSBmcm9tIFwiLi9wYXJ0bmVyU291cmNlc1wiO1xuXG4vLyBUT0RPOiBGaXggY2lyY3VsYXIgZGVwZW5kZW5jeSB3aXRoIGNvbnRlbnRNaXhlclxuLy8gZXhwb3J0IHtcbi8vICAgQ29udGVudE1peGVyLFxuLy8gICB0eXBlIFBhcnRuZXJDb250ZW50LFxuLy8gICB0eXBlIENvbnRlbnRNaXhpbmdDb25maWcsXG4vLyAgIHR5cGUgQ29udGVudE1peGluZ1Jlc3VsdCxcbi8vICAgREVGQVVMVF9NSVhJTkdfQ09ORklHLFxuLy8gICBjb250ZW50TWl4ZXIsXG4vLyB9IGZyb20gJy4vY29udGVudE1peGVyJztcblxuLy8gVE9ETzogRml4IGNpcmN1bGFyIGRlcGVuZGVuY3kgd2l0aCBzbWFydE1peGluZ09yY2hlc3RyYXRvclxuLy8gZXhwb3J0IHtcbi8vICAgU21hcnRNaXhpbmdPcmNoZXN0cmF0b3IsXG4vLyAgIHR5cGUgU21hcnRNaXhpbmdDb25maWcsXG4vLyAgIHR5cGUgTWl4aW5nT3JjaGVzdHJhdGlvblJlc3VsdCxcbi8vICAgREVGQVVMVF9PUkNIRVNUUkFUSU9OX0NPTkZJRyxcbi8vICAgc21hcnRNaXhpbmdPcmNoZXN0cmF0b3IsXG4vLyB9IGZyb20gJy4vc21hcnRNaXhpbmdPcmNoZXN0cmF0b3InO1xuXG4vKipcbiAqIEluaXRpYWxpemUgdGhlIHBhcnRuZXIgY29udGVudCBpbnRlZ3JhdGlvbiBzeXN0ZW1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluaXRpYWxpemVQYXJ0bmVyQ29udGVudFN5c3RlbShjb25maWc/OiB7XG4gIGVuYWJsZVNtYXJ0TWl4aW5nPzogYm9vbGVhbjtcbiAgbWl4aW5nU2NoZWR1bGU/OiBcImNvbnRpbnVvdXNcIiB8IFwic2NoZWR1bGVkXCIgfCBcIm1hbnVhbFwiO1xuICB0ZXJyeUNvbW1lbnRhcnlPblBhcnRuZXJDb250ZW50PzogYm9vbGVhbjtcbn0pIHtcbiAgY29uc29sZS5sb2coXCLwn46vIEluaXRpYWxpemluZyBQYXJ0bmVyIENvbnRlbnQgSW50ZWdyYXRpb24gU3lzdGVtLi4uXCIpO1xuXG4gIC8vIFRPRE86IEZpeCBjaXJjdWxhciBkZXBlbmRlbmN5IGlzc3VlIHdpdGggc21hcnRNaXhpbmdPcmNoZXN0cmF0b3JcbiAgY29uc29sZS5sb2coXCJQYXJ0bmVyIGNvbnRlbnQgc3lzdGVtIGNvbmZpZ3VyYXRpb246XCIsIGNvbmZpZyk7XG4gIGNvbnNvbGUubG9nKFwiU21hcnQgbWl4aW5nIG9yY2hlc3RyYXRvciBzdGFydCBwbGFjZWhvbGRlclwiKTtcblxuICBjb25zb2xlLmxvZyhcIuKchSBQYXJ0bmVyIENvbnRlbnQgSW50ZWdyYXRpb24gU3lzdGVtIGluaXRpYWxpemVkXCIpO1xuICBjb25zb2xlLmxvZyhcIiAgIC0gU21hcnQgY29udGVudCBtaXhpbmcgZHVyaW5nIHF1aWV0IHBlcmlvZHNcIik7XG4gIGNvbnNvbGUubG9nKFwiICAgLSBFdGhpY2FsIGF0dHJpYnV0aW9uIHRvIHBhcnRuZXIgc291cmNlc1wiKTtcbiAgY29uc29sZS5sb2coXCIgICAtIFRlcnJ5IGNvbW1lbnRhcnkgb24gcGFydG5lciBjb250ZW50XCIpO1xuICBjb25zb2xlLmxvZyhcIiAgIC0gUmVhbC10aW1lIGZlZWQgY29udGVudCBiYWxhbmNlIG1hbmFnZW1lbnRcIik7XG5cbiAgcmV0dXJuIHtcbiAgICBvcmNoZXN0cmF0b3I6IG51bGwsIC8vIFRPRE86IEZpeCBzbWFydE1peGluZ09yY2hlc3RyYXRvciByZWZlcmVuY2VcbiAgICBtaXhlcjogbnVsbCwgLy8gVE9ETzogRml4IGNvbnRlbnRNaXhlciByZWZlcmVuY2VcbiAgICBzdGF0dXM6IHtcbiAgICAgIGlzQWN0aXZlOiBmYWxzZSxcbiAgICAgIGVycm9yOiBcIlBhcnRuZXJzaGlwIHN5c3RlbSBkaXNhYmxlZCB0ZW1wb3JhcmlseVwiLFxuICAgIH0sXG4gIH07XG59XG5cbi8qKlxuICogR2V0IHN5c3RlbSBzdGF0dXMgYW5kIGFuYWx5dGljc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UGFydG5lckNvbnRlbnRTeXN0ZW1TdGF0dXMoKSB7XG4gIHJldHVybiB7XG4gICAgb3JjaGVzdHJhdG9yOiB7IGlzQWN0aXZlOiBmYWxzZSwgZXJyb3I6IFwiU3lzdGVtIGRpc2FibGVkIHRlbXBvcmFyaWx5XCIgfSxcbiAgICBtaXhlcjogeyBlcnJvcjogXCJTeXN0ZW0gZGlzYWJsZWQgdGVtcG9yYXJpbHlcIiB9LFxuICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICB9O1xufVxuXG4vKipcbiAqIEVtZXJnZW5jeSBzdG9wIGZvciBwYXJ0bmVyIGNvbnRlbnQgbWl4aW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzdG9wUGFydG5lckNvbnRlbnRNaXhpbmcocmVhc29uID0gXCJNYW51YWwgc3RvcFwiKSB7XG4gIGNvbnNvbGUubG9nKGDwn5uRIFN0b3BwaW5nIHBhcnRuZXIgY29udGVudCBtaXhpbmc6ICR7cmVhc29ufWApO1xuICBjb25zb2xlLmxvZyhcIlN5c3RlbSBhbHJlYWR5IGRpc2FibGVkIC0gbm8gYWN0aW9uIG5lZWRlZFwiKTtcbn1cblxuLyoqXG4gKiBSZXN1bWUgcGFydG5lciBjb250ZW50IG1peGluZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gcmVzdW1lUGFydG5lckNvbnRlbnRNaXhpbmcoKSB7XG4gIGNvbnNvbGUubG9nKFwi4pa277iPIFJlc3VtaW5nIHBhcnRuZXIgY29udGVudCBtaXhpbmcuLi5cIik7XG4gIGNvbnNvbGUubG9nKFwiU3lzdGVtIGRpc2FibGVkIC0gY2Fubm90IHJlc3VtZVwiKTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFlWTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBZlo7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FDRUUsZUFBZSxFQUVmQyxvQkFBb0IsRUFDcEJDLDJCQUEyQixFQUMzQkMsMEJBQTBCLEVBQzFCQyx1QkFBdUIsRUFDdkJDLGlCQUFpQixRQUNaLGtCQUFrQjs7QUFFekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTyxTQUFTQyw4QkFBOEJBLENBQUNDLE1BSTlDLEVBQUU7RUFBQTtFQUFBVCxjQUFBLEdBQUFVLENBQUE7RUFBQVYsY0FBQSxHQUFBVyxDQUFBO0VBQ0RDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHVEQUF1RCxDQUFDOztFQUVwRTtFQUFBO0VBQUFiLGNBQUEsR0FBQVcsQ0FBQTtFQUNBQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyx1Q0FBdUMsRUFBRUosTUFBTSxDQUFDO0VBQUM7RUFBQVQsY0FBQSxHQUFBVyxDQUFBO0VBQzdEQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyw2Q0FBNkMsQ0FBQztFQUFDO0VBQUFiLGNBQUEsR0FBQVcsQ0FBQTtFQUUzREMsT0FBTyxDQUFDQyxHQUFHLENBQUMsa0RBQWtELENBQUM7RUFBQztFQUFBYixjQUFBLEdBQUFXLENBQUE7RUFDaEVDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGdEQUFnRCxDQUFDO0VBQUM7RUFBQWIsY0FBQSxHQUFBVyxDQUFBO0VBQzlEQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyw2Q0FBNkMsQ0FBQztFQUFDO0VBQUFiLGNBQUEsR0FBQVcsQ0FBQTtFQUMzREMsT0FBTyxDQUFDQyxHQUFHLENBQUMsMENBQTBDLENBQUM7RUFBQztFQUFBYixjQUFBLEdBQUFXLENBQUE7RUFDeERDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGdEQUFnRCxDQUFDO0VBQUM7RUFBQWIsY0FBQSxHQUFBVyxDQUFBO0VBRTlELE9BQU87SUFDTEcsWUFBWSxFQUFFLElBQUk7SUFBRTtJQUNwQkMsS0FBSyxFQUFFLElBQUk7SUFBRTtJQUNiQyxNQUFNLEVBQUU7TUFDTkMsUUFBUSxFQUFFLEtBQUs7TUFDZkMsS0FBSyxFQUFFO0lBQ1Q7RUFDRixDQUFDO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTyxTQUFTQyw2QkFBNkJBLENBQUEsRUFBRztFQUFBO0VBQUFuQixjQUFBLEdBQUFVLENBQUE7RUFBQVYsY0FBQSxHQUFBVyxDQUFBO0VBQzlDLE9BQU87SUFDTEcsWUFBWSxFQUFFO01BQUVHLFFBQVEsRUFBRSxLQUFLO01BQUVDLEtBQUssRUFBRTtJQUE4QixDQUFDO0lBQ3ZFSCxLQUFLLEVBQUU7TUFBRUcsS0FBSyxFQUFFO0lBQThCLENBQUM7SUFDL0NFLFNBQVMsRUFBRSxJQUFJQyxJQUFJLENBQUMsQ0FBQyxDQUFDQyxXQUFXLENBQUM7RUFDcEMsQ0FBQztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sU0FBU0Msd0JBQXdCQSxDQUFBLEVBQXlCO0VBQUE7RUFBQSxJQUF4QkMsTUFBTSxHQUFBQyxTQUFBLENBQUFDLE1BQUEsUUFBQUQsU0FBQSxRQUFBRSxTQUFBLEdBQUFGLFNBQUEsT0FBQXpCLGNBQUEsR0FBQTRCLENBQUEsVUFBRyxhQUFhO0VBQUE7RUFBQTVCLGNBQUEsR0FBQVUsQ0FBQTtFQUFBVixjQUFBLEdBQUFXLENBQUE7RUFDN0RDLE9BQU8sQ0FBQ0MsR0FBRztFQUFBO0VBQUEsaURBQUFnQixNQUFBLENBQXdDTCxNQUFNLENBQUUsQ0FBQztFQUFDO0VBQUF4QixjQUFBLEdBQUFXLENBQUE7RUFDN0RDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLDRDQUE0QyxDQUFDO0FBQzNEOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sU0FBU2lCLDBCQUEwQkEsQ0FBQSxFQUFHO0VBQUE7RUFBQTlCLGNBQUEsR0FBQVUsQ0FBQTtFQUFBVixjQUFBLEdBQUFXLENBQUE7RUFDM0NDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHVDQUF1QyxDQUFDO0VBQUM7RUFBQWIsY0FBQSxHQUFBVyxDQUFBO0VBQ3JEQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxpQ0FBaUMsQ0FBQztBQUNoRCIsImlnbm9yZUxpc3QiOltdfQ==