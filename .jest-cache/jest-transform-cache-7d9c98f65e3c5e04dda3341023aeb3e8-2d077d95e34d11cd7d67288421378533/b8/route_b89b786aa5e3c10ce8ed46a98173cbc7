4e14cd0c6edaee7f0d4f8f8861080035
/* istanbul ignore next */ function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["id", "incrementUsage"];
function cov_2ajgc5vrqa() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/app/api/tags/route.ts";
  var hash = "1a9751469b3ce9d718f8b045631db1fec1ab1f0f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/app/api/tags/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 19,
          column: 2
        }
      },
      "1": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 21,
          column: 49
        }
      },
      "2": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 147,
          column: 3
        }
      },
      "3": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 36
        }
      },
      "4": {
        start: {
          line: 27,
          column: 25
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "5": {
        start: {
          line: 30,
          column: 17
        },
        end: {
          line: 30,
          column: 59
        }
      },
      "6": {
        start: {
          line: 31,
          column: 19
        },
        end: {
          line: 31,
          column: 62
        }
      },
      "7": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 58
        }
      },
      "8": {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 33,
          column: 45
        }
      },
      "9": {
        start: {
          line: 34,
          column: 18
        },
        end: {
          line: 34,
          column: 76
        }
      },
      "10": {
        start: {
          line: 35,
          column: 19
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "11": {
        start: {
          line: 38,
          column: 23
        },
        end: {
          line: 38,
          column: 25
        }
      },
      "12": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "13": {
        start: {
          line: 41,
          column: 6
        },
        end: {
          line: 41,
          column: 24
        }
      },
      "14": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "15": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 45,
          column: 28
        }
      },
      "16": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "17": {
        start: {
          line: 49,
          column: 6
        },
        end: {
          line: 49,
          column: 29
        }
      },
      "18": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "19": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 56,
          column: 8
        }
      },
      "20": {
        start: {
          line: 60,
          column: 17
        },
        end: {
          line: 74,
          column: 6
        }
      },
      "21": {
        start: {
          line: 77,
          column: 47
        },
        end: {
          line: 77,
          column: 49
        }
      },
      "22": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "23": {
        start: {
          line: 79,
          column: 34
        },
        end: {
          line: 79,
          column: 62
        }
      },
      "24": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 100,
          column: 7
        }
      },
      "25": {
        start: {
          line: 82,
          column: 28
        },
        end: {
          line: 97,
          column: 10
        }
      },
      "26": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 59
        }
      },
      "27": {
        start: {
          line: 104,
          column: 28
        },
        end: {
          line: 117,
          column: 7
        }
      },
      "28": {
        start: {
          line: 104,
          column: 47
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "29": {
        start: {
          line: 120,
          column: 23
        },
        end: {
          line: 120,
          column: 56
        }
      },
      "30": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 135,
          column: 7
        }
      },
      "31": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 137,
          column: 50
        }
      },
      "32": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 146,
          column: 6
        }
      },
      "33": {
        start: {
          line: 152,
          column: 2
        },
        end: {
          line: 224,
          column: 3
        }
      },
      "34": {
        start: {
          line: 153,
          column: 17
        },
        end: {
          line: 153,
          column: 37
        }
      },
      "35": {
        start: {
          line: 156,
          column: 26
        },
        end: {
          line: 156,
          column: 53
        }
      },
      "36": {
        start: {
          line: 159,
          column: 27
        },
        end: {
          line: 159,
          column: 79
        }
      },
      "37": {
        start: {
          line: 162,
          column: 21
        },
        end: {
          line: 167,
          column: 6
        }
      },
      "38": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "39": {
        start: {
          line: 170,
          column: 6
        },
        end: {
          line: 177,
          column: 8
        }
      },
      "40": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 189,
          column: 6
        }
      },
      "41": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 201,
          column: 6
        }
      },
      "42": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 212,
          column: 5
        }
      },
      "43": {
        start: {
          line: 204,
          column: 6
        },
        end: {
          line: 211,
          column: 8
        }
      },
      "44": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 50
        }
      },
      "45": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 223,
          column: 6
        }
      },
      "46": {
        start: {
          line: 229,
          column: 2
        },
        end: {
          line: 317,
          column: 3
        }
      },
      "47": {
        start: {
          line: 230,
          column: 17
        },
        end: {
          line: 230,
          column: 37
        }
      },
      "48": {
        start: {
          line: 231,
          column: 50
        },
        end: {
          line: 231,
          column: 54
        }
      },
      "49": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 241,
          column: 5
        }
      },
      "50": {
        start: {
          line: 234,
          column: 6
        },
        end: {
          line: 240,
          column: 8
        }
      },
      "51": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 283,
          column: 5
        }
      },
      "52": {
        start: {
          line: 247,
          column: 6
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "53": {
        start: {
          line: 259,
          column: 29
        },
        end: {
          line: 259,
          column: 57
        }
      },
      "54": {
        start: {
          line: 265,
          column: 28
        },
        end: {
          line: 265,
          column: 61
        }
      },
      "55": {
        start: {
          line: 267,
          column: 6
        },
        end: {
          line: 282,
          column: 9
        }
      },
      "56": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 294,
          column: 7
        }
      },
      "57": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 305,
          column: 5
        }
      },
      "58": {
        start: {
          line: 297,
          column: 6
        },
        end: {
          line: 304,
          column: 8
        }
      },
      "59": {
        start: {
          line: 307,
          column: 4
        },
        end: {
          line: 307,
          column: 50
        }
      },
      "60": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 316,
          column: 6
        }
      },
      "61": {
        start: {
          line: 322,
          column: 2
        },
        end: {
          line: 372,
          column: 3
        }
      },
      "62": {
        start: {
          line: 323,
          column: 16
        },
        end: {
          line: 323,
          column: 36
        }
      },
      "63": {
        start: {
          line: 324,
          column: 15
        },
        end: {
          line: 324,
          column: 41
        }
      },
      "64": {
        start: {
          line: 326,
          column: 4
        },
        end: {
          line: 334,
          column: 5
        }
      },
      "65": {
        start: {
          line: 327,
          column: 6
        },
        end: {
          line: 333,
          column: 8
        }
      },
      "66": {
        start: {
          line: 337,
          column: 23
        },
        end: {
          line: 339,
          column: 6
        }
      },
      "67": {
        start: {
          line: 341,
          column: 4
        },
        end: {
          line: 350,
          column: 5
        }
      },
      "68": {
        start: {
          line: 342,
          column: 6
        },
        end: {
          line: 349,
          column: 8
        }
      },
      "69": {
        start: {
          line: 353,
          column: 4
        },
        end: {
          line: 355,
          column: 7
        }
      },
      "70": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 360,
          column: 7
        }
      },
      "71": {
        start: {
          line: 362,
          column: 4
        },
        end: {
          line: 362,
          column: 50
        }
      },
      "72": {
        start: {
          line: 364,
          column: 4
        },
        end: {
          line: 371,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "GET",
        decl: {
          start: {
            line: 24,
            column: 22
          },
          end: {
            line: 24,
            column: 25
          }
        },
        loc: {
          start: {
            line: 24,
            column: 48
          },
          end: {
            line: 148,
            column: 1
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 104,
            column: 37
          },
          end: {
            line: 104,
            column: 38
          }
        },
        loc: {
          start: {
            line: 104,
            column: 47
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 104
      },
      "2": {
        name: "POST",
        decl: {
          start: {
            line: 151,
            column: 22
          },
          end: {
            line: 151,
            column: 26
          }
        },
        loc: {
          start: {
            line: 151,
            column: 49
          },
          end: {
            line: 225,
            column: 1
          }
        },
        line: 151
      },
      "3": {
        name: "PUT",
        decl: {
          start: {
            line: 228,
            column: 22
          },
          end: {
            line: 228,
            column: 25
          }
        },
        loc: {
          start: {
            line: 228,
            column: 48
          },
          end: {
            line: 318,
            column: 1
          }
        },
        line: 228
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 259,
            column: 20
          },
          end: {
            line: 259,
            column: 21
          }
        },
        loc: {
          start: {
            line: 259,
            column: 29
          },
          end: {
            line: 259,
            column: 57
          }
        },
        line: 259
      },
      "5": {
        name: "DELETE",
        decl: {
          start: {
            line: 321,
            column: 22
          },
          end: {
            line: 321,
            column: 28
          }
        },
        loc: {
          start: {
            line: 321,
            column: 51
          },
          end: {
            line: 373,
            column: 1
          }
        },
        line: 321
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 36
          },
          end: {
            line: 34,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 36
          },
          end: {
            line: 34,
            column: 61
          }
        }, {
          start: {
            line: 34,
            column: 65
          },
          end: {
            line: 34,
            column: 69
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 28
          },
          end: {
            line: 35,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 28
          },
          end: {
            line: 35,
            column: 54
          }
        }, {
          start: {
            line: 35,
            column: 58
          },
          end: {
            line: 35,
            column: 61
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 15
          },
          end: {
            line: 71,
            column: 27
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 10
          },
          end: {
            line: 70,
            column: 58
          }
        }, {
          start: {
            line: 71,
            column: 10
          },
          end: {
            line: 71,
            column: 27
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "8": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 78,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 78,
            column: 13
          }
        }, {
          start: {
            line: 78,
            column: 17
          },
          end: {
            line: 78,
            column: 24
          }
        }],
        line: 78
      },
      "9": {
        loc: {
          start: {
            line: 115,
            column: 21
          },
          end: {
            line: 115,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 41
          },
          end: {
            line: 115,
            column: 66
          }
        }, {
          start: {
            line: 115,
            column: 69
          },
          end: {
            line: 115,
            column: 73
          }
        }],
        line: 115
      },
      "10": {
        loc: {
          start: {
            line: 143,
            column: 17
          },
          end: {
            line: 143,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 42
          },
          end: {
            line: 143,
            column: 55
          }
        }, {
          start: {
            line: 143,
            column: 58
          },
          end: {
            line: 143,
            column: 73
          }
        }],
        line: 143
      },
      "11": {
        loc: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "12": {
        loc: {
          start: {
            line: 185,
            column: 23
          },
          end: {
            line: 187,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 186,
            column: 47
          }
        }, {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 187,
            column: 16
          }
        }],
        line: 185
      },
      "13": {
        loc: {
          start: {
            line: 196,
            column: 25
          },
          end: {
            line: 196,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 196,
            column: 45
          },
          end: {
            line: 196,
            column: 70
          }
        }, {
          start: {
            line: 196,
            column: 73
          },
          end: {
            line: 196,
            column: 77
          }
        }],
        line: 196
      },
      "14": {
        loc: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "15": {
        loc: {
          start: {
            line: 220,
            column: 17
          },
          end: {
            line: 220,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 220,
            column: 42
          },
          end: {
            line: 220,
            column: 55
          }
        }, {
          start: {
            line: 220,
            column: 58
          },
          end: {
            line: 220,
            column: 73
          }
        }],
        line: 220
      },
      "16": {
        loc: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "17": {
        loc: {
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        }, {
          start: {
            line: 263,
            column: 11
          },
          end: {
            line: 283,
            column: 5
          }
        }],
        line: 245
      },
      "18": {
        loc: {
          start: {
            line: 259,
            column: 30
          },
          end: {
            line: 259,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 30
          },
          end: {
            line: 259,
            column: 45
          }
        }, {
          start: {
            line: 259,
            column: 49
          },
          end: {
            line: 259,
            column: 50
          }
        }],
        line: 259
      },
      "19": {
        loc: {
          start: {
            line: 271,
            column: 14
          },
          end: {
            line: 275,
            column: 11
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 271,
            column: 14
          },
          end: {
            line: 271,
            column: 32
          }
        }, {
          start: {
            line: 271,
            column: 36
          },
          end: {
            line: 275,
            column: 11
          }
        }],
        line: 271
      },
      "20": {
        loc: {
          start: {
            line: 276,
            column: 14
          },
          end: {
            line: 280,
            column: 11
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 14
          },
          end: {
            line: 276,
            column: 55
          }
        }, {
          start: {
            line: 276,
            column: 59
          },
          end: {
            line: 280,
            column: 11
          }
        }],
        line: 276
      },
      "21": {
        loc: {
          start: {
            line: 277,
            column: 27
          },
          end: {
            line: 279,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 278,
            column: 51
          }
        }, {
          start: {
            line: 279,
            column: 16
          },
          end: {
            line: 279,
            column: 20
          }
        }],
        line: 277
      },
      "22": {
        loc: {
          start: {
            line: 289,
            column: 23
          },
          end: {
            line: 291,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 290,
            column: 44
          }
        }, {
          start: {
            line: 291,
            column: 12
          },
          end: {
            line: 291,
            column: 16
          }
        }],
        line: 289
      },
      "23": {
        loc: {
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 305,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 305,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "24": {
        loc: {
          start: {
            line: 313,
            column: 17
          },
          end: {
            line: 313,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 42
          },
          end: {
            line: 313,
            column: 55
          }
        }, {
          start: {
            line: 313,
            column: 58
          },
          end: {
            line: 313,
            column: 73
          }
        }],
        line: 313
      },
      "25": {
        loc: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "26": {
        loc: {
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 350,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 350,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 341
      },
      "27": {
        loc: {
          start: {
            line: 368,
            column: 17
          },
          end: {
            line: 368,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 368,
            column: 42
          },
          end: {
            line: 368,
            column: 55
          }
        }, {
          start: {
            line: 368,
            column: 58
          },
          end: {
            line: 368,
            column: 73
          }
        }],
        line: 368
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1a9751469b3ce9d718f8b045631db1fec1ab1f0f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ajgc5vrqa = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ajgc5vrqa();
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * API Route: Tags Management
 * Handles tag operations and popular tag retrieval
 */

import { NextResponse } from "next/server";
import { prisma } from "@/lib/prisma";
import { z } from "zod";
import { TagType, League } from "@prisma/client";

// Validation schemas
var CreateTagSchema =
/* istanbul ignore next */
(cov_2ajgc5vrqa().s[0]++, z.object({
  name: z.string().min(1).max(100),
  type: z.nativeEnum(TagType),
  league: z.nativeEnum(League).optional(),
  country: z.string().optional(),
  position: z.string().optional(),
  // For players
  transferValue: z.number().optional() // In cents
}));
var UpdateTagSchema =
/* istanbul ignore next */
(cov_2ajgc5vrqa().s[1]++, CreateTagSchema.partial());

// GET - Retrieve tags with filtering and popularity
export
/* istanbul ignore next */
function GET(_x) {
  return _GET.apply(this, arguments);
}

// POST - Create a new tag
/* istanbul ignore next */
function _GET() {
  _GET = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(request)
  /* istanbul ignore next */
  {
    var url, searchParams, type, league, popular, search, limit, offset, where, tags, popularByType, tagTypes, _i, _tagTypes, tagType, popularTags, transformedTags, totalCount, _t;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_2ajgc5vrqa().f[0]++;
          cov_2ajgc5vrqa().s[2]++;
          _context.p = 1;
          url = (cov_2ajgc5vrqa().s[3]++, new URL(request.url));
          searchParams = (cov_2ajgc5vrqa().s[4]++, url.searchParams); // Parse query parameters
          type = (cov_2ajgc5vrqa().s[5]++, searchParams.get("type"));
          league = (cov_2ajgc5vrqa().s[6]++, searchParams.get("league"));
          popular = (cov_2ajgc5vrqa().s[7]++, searchParams.get("popular") === "true");
          search = (cov_2ajgc5vrqa().s[8]++, searchParams.get("search"));
          limit = (cov_2ajgc5vrqa().s[9]++, Math.min(parseInt(
          /* istanbul ignore next */
          (cov_2ajgc5vrqa().b[0][0]++, searchParams.get("limit")) ||
          /* istanbul ignore next */
          (cov_2ajgc5vrqa().b[0][1]++, "50")), 200));
          offset = (cov_2ajgc5vrqa().s[10]++, parseInt(
          /* istanbul ignore next */
          (cov_2ajgc5vrqa().b[1][0]++, searchParams.get("offset")) ||
          /* istanbul ignore next */
          (cov_2ajgc5vrqa().b[1][1]++, "0"))); // Build where clause
          where = (cov_2ajgc5vrqa().s[11]++, {});
          cov_2ajgc5vrqa().s[12]++;
          if (type) {
            /* istanbul ignore next */
            cov_2ajgc5vrqa().b[2][0]++;
            cov_2ajgc5vrqa().s[13]++;
            where.type = type;
          } else
          /* istanbul ignore next */
          {
            cov_2ajgc5vrqa().b[2][1]++;
          }
          cov_2ajgc5vrqa().s[14]++;
          if (league) {
            /* istanbul ignore next */
            cov_2ajgc5vrqa().b[3][0]++;
            cov_2ajgc5vrqa().s[15]++;
            where.league = league;
          } else
          /* istanbul ignore next */
          {
            cov_2ajgc5vrqa().b[3][1]++;
          }
          cov_2ajgc5vrqa().s[16]++;
          if (popular) {
            /* istanbul ignore next */
            cov_2ajgc5vrqa().b[4][0]++;
            cov_2ajgc5vrqa().s[17]++;
            where.isPopular = true;
          } else
          /* istanbul ignore next */
          {
            cov_2ajgc5vrqa().b[4][1]++;
          }
          cov_2ajgc5vrqa().s[18]++;
          if (search) {
            /* istanbul ignore next */
            cov_2ajgc5vrqa().b[5][0]++;
            cov_2ajgc5vrqa().s[19]++;
            where.OR = [{
              name: {
                contains: search,
                mode: "insensitive"
              }
            }, {
              normalizedName: {
                contains: search.toLowerCase()
              }
            }];
          } else
          /* istanbul ignore next */
          {
            cov_2ajgc5vrqa().b[5][1]++;
          }

          // Fetch tags with usage counts
          cov_2ajgc5vrqa().s[20]++;
          _context.n = 2;
          return prisma.tag.findMany({
            where: where,
            include: {
              _count: {
                select: {
                  feedItems: true
                }
              }
            },
            orderBy: popular ?
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[6][0]++, [{
              usageCount: "desc"
            }, {
              lastUsedAt: "desc"
            }]) :
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[6][1]++, [{
              name: "asc"
            }]),
            take: limit,
            skip: offset
          });
        case 2:
          tags = _context.v;
          // Get popular tags by type if no specific filter
          popularByType = (cov_2ajgc5vrqa().s[21]++, {});
          cov_2ajgc5vrqa().s[22]++;
          if (!(
          /* istanbul ignore next */
          (cov_2ajgc5vrqa().b[8][0]++, !type) &&
          /* istanbul ignore next */
          (cov_2ajgc5vrqa().b[8][1]++, !search))) {
            _context.n = 7;
            break;
          }
          cov_2ajgc5vrqa().b[7][0]++;
          tagTypes = (cov_2ajgc5vrqa().s[23]++, ["CLUB", "PLAYER", "SOURCE"]);
          cov_2ajgc5vrqa().s[24]++;
          _i = 0, _tagTypes = tagTypes;
        case 3:
          if (!(_i < _tagTypes.length)) {
            _context.n = 6;
            break;
          }
          tagType = _tagTypes[_i];
          cov_2ajgc5vrqa().s[25]++;
          _context.n = 4;
          return prisma.tag.findMany({
            where: {
              type: tagType,
              isPopular: true
            },
            orderBy: {
              usageCount: "desc"
            },
            take: 10,
            select: {
              id: true,
              name: true,
              type: true,
              usageCount: true
            }
          });
        case 4:
          popularTags = _context.v;
          cov_2ajgc5vrqa().s[26]++;
          popularByType[tagType.toLowerCase()] = popularTags;
        case 5:
          _i++;
          _context.n = 3;
          break;
        case 6:
          _context.n = 8;
          break;
        case 7:
          cov_2ajgc5vrqa().b[7][1]++;
        case 8:
          // Transform data
          transformedTags = (cov_2ajgc5vrqa().s[27]++, tags.map(function (tag) {
            /* istanbul ignore next */
            cov_2ajgc5vrqa().f[1]++;
            cov_2ajgc5vrqa().s[28]++;
            return {
              id: tag.id,
              name: tag.name,
              type: tag.type,
              normalizedName: tag.normalizedName,
              isPopular: tag.isPopular,
              usageCount: tag.usageCount,
              lastUsedAt: tag.lastUsedAt,
              league: tag.league,
              country: tag.country,
              position: tag.position,
              transferValue: tag.transferValue ?
              /* istanbul ignore next */
              (cov_2ajgc5vrqa().b[9][0]++, Number(tag.transferValue)) :
              /* istanbul ignore next */
              (cov_2ajgc5vrqa().b[9][1]++, null),
              feedItemCount: tag._count.feedItems
            };
          })); // Get total count for pagination
          cov_2ajgc5vrqa().s[29]++;
          _context.n = 9;
          return prisma.tag.count({
            where: where
          });
        case 9:
          totalCount = _context.v;
          cov_2ajgc5vrqa().s[30]++;
          return _context.a(2, NextResponse.json({
            success: true,
            data: transformedTags,
            popularByType: popularByType,
            pagination: {
              total: totalCount,
              limit: limit,
              offset: offset,
              hasMore: offset + limit < totalCount
            },
            meta: {
              fetchedAt: new Date().toISOString()
            }
          }));
        case 10:
          _context.p = 10;
          _t = _context.v;
          cov_2ajgc5vrqa().s[31]++;
          console.error("Failed to fetch tags:",
          /* istanbul ignore next */
          _t);
          cov_2ajgc5vrqa().s[32]++;
          return _context.a(2, NextResponse.json({
            success: false,
            error: "Failed to fetch tags",
            details:
            /* istanbul ignore next */
            _t instanceof Error ?
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[10][0]++,
            /* istanbul ignore next */
            _t.message) :
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[10][1]++, "Unknown error")
          }, {
            status: 500
          }));
      }
    }, _callee, null, [[1, 10]]);
  }));
  return _GET.apply(this, arguments);
}
export
/* istanbul ignore next */
function POST(_x2) {
  return _POST.apply(this, arguments);
}

// PUT - Update tag metadata or increment usage
/* istanbul ignore next */
function _POST() {
  _POST = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2(request)
  /* istanbul ignore next */
  {
    var body, validatedData, normalizedName, existing, tag, _t2;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_2ajgc5vrqa().f[2]++;
          cov_2ajgc5vrqa().s[33]++;
          _context2.p = 1;
          cov_2ajgc5vrqa().s[34]++;
          _context2.n = 2;
          return request.json();
        case 2:
          body = _context2.v;
          // Validate input
          validatedData = (cov_2ajgc5vrqa().s[35]++, CreateTagSchema.parse(body)); // Normalize name for matching
          normalizedName = (cov_2ajgc5vrqa().s[36]++, validatedData.name.toLowerCase().replace(/\s+/g, "")); // Check if tag already exists
          cov_2ajgc5vrqa().s[37]++;
          _context2.n = 3;
          return prisma.tag.findFirst({
            where: {
              normalizedName: normalizedName,
              type: validatedData.type
            }
          });
        case 3:
          existing = _context2.v;
          cov_2ajgc5vrqa().s[38]++;
          if (!existing) {
            _context2.n = 4;
            break;
          }
          cov_2ajgc5vrqa().b[11][0]++;
          cov_2ajgc5vrqa().s[39]++;
          return _context2.a(2, NextResponse.json({
            success: false,
            error: "Tag already exists",
            data: existing
          }, {
            status: 409
          }));
        case 4:
          cov_2ajgc5vrqa().b[11][1]++;
        case 5:
          cov_2ajgc5vrqa().s[40]++;
          _context2.n = 6;
          return prisma.tag.create({
            data:
            /* istanbul ignore next */
            _objectSpread(_objectSpread({}, validatedData), {}, {
              normalizedName: normalizedName,
              transferValue: validatedData.transferValue ?
              /* istanbul ignore next */
              (cov_2ajgc5vrqa().b[12][0]++, BigInt(validatedData.transferValue)) :
              /* istanbul ignore next */
              (cov_2ajgc5vrqa().b[12][1]++, null)
            })
          });
        case 6:
          tag = _context2.v;
          cov_2ajgc5vrqa().s[41]++;
          return _context2.a(2, NextResponse.json({
            success: true,
            data:
            /* istanbul ignore next */
            _objectSpread(_objectSpread({}, tag), {}, {
              transferValue: tag.transferValue ?
              /* istanbul ignore next */
              (cov_2ajgc5vrqa().b[13][0]++, Number(tag.transferValue)) :
              /* istanbul ignore next */
              (cov_2ajgc5vrqa().b[13][1]++, null)
            }),
            message: "Tag created successfully"
          }, {
            status: 201
          }));
        case 7:
          _context2.p = 7;
          _t2 = _context2.v;
          cov_2ajgc5vrqa().s[42]++;
          if (!(
          /* istanbul ignore next */
          _t2 instanceof z.ZodError)) {
            _context2.n = 8;
            break;
          }
          cov_2ajgc5vrqa().b[14][0]++;
          cov_2ajgc5vrqa().s[43]++;
          return _context2.a(2, NextResponse.json({
            success: false,
            error: "Invalid input data",
            details:
            /* istanbul ignore next */
            _t2.errors
          }, {
            status: 400
          }));
        case 8:
          cov_2ajgc5vrqa().b[14][1]++;
        case 9:
          cov_2ajgc5vrqa().s[44]++;
          console.error("Failed to create tag:",
          /* istanbul ignore next */
          _t2);
          cov_2ajgc5vrqa().s[45]++;
          return _context2.a(2, NextResponse.json({
            success: false,
            error: "Failed to create tag",
            details:
            /* istanbul ignore next */
            _t2 instanceof Error ?
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[15][0]++,
            /* istanbul ignore next */
            _t2.message) :
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[15][1]++, "Unknown error")
          }, {
            status: 500
          }));
      }
    }, _callee2, null, [[1, 7]]);
  }));
  return _POST.apply(this, arguments);
}
export
/* istanbul ignore next */
function PUT(_x3) {
  return _PUT.apply(this, arguments);
}

// DELETE - Remove a tag
/* istanbul ignore next */
function _PUT() {
  _PUT = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee3(request)
  /* istanbul ignore next */
  {
    var body, _ref, id, incrementUsage, updateData, updatedTag, validatedData, _t3, _t4, _t5, _t6, _t7, _t8, _t9, _t0, _t1;
    return _regenerator().w(function (_context3) {
      while (1) switch (_context3.n) {
        case 0:
          cov_2ajgc5vrqa().f[3]++;
          cov_2ajgc5vrqa().s[46]++;
          _context3.p = 1;
          cov_2ajgc5vrqa().s[47]++;
          _context3.n = 2;
          return request.json();
        case 2:
          body = _context3.v;
          _ref = (cov_2ajgc5vrqa().s[48]++, body), id = _ref.id, incrementUsage = _ref.incrementUsage, updateData = _objectWithoutProperties(_ref, _excluded);
          cov_2ajgc5vrqa().s[49]++;
          if (id) {
            _context3.n = 3;
            break;
          }
          cov_2ajgc5vrqa().b[16][0]++;
          cov_2ajgc5vrqa().s[50]++;
          return _context3.a(2, NextResponse.json({
            success: false,
            error: "Tag ID is required"
          }, {
            status: 400
          }));
        case 3:
          cov_2ajgc5vrqa().b[16][1]++;
        case 4:
          cov_2ajgc5vrqa().s[51]++;
          if (!incrementUsage) {
            _context3.n = 7;
            break;
          }
          cov_2ajgc5vrqa().b[17][0]++;
          cov_2ajgc5vrqa().s[52]++;
          _t3 = prisma.tag;
          _t4 = {
            id: id
          };
          _t5 = {
            increment: 1
          };
          _t6 = new Date();
          _context3.n = 5;
          return prisma.tag.findUnique({
            where: {
              id: id
            },
            select: {
              usageCount: true
            }
          }).then(function (tag) {
            /* istanbul ignore next */
            cov_2ajgc5vrqa().f[4]++;
            cov_2ajgc5vrqa().s[53]++;
            return (
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[18][0]++, tag === null || tag === void 0 ? void 0 : tag.usageCount) ||
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[18][1]++, 0)) >= 50;
          });
        case 5:
          _t7 = _context3.v;
          _t8 = {
            set: _t7
          };
          _t9 = {
            usageCount: _t5,
            lastUsedAt: _t6,
            isPopular: _t8
          };
          _t0 = {
            where: _t4,
            data: _t9
          };
          _context3.n = 6;
          return _t3.update.call(_t3, _t0);
        case 6:
          updatedTag = _context3.v;
          _context3.n = 9;
          break;
        case 7:
          cov_2ajgc5vrqa().b[17][1]++;
          // Validate and apply other updates
          validatedData = (cov_2ajgc5vrqa().s[54]++, UpdateTagSchema.parse(updateData));
          cov_2ajgc5vrqa().s[55]++;
          _context3.n = 8;
          return prisma.tag.update({
            where: {
              id: id
            },
            data:
            /* istanbul ignore next */
            _objectSpread(_objectSpread(_objectSpread({}, validatedData),
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[19][0]++, validatedData.name) &&
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[19][1]++, {
              normalizedName: validatedData.name.toLowerCase().replace(/\s+/g, "")
            })),
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[20][0]++, validatedData.transferValue !== undefined) &&
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[20][1]++, {
              transferValue: validatedData.transferValue ?
              /* istanbul ignore next */
              (cov_2ajgc5vrqa().b[21][0]++, BigInt(validatedData.transferValue)) :
              /* istanbul ignore next */
              (cov_2ajgc5vrqa().b[21][1]++, null)
            }))
          });
        case 8:
          updatedTag = _context3.v;
        case 9:
          cov_2ajgc5vrqa().s[56]++;
          return _context3.a(2, NextResponse.json({
            success: true,
            data:
            /* istanbul ignore next */
            _objectSpread(_objectSpread({}, updatedTag), {}, {
              transferValue: updatedTag.transferValue ?
              /* istanbul ignore next */
              (cov_2ajgc5vrqa().b[22][0]++, Number(updatedTag.transferValue)) :
              /* istanbul ignore next */
              (cov_2ajgc5vrqa().b[22][1]++, null)
            }),
            message: "Tag updated successfully"
          }));
        case 10:
          _context3.p = 10;
          _t1 = _context3.v;
          cov_2ajgc5vrqa().s[57]++;
          if (!(
          /* istanbul ignore next */
          _t1 instanceof z.ZodError)) {
            _context3.n = 11;
            break;
          }
          cov_2ajgc5vrqa().b[23][0]++;
          cov_2ajgc5vrqa().s[58]++;
          return _context3.a(2, NextResponse.json({
            success: false,
            error: "Invalid update data",
            details:
            /* istanbul ignore next */
            _t1.errors
          }, {
            status: 400
          }));
        case 11:
          cov_2ajgc5vrqa().b[23][1]++;
        case 12:
          cov_2ajgc5vrqa().s[59]++;
          console.error("Failed to update tag:",
          /* istanbul ignore next */
          _t1);
          cov_2ajgc5vrqa().s[60]++;
          return _context3.a(2, NextResponse.json({
            success: false,
            error: "Failed to update tag",
            details:
            /* istanbul ignore next */
            _t1 instanceof Error ?
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[24][0]++,
            /* istanbul ignore next */
            _t1.message) :
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[24][1]++, "Unknown error")
          }, {
            status: 500
          }));
      }
    }, _callee3, null, [[1, 10]]);
  }));
  return _PUT.apply(this, arguments);
}
export
/* istanbul ignore next */
function DELETE(_x4) {
  return _DELETE.apply(this, arguments);
}
/* istanbul ignore next */
function _DELETE() {
  _DELETE = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee4(request)
  /* istanbul ignore next */
  {
    var url, id, usageCount, _t10;
    return _regenerator().w(function (_context4) {
      while (1) switch (_context4.n) {
        case 0:
          cov_2ajgc5vrqa().f[5]++;
          cov_2ajgc5vrqa().s[61]++;
          _context4.p = 1;
          url = (cov_2ajgc5vrqa().s[62]++, new URL(request.url));
          id = (cov_2ajgc5vrqa().s[63]++, url.searchParams.get("id"));
          cov_2ajgc5vrqa().s[64]++;
          if (id) {
            _context4.n = 2;
            break;
          }
          cov_2ajgc5vrqa().b[25][0]++;
          cov_2ajgc5vrqa().s[65]++;
          return _context4.a(2, NextResponse.json({
            success: false,
            error: "Tag ID is required"
          }, {
            status: 400
          }));
        case 2:
          cov_2ajgc5vrqa().b[25][1]++;
        case 3:
          cov_2ajgc5vrqa().s[66]++;
          _context4.n = 4;
          return prisma.feedItemTag.count({
            where: {
              tagId: id
            }
          });
        case 4:
          usageCount = _context4.v;
          cov_2ajgc5vrqa().s[67]++;
          if (!(usageCount > 0)) {
            _context4.n = 5;
            break;
          }
          cov_2ajgc5vrqa().b[26][0]++;
          cov_2ajgc5vrqa().s[68]++;
          return _context4.a(2, NextResponse.json({
            success: false,
            error: "Cannot delete tag that is in use",
            details:
            /* istanbul ignore next */
            "Tag is used by ".concat(usageCount, " feed items")
          }, {
            status: 409
          }));
        case 5:
          cov_2ajgc5vrqa().b[26][1]++;
        case 6:
          cov_2ajgc5vrqa().s[69]++;
          _context4.n = 7;
          return prisma.tag[
          /* istanbul ignore next */
          "delete"]({
            where: {
              id: id
            }
          });
        case 7:
          cov_2ajgc5vrqa().s[70]++;
          return _context4.a(2, NextResponse.json({
            success: true,
            message: "Tag deleted successfully"
          }));
        case 8:
          _context4.p = 8;
          _t10 = _context4.v;
          cov_2ajgc5vrqa().s[71]++;
          console.error("Failed to delete tag:",
          /* istanbul ignore next */
          _t10);
          cov_2ajgc5vrqa().s[72]++;
          return _context4.a(2, NextResponse.json({
            success: false,
            error: "Failed to delete tag",
            details:
            /* istanbul ignore next */
            _t10 instanceof Error ?
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[27][0]++,
            /* istanbul ignore next */
            _t10.message) :
            /* istanbul ignore next */
            (cov_2ajgc5vrqa().b[27][1]++, "Unknown error")
          }, {
            status: 500
          }));
      }
    }, _callee4, null, [[1, 8]]);
  }));
  return _DELETE.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,