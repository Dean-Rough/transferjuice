79d8575db38b76ebb047614d5f743825
/* istanbul ignore next */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TerryArticleGenerator = exports.ArticleSectionSchema = exports.ArticleGenerationSchema = exports.ArticleContentSchema = void 0;
var
/* istanbul ignore next */
_openai = _interopRequireDefault(require("openai"));
var
/* istanbul ignore next */
_zod = require("zod");
/* istanbul ignore next */ function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function cov_25hk21kjr7() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/ai/article-generator.ts";
  var hash = "ca3e1e18e446f02dc3e9ef2715e900ce31a6a8ed";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/ai/article-generator.ts",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 36
        },
        end: {
          line: 21,
          column: 2
        }
      },
      "1": {
        start: {
          line: 23,
          column: 36
        },
        end: {
          line: 34,
          column: 2
        }
      },
      "2": {
        start: {
          line: 36,
          column: 39
        },
        end: {
          line: 54,
          column: 2
        }
      },
      "3": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 88,
          column: 6
        }
      },
      "4": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 92,
          column: 7
        }
      },
      "5": {
        start: {
          line: 99,
          column: 22
        },
        end: {
          line: 99,
          column: 32
        }
      },
      "6": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "7": {
        start: {
          line: 103,
          column: 32
        },
        end: {
          line: 103,
          column: 75
        }
      },
      "8": {
        start: {
          line: 106,
          column: 31
        },
        end: {
          line: 109,
          column: 7
        }
      },
      "9": {
        start: {
          line: 112,
          column: 23
        },
        end: {
          line: 116,
          column: 7
        }
      },
      "10": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 52
        }
      },
      "11": {
        start: {
          line: 123,
          column: 29
        },
        end: {
          line: 123,
          column: 67
        }
      },
      "12": {
        start: {
          line: 124,
          column: 25
        },
        end: {
          line: 124,
          column: 59
        }
      },
      "13": {
        start: {
          line: 125,
          column: 27
        },
        end: {
          line: 128,
          column: 7
        }
      },
      "14": {
        start: {
          line: 130,
          column: 24
        },
        end: {
          line: 133,
          column: 7
        }
      },
      "15": {
        start: {
          line: 131,
          column: 28
        },
        end: {
          line: 131,
          column: 69
        }
      },
      "16": {
        start: {
          line: 134,
          column: 32
        },
        end: {
          line: 134,
          column: 58
        }
      },
      "17": {
        start: {
          line: 136,
          column: 41
        },
        end: {
          line: 154,
          column: 7
        }
      },
      "18": {
        start: {
          line: 156,
          column: 6
        },
        end: {
          line: 156,
          column: 52
        }
      },
      "19": {
        start: {
          line: 158,
          column: 6
        },
        end: {
          line: 160,
          column: 8
        }
      },
      "20": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 197,
          column: 20
        }
      },
      "21": {
        start: {
          line: 169,
          column: 28
        },
        end: {
          line: 169,
          column: 69
        }
      },
      "22": {
        start: {
          line: 172,
          column: 21
        },
        end: {
          line: 172,
          column: 35
        }
      },
      "23": {
        start: {
          line: 173,
          column: 21
        },
        end: {
          line: 173,
          column: 35
        }
      },
      "24": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 70
        }
      },
      "25": {
        start: {
          line: 176,
          column: 57
        },
        end: {
          line: 176,
          column: 70
        }
      },
      "26": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 70
        }
      },
      "27": {
        start: {
          line: 177,
          column: 57
        },
        end: {
          line: 177,
          column: 70
        }
      },
      "28": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 70
        }
      },
      "29": {
        start: {
          line: 178,
          column: 57
        },
        end: {
          line: 178,
          column: 70
        }
      },
      "30": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 70
        }
      },
      "31": {
        start: {
          line: 179,
          column: 57
        },
        end: {
          line: 179,
          column: 70
        }
      },
      "32": {
        start: {
          line: 182,
          column: 24
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "33": {
        start: {
          line: 183,
          column: 17
        },
        end: {
          line: 183,
          column: 33
        }
      },
      "34": {
        start: {
          line: 185,
          column: 24
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "35": {
        start: {
          line: 186,
          column: 17
        },
        end: {
          line: 186,
          column: 33
        }
      },
      "36": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 34
        }
      },
      "37": {
        start: {
          line: 188,
          column: 21
        },
        end: {
          line: 188,
          column: 34
        }
      },
      "38": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 34
        }
      },
      "39": {
        start: {
          line: 189,
          column: 21
        },
        end: {
          line: 189,
          column: 34
        }
      },
      "40": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 45
        }
      },
      "41": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 45
        }
      },
      "42": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 31
        }
      },
      "43": {
        start: {
          line: 211,
          column: 22
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "44": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 241,
          column: 5
        }
      },
      "45": {
        start: {
          line: 236,
          column: 6
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "46": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 243,
          column: 69
        }
      },
      "47": {
        start: {
          line: 243,
          column: 41
        },
        end: {
          line: 243,
          column: 67
        }
      },
      "48": {
        start: {
          line: 258,
          column: 39
        },
        end: {
          line: 258,
          column: 41
        }
      },
      "49": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 268,
          column: 5
        }
      },
      "50": {
        start: {
          line: 261,
          column: 22
        },
        end: {
          line: 266,
          column: 7
        }
      },
      "51": {
        start: {
          line: 267,
          column: 6
        },
        end: {
          line: 267,
          column: 29
        }
      },
      "52": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 270,
          column: 20
        }
      },
      "53": {
        start: {
          line: 282,
          column: 26
        },
        end: {
          line: 282,
          column: 72
        }
      },
      "54": {
        start: {
          line: 284,
          column: 21
        },
        end: {
          line: 298,
          column: 6
        }
      },
      "55": {
        start: {
          line: 300,
          column: 20
        },
        end: {
          line: 300,
          column: 57
        }
      },
      "56": {
        start: {
          line: 301,
          column: 4
        },
        end: {
          line: 303,
          column: 5
        }
      },
      "57": {
        start: {
          line: 302,
          column: 6
        },
        end: {
          line: 302,
          column: 66
        }
      },
      "58": {
        start: {
          line: 306,
          column: 22
        },
        end: {
          line: 306,
          column: 52
        }
      },
      "59": {
        start: {
          line: 308,
          column: 4
        },
        end: {
          line: 316,
          column: 6
        }
      },
      "60": {
        start: {
          line: 314,
          column: 43
        },
        end: {
          line: 314,
          column: 55
        }
      },
      "61": {
        start: {
          line: 323,
          column: 23
        },
        end: {
          line: 336,
          column: 47
        }
      },
      "62": {
        start: {
          line: 338,
          column: 28
        },
        end: {
          line: 348,
          column: 5
        }
      },
      "63": {
        start: {
          line: 350,
          column: 4
        },
        end: {
          line: 350,
          column: 55
        }
      },
      "64": {
        start: {
          line: 361,
          column: 27
        },
        end: {
          line: 374,
          column: 19
        }
      },
      "65": {
        start: {
          line: 363,
          column: 31
        },
        end: {
          line: 363,
          column: 54
        }
      },
      "66": {
        start: {
          line: 364,
          column: 25
        },
        end: {
          line: 364,
          column: 42
        }
      },
      "67": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 372,
          column: 41
        }
      },
      "68": {
        start: {
          line: 369,
          column: 41
        },
        end: {
          line: 369,
          column: 47
        }
      },
      "69": {
        start: {
          line: 370,
          column: 37
        },
        end: {
          line: 370,
          column: 43
        }
      },
      "70": {
        start: {
          line: 376,
          column: 4
        },
        end: {
          line: 390,
          column: 13
        }
      },
      "71": {
        start: {
          line: 397,
          column: 25
        },
        end: {
          line: 407,
          column: 5
        }
      },
      "72": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 409,
          column: 30
        }
      },
      "73": {
        start: {
          line: 416,
          column: 19
        },
        end: {
          line: 422,
          column: 5
        }
      },
      "74": {
        start: {
          line: 424,
          column: 4
        },
        end: {
          line: 424,
          column: 24
        }
      },
      "75": {
        start: {
          line: 440,
          column: 27
        },
        end: {
          line: 442,
          column: 17
        }
      },
      "76": {
        start: {
          line: 441,
          column: 18
        },
        end: {
          line: 441,
          column: 64
        }
      },
      "77": {
        start: {
          line: 444,
          column: 21
        },
        end: {
          line: 464,
          column: 6
        }
      },
      "78": {
        start: {
          line: 466,
          column: 20
        },
        end: {
          line: 466,
          column: 57
        }
      },
      "79": {
        start: {
          line: 467,
          column: 4
        },
        end: {
          line: 469,
          column: 5
        }
      },
      "80": {
        start: {
          line: 468,
          column: 6
        },
        end: {
          line: 468,
          column: 47
        }
      },
      "81": {
        start: {
          line: 471,
          column: 21
        },
        end: {
          line: 471,
          column: 40
        }
      },
      "82": {
        start: {
          line: 472,
          column: 4
        },
        end: {
          line: 480,
          column: 6
        }
      },
      "83": {
        start: {
          line: 487,
          column: 32
        },
        end: {
          line: 487,
          column: 34
        }
      },
      "84": {
        start: {
          line: 490,
          column: 27
        },
        end: {
          line: 490,
          column: 54
        }
      },
      "85": {
        start: {
          line: 491,
          column: 4
        },
        end: {
          line: 493,
          column: 5
        }
      },
      "86": {
        start: {
          line: 492,
          column: 6
        },
        end: {
          line: 492,
          column: 40
        }
      },
      "87": {
        start: {
          line: 496,
          column: 25
        },
        end: {
          line: 504,
          column: 5
        }
      },
      "88": {
        start: {
          line: 506,
          column: 4
        },
        end: {
          line: 510,
          column: 5
        }
      },
      "89": {
        start: {
          line: 507,
          column: 6
        },
        end: {
          line: 509,
          column: 7
        }
      },
      "90": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 508,
          column: 31
        }
      },
      "91": {
        start: {
          line: 512,
          column: 4
        },
        end: {
          line: 512,
          column: 35
        }
      },
      "92": {
        start: {
          line: 522,
          column: 21
        },
        end: {
          line: 528,
          column: 5
        }
      },
      "93": {
        start: {
          line: 530,
          column: 4
        },
        end: {
          line: 530,
          column: 26
        }
      },
      "94": {
        start: {
          line: 540,
          column: 23
        },
        end: {
          line: 543,
          column: 5
        }
      },
      "95": {
        start: {
          line: 541,
          column: 26
        },
        end: {
          line: 541,
          column: 67
        }
      },
      "96": {
        start: {
          line: 545,
          column: 4
        },
        end: {
          line: 550,
          column: 6
        }
      },
      "97": {
        start: {
          line: 557,
          column: 16
        },
        end: {
          line: 557,
          column: 17
        }
      },
      "98": {
        start: {
          line: 559,
          column: 4
        },
        end: {
          line: 568,
          column: 7
        }
      },
      "99": {
        start: {
          line: 561,
          column: 6
        },
        end: {
          line: 561,
          column: 44
        }
      },
      "100": {
        start: {
          line: 564,
          column: 6
        },
        end: {
          line: 564,
          column: 53
        }
      },
      "101": {
        start: {
          line: 564,
          column: 41
        },
        end: {
          line: 564,
          column: 53
        }
      },
      "102": {
        start: {
          line: 565,
          column: 6
        },
        end: {
          line: 565,
          column: 60
        }
      },
      "103": {
        start: {
          line: 565,
          column: 49
        },
        end: {
          line: 565,
          column: 60
        }
      },
      "104": {
        start: {
          line: 566,
          column: 6
        },
        end: {
          line: 566,
          column: 60
        }
      },
      "105": {
        start: {
          line: 566,
          column: 49
        },
        end: {
          line: 566,
          column: 60
        }
      },
      "106": {
        start: {
          line: 567,
          column: 6
        },
        end: {
          line: 567,
          column: 59
        }
      },
      "107": {
        start: {
          line: 567,
          column: 48
        },
        end: {
          line: 567,
          column: 59
        }
      },
      "108": {
        start: {
          line: 570,
          column: 4
        },
        end: {
          line: 570,
          column: 32
        }
      },
      "109": {
        start: {
          line: 580,
          column: 4
        },
        end: {
          line: 585,
          column: 6
        }
      },
      "110": {
        start: {
          line: 592,
          column: 4
        },
        end: {
          line: 605,
          column: 5
        }
      },
      "111": {
        start: {
          line: 593,
          column: 23
        },
        end: {
          line: 597,
          column: 8
        }
      },
      "112": {
        start: {
          line: 599,
          column: 6
        },
        end: {
          line: 599,
          column: 29
        }
      },
      "113": {
        start: {
          line: 601,
          column: 6
        },
        end: {
          line: 604,
          column: 8
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 81,
            column: 2
          },
          end: {
            line: 81,
            column: 3
          }
        },
        loc: {
          start: {
            line: 81,
            column: 39
          },
          end: {
            line: 93,
            column: 3
          }
        },
        line: 81
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 98,
            column: 2
          },
          end: {
            line: 98,
            column: 3
          }
        },
        loc: {
          start: {
            line: 98,
            column: 76
          },
          end: {
            line: 162,
            column: 3
          }
        },
        line: 98
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        loc: {
          start: {
            line: 131,
            column: 28
          },
          end: {
            line: 131,
            column: 69
          }
        },
        line: 131
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 167,
            column: 2
          },
          end: {
            line: 167,
            column: 3
          }
        },
        loc: {
          start: {
            line: 167,
            column: 76
          },
          end: {
            line: 198,
            column: 3
          }
        },
        line: 167
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 169,
            column: 14
          },
          end: {
            line: 169,
            column: 15
          }
        },
        loc: {
          start: {
            line: 169,
            column: 28
          },
          end: {
            line: 169,
            column: 69
          }
        },
        line: 169
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 170,
            column: 13
          }
        },
        loc: {
          start: {
            line: 170,
            column: 22
          },
          end: {
            line: 196,
            column: 7
          }
        },
        line: 170
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 183,
            column: 10
          },
          end: {
            line: 183,
            column: 11
          }
        },
        loc: {
          start: {
            line: 183,
            column: 17
          },
          end: {
            line: 183,
            column: 33
          }
        },
        line: 183
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 186,
            column: 10
          },
          end: {
            line: 186,
            column: 11
          }
        },
        loc: {
          start: {
            line: 186,
            column: 17
          },
          end: {
            line: 186,
            column: 33
          }
        },
        line: 186
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 203,
            column: 2
          },
          end: {
            line: 203,
            column: 3
          }
        },
        loc: {
          start: {
            line: 210,
            column: 5
          },
          end: {
            line: 244,
            column: 3
          }
        },
        line: 210
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 243,
            column: 28
          },
          end: {
            line: 243,
            column: 29
          }
        },
        loc: {
          start: {
            line: 243,
            column: 41
          },
          end: {
            line: 243,
            column: 67
          }
        },
        line: 243
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 249,
            column: 2
          },
          end: {
            line: 249,
            column: 3
          }
        },
        loc: {
          start: {
            line: 257,
            column: 31
          },
          end: {
            line: 271,
            column: 3
          }
        },
        line: 257
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 276,
            column: 2
          },
          end: {
            line: 276,
            column: 3
          }
        },
        loc: {
          start: {
            line: 281,
            column: 29
          },
          end: {
            line: 317,
            column: 3
          }
        },
        line: 281
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 314,
            column: 33
          },
          end: {
            line: 314,
            column: 34
          }
        },
        loc: {
          start: {
            line: 314,
            column: 43
          },
          end: {
            line: 314,
            column: 55
          }
        },
        line: 314
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 322,
            column: 2
          },
          end: {
            line: 322,
            column: 3
          }
        },
        loc: {
          start: {
            line: 322,
            column: 69
          },
          end: {
            line: 351,
            column: 3
          }
        },
        line: 322
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 356,
            column: 2
          },
          end: {
            line: 356,
            column: 3
          }
        },
        loc: {
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 391,
            column: 3
          }
        },
        line: 360
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 362,
            column: 11
          },
          end: {
            line: 362,
            column: 12
          }
        },
        loc: {
          start: {
            line: 362,
            column: 28
          },
          end: {
            line: 373,
            column: 7
          }
        },
        line: 362
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 369,
            column: 34
          },
          end: {
            line: 369,
            column: 35
          }
        },
        loc: {
          start: {
            line: 369,
            column: 41
          },
          end: {
            line: 369,
            column: 47
          }
        },
        line: 369
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 370,
            column: 30
          },
          end: {
            line: 370,
            column: 31
          }
        },
        loc: {
          start: {
            line: 370,
            column: 37
          },
          end: {
            line: 370,
            column: 43
          }
        },
        line: 370
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 396,
            column: 2
          },
          end: {
            line: 396,
            column: 3
          }
        },
        loc: {
          start: {
            line: 396,
            column: 71
          },
          end: {
            line: 410,
            column: 3
          }
        },
        line: 396
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 415,
            column: 2
          },
          end: {
            line: 415,
            column: 3
          }
        },
        loc: {
          start: {
            line: 415,
            column: 69
          },
          end: {
            line: 425,
            column: 3
          }
        },
        line: 415
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 430,
            column: 2
          },
          end: {
            line: 430,
            column: 3
          }
        },
        loc: {
          start: {
            line: 439,
            column: 5
          },
          end: {
            line: 481,
            column: 3
          }
        },
        line: 439
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 441,
            column: 11
          },
          end: {
            line: 441,
            column: 12
          }
        },
        loc: {
          start: {
            line: 441,
            column: 18
          },
          end: {
            line: 441,
            column: 64
          }
        },
        line: 441
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 486,
            column: 2
          },
          end: {
            line: 486,
            column: 3
          }
        },
        loc: {
          start: {
            line: 486,
            column: 54
          },
          end: {
            line: 513,
            column: 3
          }
        },
        line: 486
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 518,
            column: 2
          },
          end: {
            line: 518,
            column: 3
          }
        },
        loc: {
          start: {
            line: 521,
            column: 12
          },
          end: {
            line: 531,
            column: 3
          }
        },
        line: 521
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 536,
            column: 2
          },
          end: {
            line: 536,
            column: 3
          }
        },
        loc: {
          start: {
            line: 538,
            column: 38
          },
          end: {
            line: 551,
            column: 3
          }
        },
        line: 538
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 541,
            column: 6
          },
          end: {
            line: 541,
            column: 7
          }
        },
        loc: {
          start: {
            line: 541,
            column: 26
          },
          end: {
            line: 541,
            column: 67
          }
        },
        line: 541
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 556,
            column: 2
          },
          end: {
            line: 556,
            column: 3
          }
        },
        loc: {
          start: {
            line: 556,
            column: 66
          },
          end: {
            line: 571,
            column: 3
          }
        },
        line: 556
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 559,
            column: 21
          },
          end: {
            line: 559,
            column: 22
          }
        },
        loc: {
          start: {
            line: 559,
            column: 34
          },
          end: {
            line: 568,
            column: 5
          }
        },
        line: 559
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 576,
            column: 2
          },
          end: {
            line: 576,
            column: 3
          }
        },
        loc: {
          start: {
            line: 579,
            column: 12
          },
          end: {
            line: 586,
            column: 3
          }
        },
        line: 579
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 591,
            column: 2
          },
          end: {
            line: 591,
            column: 3
          }
        },
        loc: {
          start: {
            line: 591,
            column: 77
          },
          end: {
            line: 606,
            column: 3
          }
        },
        line: 591
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 150,
            column: 16
          },
          end: {
            line: 150,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 150,
            column: 37
          },
          end: {
            line: 150,
            column: 45
          }
        }, {
          start: {
            line: 150,
            column: 48
          },
          end: {
            line: 150,
            column: 55
          }
        }],
        line: 150
      },
      "1": {
        loc: {
          start: {
            line: 159,
            column: 38
          },
          end: {
            line: 159,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 63
          },
          end: {
            line: 159,
            column: 76
          }
        }, {
          start: {
            line: 159,
            column: 79
          },
          end: {
            line: 159,
            column: 94
          }
        }],
        line: 159
      },
      "2": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 176,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 176,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "3": {
        loc: {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 177,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 177,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "4": {
        loc: {
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 178,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 178,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "5": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 179,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 179,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "6": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 188,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 188,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "7": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 189,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 189,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "8": {
        loc: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "9": {
        loc: {
          start: {
            line: 301,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "10": {
        loc: {
          start: {
            line: 369,
            column: 13
          },
          end: {
            line: 369,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 13
          },
          end: {
            line: 369,
            column: 59
          }
        }, {
          start: {
            line: 369,
            column: 63
          },
          end: {
            line: 369,
            column: 69
          }
        }],
        line: 369
      },
      "11": {
        loc: {
          start: {
            line: 370,
            column: 11
          },
          end: {
            line: 370,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 11
          },
          end: {
            line: 370,
            column: 55
          }
        }, {
          start: {
            line: 370,
            column: 59
          },
          end: {
            line: 370,
            column: 65
          }
        }],
        line: 370
      },
      "12": {
        loc: {
          start: {
            line: 467,
            column: 4
          },
          end: {
            line: 469,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 467,
            column: 4
          },
          end: {
            line: 469,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 467
      },
      "13": {
        loc: {
          start: {
            line: 475,
            column: 8
          },
          end: {
            line: 476,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 475,
            column: 8
          },
          end: {
            line: 475,
            column: 21
          }
        }, {
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 476,
            column: 64
          }
        }],
        line: 475
      },
      "14": {
        loc: {
          start: {
            line: 479,
            column: 12
          },
          end: {
            line: 479,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 479,
            column: 12
          },
          end: {
            line: 479,
            column: 25
          }
        }, {
          start: {
            line: 479,
            column: 29
          },
          end: {
            line: 479,
            column: 31
          }
        }],
        line: 479
      },
      "15": {
        loc: {
          start: {
            line: 491,
            column: 4
          },
          end: {
            line: 493,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 4
          },
          end: {
            line: 493,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 491
      },
      "16": {
        loc: {
          start: {
            line: 507,
            column: 6
          },
          end: {
            line: 509,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 507,
            column: 6
          },
          end: {
            line: 509,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 507
      },
      "17": {
        loc: {
          start: {
            line: 564,
            column: 6
          },
          end: {
            line: 564,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 564,
            column: 6
          },
          end: {
            line: 564,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 564
      },
      "18": {
        loc: {
          start: {
            line: 565,
            column: 6
          },
          end: {
            line: 565,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 565,
            column: 6
          },
          end: {
            line: 565,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 565
      },
      "19": {
        loc: {
          start: {
            line: 566,
            column: 6
          },
          end: {
            line: 566,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 566,
            column: 6
          },
          end: {
            line: 566,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 566
      },
      "20": {
        loc: {
          start: {
            line: 567,
            column: 6
          },
          end: {
            line: 567,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 567,
            column: 6
          },
          end: {
            line: 567,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 567
      },
      "21": {
        loc: {
          start: {
            line: 603,
            column: 55
          },
          end: {
            line: 603,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 603,
            column: 80
          },
          end: {
            line: 603,
            column: 93
          }
        }, {
          start: {
            line: 603,
            column: 96
          },
          end: {
            line: 603,
            column: 111
          }
        }],
        line: 603
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ca3e1e18e446f02dc3e9ef2715e900ce31a6a8ed"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25hk21kjr7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25hk21kjr7();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Terry-Style Article Generator
 * AI-powered generation of Transfer Juice articles with Terry's distinctive voice
 */ // TODO: Fix circular dependency with terry-style
// import { applyTerryStyle } from '@/lib/terry-style';
// Article generation schemas
var ArticleSectionSchema =
/* istanbul ignore next */
exports.ArticleSectionSchema = (cov_25hk21kjr7().s[0]++,
/* istanbul ignore next */
_zod.
/* istanbul ignore next */
z.object({
  id:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.string(),
  type:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z[
  /* istanbul ignore next */
  "enum"](["intro", "main", "context", "analysis", "conclusion"]),
  title:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.string(),
  content:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.string(),
  order:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.number(),
  sourceTweets:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.array(
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.string()),
  // Tweet IDs used in this section
  terryisms:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.array(
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.string()) // Specific Terry phrases used
}));
var ArticleContentSchema =
/* istanbul ignore next */
exports.ArticleContentSchema = (cov_25hk21kjr7().s[1]++,
/* istanbul ignore next */
_zod.
/* istanbul ignore next */
z.object({
  sections:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.array(ArticleSectionSchema),
  wordCount:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.number(),
  estimatedReadTime:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.number(),
  terryScore:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.number().min(0).max(100),
  // How Terry-esque it is
  qualityMetrics:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.object({
    coherence:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.number().min(0).max(100),
    factualAccuracy:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.number().min(0).max(100),
    brandVoice:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.number().min(0).max(100),
    readability:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.number().min(0).max(100)
  })
}));
var ArticleGenerationSchema =
/* istanbul ignore next */
exports.ArticleGenerationSchema = (cov_25hk21kjr7().s[2]++,
/* istanbul ignore next */
_zod.
/* istanbul ignore next */
z.object({
  title:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.string(),
  slug:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.string(),
  content: ArticleContentSchema,
  summary:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.string(),
  metaDescription:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.string(),
  tags:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.array(
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.string()),
  briefingType:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z[
  /* istanbul ignore next */
  "enum"](["MORNING", "AFTERNOON", "EVENING", "WEEKEND", "SPECIAL"]),
  status:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z[
  /* istanbul ignore next */
  "enum"](["DRAFT", "REVIEW", "PUBLISHED"]),
  qualityScore:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.number().min(0).max(100),
  aiModel:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.string(),
  generationTime:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.number()
}));
/* istanbul ignore next */
var TerryArticleGenerator = exports.TerryArticleGenerator = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  TerryArticleGenerator(config) {
    /* istanbul ignore next */
    _classCallCheck(this, TerryArticleGenerator);
    cov_25hk21kjr7().f[0]++;
    cov_25hk21kjr7().s[3]++;
    this.config =
    /* istanbul ignore next */
    _objectSpread({
      model: "gpt-4.1",
      maxTokens: 4000,
      temperature: 0.7,
      terryIntensity: "medium"
    }, config);
    /* istanbul ignore next */
    cov_25hk21kjr7().s[4]++;
    this.openai = new
    /* istanbul ignore next */
    _openai[
    /* istanbul ignore next */
    "default"]({
      apiKey: this.config.openaiApiKey
    });
  }

  /**
   * Generate a complete Terry-style article from tweet analyses
   */
  return _createClass(TerryArticleGenerator, [{
    key: "generateArticle",
    value: (function () {
      var _generateArticle = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee(input)
      /* istanbul ignore next */
      {
        var startTime, prioritizedTweets, articleStructure, sections, _ref, title, slug, summary, metaDescription, tags, qualityMetrics, terryScore, qualityScore, wordCount, estimatedReadTime, article, _t;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              cov_25hk21kjr7().f[1]++;
              startTime = (cov_25hk21kjr7().s[5]++, Date.now());
              cov_25hk21kjr7().s[6]++;
              _context.p = 1;
              // Filter and prioritize content
              prioritizedTweets = (cov_25hk21kjr7().s[7]++, this.prioritizeContent(input.tweetAnalyses)); // Generate article structure
              articleStructure = (cov_25hk21kjr7().s[8]++, this.planArticleStructure(prioritizedTweets, input)); // Generate content for each section
              cov_25hk21kjr7().s[9]++;
              _context.n = 2;
              return this.generateSections(articleStructure, prioritizedTweets, input);
            case 2:
              sections = _context.v;
              cov_25hk21kjr7().s[10]++;
              _context.n = 3;
              return this.generateMetadata(sections, input);
            case 3:
              _ref = _context.v;
              title = _ref.title;
              slug = _ref.slug;
              summary = _ref.summary;
              metaDescription = _ref.metaDescription;
              tags = _ref.tags;
              // Calculate quality metrics
              qualityMetrics = (cov_25hk21kjr7().s[11]++, this.calculateQualityMetrics(sections));
              terryScore = (cov_25hk21kjr7().s[12]++, this.calculateTerryScore(sections));
              qualityScore = (cov_25hk21kjr7().s[13]++, this.calculateOverallQuality(qualityMetrics, terryScore));
              wordCount = (cov_25hk21kjr7().s[14]++, sections.reduce(function (total, section) {
                /* istanbul ignore next */
                cov_25hk21kjr7().f[2]++;
                cov_25hk21kjr7().s[15]++;
                return total + section.content.split(" ").length;
              }, 0));
              estimatedReadTime = (cov_25hk21kjr7().s[16]++, Math.ceil(wordCount / 200)); // 200 WPM reading speed
              article = (cov_25hk21kjr7().s[17]++, {
                title: title,
                slug: slug,
                content: {
                  sections: sections,
                  wordCount: wordCount,
                  estimatedReadTime: estimatedReadTime,
                  terryScore: terryScore,
                  qualityMetrics: qualityMetrics
                },
                summary: summary,
                metaDescription: metaDescription,
                tags: tags,
                briefingType: "SPECIAL",
                // Default briefing type for feed content
                status: qualityScore >= 85 ?
                /* istanbul ignore next */
                (cov_25hk21kjr7().b[0][0]++, "REVIEW") :
                /* istanbul ignore next */
                (cov_25hk21kjr7().b[0][1]++, "DRAFT"),
                qualityScore: qualityScore,
                aiModel: this.config.model,
                generationTime: Date.now() - startTime
              });
              cov_25hk21kjr7().s[18]++;
              return _context.a(2, ArticleGenerationSchema.parse(article));
            case 4:
              _context.p = 4;
              _t = _context.v;
              cov_25hk21kjr7().s[19]++;
              throw new Error(
              /* istanbul ignore next */
              "Article generation failed: ".concat(
              /* istanbul ignore next */
              _t instanceof Error ?
              /* istanbul ignore next */
              (cov_25hk21kjr7().b[1][0]++,
              /* istanbul ignore next */
              _t.message) :
              /* istanbul ignore next */
              (cov_25hk21kjr7().b[1][1]++, "Unknown error")));
            case 5:
              return _context.a(2);
          }
        }, _callee, this, [[1, 4]]);
      }));
      function generateArticle(_x) {
        return _generateArticle.apply(this, arguments);
      }
      return generateArticle;
    }()
    /**
     * Prioritize content based on Terry's preferences
     */
    )
  }, {
    key: "prioritizeContent",
    value: function prioritizeContent(analyses) {
      /* istanbul ignore next */
      cov_25hk21kjr7().f[3]++;
      cov_25hk21kjr7().s[20]++;
      return analyses.filter(function (analysis) {
        /* istanbul ignore next */
        cov_25hk21kjr7().f[4]++;
        cov_25hk21kjr7().s[21]++;
        return analysis.classification.isTransferRelated;
      }).sort(function (a, b) {
        /* istanbul ignore next */
        cov_25hk21kjr7().f[5]++;
        // Priority scoring for Terry's interests
        var scoreA =
        /* istanbul ignore next */
        (cov_25hk21kjr7().s[22]++, a.qualityScore);
        var scoreB =
        /* istanbul ignore next */
        (cov_25hk21kjr7().s[23]++, b.qualityScore);

        // Boost chaotic/dramatic content
        /* istanbul ignore next */
        cov_25hk21kjr7().s[24]++;
        if (a.sentiment.emotions.includes("excitement")) {
          /* istanbul ignore next */
          cov_25hk21kjr7().b[2][0]++;
          cov_25hk21kjr7().s[25]++;
          scoreA += 15;
        } else
        /* istanbul ignore next */
        {
          cov_25hk21kjr7().b[2][1]++;
        }
        cov_25hk21kjr7().s[26]++;
        if (a.sentiment.emotions.includes("skepticism")) {
          /* istanbul ignore next */
          cov_25hk21kjr7().b[3][0]++;
          cov_25hk21kjr7().s[27]++;
          scoreA += 20;
        } else
        /* istanbul ignore next */
        {
          cov_25hk21kjr7().b[3][1]++;
        }
        cov_25hk21kjr7().s[28]++;
        if (b.sentiment.emotions.includes("excitement")) {
          /* istanbul ignore next */
          cov_25hk21kjr7().b[4][0]++;
          cov_25hk21kjr7().s[29]++;
          scoreB += 15;
        } else
        /* istanbul ignore next */
        {
          cov_25hk21kjr7().b[4][1]++;
        }
        cov_25hk21kjr7().s[30]++;
        if (b.sentiment.emotions.includes("skepticism")) {
          /* istanbul ignore next */
          cov_25hk21kjr7().b[5][0]++;
          cov_25hk21kjr7().s[31]++;
          scoreB += 20;
        } else
        /* istanbul ignore next */
        {
          cov_25hk21kjr7().b[5][1]++;
        }

        // Boost specific financial details
        var aHasFee =
        /* istanbul ignore next */
        (cov_25hk21kjr7().s[32]++, a.entities.transferDetails.some(function (d) {
          /* istanbul ignore next */
          cov_25hk21kjr7().f[6]++;
          cov_25hk21kjr7().s[33]++;
          return d.type === "fee";
        }));
        var bHasFee =
        /* istanbul ignore next */
        (cov_25hk21kjr7().s[34]++, b.entities.transferDetails.some(function (d) {
          /* istanbul ignore next */
          cov_25hk21kjr7().f[7]++;
          cov_25hk21kjr7().s[35]++;
          return d.type === "fee";
        }));
        /* istanbul ignore next */
        cov_25hk21kjr7().s[36]++;
        if (aHasFee) {
          /* istanbul ignore next */
          cov_25hk21kjr7().b[6][0]++;
          cov_25hk21kjr7().s[37]++;
          scoreA += 10;
        } else
        /* istanbul ignore next */
        {
          cov_25hk21kjr7().b[6][1]++;
        }
        cov_25hk21kjr7().s[38]++;
        if (bHasFee) {
          /* istanbul ignore next */
          cov_25hk21kjr7().b[7][0]++;
          cov_25hk21kjr7().s[39]++;
          scoreB += 10;
        } else
        /* istanbul ignore next */
        {
          cov_25hk21kjr7().b[7][1]++;
        }

        // Terry compatibility bonus
        cov_25hk21kjr7().s[40]++;
        scoreA += a.terryCompatibility * 0.5;
        /* istanbul ignore next */
        cov_25hk21kjr7().s[41]++;
        scoreB += b.terryCompatibility * 0.5;
        /* istanbul ignore next */
        cov_25hk21kjr7().s[42]++;
        return scoreB - scoreA;
      }).slice(0, 10); // Top 10 pieces of content
    }

    /**
     * Plan the structure of the article
     */
  }, {
    key: "planArticleStructure",
    value: function planArticleStructure(analyses, input) {
      /* istanbul ignore next */
      cov_25hk21kjr7().f[8]++;
      var structure =
      /* istanbul ignore next */
      (cov_25hk21kjr7().s[43]++, [{
        type: "intro",
        priority: 1,
        content: analyses.slice(0, 2) // Most important stories
      }, {
        type: "main",
        priority: 2,
        content: analyses.slice(2, 6) // Main body content
      }, {
        type: "context",
        priority: 3,
        content: analyses.slice(6, 8) // Supporting stories
      }, {
        type: "analysis",
        priority: 4,
        content: analyses.slice(8, 10) // Terry's take
      }]);

      // Add conclusion if enough content
      /* istanbul ignore next */
      cov_25hk21kjr7().s[44]++;
      if (analyses.length >= 5) {
        /* istanbul ignore next */
        cov_25hk21kjr7().b[8][0]++;
        cov_25hk21kjr7().s[45]++;
        structure.push({
          type: "analysis",
          priority: 5,
          content: analyses.slice(-2) // Wrap up with interesting bits
        });
      } else
      /* istanbul ignore next */
      {
        cov_25hk21kjr7().b[8][1]++;
      }
      cov_25hk21kjr7().s[46]++;
      return structure.filter(function (section) {
        /* istanbul ignore next */
        cov_25hk21kjr7().f[9]++;
        cov_25hk21kjr7().s[47]++;
        return section.content.length > 0;
      });
    }

    /**
     * Generate content for article sections
     */
  }, {
    key: "generateSections",
    value: (function () {
      var _generateSections = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(structure, allAnalyses, input)
      /* istanbul ignore next */
      {
        var sections, _iterator, _step, _step$value, index, sectionPlan, section, _t2;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              cov_25hk21kjr7().f[10]++;
              sections = (cov_25hk21kjr7().s[48]++, []);
              cov_25hk21kjr7().s[49]++;
              _iterator = _createForOfIteratorHelper(structure.entries());
              _context2.p = 1;
              _iterator.s();
            case 2:
              if ((_step = _iterator.n()).done) {
                _context2.n = 5;
                break;
              }
              _step$value = _slicedToArray(_step.value, 2), index = _step$value[0], sectionPlan = _step$value[1];
              cov_25hk21kjr7().s[50]++;
              _context2.n = 3;
              return this.generateSection(sectionPlan.type, sectionPlan.content, index + 1, input);
            case 3:
              section = _context2.v;
              cov_25hk21kjr7().s[51]++;
              sections.push(section);
            case 4:
              _context2.n = 2;
              break;
            case 5:
              _context2.n = 7;
              break;
            case 6:
              _context2.p = 6;
              _t2 = _context2.v;
              _iterator.e(_t2);
            case 7:
              _context2.p = 7;
              _iterator.f();
              return _context2.f(7);
            case 8:
              cov_25hk21kjr7().s[52]++;
              return _context2.a(2, sections);
          }
        }, _callee2, this, [[1, 6, 7, 8]]);
      }));
      function generateSections(_x2, _x3, _x4) {
        return _generateSections.apply(this, arguments);
      }
      return generateSections;
    }()
    /**
     * Generate individual section content
     */
    )
  }, {
    key: "generateSection",
    value: (function () {
      var _generateSection = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3(type, analyses, order, input)
      /* istanbul ignore next */
      {
        var _response$choices$;
        var sectionPrompt, response, content, terryisms;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              cov_25hk21kjr7().f[11]++;
              sectionPrompt = (cov_25hk21kjr7().s[53]++, this.buildSectionPrompt(type, analyses, input));
              cov_25hk21kjr7().s[54]++;
              _context3.n = 1;
              return this.openai.chat.completions.create({
                model: this.config.model,
                messages: [{
                  role: "system",
                  content: this.getTerrySystemPrompt(type)
                }, {
                  role: "user",
                  content: sectionPrompt
                }],
                max_tokens: this.getSectionTokenLimit(type),
                temperature: this.config.temperature
              });
            case 1:
              response = _context3.v;
              content = (cov_25hk21kjr7().s[55]++, (_response$choices$ = response.choices[0]) === null || _response$choices$ === void 0 || (_response$choices$ =
              /* istanbul ignore next */
              _response$choices$.message) === null || _response$choices$ === void 0 ? void 0 :
              /* istanbul ignore next */
              _response$choices$.content);
              cov_25hk21kjr7().s[56]++;
              if (content) {
                _context3.n = 2;
                break;
              }
              cov_25hk21kjr7().b[9][0]++;
              cov_25hk21kjr7().s[57]++;
              throw new Error(
              /* istanbul ignore next */
              "No content generated for ".concat(type, " section"));
            case 2:
              cov_25hk21kjr7().b[9][1]++;
            case 3:
              // Extract Terry-isms from the generated content
              terryisms = (cov_25hk21kjr7().s[58]++, this.extractTerryisms(content));
              cov_25hk21kjr7().s[59]++;
              return _context3.a(2, {
                id:
                /* istanbul ignore next */
                "section_".concat(type, "_").concat(order),
                type: type,
                title: this.generateSectionTitle(type, analyses),
                content: content.trim(),
                order: order,
                sourceTweets: analyses.map(function (_, i) {
                  /* istanbul ignore next */
                  cov_25hk21kjr7().f[12]++;
                  cov_25hk21kjr7().s[60]++;
                  return /* istanbul ignore next */"tweet_".concat(i);
                }),
                // Would use real tweet IDs
                terryisms: terryisms
              });
          }
        }, _callee3, this);
      }));
      function generateSection(_x5, _x6, _x7, _x8) {
        return _generateSection.apply(this, arguments);
      }
      return generateSection;
    }()
    /**
     * Get Terry-specific system prompt for different section types
     */
    )
  }, {
    key: "getTerrySystemPrompt",
    value: function getTerrySystemPrompt(type) {
      /* istanbul ignore next */
      cov_25hk21kjr7().f[13]++;
      var basePrompt =
      /* istanbul ignore next */
      (cov_25hk21kjr7().s[61]++, "You are The Terry, a brilliantly acerbic football journalist with a gift for weaponised irritation and emotional intelligence. Write in Joel Golby's distinctive style.\n\nVOICE CHARACTERISTICS:\n- Acerbic, funny, witty, overstimulated but emotionally intelligent\n- Weaponised irritation paired with genuine insight\n- Parenthetical asides that add humor and context\n- Specific, absurd details that illuminate larger truths\n- Mix of chaos and competence\n\nTRANSFER JUICE STYLE:\n- Sharp, funny observations about football's financial madness\n- Empathy for fans caught in the middle of corporate games\n- Celebration of genuine football moments amid the chaos\n- Terry-level specificity about absurd details");
      var sectionSpecific =
      /* istanbul ignore next */
      (cov_25hk21kjr7().s[62]++, {
        intro: "INTRO SECTION: Hook readers immediately with the most dramatic/absurd transfer story. Set the tone for controlled chaos.",
        main: "MAIN SECTION: Deep dive into the key stories with Terry's mix of expertise and exasperation.",
        context: "CONTEXT SECTION: Provide background with Terry's trademark ability to connect dots others miss.",
        analysis: "ANALYSIS SECTION: This is pure Terry - deep insights wrapped in withering observations.",
        conclusion: "CONCLUSION SECTION: Wrap up with Terry's signature mix of resignation and hope."
      });
      /* istanbul ignore next */
      cov_25hk21kjr7().s[63]++;
      return /* istanbul ignore next */"".concat(basePrompt, "\n\n").concat(sectionSpecific[type]);
    }

    /**
     * Build section-specific prompt
     */
  }, {
    key: "buildSectionPrompt",
    value: function buildSectionPrompt(type, analyses, input) {
      /* istanbul ignore next */
      cov_25hk21kjr7().f[14]++;
      var tweetSummaries =
      /* istanbul ignore next */
      (cov_25hk21kjr7().s[64]++, analyses.map(function (analysis, i) {
        /* istanbul ignore next */
        cov_25hk21kjr7().f[15]++;
        var classification =
        /* istanbul ignore next */
        (cov_25hk21kjr7().s[65]++, analysis.classification);
        var entities =
        /* istanbul ignore next */
        (cov_25hk21kjr7().s[66]++, analysis.entities);
        /* istanbul ignore next */
        cov_25hk21kjr7().s[67]++;
        return /* istanbul ignore next */"Tweet ".concat(i + 1, ":\n- Content: ").concat(classification.keyPoints.join(", "), "\n- Type: ").concat(classification.transferType, "\n- Players: ").concat(
        /* istanbul ignore next */
        (cov_25hk21kjr7().b[10][0]++, entities.players.map(function (p) {
          /* istanbul ignore next */
          cov_25hk21kjr7().f[16]++;
          cov_25hk21kjr7().s[68]++;
          return p.name;
        }).join(", ")) ||
        /* istanbul ignore next */
        (cov_25hk21kjr7().b[10][1]++, "None"), "\n- Clubs: ").concat(
        /* istanbul ignore next */
        (cov_25hk21kjr7().b[11][0]++, entities.clubs.map(function (c) {
          /* istanbul ignore next */
          cov_25hk21kjr7().f[17]++;
          cov_25hk21kjr7().s[69]++;
          return c.name;
        }).join(", ")) ||
        /* istanbul ignore next */
        (cov_25hk21kjr7().b[11][1]++, "None"), "\n- Sentiment: ").concat(analysis.sentiment.sentiment, "\n- Quality: ").concat(analysis.qualityScore, "/100");
      }).join("\n\n"));
      /* istanbul ignore next */
      cov_25hk21kjr7().s[70]++;
      return /* istanbul ignore next */"\nWrite a ".concat(type, " section for a ").concat(input.briefingType.toLowerCase(), " Transfer Juice briefing dated ").concat(input.briefingDate.toDateString(), ".\n\nCONTENT TO WORK WITH:\n").concat(tweetSummaries, "\n\nREQUIREMENTS:\n- ").concat(this.getSectionRequirements(type), "\n- Use Terry's voice throughout\n- Include specific details and parenthetical asides\n- Balance humor with genuine insight\n- Focus on the human/absurd elements of transfers\n\nWrite engaging, Terry-style content that transforms these transfer updates into compelling journalism.\n    ").trim();
    }

    /**
     * Get section-specific requirements
     */
  }, {
    key: "getSectionRequirements",
    value: function getSectionRequirements(type) {
      /* istanbul ignore next */
      cov_25hk21kjr7().f[18]++;
      var requirements =
      /* istanbul ignore next */
      (cov_25hk21kjr7().s[71]++, {
        intro: "150-200 words. Hook readers with the biggest story. Set comedic tone while delivering news.",
        main: "300-400 words. Deep dive into key transfers. Balance reporting with Terry's observations.",
        context: "200-250 words. Background and connections. Terry's ability to see bigger picture.",
        analysis: "250-300 words. Pure Terry commentary. Withering insights about football's madness.",
        conclusion: "100-150 words. Wrap up with hope/resignation. Terry's emotional intelligence."
      });
      /* istanbul ignore next */
      cov_25hk21kjr7().s[72]++;
      return requirements[type];
    }

    /**
     * Get token limits per section type
     */
  }, {
    key: "getSectionTokenLimit",
    value: function getSectionTokenLimit(type) {
      /* istanbul ignore next */
      cov_25hk21kjr7().f[19]++;
      var limits =
      /* istanbul ignore next */
      (cov_25hk21kjr7().s[73]++, {
        intro: 300,
        main: 500,
        context: 350,
        analysis: 400,
        conclusion: 250
      });
      /* istanbul ignore next */
      cov_25hk21kjr7().s[74]++;
      return limits[type];
    }

    /**
     * Generate metadata (title, summary, etc.)
     */
  }, {
    key: "generateMetadata",
    value: (function () {
      var _generateMetadata = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4(sections, input)
      /* istanbul ignore next */
      {
        var _response$choices$2;
        var contentSummary, response, content, metadata;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_25hk21kjr7().f[20]++;
              contentSummary = (cov_25hk21kjr7().s[75]++, sections.map(function (s) {
                /* istanbul ignore next */
                cov_25hk21kjr7().f[21]++;
                cov_25hk21kjr7().s[76]++;
                return /* istanbul ignore next */"".concat(s.type, ": ").concat(s.content.substring(0, 100), "...");
              }).join("\n"));
              cov_25hk21kjr7().s[77]++;
              _context4.n = 1;
              return this.openai.chat.completions.create({
                model: this.config.model,
                messages: [{
                  role: "system",
                  content:
                  /* istanbul ignore next */
                  "Generate metadata for a Terry-style Transfer Juice article. Return JSON with:\n- title: Witty, specific headline (max 60 chars)\n- slug: URL-friendly version\n- summary: One-sentence article summary (max 160 chars)\n- metaDescription: SEO meta description (max 160 chars)\n- tags: Array of relevant tags"
                }, {
                  role: "user",
                  content:
                  /* istanbul ignore next */
                  "Generate metadata for this ".concat(input.briefingType.toLowerCase(), " briefing:\n\n").concat(contentSummary)
                }],
                max_tokens: 300,
                temperature: 0.5,
                response_format: {
                  type: "json_object"
                }
              });
            case 1:
              response = _context4.v;
              content = (cov_25hk21kjr7().s[78]++, (_response$choices$2 = response.choices[0]) === null || _response$choices$2 === void 0 || (_response$choices$2 =
              /* istanbul ignore next */
              _response$choices$2.message) === null || _response$choices$2 === void 0 ? void 0 :
              /* istanbul ignore next */
              _response$choices$2.content);
              cov_25hk21kjr7().s[79]++;
              if (content) {
                _context4.n = 2;
                break;
              }
              cov_25hk21kjr7().b[12][0]++;
              cov_25hk21kjr7().s[80]++;
              throw new Error("No metadata generated");
            case 2:
              cov_25hk21kjr7().b[12][1]++;
            case 3:
              metadata = (cov_25hk21kjr7().s[81]++, JSON.parse(content));
              cov_25hk21kjr7().s[82]++;
              return _context4.a(2, {
                title: metadata.title,
                slug:
                /* istanbul ignore next */
                (cov_25hk21kjr7().b[13][0]++, metadata.slug) ||
                /* istanbul ignore next */
                (cov_25hk21kjr7().b[13][1]++, metadata.title.toLowerCase().replace(/[^a-z0-9]+/g, "-")),
                summary: metadata.summary,
                metaDescription: metadata.metaDescription,
                tags:
                /* istanbul ignore next */
                (cov_25hk21kjr7().b[14][0]++, metadata.tags) ||
                /* istanbul ignore next */
                (cov_25hk21kjr7().b[14][1]++, [])
              });
          }
        }, _callee4, this);
      }));
      function generateMetadata(_x9, _x0) {
        return _generateMetadata.apply(this, arguments);
      }
      return generateMetadata;
    }()
    /**
     * Extract Terry-isms from generated content
     */
    )
  }, {
    key: "extractTerryisms",
    value: function extractTerryisms(content) {
      /* istanbul ignore next */
      cov_25hk21kjr7().f[22]++;
      var terryisms =
      /* istanbul ignore next */
      (cov_25hk21kjr7().s[83]++, []);

      // Look for parenthetical asides
      var parentheticals =
      /* istanbul ignore next */
      (cov_25hk21kjr7().s[84]++, content.match(/\([^)]+\)/g));
      /* istanbul ignore next */
      cov_25hk21kjr7().s[85]++;
      if (parentheticals) {
        /* istanbul ignore next */
        cov_25hk21kjr7().b[15][0]++;
        cov_25hk21kjr7().s[86]++;
        /* istanbul ignore next */
        terryisms.push.apply(terryisms,
        /* istanbul ignore next */
        _toConsumableArray(parentheticals));
      } else
      /* istanbul ignore next */
      {
        cov_25hk21kjr7().b[15][1]++;
      }

      // Look for specific Terry phrases
      var terryPhrases =
      /* istanbul ignore next */
      (cov_25hk21kjr7().s[87]++, ["of course", "apparently", "somehow", "brilliant", "properly mental", "exactly the sort of", "which is"]);
      /* istanbul ignore next */
      cov_25hk21kjr7().s[88]++;
      for (
      /* istanbul ignore next */
      var _i = 0, _terryPhrases = terryPhrases;
      /* istanbul ignore next */
      _i < _terryPhrases.length;
      /* istanbul ignore next */
      _i++) {
        var phrase =
        /* istanbul ignore next */
        _terryPhrases[_i];
        /* istanbul ignore next */
        cov_25hk21kjr7().s[89]++;
        if (content.toLowerCase().includes(phrase)) {
          /* istanbul ignore next */
          cov_25hk21kjr7().b[16][0]++;
          cov_25hk21kjr7().s[90]++;
          terryisms.push(phrase);
        } else
        /* istanbul ignore next */
        {
          cov_25hk21kjr7().b[16][1]++;
        }
      }
      /* istanbul ignore next */
      cov_25hk21kjr7().s[91]++;
      return /* istanbul ignore next */_toConsumableArray(new Set(terryisms)); // Remove duplicates
    }

    /**
     * Generate section title
     */
  }, {
    key: "generateSectionTitle",
    value: function generateSectionTitle(type, analyses) {
      /* istanbul ignore next */
      cov_25hk21kjr7().f[23]++;
      var titleMap =
      /* istanbul ignore next */
      (cov_25hk21kjr7().s[92]++, {
        intro: "The Latest Chaos",
        main: "The Main Event",
        context: "What's Actually Happening",
        analysis: "The Terry Take",
        conclusion: "Right Then"
      });
      /* istanbul ignore next */
      cov_25hk21kjr7().s[93]++;
      return titleMap[type];
    }

    /**
     * Calculate quality metrics
     */
  }, {
    key: "calculateQualityMetrics",
    value: function calculateQualityMetrics(sections) {
      /* istanbul ignore next */
      cov_25hk21kjr7().f[24]++;
      // Simplified quality calculation - would use more sophisticated NLP in production
      var totalWords =
      /* istanbul ignore next */
      (cov_25hk21kjr7().s[94]++, sections.reduce(function (total, section) {
        /* istanbul ignore next */
        cov_25hk21kjr7().f[25]++;
        cov_25hk21kjr7().s[95]++;
        return total + section.content.split(" ").length;
      }, 0));
      /* istanbul ignore next */
      cov_25hk21kjr7().s[96]++;
      return {
        coherence: Math.min(85 + Math.random() * 10, 100),
        // Would calculate based on content flow
        factualAccuracy: Math.min(90 + Math.random() * 5, 100),
        // Would verify against sources
        brandVoice: this.calculateTerryScore(sections),
        // Already calculated
        readability: Math.min(80 + totalWords / 50, 100) // Simplified readability
      };
    }

    /**
     * Calculate Terry score
     */
  }, {
    key: "calculateTerryScore",
    value: function calculateTerryScore(sections) {
      /* istanbul ignore next */
      cov_25hk21kjr7().f[26]++;
      var score =
      /* istanbul ignore next */
      (cov_25hk21kjr7().s[97]++, 0);
      /* istanbul ignore next */
      cov_25hk21kjr7().s[98]++;
      sections.forEach(function (section) {
        /* istanbul ignore next */
        cov_25hk21kjr7().f[27]++;
        cov_25hk21kjr7().s[99]++;
        // Check for Terry-isms
        score += section.terryisms.length * 5;

        // Check for specific Terry patterns
        /* istanbul ignore next */
        cov_25hk21kjr7().s[100]++;
        if (section.content.includes("(")) {
          /* istanbul ignore next */
          cov_25hk21kjr7().b[17][0]++;
          cov_25hk21kjr7().s[101]++;
          score += 10;
        } else
        /* istanbul ignore next */
        {
          cov_25hk21kjr7().b[17][1]++;
        } // Parenthetical asides
        cov_25hk21kjr7().s[102]++;
        if (section.content.includes("brilliant")) {
          /* istanbul ignore next */
          cov_25hk21kjr7().b[18][0]++;
          cov_25hk21kjr7().s[103]++;
          score += 5;
        } else
        /* istanbul ignore next */
        {
          cov_25hk21kjr7().b[18][1]++;
        }
        cov_25hk21kjr7().s[104]++;
        if (section.content.includes("of course")) {
          /* istanbul ignore next */
          cov_25hk21kjr7().b[19][0]++;
          cov_25hk21kjr7().s[105]++;
          score += 5;
        } else
        /* istanbul ignore next */
        {
          cov_25hk21kjr7().b[19][1]++;
        }
        cov_25hk21kjr7().s[106]++;
        if (section.content.includes("properly")) {
          /* istanbul ignore next */
          cov_25hk21kjr7().b[20][0]++;
          cov_25hk21kjr7().s[107]++;
          score += 5;
        } else
        /* istanbul ignore next */
        {
          cov_25hk21kjr7().b[20][1]++;
        }
      });
      /* istanbul ignore next */
      cov_25hk21kjr7().s[108]++;
      return Math.min(score, 100);
    }

    /**
     * Calculate overall quality
     */
  }, {
    key: "calculateOverallQuality",
    value: function calculateOverallQuality(metrics, terryScore) {
      /* istanbul ignore next */
      cov_25hk21kjr7().f[28]++;
      cov_25hk21kjr7().s[109]++;
      return Math.round(metrics.coherence * 0.25 + metrics.factualAccuracy * 0.3 + metrics.brandVoice * 0.25 + metrics.readability * 0.2);
    }

    /**
     * Validate configuration
     */
  }, {
    key: "validateConfiguration",
    value: (function () {
      var _validateConfiguration = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee5()
      /* istanbul ignore next */
      {
        var response, _t3;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              cov_25hk21kjr7().f[29]++;
              cov_25hk21kjr7().s[110]++;
              _context5.p = 1;
              cov_25hk21kjr7().s[111]++;
              _context5.n = 2;
              return this.openai.chat.completions.create({
                model: this.config.model,
                messages: [{
                  role: "user",
                  content: "Test"
                }],
                max_tokens: 5
              });
            case 2:
              response = _context5.v;
              cov_25hk21kjr7().s[112]++;
              return _context5.a(2, {
                valid: true
              });
            case 3:
              _context5.p = 3;
              _t3 = _context5.v;
              cov_25hk21kjr7().s[113]++;
              return _context5.a(2, {
                valid: false,
                error:
                /* istanbul ignore next */
                "Article generator validation failed: ".concat(
                /* istanbul ignore next */
                _t3 instanceof Error ?
                /* istanbul ignore next */
                (cov_25hk21kjr7().b[21][0]++,
                /* istanbul ignore next */
                _t3.message) :
                /* istanbul ignore next */
                (cov_25hk21kjr7().b[21][1]++, "Unknown error"))
              });
          }
        }, _callee5, this, [[1, 3]]);
      }));
      function validateConfiguration() {
        return _validateConfiguration.apply(this, arguments);
      }
      return validateConfiguration;
    }())
  }]);
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,