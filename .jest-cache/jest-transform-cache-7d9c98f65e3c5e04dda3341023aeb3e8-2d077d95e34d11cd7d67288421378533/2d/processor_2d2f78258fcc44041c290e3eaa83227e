45d20247638f0d4d5efe8f6ca1ca9c36
/* istanbul ignore next */
function cov_lqfv11dte() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/image/processor.ts";
  var hash = "c4d4d8e3ab963dc3e4683e99472db179847fd401";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/image/processor.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 36
        },
        end: {
          line: 62,
          column: 2
        }
      },
      "1": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 97,
          column: 6
        }
      },
      "2": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 101,
          column: 7
        }
      },
      "3": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 107,
          column: 6
        }
      },
      "4": {
        start: {
          line: 114,
          column: 22
        },
        end: {
          line: 114,
          column: 32
        }
      },
      "5": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 192,
          column: 5
        }
      },
      "6": {
        start: {
          line: 118,
          column: 26
        },
        end: {
          line: 118,
          column: 67
        }
      },
      "7": {
        start: {
          line: 119,
          column: 24
        },
        end: {
          line: 119,
          column: 60
        }
      },
      "8": {
        start: {
          line: 122,
          column: 30
        },
        end: {
          line: 125,
          column: 7
        }
      },
      "9": {
        start: {
          line: 128,
          column: 23
        },
        end: {
          line: 128,
          column: 77
        }
      },
      "10": {
        start: {
          line: 131,
          column: 22
        },
        end: {
          line: 133,
          column: 14
        }
      },
      "11": {
        start: {
          line: 136,
          column: 27
        },
        end: {
          line: 136,
          column: 76
        }
      },
      "12": {
        start: {
          line: 139,
          column: 28
        },
        end: {
          line: 143,
          column: 7
        }
      },
      "13": {
        start: {
          line: 145,
          column: 29
        },
        end: {
          line: 145,
          column: 51
        }
      },
      "14": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "15": {
        start: {
          line: 189,
          column: 6
        },
        end: {
          line: 191,
          column: 8
        }
      },
      "16": {
        start: {
          line: 202,
          column: 38
        },
        end: {
          line: 202,
          column: 40
        }
      },
      "17": {
        start: {
          line: 203,
          column: 29
        },
        end: {
          line: 203,
          column: 31
        }
      },
      "18": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "19": {
        start: {
          line: 206,
          column: 17
        },
        end: {
          line: 206,
          column: 18
        }
      },
      "20": {
        start: {
          line: 207,
          column: 20
        },
        end: {
          line: 207,
          column: 58
        }
      },
      "21": {
        start: {
          line: 209,
          column: 27
        },
        end: {
          line: 211,
          column: 7
        }
      },
      "22": {
        start: {
          line: 210,
          column: 30
        },
        end: {
          line: 210,
          column: 55
        }
      },
      "23": {
        start: {
          line: 213,
          column: 6
        },
        end: {
          line: 219,
          column: 7
        }
      },
      "24": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "25": {
        start: {
          line: 215,
          column: 10
        },
        end: {
          line: 215,
          column: 37
        }
      },
      "26": {
        start: {
          line: 217,
          column: 10
        },
        end: {
          line: 217,
          column: 45
        }
      },
      "27": {
        start: {
          line: 222,
          column: 6
        },
        end: {
          line: 224,
          column: 7
        }
      },
      "28": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 66
        }
      },
      "29": {
        start: {
          line: 223,
          column: 39
        },
        end: {
          line: 223,
          column: 64
        }
      },
      "30": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "31": {
        start: {
          line: 228,
          column: 6
        },
        end: {
          line: 231,
          column: 8
        }
      },
      "32": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 234,
          column: 19
        }
      },
      "33": {
        start: {
          line: 241,
          column: 21
        },
        end: {
          line: 245,
          column: 6
        }
      },
      "34": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 249,
          column: 5
        }
      },
      "35": {
        start: {
          line: 248,
          column: 6
        },
        end: {
          line: 248,
          column: 70
        }
      },
      "36": {
        start: {
          line: 251,
          column: 24
        },
        end: {
          line: 251,
          column: 52
        }
      },
      "37": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 252,
          column: 36
        }
      },
      "38": {
        start: {
          line: 267,
          column: 21
        },
        end: {
          line: 267,
          column: 39
        }
      },
      "39": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 277,
          column: 6
        }
      },
      "40": {
        start: {
          line: 287,
          column: 24
        },
        end: {
          line: 287,
          column: 43
        }
      },
      "41": {
        start: {
          line: 288,
          column: 20
        },
        end: {
          line: 294,
          column: 5
        }
      },
      "42": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 337,
          column: 5
        }
      },
      "43": {
        start: {
          line: 297,
          column: 23
        },
        end: {
          line: 324,
          column: 8
        }
      },
      "44": {
        start: {
          line: 326,
          column: 30
        },
        end: {
          line: 326,
          column: 75
        }
      },
      "45": {
        start: {
          line: 329,
          column: 6
        },
        end: {
          line: 331,
          column: 7
        }
      },
      "46": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 80
        }
      },
      "47": {
        start: {
          line: 333,
          column: 6
        },
        end: {
          line: 333,
          column: 29
        }
      },
      "48": {
        start: {
          line: 335,
          column: 6
        },
        end: {
          line: 335,
          column: 76
        }
      },
      "49": {
        start: {
          line: 336,
          column: 6
        },
        end: {
          line: 336,
          column: 78
        }
      },
      "50": {
        start: {
          line: 357,
          column: 20
        },
        end: {
          line: 357,
          column: 45
        }
      },
      "51": {
        start: {
          line: 358,
          column: 26
        },
        end: {
          line: 358,
          column: 70
        }
      },
      "52": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 379,
          column: 6
        }
      },
      "53": {
        start: {
          line: 395,
          column: 22
        },
        end: {
          line: 395,
          column: 32
        }
      },
      "54": {
        start: {
          line: 396,
          column: 20
        },
        end: {
          line: 396,
          column: 42
        }
      },
      "55": {
        start: {
          line: 398,
          column: 4
        },
        end: {
          line: 402,
          column: 6
        }
      },
      "56": {
        start: {
          line: 412,
          column: 25
        },
        end: {
          line: 412,
          column: 46
        }
      },
      "57": {
        start: {
          line: 413,
          column: 26
        },
        end: {
          line: 413,
          column: 49
        }
      },
      "58": {
        start: {
          line: 414,
          column: 29
        },
        end: {
          line: 414,
          column: 74
        }
      },
      "59": {
        start: {
          line: 416,
          column: 4
        },
        end: {
          line: 422,
          column: 6
        }
      },
      "60": {
        start: {
          line: 434,
          column: 24
        },
        end: {
          line: 437,
          column: 5
        }
      },
      "61": {
        start: {
          line: 440,
          column: 29
        },
        end: {
          line: 443,
          column: 5
        }
      },
      "62": {
        start: {
          line: 446,
          column: 26
        },
        end: {
          line: 446,
          column: 78
        }
      },
      "63": {
        start: {
          line: 448,
          column: 4
        },
        end: {
          line: 453,
          column: 6
        }
      },
      "64": {
        start: {
          line: 463,
          column: 4
        },
        end: {
          line: 491,
          column: 5
        }
      },
      "65": {
        start: {
          line: 464,
          column: 23
        },
        end: {
          line: 485,
          column: 8
        }
      },
      "66": {
        start: {
          line: 487,
          column: 6
        },
        end: {
          line: 487,
          column: 70
        }
      },
      "67": {
        start: {
          line: 489,
          column: 6
        },
        end: {
          line: 489,
          column: 69
        }
      },
      "68": {
        start: {
          line: 490,
          column: 6
        },
        end: {
          line: 490,
          column: 21
        }
      },
      "69": {
        start: {
          line: 502,
          column: 25
        },
        end: {
          line: 502,
          column: 52
        }
      },
      "70": {
        start: {
          line: 503,
          column: 18
        },
        end: {
          line: 503,
          column: 50
        }
      },
      "71": {
        start: {
          line: 504,
          column: 22
        },
        end: {
          line: 504,
          column: 57
        }
      },
      "72": {
        start: {
          line: 505,
          column: 32
        },
        end: {
          line: 505,
          column: 49
        }
      },
      "73": {
        start: {
          line: 508,
          column: 16
        },
        end: {
          line: 508,
          column: 18
        }
      },
      "74": {
        start: {
          line: 511,
          column: 4
        },
        end: {
          line: 512,
          column: 51
        }
      },
      "75": {
        start: {
          line: 511,
          column: 34
        },
        end: {
          line: 511,
          column: 46
        }
      },
      "76": {
        start: {
          line: 512,
          column: 9
        },
        end: {
          line: 512,
          column: 51
        }
      },
      "77": {
        start: {
          line: 512,
          column: 39
        },
        end: {
          line: 512,
          column: 51
        }
      },
      "78": {
        start: {
          line: 515,
          column: 4
        },
        end: {
          line: 515,
          column: 67
        }
      },
      "79": {
        start: {
          line: 515,
          column: 55
        },
        end: {
          line: 515,
          column: 67
        }
      },
      "80": {
        start: {
          line: 518,
          column: 4
        },
        end: {
          line: 518,
          column: 41
        }
      },
      "81": {
        start: {
          line: 518,
          column: 29
        },
        end: {
          line: 518,
          column: 41
        }
      },
      "82": {
        start: {
          line: 519,
          column: 4
        },
        end: {
          line: 519,
          column: 42
        }
      },
      "83": {
        start: {
          line: 519,
          column: 30
        },
        end: {
          line: 519,
          column: 42
        }
      },
      "84": {
        start: {
          line: 521,
          column: 4
        },
        end: {
          line: 521,
          column: 45
        }
      },
      "85": {
        start: {
          line: 529,
          column: 4
        },
        end: {
          line: 529,
          column: 46
        }
      },
      "86": {
        start: {
          line: 529,
          column: 35
        },
        end: {
          line: 529,
          column: 46
        }
      },
      "87": {
        start: {
          line: 532,
          column: 28
        },
        end: {
          line: 535,
          column: 5
        }
      },
      "88": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 534,
          column: 78
        }
      },
      "89": {
        start: {
          line: 537,
          column: 4
        },
        end: {
          line: 537,
          column: 39
        }
      },
      "90": {
        start: {
          line: 547,
          column: 29
        },
        end: {
          line: 547,
          column: 31
        }
      },
      "91": {
        start: {
          line: 550,
          column: 4
        },
        end: {
          line: 552,
          column: 5
        }
      },
      "92": {
        start: {
          line: 551,
          column: 6
        },
        end: {
          line: 551,
          column: 40
        }
      },
      "93": {
        start: {
          line: 553,
          column: 4
        },
        end: {
          line: 555,
          column: 5
        }
      },
      "94": {
        start: {
          line: 554,
          column: 6
        },
        end: {
          line: 554,
          column: 39
        }
      },
      "95": {
        start: {
          line: 558,
          column: 4
        },
        end: {
          line: 560,
          column: 5
        }
      },
      "96": {
        start: {
          line: 559,
          column: 6
        },
        end: {
          line: 559,
          column: 46
        }
      },
      "97": {
        start: {
          line: 563,
          column: 4
        },
        end: {
          line: 565,
          column: 5
        }
      },
      "98": {
        start: {
          line: 564,
          column: 6
        },
        end: {
          line: 564,
          column: 43
        }
      },
      "99": {
        start: {
          line: 568,
          column: 29
        },
        end: {
          line: 568,
          column: 61
        }
      },
      "100": {
        start: {
          line: 569,
          column: 4
        },
        end: {
          line: 577,
          column: 5
        }
      },
      "101": {
        start: {
          line: 570,
          column: 6
        },
        end: {
          line: 576,
          column: 7
        }
      },
      "102": {
        start: {
          line: 575,
          column: 8
        },
        end: {
          line: 575,
          column: 50
        }
      },
      "103": {
        start: {
          line: 579,
          column: 4
        },
        end: {
          line: 582,
          column: 6
        }
      },
      "104": {
        start: {
          line: 594,
          column: 4
        },
        end: {
          line: 599,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 88,
            column: 2
          },
          end: {
            line: 88,
            column: 3
          }
        },
        loc: {
          start: {
            line: 88,
            column: 40
          },
          end: {
            line: 108,
            column: 3
          }
        },
        line: 88
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 113,
            column: 2
          },
          end: {
            line: 113,
            column: 3
          }
        },
        loc: {
          start: {
            line: 113,
            column: 72
          },
          end: {
            line: 193,
            column: 3
          }
        },
        line: 113
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 198,
            column: 2
          },
          end: {
            line: 198,
            column: 3
          }
        },
        loc: {
          start: {
            line: 201,
            column: 31
          },
          end: {
            line: 235,
            column: 3
          }
        },
        line: 201
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 210,
            column: 18
          },
          end: {
            line: 210,
            column: 19
          }
        },
        loc: {
          start: {
            line: 210,
            column: 30
          },
          end: {
            line: 210,
            column: 55
          }
        },
        line: 210
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 223,
            column: 26
          },
          end: {
            line: 223,
            column: 27
          }
        },
        loc: {
          start: {
            line: 223,
            column: 39
          },
          end: {
            line: 223,
            column: 64
          }
        },
        line: 223
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 240,
            column: 2
          },
          end: {
            line: 240,
            column: 3
          }
        },
        loc: {
          start: {
            line: 240,
            column: 60
          },
          end: {
            line: 253,
            column: 3
          }
        },
        line: 240
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 258,
            column: 2
          },
          end: {
            line: 258,
            column: 3
          }
        },
        loc: {
          start: {
            line: 265,
            column: 5
          },
          end: {
            line: 278,
            column: 3
          }
        },
        line: 265
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 283,
            column: 2
          },
          end: {
            line: 283,
            column: 3
          }
        },
        loc: {
          start: {
            line: 286,
            column: 21
          },
          end: {
            line: 338,
            column: 3
          }
        },
        line: 286
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 343,
            column: 2
          },
          end: {
            line: 343,
            column: 3
          }
        },
        loc: {
          start: {
            line: 355,
            column: 5
          },
          end: {
            line: 380,
            column: 3
          }
        },
        line: 355
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 385,
            column: 2
          },
          end: {
            line: 385,
            column: 3
          }
        },
        loc: {
          start: {
            line: 393,
            column: 5
          },
          end: {
            line: 403,
            column: 3
          }
        },
        line: 393
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 408,
            column: 2
          },
          end: {
            line: 408,
            column: 3
          }
        },
        loc: {
          start: {
            line: 411,
            column: 36
          },
          end: {
            line: 423,
            column: 3
          }
        },
        line: 411
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 428,
            column: 2
          },
          end: {
            line: 428,
            column: 3
          }
        },
        loc: {
          start: {
            line: 432,
            column: 46
          },
          end: {
            line: 454,
            column: 3
          }
        },
        line: 432
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 459,
            column: 2
          },
          end: {
            line: 459,
            column: 3
          }
        },
        loc: {
          start: {
            line: 462,
            column: 21
          },
          end: {
            line: 492,
            column: 3
          }
        },
        line: 462
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 497,
            column: 2
          },
          end: {
            line: 497,
            column: 3
          }
        },
        loc: {
          start: {
            line: 500,
            column: 12
          },
          end: {
            line: 522,
            column: 3
          }
        },
        line: 500
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 527,
            column: 2
          },
          end: {
            line: 527,
            column: 3
          }
        },
        loc: {
          start: {
            line: 527,
            column: 66
          },
          end: {
            line: 538,
            column: 3
          }
        },
        line: 527
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 533,
            column: 6
          },
          end: {
            line: 533,
            column: 7
          }
        },
        loc: {
          start: {
            line: 534,
            column: 8
          },
          end: {
            line: 534,
            column: 78
          }
        },
        line: 534
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 543,
            column: 2
          },
          end: {
            line: 543,
            column: 3
          }
        },
        loc: {
          start: {
            line: 546,
            column: 4
          },
          end: {
            line: 583,
            column: 3
          }
        },
        line: 546
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 588,
            column: 2
          },
          end: {
            line: 588,
            column: 3
          }
        },
        loc: {
          start: {
            line: 593,
            column: 4
          },
          end: {
            line: 600,
            column: 3
          }
        },
        line: 593
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 131,
            column: 22
          },
          end: {
            line: 133,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 10
          },
          end: {
            line: 132,
            column: 42
          }
        }, {
          start: {
            line: 133,
            column: 10
          },
          end: {
            line: 133,
            column: 14
          }
        }],
        line: 131
      },
      "1": {
        loc: {
          start: {
            line: 160,
            column: 17
          },
          end: {
            line: 160,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 17
          },
          end: {
            line: 160,
            column: 35
          }
        }, {
          start: {
            line: 160,
            column: 39
          },
          end: {
            line: 160,
            column: 61
          }
        }],
        line: 160
      },
      "2": {
        loc: {
          start: {
            line: 166,
            column: 17
          },
          end: {
            line: 166,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 17
          },
          end: {
            line: 166,
            column: 32
          }
        }, {
          start: {
            line: 166,
            column: 36
          },
          end: {
            line: 166,
            column: 55
          }
        }],
        line: 166
      },
      "3": {
        loc: {
          start: {
            line: 172,
            column: 17
          },
          end: {
            line: 172,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 17
          },
          end: {
            line: 172,
            column: 31
          }
        }, {
          start: {
            line: 172,
            column: 35
          },
          end: {
            line: 172,
            column: 53
          }
        }],
        line: 172
      },
      "4": {
        loc: {
          start: {
            line: 190,
            column: 36
          },
          end: {
            line: 190,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 61
          },
          end: {
            line: 190,
            column: 74
          }
        }, {
          start: {
            line: 190,
            column: 77
          },
          end: {
            line: 190,
            column: 92
          }
        }],
        line: 190
      },
      "5": {
        loc: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 200,
            column: 26
          },
          end: {
            line: 200,
            column: 27
          }
        }],
        line: 200
      },
      "6": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        }, {
          start: {
            line: 216,
            column: 15
          },
          end: {
            line: 218,
            column: 9
          }
        }],
        line: 214
      },
      "7": {
        loc: {
          start: {
            line: 222,
            column: 6
          },
          end: {
            line: 224,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 6
          },
          end: {
            line: 224,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "8": {
        loc: {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "9": {
        loc: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "10": {
        loc: {
          start: {
            line: 329,
            column: 6
          },
          end: {
            line: 331,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 6
          },
          end: {
            line: 331,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "11": {
        loc: {
          start: {
            line: 329,
            column: 10
          },
          end: {
            line: 329,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 10
          },
          end: {
            line: 329,
            column: 26
          }
        }, {
          start: {
            line: 329,
            column: 30
          },
          end: {
            line: 329,
            column: 58
          }
        }],
        line: 329
      },
      "12": {
        loc: {
          start: {
            line: 330,
            column: 15
          },
          end: {
            line: 330,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 330,
            column: 15
          },
          end: {
            line: 330,
            column: 26
          }
        }, {
          start: {
            line: 330,
            column: 30
          },
          end: {
            line: 330,
            column: 79
          }
        }],
        line: 330
      },
      "13": {
        loc: {
          start: {
            line: 336,
            column: 13
          },
          end: {
            line: 336,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 336,
            column: 13
          },
          end: {
            line: 336,
            column: 24
          }
        }, {
          start: {
            line: 336,
            column: 28
          },
          end: {
            line: 336,
            column: 77
          }
        }],
        line: 336
      },
      "14": {
        loc: {
          start: {
            line: 487,
            column: 13
          },
          end: {
            line: 487,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 487,
            column: 13
          },
          end: {
            line: 487,
            column: 58
          }
        }, {
          start: {
            line: 487,
            column: 62
          },
          end: {
            line: 487,
            column: 69
          }
        }],
        line: 487
      },
      "15": {
        loc: {
          start: {
            line: 511,
            column: 4
          },
          end: {
            line: 512,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 511,
            column: 4
          },
          end: {
            line: 512,
            column: 51
          }
        }, {
          start: {
            line: 512,
            column: 9
          },
          end: {
            line: 512,
            column: 51
          }
        }],
        line: 511
      },
      "16": {
        loc: {
          start: {
            line: 512,
            column: 9
          },
          end: {
            line: 512,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 512,
            column: 9
          },
          end: {
            line: 512,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 512
      },
      "17": {
        loc: {
          start: {
            line: 515,
            column: 4
          },
          end: {
            line: 515,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 515,
            column: 4
          },
          end: {
            line: 515,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 515
      },
      "18": {
        loc: {
          start: {
            line: 515,
            column: 8
          },
          end: {
            line: 515,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 515,
            column: 8
          },
          end: {
            line: 515,
            column: 28
          }
        }, {
          start: {
            line: 515,
            column: 32
          },
          end: {
            line: 515,
            column: 53
          }
        }],
        line: 515
      },
      "19": {
        loc: {
          start: {
            line: 518,
            column: 4
          },
          end: {
            line: 518,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 518,
            column: 4
          },
          end: {
            line: 518,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 518
      },
      "20": {
        loc: {
          start: {
            line: 519,
            column: 4
          },
          end: {
            line: 519,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 519,
            column: 4
          },
          end: {
            line: 519,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 519
      },
      "21": {
        loc: {
          start: {
            line: 529,
            column: 4
          },
          end: {
            line: 529,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 529,
            column: 4
          },
          end: {
            line: 529,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 529
      },
      "22": {
        loc: {
          start: {
            line: 534,
            column: 8
          },
          end: {
            line: 534,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 534,
            column: 8
          },
          end: {
            line: 534,
            column: 41
          }
        }, {
          start: {
            line: 534,
            column: 45
          },
          end: {
            line: 534,
            column: 78
          }
        }],
        line: 534
      },
      "23": {
        loc: {
          start: {
            line: 537,
            column: 11
          },
          end: {
            line: 537,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 537,
            column: 29
          },
          end: {
            line: 537,
            column: 32
          }
        }, {
          start: {
            line: 537,
            column: 35
          },
          end: {
            line: 537,
            column: 38
          }
        }],
        line: 537
      },
      "24": {
        loc: {
          start: {
            line: 550,
            column: 4
          },
          end: {
            line: 552,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 550,
            column: 4
          },
          end: {
            line: 552,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 550
      },
      "25": {
        loc: {
          start: {
            line: 553,
            column: 4
          },
          end: {
            line: 555,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 553,
            column: 4
          },
          end: {
            line: 555,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 553
      },
      "26": {
        loc: {
          start: {
            line: 558,
            column: 4
          },
          end: {
            line: 560,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 558,
            column: 4
          },
          end: {
            line: 560,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 558
      },
      "27": {
        loc: {
          start: {
            line: 563,
            column: 4
          },
          end: {
            line: 565,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 563,
            column: 4
          },
          end: {
            line: 565,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 563
      },
      "28": {
        loc: {
          start: {
            line: 570,
            column: 6
          },
          end: {
            line: 576,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 570,
            column: 6
          },
          end: {
            line: 576,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 570
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c4d4d8e3ab963dc3e4683e99472db179847fd401"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_lqfv11dte = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_lqfv11dte();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Image Processing Pipeline
 * Handles resizing, optimization, alt text generation, and CDN integration
 */

import { z } from "zod";
import OpenAI from "openai";

// Processing schemas
export var ProcessedImageSchema =
/* istanbul ignore next */
(cov_lqfv11dte().s[0]++, z.object({
  id: z.string(),
  originalUrl: z.string().url(),
  processedUrl: z.string().url(),
  cdnUrl: z.string().url().optional(),
  source: z[
  /* istanbul ignore next */
  "enum"](["twitter", "wikipedia"]),
  type: z[
  /* istanbul ignore next */
  "enum"](["player", "club", "news", "celebration"]),
  title: z.string(),
  altText: z.string(),
  attribution: z.string(),
  license: z.string(),
  variants: z.object({
    thumbnail: z.object({
      url: z.string().url(),
      width: z.number(),
      height: z.number(),
      fileSize: z.number()
    }),
    medium: z.object({
      url: z.string().url(),
      width: z.number(),
      height: z.number(),
      fileSize: z.number()
    }),
    large: z.object({
      url: z.string().url(),
      width: z.number(),
      height: z.number(),
      fileSize: z.number()
    })
  }),
  optimization: z.object({
    originalSize: z.number(),
    optimizedSize: z.number(),
    compressionRatio: z.number(),
    format: z.string(),
    quality: z.number()
  }),
  accessibility: z.object({
    altText: z.string(),
    description: z.string(),
    colorContrast: z.number().optional(),
    readabilityScore: z.number().min(0).max(100)
  }),
  metadata: z.object({
    processedAt: z.date(),
    processingTime: z.number(),
    aiModel: z.string(),
    cacheable: z[
    /* istanbul ignore next */
    "boolean"](),
    expiresAt: z.date().optional()
  })
}));
export
/* istanbul ignore next */
var ImageProcessor = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  ImageProcessor(config) {
    /* istanbul ignore next */
    _classCallCheck(this, ImageProcessor);
    cov_lqfv11dte().f[0]++;
    cov_lqfv11dte().s[1]++;
    this.config =
    /* istanbul ignore next */
    _objectSpread({
      cdnBaseUrl: "https://cdn.transferjuice.com",
      enableCdn: true,
      compressionQuality: 85,
      maxWidth: 1200,
      maxHeight: 800,
      enableWatermark: false
    }, config);
    /* istanbul ignore next */
    cov_lqfv11dte().s[2]++;
    this.openai = new OpenAI({
      apiKey: this.config.openaiApiKey
    });
    /* istanbul ignore next */
    cov_lqfv11dte().s[3]++;
    this.variantConfig = {
      thumbnail: {
        width: 150,
        height: 150,
        quality: 80
      },
      medium: {
        width: 400,
        height: 300,
        quality: 85
      },
      large: {
        width: 800,
        height: 600,
        quality: 90
      }
    };
  }

  /**
   * Process a single image through the complete pipeline
   */
  return _createClass(ImageProcessor, [{
    key: "processImage",
    value: (function () {
      var _processImage = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee(imageSource)
      /* istanbul ignore next */
      {
        var startTime, imageBuffer, imageInfo, enhancedAltText, variants, cdnUrls, optimization, accessibility, processingTime, _t, _t2;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              cov_lqfv11dte().f[1]++;
              startTime = (cov_lqfv11dte().s[4]++, Date.now());
              cov_lqfv11dte().s[5]++;
              _context.p = 1;
              cov_lqfv11dte().s[6]++;
              _context.n = 2;
              return this.downloadImage(imageSource.url);
            case 2:
              imageBuffer = _context.v;
              cov_lqfv11dte().s[7]++;
              _context.n = 3;
              return this.analyzeImage(imageBuffer);
            case 3:
              imageInfo = _context.v;
              cov_lqfv11dte().s[8]++;
              _context.n = 4;
              return this.generateAltText(imageSource, imageInfo);
            case 4:
              enhancedAltText = _context.v;
              cov_lqfv11dte().s[9]++;
              _context.n = 5;
              return this.createImageVariants(imageBuffer, imageInfo);
            case 5:
              variants = _context.v;
              cov_lqfv11dte().s[10]++;
              if (!this.config.enableCdn) {
                _context.n = 7;
                break;
              }
              cov_lqfv11dte().b[0][0]++;
              _context.n = 6;
              return this.uploadToCdn(variants);
            case 6:
              _t = _context.v;
              _context.n = 8;
              break;
            case 7:
              _t = (cov_lqfv11dte().b[0][1]++, null);
            case 8:
              cdnUrls = _t;
              // Calculate optimization metrics
              optimization = (cov_lqfv11dte().s[11]++, this.calculateOptimization(imageBuffer, variants)); // Generate accessibility information
              cov_lqfv11dte().s[12]++;
              _context.n = 9;
              return this.generateAccessibilityInfo(enhancedAltText, imageSource, imageInfo);
            case 9:
              accessibility = _context.v;
              processingTime = (cov_lqfv11dte().s[13]++, Date.now() - startTime);
              cov_lqfv11dte().s[14]++;
              return _context.a(2, ProcessedImageSchema.parse({
                id:
                /* istanbul ignore next */
                "processed_".concat(imageSource.id),
                originalUrl: imageSource.url,
                processedUrl: variants.large.url,
                cdnUrl:
                /* istanbul ignore next */
                cdnUrls === null || cdnUrls === void 0 ? void 0 : cdnUrls.large,
                source: imageSource.source,
                type: imageSource.type,
                title: imageSource.title,
                altText: enhancedAltText,
                attribution: imageSource.attribution,
                license: imageSource.license,
                variants: {
                  thumbnail: {
                    url:
                    /* istanbul ignore next */
                    (cov_lqfv11dte().b[1][0]++, cdnUrls === null || cdnUrls === void 0 ? void 0 : cdnUrls.thumbnail) ||
                    /* istanbul ignore next */
                    (cov_lqfv11dte().b[1][1]++, variants.thumbnail.url),
                    width: variants.thumbnail.width,
                    height: variants.thumbnail.height,
                    fileSize: variants.thumbnail.fileSize
                  },
                  medium: {
                    url:
                    /* istanbul ignore next */
                    (cov_lqfv11dte().b[2][0]++, cdnUrls === null || cdnUrls === void 0 ? void 0 : cdnUrls.medium) ||
                    /* istanbul ignore next */
                    (cov_lqfv11dte().b[2][1]++, variants.medium.url),
                    width: variants.medium.width,
                    height: variants.medium.height,
                    fileSize: variants.medium.fileSize
                  },
                  large: {
                    url:
                    /* istanbul ignore next */
                    (cov_lqfv11dte().b[3][0]++, cdnUrls === null || cdnUrls === void 0 ? void 0 : cdnUrls.large) ||
                    /* istanbul ignore next */
                    (cov_lqfv11dte().b[3][1]++, variants.large.url),
                    width: variants.large.width,
                    height: variants.large.height,
                    fileSize: variants.large.fileSize
                  }
                },
                optimization: optimization,
                accessibility: accessibility,
                metadata: {
                  processedAt: new Date(),
                  processingTime: processingTime,
                  aiModel: "gpt-4-vision-preview",
                  cacheable: true,
                  expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000) // 7 days
                }
              }));
            case 10:
              _context.p = 10;
              _t2 = _context.v;
              cov_lqfv11dte().s[15]++;
              throw new Error(
              /* istanbul ignore next */
              "Image processing failed: ".concat(
              /* istanbul ignore next */
              _t2 instanceof Error ?
              /* istanbul ignore next */
              (cov_lqfv11dte().b[4][0]++,
              /* istanbul ignore next */
              _t2.message) :
              /* istanbul ignore next */
              (cov_lqfv11dte().b[4][1]++, "Unknown error")));
            case 11:
              return _context.a(2);
          }
        }, _callee, this, [[1, 10]]);
      }));
      function processImage(_x) {
        return _processImage.apply(this, arguments);
      }
      return processImage;
    }()
    /**
     * Process multiple images in parallel with rate limiting
     */
    )
  }, {
    key: "processImages",
    value: (function () {
      var _processImages = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(imageSources)
      /* istanbul ignore next */
      {
        var _this = this;
        var concurrency,
          results,
          errors,
          i,
          batch,
          batchResults,
          _iterator,
          _step,
          result,
          _args2 = arguments;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              concurrency = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : (cov_lqfv11dte().b[5][0]++, 3);
              cov_lqfv11dte().f[2]++;
              results = (cov_lqfv11dte().s[16]++, []);
              errors = (cov_lqfv11dte().s[17]++, []); // Process in batches to respect rate limits
              cov_lqfv11dte().s[18]++;
              i = (cov_lqfv11dte().s[19]++, 0);
            case 1:
              if (!(i < imageSources.length)) {
                _context2.n = 6;
                break;
              }
              batch = (cov_lqfv11dte().s[20]++, imageSources.slice(i, i + concurrency));
              cov_lqfv11dte().s[21]++;
              _context2.n = 2;
              return Promise.allSettled(batch.map(function (source) {
                /* istanbul ignore next */
                cov_lqfv11dte().f[3]++;
                cov_lqfv11dte().s[22]++;
                return _this.processImage(source);
              }));
            case 2:
              batchResults = _context2.v;
              cov_lqfv11dte().s[23]++;
              _iterator = _createForOfIteratorHelper(batchResults);
              try {
                for (
                /* istanbul ignore next */
                _iterator.s();
                /* istanbul ignore next */
                !(_step = _iterator.n()).done;) {
                  /* istanbul ignore next */
                  result = _step.value;
                  /* istanbul ignore next */
                  cov_lqfv11dte().s[24]++;
                  if (result.status === "fulfilled") {
                    /* istanbul ignore next */
                    cov_lqfv11dte().b[6][0]++;
                    cov_lqfv11dte().s[25]++;
                    results.push(result.value);
                  } else {
                    /* istanbul ignore next */
                    cov_lqfv11dte().b[6][1]++;
                    cov_lqfv11dte().s[26]++;
                    errors.push(result.reason.message);
                  }
                }

                // Rate limiting delay between batches
              } catch (err) {
                _iterator.e(err);
              } finally {
                _iterator.f();
              }
              cov_lqfv11dte().s[27]++;
              if (!(i + concurrency < imageSources.length)) {
                _context2.n = 4;
                break;
              }
              cov_lqfv11dte().b[7][0]++;
              cov_lqfv11dte().s[28]++;
              _context2.n = 3;
              return new Promise(function (resolve) {
                /* istanbul ignore next */
                cov_lqfv11dte().f[4]++;
                cov_lqfv11dte().s[29]++;
                return setTimeout(resolve, 1000);
              });
            case 3:
              _context2.n = 5;
              break;
            case 4:
              cov_lqfv11dte().b[7][1]++;
            case 5:
              i += concurrency;
              _context2.n = 1;
              break;
            case 6:
              cov_lqfv11dte().s[30]++;
              if (errors.length > 0) {
                /* istanbul ignore next */
                cov_lqfv11dte().b[8][0]++;
                cov_lqfv11dte().s[31]++;
                console.warn(
                /* istanbul ignore next */
                "Image processing completed with ".concat(errors.length, " errors:"), errors);
              } else
              /* istanbul ignore next */
              {
                cov_lqfv11dte().b[8][1]++;
              }
              cov_lqfv11dte().s[32]++;
              return _context2.a(2, results);
          }
        }, _callee2);
      }));
      function processImages(_x2) {
        return _processImages.apply(this, arguments);
      }
      return processImages;
    }()
    /**
     * Download image from URL
     */
    )
  }, {
    key: "downloadImage",
    value: (function () {
      var _downloadImage = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3(url)
      /* istanbul ignore next */
      {
        var response, arrayBuffer;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              cov_lqfv11dte().f[5]++;
              cov_lqfv11dte().s[33]++;
              _context3.n = 1;
              return fetch(url, {
                headers: {
                  "User-Agent": this.config.userAgent
                }
              });
            case 1:
              response = _context3.v;
              cov_lqfv11dte().s[34]++;
              if (response.ok) {
                _context3.n = 2;
                break;
              }
              cov_lqfv11dte().b[9][0]++;
              cov_lqfv11dte().s[35]++;
              throw new Error(
              /* istanbul ignore next */
              "Failed to download image: ".concat(response.status));
            case 2:
              cov_lqfv11dte().b[9][1]++;
            case 3:
              cov_lqfv11dte().s[36]++;
              _context3.n = 4;
              return response.arrayBuffer();
            case 4:
              arrayBuffer = _context3.v;
              cov_lqfv11dte().s[37]++;
              return _context3.a(2, Buffer.from(arrayBuffer));
          }
        }, _callee3, this);
      }));
      function downloadImage(_x3) {
        return _downloadImage.apply(this, arguments);
      }
      return downloadImage;
    }()
    /**
     * Analyze image properties
     */
    )
  }, {
    key: "analyzeImage",
    value: (function () {
      var _analyzeImage = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4(imageBuffer)
      /* istanbul ignore next */
      {
        var fileSize;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_lqfv11dte().f[6]++;
              // Simplified image analysis - would use sharp or similar library in production
              fileSize = (cov_lqfv11dte().s[38]++, imageBuffer.length); // Mock analysis for now - would implement actual image processing
              cov_lqfv11dte().s[39]++;
              return _context4.a(2, {
                width: 800,
                height: 600,
                format: "jpeg",
                fileSize: fileSize,
                hasTransparency: false,
                dominantColors: ["#1f3a93", "#ffffff", "#000000"]
              });
          }
        }, _callee4);
      }));
      function analyzeImage(_x4) {
        return _analyzeImage.apply(this, arguments);
      }
      return analyzeImage;
    }()
    /**
     * Generate enhanced alt text using AI
     */
    )
  }, {
    key: "generateAltText",
    value: (function () {
      var _generateAltText = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee5(imageSource, imageInfo)
      /* istanbul ignore next */
      {
        var baseAltText, context, _response$choices$, response, enhancedAltText, _t3;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              cov_lqfv11dte().f[7]++;
              baseAltText = (cov_lqfv11dte().s[40]++, imageSource.altText);
              context = (cov_lqfv11dte().s[41]++, {
                type: imageSource.type,
                title: imageSource.title,
                source: imageSource.source,
                existingAlt: baseAltText,
                dimensions:
                /* istanbul ignore next */
                "".concat(imageInfo.width, "x").concat(imageInfo.height)
              });
              cov_lqfv11dte().s[42]++;
              _context5.p = 1;
              cov_lqfv11dte().s[43]++;
              _context5.n = 2;
              return this.openai.chat.completions.create({
                model: "gpt-4-turbo-preview",
                messages: [{
                  role: "system",
                  content:
                  /* istanbul ignore next */
                  "You are an accessibility expert creating alt text for transfer news images. Generate concise, descriptive alt text that:\n- Describes what's visible in the image\n- Includes relevant context for transfer news\n- Is 125 characters or less\n- Follows accessibility best practices\n- Avoids redundant phrases like \"image of\" or \"picture showing\""
                }, {
                  role: "user",
                  content:
                  /* istanbul ignore next */
                  "Generate enhanced alt text for this transfer news image:\n            \nType: ".concat(context.type, "\nTitle: ").concat(context.title, "\nSource: ").concat(context.source, "\nExisting alt text: ").concat(context.existingAlt, "\nDimensions: ").concat(context.dimensions, "\n\nCreate descriptive, accessible alt text that helps users understand the image content and its relevance to the transfer story.")
                }],
                max_tokens: 100,
                temperature: 0.3
              });
            case 2:
              response = _context5.v;
              enhancedAltText = (cov_lqfv11dte().s[44]++, (_response$choices$ = response.choices[0]) === null || _response$choices$ === void 0 || (_response$choices$ =
              /* istanbul ignore next */
              _response$choices$.message) === null || _response$choices$ === void 0 || (_response$choices$ =
              /* istanbul ignore next */
              _response$choices$.content) === null || _response$choices$ === void 0 ? void 0 :
              /* istanbul ignore next */
              _response$choices$.trim()); // Validate AI response length and fallback if too long or empty
              cov_lqfv11dte().s[45]++;
              if (!(
              /* istanbul ignore next */
              (cov_lqfv11dte().b[11][0]++, !enhancedAltText) ||
              /* istanbul ignore next */
              (cov_lqfv11dte().b[11][1]++, enhancedAltText.length > 125))) {
                _context5.n = 3;
                break;
              }
              cov_lqfv11dte().b[10][0]++;
              cov_lqfv11dte().s[46]++;
              return _context5.a(2,
              /* istanbul ignore next */
              (cov_lqfv11dte().b[12][0]++, baseAltText) ||
              /* istanbul ignore next */
              (cov_lqfv11dte().b[12][1]++, "".concat(imageSource.type, " image: ").concat(imageSource.title)));
            case 3:
              cov_lqfv11dte().b[10][1]++;
            case 4:
              cov_lqfv11dte().s[47]++;
              return _context5.a(2, enhancedAltText);
            case 5:
              _context5.p = 5;
              _t3 = _context5.v;
              cov_lqfv11dte().s[48]++;
              console.warn("AI alt text generation failed, using fallback:",
              /* istanbul ignore next */
              _t3);
              cov_lqfv11dte().s[49]++;
              return _context5.a(2,
              /* istanbul ignore next */
              (cov_lqfv11dte().b[13][0]++, baseAltText) ||
              /* istanbul ignore next */
              (cov_lqfv11dte().b[13][1]++, "".concat(imageSource.type, " image: ").concat(imageSource.title)));
          }
        }, _callee5, this, [[1, 5]]);
      }));
      function generateAltText(_x5, _x6) {
        return _generateAltText.apply(this, arguments);
      }
      return generateAltText;
    }()
    /**
     * Create optimized image variants
     */
    )
  }, {
    key: "createImageVariants",
    value: (function () {
      var _createImageVariants = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee6(imageBuffer, originalInfo)
      /* istanbul ignore next */
      {
        var baseUrl, mockImageData;
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.n) {
            case 0:
              cov_lqfv11dte().f[8]++;
              // Mock implementation - would use sharp or similar for actual image processing
              baseUrl = (cov_lqfv11dte().s[50]++, "data:image/jpeg;base64,");
              mockImageData = (cov_lqfv11dte().s[51]++, imageBuffer.toString("base64").slice(0, 100));
              cov_lqfv11dte().s[52]++;
              return _context6.a(2, {
                thumbnail: {
                  url:
                  /* istanbul ignore next */
                  "".concat(baseUrl).concat(mockImageData, "_thumb"),
                  width: this.variantConfig.thumbnail.width,
                  height: this.variantConfig.thumbnail.height,
                  fileSize: Math.round(originalInfo.fileSize * 0.1)
                },
                medium: {
                  url:
                  /* istanbul ignore next */
                  "".concat(baseUrl).concat(mockImageData, "_medium"),
                  width: this.variantConfig.medium.width,
                  height: this.variantConfig.medium.height,
                  fileSize: Math.round(originalInfo.fileSize * 0.3)
                },
                large: {
                  url:
                  /* istanbul ignore next */
                  "".concat(baseUrl).concat(mockImageData, "_large"),
                  width: this.variantConfig.large.width,
                  height: this.variantConfig.large.height,
                  fileSize: Math.round(originalInfo.fileSize * 0.7)
                }
              });
          }
        }, _callee6, this);
      }));
      function createImageVariants(_x7, _x8) {
        return _createImageVariants.apply(this, arguments);
      }
      return createImageVariants;
    }()
    /**
     * Upload images to CDN
     */
    )
  }, {
    key: "uploadToCdn",
    value: (function () {
      var _uploadToCdn = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee7(variants)
      /* istanbul ignore next */
      {
        var timestamp, baseUrl;
        return _regenerator().w(function (_context7) {
          while (1) switch (_context7.n) {
            case 0:
              cov_lqfv11dte().f[9]++;
              // Mock CDN upload - would implement actual CDN integration
              timestamp = (cov_lqfv11dte().s[53]++, Date.now());
              baseUrl = (cov_lqfv11dte().s[54]++, this.config.cdnBaseUrl);
              cov_lqfv11dte().s[55]++;
              return _context7.a(2, {
                thumbnail:
                /* istanbul ignore next */
                "".concat(baseUrl, "/thumb/").concat(timestamp, "_thumbnail.jpg"),
                medium:
                /* istanbul ignore next */
                "".concat(baseUrl, "/medium/").concat(timestamp, "_medium.jpg"),
                large:
                /* istanbul ignore next */
                "".concat(baseUrl, "/large/").concat(timestamp, "_large.jpg")
              });
          }
        }, _callee7, this);
      }));
      function uploadToCdn(_x9) {
        return _uploadToCdn.apply(this, arguments);
      }
      return uploadToCdn;
    }()
    /**
     * Calculate optimization metrics
     */
    )
  }, {
    key: "calculateOptimization",
    value: function calculateOptimization(originalBuffer, variants) {
      /* istanbul ignore next */
      cov_lqfv11dte().f[10]++;
      var originalSize =
      /* istanbul ignore next */
      (cov_lqfv11dte().s[56]++, originalBuffer.length);
      var optimizedSize =
      /* istanbul ignore next */
      (cov_lqfv11dte().s[57]++, variants.large.fileSize);
      var compressionRatio =
      /* istanbul ignore next */
      (cov_lqfv11dte().s[58]++, (originalSize - optimizedSize) / originalSize);
      /* istanbul ignore next */
      cov_lqfv11dte().s[59]++;
      return {
        originalSize: originalSize,
        optimizedSize: optimizedSize,
        compressionRatio: Math.round(compressionRatio * 100) / 100,
        format: "jpeg",
        quality: this.config.compressionQuality
      };
    }

    /**
     * Generate accessibility information
     */
  }, {
    key: "generateAccessibilityInfo",
    value: (function () {
      var _generateAccessibilityInfo = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee8(altText, imageSource, imageInfo)
      /* istanbul ignore next */
      {
        var description, readabilityScore, colorContrast;
        return _regenerator().w(function (_context8) {
          while (1) switch (_context8.n) {
            case 0:
              cov_lqfv11dte().f[11]++;
              cov_lqfv11dte().s[60]++;
              _context8.n = 1;
              return this.generateDetailedDescription(imageSource, altText);
            case 1:
              description = _context8.v;
              // Calculate readability score
              readabilityScore = (cov_lqfv11dte().s[61]++, this.calculateReadabilityScore(altText, description)); // Estimate color contrast (simplified)
              colorContrast = (cov_lqfv11dte().s[62]++, this.estimateColorContrast(imageInfo.dominantColors));
              cov_lqfv11dte().s[63]++;
              return _context8.a(2, {
                altText: altText,
                description: description,
                colorContrast: colorContrast,
                readabilityScore: readabilityScore
              });
          }
        }, _callee8, this);
      }));
      function generateAccessibilityInfo(_x0, _x1, _x10) {
        return _generateAccessibilityInfo.apply(this, arguments);
      }
      return generateAccessibilityInfo;
    }()
    /**
     * Generate detailed description for accessibility
     */
    )
  }, {
    key: "generateDetailedDescription",
    value: (function () {
      var _generateDetailedDescription = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee9(imageSource, altText)
      /* istanbul ignore next */
      {
        var _response$choices$2, response, _t4;
        return _regenerator().w(function (_context9) {
          while (1) switch (_context9.n) {
            case 0:
              cov_lqfv11dte().f[12]++;
              cov_lqfv11dte().s[64]++;
              _context9.p = 1;
              cov_lqfv11dte().s[65]++;
              _context9.n = 2;
              return this.openai.chat.completions.create({
                model: "gpt-4-turbo-preview",
                messages: [{
                  role: "system",
                  content:
                  /* istanbul ignore next */
                  "Generate a detailed image description for accessibility tools. Expand on the alt text to provide more context while remaining concise and relevant to transfer news."
                }, {
                  role: "user",
                  content:
                  /* istanbul ignore next */
                  "Create a detailed description for this transfer news image:\n\nType: ".concat(imageSource.type, "\nAlt text: ").concat(altText, "\nSource: ").concat(imageSource.source, "\nTitle: ").concat(imageSource.title, "\n\nProvide 1-2 sentences that give more context than the alt text while remaining focused and informative.")
                }],
                max_tokens: 150,
                temperature: 0.2
              });
            case 2:
              response = _context9.v;
              cov_lqfv11dte().s[66]++;
              return _context9.a(2,
              /* istanbul ignore next */
              (cov_lqfv11dte().b[14][0]++, (_response$choices$2 = response.choices[0]) === null || _response$choices$2 === void 0 || (_response$choices$2 =
              /* istanbul ignore next */
              _response$choices$2.message) === null || _response$choices$2 === void 0 || (_response$choices$2 =
              /* istanbul ignore next */
              _response$choices$2.content) === null || _response$choices$2 === void 0 ? void 0 :
              /* istanbul ignore next */
              _response$choices$2.trim()) ||
              /* istanbul ignore next */
              (cov_lqfv11dte().b[14][1]++, altText));
            case 3:
              _context9.p = 3;
              _t4 = _context9.v;
              cov_lqfv11dte().s[67]++;
              console.warn("Detailed description generation failed:",
              /* istanbul ignore next */
              _t4);
              cov_lqfv11dte().s[68]++;
              return _context9.a(2, altText);
          }
        }, _callee9, this, [[1, 3]]);
      }));
      function generateDetailedDescription(_x11, _x12) {
        return _generateDetailedDescription.apply(this, arguments);
      }
      return generateDetailedDescription;
    }()
    /**
     * Calculate readability score for alt text
     */
    )
  }, {
    key: "calculateReadabilityScore",
    value: function calculateReadabilityScore(altText, description) {
      /* istanbul ignore next */
      cov_lqfv11dte().f[13]++;
      // Simplified readability calculation
      var combinedText =
      /* istanbul ignore next */
      (cov_lqfv11dte().s[69]++, "".concat(altText, " ").concat(description));
      var words =
      /* istanbul ignore next */
      (cov_lqfv11dte().s[70]++, combinedText.split(/\s+/).length);
      var sentences =
      /* istanbul ignore next */
      (cov_lqfv11dte().s[71]++, combinedText.split(/[.!?]+/).length);
      var avgWordsPerSentence =
      /* istanbul ignore next */
      (cov_lqfv11dte().s[72]++, words / sentences);

      // Score based on clarity and conciseness
      var score =
      /* istanbul ignore next */
      (cov_lqfv11dte().s[73]++, 80); // Base score

      // Penalty for overly complex sentences
      /* istanbul ignore next */
      cov_lqfv11dte().s[74]++;
      if (avgWordsPerSentence > 20) {
        /* istanbul ignore next */
        cov_lqfv11dte().b[15][0]++;
        cov_lqfv11dte().s[75]++;
        score -= 20;
      } else {
        /* istanbul ignore next */
        cov_lqfv11dte().b[15][1]++;
        cov_lqfv11dte().s[76]++;
        if (avgWordsPerSentence > 15) {
          /* istanbul ignore next */
          cov_lqfv11dte().b[16][0]++;
          cov_lqfv11dte().s[77]++;
          score -= 10;
        } else
        /* istanbul ignore next */
        {
          cov_lqfv11dte().b[16][1]++;
        }
      }

      // Bonus for appropriate length
      /* istanbul ignore next */
      cov_lqfv11dte().s[78]++;
      if (
      /* istanbul ignore next */
      (cov_lqfv11dte().b[18][0]++, altText.length >= 50) &&
      /* istanbul ignore next */
      (cov_lqfv11dte().b[18][1]++, altText.length <= 125)) {
        /* istanbul ignore next */
        cov_lqfv11dte().b[17][0]++;
        cov_lqfv11dte().s[79]++;
        score += 10;
      } else
      /* istanbul ignore next */
      {
        cov_lqfv11dte().b[17][1]++;
      }

      // Penalty for too short or too long
      cov_lqfv11dte().s[80]++;
      if (altText.length < 20) {
        /* istanbul ignore next */
        cov_lqfv11dte().b[19][0]++;
        cov_lqfv11dte().s[81]++;
        score -= 15;
      } else
      /* istanbul ignore next */
      {
        cov_lqfv11dte().b[19][1]++;
      }
      cov_lqfv11dte().s[82]++;
      if (altText.length > 150) {
        /* istanbul ignore next */
        cov_lqfv11dte().b[20][0]++;
        cov_lqfv11dte().s[83]++;
        score -= 15;
      } else
      /* istanbul ignore next */
      {
        cov_lqfv11dte().b[20][1]++;
      }
      cov_lqfv11dte().s[84]++;
      return Math.max(0, Math.min(100, score));
    }

    /**
     * Estimate color contrast ratio
     */
  }, {
    key: "estimateColorContrast",
    value: function estimateColorContrast(dominantColors) {
      /* istanbul ignore next */
      cov_lqfv11dte().f[14]++;
      cov_lqfv11dte().s[85]++;
      // Simplified contrast estimation
      if (dominantColors.length < 2) {
        /* istanbul ignore next */
        cov_lqfv11dte().b[21][0]++;
        cov_lqfv11dte().s[86]++;
        return 4.5;
      } else
      /* istanbul ignore next */
      {
        cov_lqfv11dte().b[21][1]++;
      } // Default acceptable contrast

      // Mock calculation - would implement actual color contrast calculation
      var hasHighContrast =
      /* istanbul ignore next */
      (cov_lqfv11dte().s[87]++, dominantColors.some(function (color) {
        /* istanbul ignore next */
        cov_lqfv11dte().f[15]++;
        cov_lqfv11dte().s[88]++;
        return /* istanbul ignore next */(cov_lqfv11dte().b[22][0]++, color.toLowerCase() === "#ffffff") ||
        /* istanbul ignore next */
        (cov_lqfv11dte().b[22][1]++, color.toLowerCase() === "#000000");
      }));
      /* istanbul ignore next */
      cov_lqfv11dte().s[89]++;
      return hasHighContrast ?
      /* istanbul ignore next */
      (cov_lqfv11dte().b[23][0]++, 7.0) :
      /* istanbul ignore next */
      (cov_lqfv11dte().b[23][1]++, 4.5);
    }

    /**
     * Validate processed image meets requirements
     */
  }, {
    key: "validateProcessedImage",
    value: function validateProcessedImage(processedImage) {
      /* istanbul ignore next */
      cov_lqfv11dte().f[16]++;
      var issues =
      /* istanbul ignore next */
      (cov_lqfv11dte().s[90]++, []);

      // Check alt text length
      /* istanbul ignore next */
      cov_lqfv11dte().s[91]++;
      if (processedImage.altText.length < 10) {
        /* istanbul ignore next */
        cov_lqfv11dte().b[24][0]++;
        cov_lqfv11dte().s[92]++;
        issues.push("Alt text too short");
      } else
      /* istanbul ignore next */
      {
        cov_lqfv11dte().b[24][1]++;
      }
      cov_lqfv11dte().s[93]++;
      if (processedImage.altText.length > 125) {
        /* istanbul ignore next */
        cov_lqfv11dte().b[25][0]++;
        cov_lqfv11dte().s[94]++;
        issues.push("Alt text too long");
      } else
      /* istanbul ignore next */
      {
        cov_lqfv11dte().b[25][1]++;
      }

      // Check compression ratio
      cov_lqfv11dte().s[95]++;
      if (processedImage.optimization.compressionRatio < 0.1) {
        /* istanbul ignore next */
        cov_lqfv11dte().b[26][0]++;
        cov_lqfv11dte().s[96]++;
        issues.push("Insufficient compression");
      } else
      /* istanbul ignore next */
      {
        cov_lqfv11dte().b[26][1]++;
      }

      // Check accessibility score
      cov_lqfv11dte().s[97]++;
      if (processedImage.accessibility.readabilityScore < 70) {
        /* istanbul ignore next */
        cov_lqfv11dte().b[27][0]++;
        cov_lqfv11dte().s[98]++;
        issues.push("Low readability score");
      } else
      /* istanbul ignore next */
      {
        cov_lqfv11dte().b[27][1]++;
      }

      // Check image variants
      var requiredVariants =
      /* istanbul ignore next */
      (cov_lqfv11dte().s[99]++, ["thumbnail", "medium", "large"]);
      /* istanbul ignore next */
      cov_lqfv11dte().s[100]++;
      for (
      /* istanbul ignore next */
      var _i = 0, _requiredVariants = requiredVariants;
      /* istanbul ignore next */
      _i < _requiredVariants.length;
      /* istanbul ignore next */
      _i++) {
        var variant =
        /* istanbul ignore next */
        _requiredVariants[_i];
        /* istanbul ignore next */
        cov_lqfv11dte().s[101]++;
        if (!processedImage.variants[variant]) {
          /* istanbul ignore next */
          cov_lqfv11dte().b[28][0]++;
          cov_lqfv11dte().s[102]++;
          issues.push(
          /* istanbul ignore next */
          "Missing ".concat(variant, " variant"));
        } else
        /* istanbul ignore next */
        {
          cov_lqfv11dte().b[28][1]++;
        }
      }
      /* istanbul ignore next */
      cov_lqfv11dte().s[103]++;
      return {
        valid: issues.length === 0,
        issues: issues
      };
    }

    /**
     * Get processing statistics
     */
  }, {
    key: "getProcessingStats",
    value: function getProcessingStats() {
      /* istanbul ignore next */
      cov_lqfv11dte().f[17]++;
      cov_lqfv11dte().s[104]++;
      return {
        supportedFormats: ["jpeg", "jpg", "png", "webp"],
        variantSizes: this.variantConfig,
        compressionQuality: this.config.compressionQuality,
        cdnEnabled: this.config.enableCdn
      };
    }
  }]);
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,