1e840ab2681e0dca6623468b07d9b7ce
/* istanbul ignore next */ function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function cov_1ao10e9hqs() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/auth/apiAuth.ts";
  var hash = "f9cd12157a9f073234b70d61fce6eda520758e3b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/auth/apiAuth.ts",
    statementMap: {
      "0": {
        start: {
          line: 32,
          column: 2
        },
        end: {
          line: 62,
          column: 3
        }
      },
      "1": {
        start: {
          line: 34,
          column: 19
        },
        end: {
          line: 34,
          column: 51
        }
      },
      "2": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "3": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 54
        }
      },
      "4": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 59
        }
      },
      "5": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "6": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 42,
          column: 43
        }
      },
      "7": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 58
        }
      },
      "8": {
        start: {
          line: 47,
          column: 22
        },
        end: {
          line: 47,
          column: 59
        }
      },
      "9": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "10": {
        start: {
          line: 49,
          column: 6
        },
        end: {
          line: 49,
          column: 58
        }
      },
      "11": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 55,
          column: 6
        }
      },
      "12": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 54
        }
      },
      "13": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 61,
          column: 6
        }
      },
      "14": {
        start: {
          line: 72,
          column: 2
        },
        end: {
          line: 137,
          column: 3
        }
      },
      "15": {
        start: {
          line: 74,
          column: 22
        },
        end: {
          line: 74,
          column: 37
        }
      },
      "16": {
        start: {
          line: 82,
          column: 46
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "17": {
        start: {
          line: 92,
          column: 25
        },
        end: {
          line: 92,
          column: 39
        }
      },
      "18": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "19": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 98,
          column: 8
        }
      },
      "20": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "21": {
        start: {
          line: 103,
          column: 6
        },
        end: {
          line: 106,
          column: 8
        }
      },
      "22": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "23": {
        start: {
          line: 114,
          column: 6
        },
        end: {
          line: 117,
          column: 8
        }
      },
      "24": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 130,
          column: 6
        }
      },
      "25": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 132,
          column: 56
        }
      },
      "26": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 136,
          column: 6
        }
      },
      "27": {
        start: {
          line: 147,
          column: 2
        },
        end: {
          line: 169,
          column: 3
        }
      },
      "28": {
        start: {
          line: 150,
          column: 23
        },
        end: {
          line: 150,
          column: 60
        }
      },
      "29": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "30": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 156,
          column: 8
        }
      },
      "31": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 162,
          column: 6
        }
      },
      "32": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 164,
          column: 61
        }
      },
      "33": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 168,
          column: 6
        }
      },
      "34": {
        start: {
          line: 179,
          column: 2
        },
        end: {
          line: 197,
          column: 3
        }
      },
      "35": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 190,
          column: 6
        }
      },
      "36": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 192,
          column: 56
        }
      },
      "37": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 196,
          column: 6
        }
      },
      "38": {
        start: {
          line: 204,
          column: 2
        },
        end: {
          line: 204,
          column: 56
        }
      },
      "39": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 212,
          column: 68
        }
      },
      "40": {
        start: {
          line: 213,
          column: 19
        },
        end: {
          line: 213,
          column: 20
        }
      },
      "41": {
        start: {
          line: 214,
          column: 24
        },
        end: {
          line: 214,
          column: 25
        }
      },
      "42": {
        start: {
          line: 216,
          column: 25
        },
        end: {
          line: 216,
          column: 27
        }
      },
      "43": {
        start: {
          line: 217,
          column: 2
        },
        end: {
          line: 223,
          column: 3
        }
      },
      "44": {
        start: {
          line: 217,
          column: 15
        },
        end: {
          line: 217,
          column: 16
        }
      },
      "45": {
        start: {
          line: 218,
          column: 18
        },
        end: {
          line: 218,
          column: 20
        }
      },
      "46": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 221,
          column: 5
        }
      },
      "47": {
        start: {
          line: 219,
          column: 17
        },
        end: {
          line: 219,
          column: 18
        }
      },
      "48": {
        start: {
          line: 220,
          column: 6
        },
        end: {
          line: 220,
          column: 72
        }
      },
      "49": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 222,
          column: 33
        }
      },
      "50": {
        start: {
          line: 225,
          column: 2
        },
        end: {
          line: 225,
          column: 34
        }
      },
      "51": {
        start: {
          line: 232,
          column: 44
        },
        end: {
          line: 232,
          column: 53
        }
      },
      "52": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 237,
          column: 29
        }
      },
      "53": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 238,
          column: 35
        }
      },
      "54": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 26
        }
      },
      "55": {
        start: {
          line: 246,
          column: 21
        },
        end: {
          line: 246,
          column: 56
        }
      },
      "56": {
        start: {
          line: 249,
          column: 26
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "57": {
        start: {
          line: 250,
          column: 21
        },
        end: {
          line: 250,
          column: 52
        }
      },
      "58": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 255,
          column: 5
        }
      },
      "59": {
        start: {
          line: 254,
          column: 6
        },
        end: {
          line: 254,
          column: 18
        }
      },
      "60": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 258,
          column: 28
        }
      },
      "61": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 259,
          column: 49
        }
      },
      "62": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 261,
          column: 17
        }
      },
      "63": {
        start: {
          line: 268,
          column: 21
        },
        end: {
          line: 268,
          column: 56
        }
      },
      "64": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 269,
          column: 26
        }
      },
      "65": {
        start: {
          line: 270,
          column: 26
        },
        end: {
          line: 272,
          column: 5
        }
      },
      "66": {
        start: {
          line: 271,
          column: 21
        },
        end: {
          line: 271,
          column: 52
        }
      },
      "67": {
        start: {
          line: 274,
          column: 22
        },
        end: {
          line: 274,
          column: 74
        }
      },
      "68": {
        start: {
          line: 276,
          column: 6
        },
        end: {
          line: 278,
          column: 29
        }
      },
      "69": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 284,
          column: 6
        }
      },
      "70": {
        start: {
          line: 289,
          column: 30
        },
        end: {
          line: 292,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "verifyApiAuth",
        decl: {
          start: {
            line: 28,
            column: 22
          },
          end: {
            line: 28,
            column: 35
          }
        },
        loc: {
          start: {
            line: 31,
            column: 26
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 31
      },
      "1": {
        name: "verifyApiKey",
        decl: {
          start: {
            line: 68,
            column: 15
          },
          end: {
            line: 68,
            column: 27
          }
        },
        loc: {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 138,
            column: 1
          }
        },
        line: 71
      },
      "2": {
        name: "verifyBearerToken",
        decl: {
          start: {
            line: 143,
            column: 15
          },
          end: {
            line: 143,
            column: 32
          }
        },
        loc: {
          start: {
            line: 146,
            column: 26
          },
          end: {
            line: 170,
            column: 1
          }
        },
        line: 146
      },
      "3": {
        name: "verifySession",
        decl: {
          start: {
            line: 175,
            column: 15
          },
          end: {
            line: 175,
            column: 28
          }
        },
        loc: {
          start: {
            line: 178,
            column: 26
          },
          end: {
            line: 198,
            column: 1
          }
        },
        line: 178
      },
      "4": {
        name: "hashApiKey",
        decl: {
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 203,
            column: 26
          }
        },
        loc: {
          start: {
            line: 203,
            column: 48
          },
          end: {
            line: 205,
            column: 1
          }
        },
        line: 203
      },
      "5": {
        name: "generateApiKey",
        decl: {
          start: {
            line: 210,
            column: 16
          },
          end: {
            line: 210,
            column: 30
          }
        },
        loc: {
          start: {
            line: 210,
            column: 41
          },
          end: {
            line: 226,
            column: 1
          }
        },
        line: 210
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 236,
            column: 2
          },
          end: {
            line: 236,
            column: 3
          }
        },
        loc: {
          start: {
            line: 236,
            column: 50
          },
          end: {
            line: 239,
            column: 3
          }
        },
        line: 236
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 244,
            column: 2
          },
          end: {
            line: 244,
            column: 3
          }
        },
        loc: {
          start: {
            line: 244,
            column: 45
          },
          end: {
            line: 262,
            column: 3
          }
        },
        line: 244
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 250,
            column: 6
          },
          end: {
            line: 250,
            column: 7
          }
        },
        loc: {
          start: {
            line: 250,
            column: 21
          },
          end: {
            line: 250,
            column: 52
          }
        },
        line: 250
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 267,
            column: 2
          },
          end: {
            line: 267,
            column: 3
          }
        },
        loc: {
          start: {
            line: 267,
            column: 66
          },
          end: {
            line: 285,
            column: 3
          }
        },
        line: 267
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 271,
            column: 6
          },
          end: {
            line: 271,
            column: 7
          }
        },
        loc: {
          start: {
            line: 271,
            column: 21
          },
          end: {
            line: 271,
            column: 52
          }
        },
        line: 271
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 18
          }
        }, {
          start: {
            line: 41,
            column: 22
          },
          end: {
            line: 41,
            column: 54
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 83,
            column: 7
          },
          end: {
            line: 83,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 7
          },
          end: {
            line: 83,
            column: 46
          }
        }, {
          start: {
            line: 83,
            column: 50
          },
          end: {
            line: 83,
            column: 60
          }
        }],
        line: 83
      },
      "5": {
        loc: {
          start: {
            line: 85,
            column: 13
          },
          end: {
            line: 85,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 13
          },
          end: {
            line: 85,
            column: 52
          }
        }, {
          start: {
            line: 85,
            column: 56
          },
          end: {
            line: 85,
            column: 66
          }
        }],
        line: 85
      },
      "6": {
        loc: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "7": {
        loc: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "8": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 102,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 102,
            column: 30
          }
        }, {
          start: {
            line: 102,
            column: 34
          },
          end: {
            line: 102,
            column: 69
          }
        }],
        line: 102
      },
      "9": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "10": {
        loc: {
          start: {
            line: 111,
            column: 6
          },
          end: {
            line: 112,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 6
          },
          end: {
            line: 111,
            column: 24
          }
        }, {
          start: {
            line: 112,
            column: 6
          },
          end: {
            line: 112,
            column: 60
          }
        }],
        line: 111
      },
      "11": {
        loc: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "12": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 152,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 152,
            column: 19
          }
        }, {
          start: {
            line: 152,
            column: 23
          },
          end: {
            line: 152,
            column: 43
          }
        }],
        line: 152
      },
      "13": {
        loc: {
          start: {
            line: 236,
            column: 14
          },
          end: {
            line: 236,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 236,
            column: 25
          },
          end: {
            line: 236,
            column: 30
          }
        }],
        line: 236
      },
      "14": {
        loc: {
          start: {
            line: 236,
            column: 32
          },
          end: {
            line: 236,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 236,
            column: 46
          },
          end: {
            line: 236,
            column: 48
          }
        }],
        line: 236
      },
      "15": {
        loc: {
          start: {
            line: 246,
            column: 21
          },
          end: {
            line: 246,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 21
          },
          end: {
            line: 246,
            column: 50
          }
        }, {
          start: {
            line: 246,
            column: 54
          },
          end: {
            line: 246,
            column: 56
          }
        }],
        line: 246
      },
      "16": {
        loc: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "17": {
        loc: {
          start: {
            line: 268,
            column: 21
          },
          end: {
            line: 268,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 21
          },
          end: {
            line: 268,
            column: 50
          }
        }, {
          start: {
            line: 268,
            column: 54
          },
          end: {
            line: 268,
            column: 56
          }
        }],
        line: 268
      },
      "18": {
        loc: {
          start: {
            line: 276,
            column: 6
          },
          end: {
            line: 278,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 277,
            column: 10
          },
          end: {
            line: 277,
            column: 42
          }
        }, {
          start: {
            line: 278,
            column: 10
          },
          end: {
            line: 278,
            column: 29
          }
        }],
        line: 276
      },
      "19": {
        loc: {
          start: {
            line: 290,
            column: 11
          },
          end: {
            line: 290,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 11
          },
          end: {
            line: 290,
            column: 44
          }
        }, {
          start: {
            line: 290,
            column: 48
          },
          end: {
            line: 290,
            column: 55
          }
        }],
        line: 290
      },
      "20": {
        loc: {
          start: {
            line: 291,
            column: 11
          },
          end: {
            line: 291,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 11
          },
          end: {
            line: 291,
            column: 41
          }
        }, {
          start: {
            line: 291,
            column: 45
          },
          end: {
            line: 291,
            column: 49
          }
        }],
        line: 291
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f9cd12157a9f073234b70d61fce6eda520758e3b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ao10e9hqs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ao10e9hqs();
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * API Authentication System
 * Handles authentication for protected API endpoints
 */

import { createHash } from "crypto";
/**
 * Verify API authentication from request
 */
export
/* istanbul ignore next */
function verifyApiAuth(_x, _x2) {
  return _verifyApiAuth.apply(this, arguments);
}

/**
 * Verify API key authentication
 */
/* istanbul ignore next */
function _verifyApiAuth() {
  _verifyApiAuth = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(request, requiredPermission)
  /* istanbul ignore next */
  {
    var _request$cookies$get, apiKey, authHeader, token, sessionId, _t;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_1ao10e9hqs().f[0]++;
          cov_1ao10e9hqs().s[0]++;
          _context.p = 1;
          // Check for API key in header
          apiKey = (cov_1ao10e9hqs().s[1]++, request.headers.get("X-API-Key"));
          cov_1ao10e9hqs().s[2]++;
          if (!apiKey) {
            _context.n = 2;
            break;
          }
          cov_1ao10e9hqs().b[0][0]++;
          cov_1ao10e9hqs().s[3]++;
          return _context.a(2, verifyApiKey(apiKey, requiredPermission));
        case 2:
          cov_1ao10e9hqs().b[0][1]++;
        case 3:
          // Check for Bearer token
          authHeader = (cov_1ao10e9hqs().s[4]++, request.headers.get("Authorization"));
          cov_1ao10e9hqs().s[5]++;
          if (!(
          /* istanbul ignore next */
          (cov_1ao10e9hqs().b[2][0]++, authHeader) &&
          /* istanbul ignore next */
          (cov_1ao10e9hqs().b[2][1]++, authHeader.startsWith("Bearer ")))) {
            _context.n = 4;
            break;
          }
          cov_1ao10e9hqs().b[1][0]++;
          token = (cov_1ao10e9hqs().s[6]++, authHeader.substring(7));
          cov_1ao10e9hqs().s[7]++;
          return _context.a(2, verifyBearerToken(token, requiredPermission));
        case 4:
          cov_1ao10e9hqs().b[1][1]++;
        case 5:
          // Check for session (for admin UI)
          sessionId = (cov_1ao10e9hqs().s[8]++, (_request$cookies$get = request.cookies.get("session")) === null || _request$cookies$get === void 0 ? void 0 :
          /* istanbul ignore next */
          _request$cookies$get.value);
          cov_1ao10e9hqs().s[9]++;
          if (!sessionId) {
            _context.n = 6;
            break;
          }
          cov_1ao10e9hqs().b[3][0]++;
          cov_1ao10e9hqs().s[10]++;
          return _context.a(2, verifySession(sessionId, requiredPermission));
        case 6:
          cov_1ao10e9hqs().b[3][1]++;
        case 7:
          cov_1ao10e9hqs().s[11]++;
          return _context.a(2, {
            authenticated: false,
            error: "No authentication credentials provided"
          });
        case 8:
          _context.p = 8;
          _t = _context.v;
          cov_1ao10e9hqs().s[12]++;
          console.error("API authentication error:",
          /* istanbul ignore next */
          _t);
          cov_1ao10e9hqs().s[13]++;
          return _context.a(2, {
            authenticated: false,
            error: "Authentication failed"
          });
      }
    }, _callee, null, [[1, 8]]);
  }));
  return _verifyApiAuth.apply(this, arguments);
}
/* istanbul ignore next */
function verifyApiKey(_x3, _x4) {
  return _verifyApiKey.apply(this, arguments);
}
/**
 * Verify Bearer token authentication
 */
/* istanbul ignore next */
function _verifyApiKey() {
  _verifyApiKey = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2(key, requiredPermission)
  /* istanbul ignore next */
  {
    var hashedKey, validKeys, apiKeyRecord, _t2;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_1ao10e9hqs().f[1]++;
          cov_1ao10e9hqs().s[14]++;
          _context2.p = 1;
          // Hash the key for comparison (keys are stored hashed)
          hashedKey = (cov_1ao10e9hqs().s[15]++, hashApiKey(key)); // TODO: Replace with database lookup
          // const apiKeyRecord = await prisma.apiKey.findUnique({
          //   where: { hashedKey },
          // });
          // Mock implementation for now
          validKeys = (cov_1ao10e9hqs().s[16]++, _defineProperty({},
          /* istanbul ignore next */
          (cov_1ao10e9hqs().b[4][0]++, process.env.BRIEFING_GENERATION_API_KEY) ||
          /* istanbul ignore next */
          (cov_1ao10e9hqs().b[4][1]++, "test-key"), {
            id: "key-1",
            key:
            /* istanbul ignore next */
            (cov_1ao10e9hqs().b[5][0]++, process.env.BRIEFING_GENERATION_API_KEY) ||
            /* istanbul ignore next */
            (cov_1ao10e9hqs().b[5][1]++, "test-key"),
            name: "Briefing Generation Key",
            permissions: ["briefing.generate", "briefing.read"],
            createdAt: new Date()
          }));
          apiKeyRecord = (cov_1ao10e9hqs().s[17]++, validKeys[key]);
          cov_1ao10e9hqs().s[18]++;
          if (apiKeyRecord) {
            _context2.n = 2;
            break;
          }
          cov_1ao10e9hqs().b[6][0]++;
          cov_1ao10e9hqs().s[19]++;
          return _context2.a(2, {
            authenticated: false,
            error: "Invalid API key"
          });
        case 2:
          cov_1ao10e9hqs().b[6][1]++;
        case 3:
          cov_1ao10e9hqs().s[20]++;
          if (!(
          /* istanbul ignore next */
          (cov_1ao10e9hqs().b[8][0]++, apiKeyRecord.expiresAt) &&
          /* istanbul ignore next */
          (cov_1ao10e9hqs().b[8][1]++, new Date() > apiKeyRecord.expiresAt))) {
            _context2.n = 4;
            break;
          }
          cov_1ao10e9hqs().b[7][0]++;
          cov_1ao10e9hqs().s[21]++;
          return _context2.a(2, {
            authenticated: false,
            error: "API key expired"
          });
        case 4:
          cov_1ao10e9hqs().b[7][1]++;
        case 5:
          cov_1ao10e9hqs().s[22]++;
          if (!(
          /* istanbul ignore next */
          (cov_1ao10e9hqs().b[10][0]++, requiredPermission) &&
          /* istanbul ignore next */
          (cov_1ao10e9hqs().b[10][1]++, !apiKeyRecord.permissions.includes(requiredPermission)))) {
            _context2.n = 6;
            break;
          }
          cov_1ao10e9hqs().b[9][0]++;
          cov_1ao10e9hqs().s[23]++;
          return _context2.a(2, {
            authenticated: false,
            error: "Insufficient permissions"
          });
        case 6:
          cov_1ao10e9hqs().b[9][1]++;
        case 7:
          cov_1ao10e9hqs().s[24]++;
          return _context2.a(2, {
            authenticated: true,
            userId:
            /* istanbul ignore next */
            "api-key-".concat(apiKeyRecord.id)
          });
        case 8:
          _context2.p = 8;
          _t2 = _context2.v;
          cov_1ao10e9hqs().s[25]++;
          console.error("API key verification error:",
          /* istanbul ignore next */
          _t2);
          cov_1ao10e9hqs().s[26]++;
          return _context2.a(2, {
            authenticated: false,
            error: "API key verification failed"
          });
      }
    }, _callee2, null, [[1, 8]]);
  }));
  return _verifyApiKey.apply(this, arguments);
}
/* istanbul ignore next */
function verifyBearerToken(_x5, _x6) {
  return _verifyBearerToken.apply(this, arguments);
}
/**
 * Verify session authentication (for admin UI)
 */
/* istanbul ignore next */
function _verifyBearerToken() {
  _verifyBearerToken = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee3(token, requiredPermission)
  /* istanbul ignore next */
  {
    var validToken, _t3;
    return _regenerator().w(function (_context3) {
      while (1) switch (_context3.n) {
        case 0:
          cov_1ao10e9hqs().f[2]++;
          cov_1ao10e9hqs().s[27]++;
          _context3.p = 1;
          // TODO: Implement JWT verification or external auth service
          // For now, check against environment variable
          validToken = (cov_1ao10e9hqs().s[28]++, process.env.BRIEFING_GENERATION_TOKEN);
          cov_1ao10e9hqs().s[29]++;
          if (!(
          /* istanbul ignore next */
          (cov_1ao10e9hqs().b[12][0]++, !validToken) ||
          /* istanbul ignore next */
          (cov_1ao10e9hqs().b[12][1]++, token !== validToken))) {
            _context3.n = 2;
            break;
          }
          cov_1ao10e9hqs().b[11][0]++;
          cov_1ao10e9hqs().s[30]++;
          return _context3.a(2, {
            authenticated: false,
            error: "Invalid bearer token"
          });
        case 2:
          cov_1ao10e9hqs().b[11][1]++;
        case 3:
          cov_1ao10e9hqs().s[31]++;
          return _context3.a(2, {
            authenticated: true,
            userId: "bearer-token-user"
          });
        case 4:
          _context3.p = 4;
          _t3 = _context3.v;
          cov_1ao10e9hqs().s[32]++;
          console.error("Bearer token verification error:",
          /* istanbul ignore next */
          _t3);
          cov_1ao10e9hqs().s[33]++;
          return _context3.a(2, {
            authenticated: false,
            error: "Bearer token verification failed"
          });
      }
    }, _callee3, null, [[1, 4]]);
  }));
  return _verifyBearerToken.apply(this, arguments);
}
/* istanbul ignore next */
function verifySession(_x7, _x8) {
  return _verifySession.apply(this, arguments);
}
/**
 * Hash API key for secure storage
 */
/* istanbul ignore next */
function _verifySession() {
  _verifySession = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee4(sessionId, requiredPermission)
  /* istanbul ignore next */
  {
    var _t4;
    return _regenerator().w(function (_context4) {
      while (1) switch (_context4.n) {
        case 0:
          cov_1ao10e9hqs().f[3]++;
          cov_1ao10e9hqs().s[34]++;
          _context4.p = 1;
          cov_1ao10e9hqs().s[35]++;
          return _context4.a(2, {
            authenticated: false,
            error: "Session authentication not implemented"
          });
        case 2:
          _context4.p = 2;
          _t4 = _context4.v;
          cov_1ao10e9hqs().s[36]++;
          console.error("Session verification error:",
          /* istanbul ignore next */
          _t4);
          cov_1ao10e9hqs().s[37]++;
          return _context4.a(2, {
            authenticated: false,
            error: "Session verification failed"
          });
      }
    }, _callee4, null, [[1, 2]]);
  }));
  return _verifySession.apply(this, arguments);
}
export function hashApiKey(key) {
  /* istanbul ignore next */
  cov_1ao10e9hqs().f[4]++;
  cov_1ao10e9hqs().s[38]++;
  return createHash("sha256").update(key).digest("hex");
}

/**
 * Generate a new API key
 */
export function generateApiKey() {
  /* istanbul ignore next */
  cov_1ao10e9hqs().f[5]++;
  var chars =
  /* istanbul ignore next */
  (cov_1ao10e9hqs().s[39]++, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789");
  var segments =
  /* istanbul ignore next */
  (cov_1ao10e9hqs().s[40]++, 4);
  var segmentLength =
  /* istanbul ignore next */
  (cov_1ao10e9hqs().s[41]++, 8);
  var segments_array =
  /* istanbul ignore next */
  (cov_1ao10e9hqs().s[42]++, []);
  /* istanbul ignore next */
  cov_1ao10e9hqs().s[43]++;
  for (var i =
  /* istanbul ignore next */
  (cov_1ao10e9hqs().s[44]++, 0); i < segments; i++) {
    var segment =
    /* istanbul ignore next */
    (cov_1ao10e9hqs().s[45]++, "");
    /* istanbul ignore next */
    cov_1ao10e9hqs().s[46]++;
    for (var j =
    /* istanbul ignore next */
    (cov_1ao10e9hqs().s[47]++, 0); j < segmentLength; j++) {
      /* istanbul ignore next */
      cov_1ao10e9hqs().s[48]++;
      segment += chars.charAt(Math.floor(Math.random() * chars.length));
    }
    /* istanbul ignore next */
    cov_1ao10e9hqs().s[49]++;
    segments_array.push(segment);
  }
  /* istanbul ignore next */
  cov_1ao10e9hqs().s[50]++;
  return segments_array.join("-");
}

/**
 * Rate limiting for API endpoints
 */
export
/* istanbul ignore next */
var ApiRateLimiter = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  ApiRateLimiter() {
    /* istanbul ignore next */
    var windowMs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_1ao10e9hqs().b[13][0]++, 60000);
    /* istanbul ignore next */
    var maxRequests = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_1ao10e9hqs().b[14][0]++, 60);
    /* istanbul ignore next */
    _classCallCheck(this, ApiRateLimiter);
    _defineProperty(this, "requests", (cov_1ao10e9hqs().s[51]++, new Map()));
    /* istanbul ignore next */
    cov_1ao10e9hqs().f[6]++;
    cov_1ao10e9hqs().s[52]++;
    this.windowMs = windowMs;
    /* istanbul ignore next */
    cov_1ao10e9hqs().s[53]++;
    this.maxRequests = maxRequests;
  }

  /**
   * Check if request should be rate limited
   */
  return _createClass(ApiRateLimiter, [{
    key: "isRateLimited",
    value: function isRateLimited(identifier) {
      /* istanbul ignore next */
      var _this = this;
      cov_1ao10e9hqs().f[7]++;
      var now =
      /* istanbul ignore next */
      (cov_1ao10e9hqs().s[54]++, Date.now());
      var requests =
      /* istanbul ignore next */
      (cov_1ao10e9hqs().s[55]++,
      /* istanbul ignore next */
      (cov_1ao10e9hqs().b[15][0]++, this.requests.get(identifier)) ||
      /* istanbul ignore next */
      (cov_1ao10e9hqs().b[15][1]++, []));

      // Remove expired timestamps
      var validRequests =
      /* istanbul ignore next */
      (cov_1ao10e9hqs().s[56]++, requests.filter(function (timestamp) {
        /* istanbul ignore next */
        cov_1ao10e9hqs().f[8]++;
        cov_1ao10e9hqs().s[57]++;
        return now - timestamp < _this.windowMs;
      }));
      /* istanbul ignore next */
      cov_1ao10e9hqs().s[58]++;
      if (validRequests.length >= this.maxRequests) {
        /* istanbul ignore next */
        cov_1ao10e9hqs().b[16][0]++;
        cov_1ao10e9hqs().s[59]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_1ao10e9hqs().b[16][1]++;
      }

      // Add current request
      cov_1ao10e9hqs().s[60]++;
      validRequests.push(now);
      /* istanbul ignore next */
      cov_1ao10e9hqs().s[61]++;
      this.requests.set(identifier, validRequests);
      /* istanbul ignore next */
      cov_1ao10e9hqs().s[62]++;
      return false;
    }

    /**
     * Get rate limit headers
     */
  }, {
    key: "getRateLimitHeaders",
    value: function getRateLimitHeaders(identifier) {
      /* istanbul ignore next */
      var _this2 = this;
      cov_1ao10e9hqs().f[9]++;
      var requests =
      /* istanbul ignore next */
      (cov_1ao10e9hqs().s[63]++,
      /* istanbul ignore next */
      (cov_1ao10e9hqs().b[17][0]++, this.requests.get(identifier)) ||
      /* istanbul ignore next */
      (cov_1ao10e9hqs().b[17][1]++, []));
      var now =
      /* istanbul ignore next */
      (cov_1ao10e9hqs().s[64]++, Date.now());
      var validRequests =
      /* istanbul ignore next */
      (cov_1ao10e9hqs().s[65]++, requests.filter(function (timestamp) {
        /* istanbul ignore next */
        cov_1ao10e9hqs().f[10]++;
        cov_1ao10e9hqs().s[66]++;
        return now - timestamp < _this2.windowMs;
      }));
      var remaining =
      /* istanbul ignore next */
      (cov_1ao10e9hqs().s[67]++, Math.max(0, this.maxRequests - validRequests.length));
      var resetTime =
      /* istanbul ignore next */
      (cov_1ao10e9hqs().s[68]++, validRequests.length > 0 ?
      /* istanbul ignore next */
      (cov_1ao10e9hqs().b[18][0]++, validRequests[0] + this.windowMs) :
      /* istanbul ignore next */
      (cov_1ao10e9hqs().b[18][1]++, now + this.windowMs));
      /* istanbul ignore next */
      cov_1ao10e9hqs().s[69]++;
      return {
        "X-RateLimit-Limit": this.maxRequests.toString(),
        "X-RateLimit-Remaining": remaining.toString(),
        "X-RateLimit-Reset": new Date(resetTime).toISOString()
      };
    }
  }]);
}();

// Export singleton rate limiter
export var apiRateLimiter =
/* istanbul ignore next */
(cov_1ao10e9hqs().s[70]++, new ApiRateLimiter(parseInt(
/* istanbul ignore next */
(cov_1ao10e9hqs().b[19][0]++, process.env.API_RATE_LIMIT_WINDOW) ||
/* istanbul ignore next */
(cov_1ao10e9hqs().b[19][1]++, "60000")), parseInt(
/* istanbul ignore next */
(cov_1ao10e9hqs().b[20][0]++, process.env.API_RATE_LIMIT_MAX) ||
/* istanbul ignore next */
(cov_1ao10e9hqs().b[20][1]++, "60"))));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,