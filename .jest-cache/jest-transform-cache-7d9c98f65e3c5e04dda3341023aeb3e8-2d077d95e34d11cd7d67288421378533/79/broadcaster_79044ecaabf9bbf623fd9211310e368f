a8d21e26aa066e4c59463c97359180d9
/* istanbul ignore next */
function cov_10nvt9mvwk() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/realtime/broadcaster.ts";
  var hash = "c3659cac7f237f3754afd9390a751188b7255fe0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/realtime/broadcaster.ts",
    statementMap: {
      "0": {
        start: {
          line: 27,
          column: 50
        },
        end: {
          line: 27,
          column: 59
        }
      },
      "1": {
        start: {
          line: 28,
          column: 47
        },
        end: {
          line: 28,
          column: 49
        }
      },
      "2": {
        start: {
          line: 29,
          column: 53
        },
        end: {
          line: 29,
          column: 57
        }
      },
      "3": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 26
        }
      },
      "4": {
        start: {
          line: 39,
          column: 36
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "5": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 39
        }
      },
      "6": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 88
        }
      },
      "7": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 37
        }
      },
      "8": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 36
        }
      },
      "9": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "10": {
        start: {
          line: 63,
          column: 6
        },
        end: {
          line: 68,
          column: 7
        }
      },
      "11": {
        start: {
          line: 64,
          column: 23
        },
        end: {
          line: 64,
          column: 50
        }
      },
      "12": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 34
        }
      },
      "13": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 65
        }
      },
      "14": {
        start: {
          line: 70,
          column: 6
        },
        end: {
          line: 70,
          column: 36
        }
      },
      "15": {
        start: {
          line: 71,
          column: 6
        },
        end: {
          line: 71,
          column: 93
        }
      },
      "16": {
        start: {
          line: 74,
          column: 6
        },
        end: {
          line: 74,
          column: 38
        }
      },
      "17": {
        start: {
          line: 82,
          column: 38
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "18": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 38
        }
      },
      "19": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "20": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 59
        }
      },
      "21": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 35
        }
      },
      "22": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 103,
          column: 61
        }
      },
      "23": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 42
        }
      },
      "24": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 111,
          column: 61
        }
      },
      "25": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 42
        }
      },
      "26": {
        start: {
          line: 119,
          column: 38
        },
        end: {
          line: 119,
          column: 40
        }
      },
      "27": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "28": {
        start: {
          line: 122,
          column: 6
        },
        end: {
          line: 134,
          column: 7
        }
      },
      "29": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "30": {
        start: {
          line: 125,
          column: 10
        },
        end: {
          line: 125,
          column: 19
        }
      },
      "31": {
        start: {
          line: 128,
          column: 33
        },
        end: {
          line: 128,
          column: 63
        }
      },
      "32": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 52
        }
      },
      "33": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 77
        }
      },
      "34": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 39
        }
      },
      "35": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 138,
          column: 69
        }
      },
      "36": {
        start: {
          line: 138,
          column: 40
        },
        end: {
          line: 138,
          column: 67
        }
      },
      "37": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "38": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 147,
          column: 18
        }
      },
      "39": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "40": {
        start: {
          line: 152,
          column: 6
        },
        end: {
          line: 152,
          column: 18
        }
      },
      "41": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 168,
          column: 5
        }
      },
      "42": {
        start: {
          line: 157,
          column: 25
        },
        end: {
          line: 157,
          column: 91
        }
      },
      "43": {
        start: {
          line: 157,
          column: 62
        },
        end: {
          line: 157,
          column: 84
        }
      },
      "44": {
        start: {
          line: 158,
          column: 25
        },
        end: {
          line: 158,
          column: 74
        }
      },
      "45": {
        start: {
          line: 158,
          column: 56
        },
        end: {
          line: 158,
          column: 73
        }
      },
      "46": {
        start: {
          line: 161,
          column: 29
        },
        end: {
          line: 163,
          column: 7
        }
      },
      "47": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 77
        }
      },
      "48": {
        start: {
          line: 162,
          column: 47
        },
        end: {
          line: 162,
          column: 76
        }
      },
      "49": {
        start: {
          line: 165,
          column: 6
        },
        end: {
          line: 167,
          column: 7
        }
      },
      "50": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 21
        }
      },
      "51": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "52": {
        start: {
          line: 172,
          column: 6
        },
        end: {
          line: 174,
          column: 7
        }
      },
      "53": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 21
        }
      },
      "54": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 177,
          column: 16
        }
      },
      "55": {
        start: {
          line: 184,
          column: 20
        },
        end: {
          line: 189,
          column: 5
        }
      },
      "56": {
        start: {
          line: 191,
          column: 29
        },
        end: {
          line: 197,
          column: 16
        }
      },
      "57": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 199,
          column: 54
        }
      },
      "58": {
        start: {
          line: 207,
          column: 27
        },
        end: {
          line: 207,
          column: 57
        }
      },
      "59": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "60": {
        start: {
          line: 210,
          column: 6
        },
        end: {
          line: 217,
          column: 7
        }
      },
      "61": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "62": {
        start: {
          line: 212,
          column: 35
        },
        end: {
          line: 212,
          column: 65
        }
      },
      "63": {
        start: {
          line: 213,
          column: 10
        },
        end: {
          line: 213,
          column: 54
        }
      },
      "64": {
        start: {
          line: 215,
          column: 10
        },
        end: {
          line: 215,
          column: 80
        }
      },
      "65": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 230,
          column: 14
        }
      },
      "66": {
        start: {
          line: 226,
          column: 6
        },
        end: {
          line: 229,
          column: 9
        }
      },
      "67": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 240,
          column: 5
        }
      },
      "68": {
        start: {
          line: 238,
          column: 6
        },
        end: {
          line: 238,
          column: 44
        }
      },
      "69": {
        start: {
          line: 239,
          column: 6
        },
        end: {
          line: 239,
          column: 36
        }
      },
      "70": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 250,
          column: 7
        }
      },
      "71": {
        start: {
          line: 266,
          column: 4
        },
        end: {
          line: 275,
          column: 6
        }
      },
      "72": {
        start: {
          line: 270,
          column: 70
        },
        end: {
          line: 274,
          column: 7
        }
      },
      "73": {
        start: {
          line: 282,
          column: 4
        },
        end: {
          line: 282,
          column: 49
        }
      },
      "74": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 291,
          column: 5
        }
      },
      "75": {
        start: {
          line: 286,
          column: 6
        },
        end: {
          line: 290,
          column: 7
        }
      },
      "76": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 287,
          column: 34
        }
      },
      "77": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 289,
          column: 80
        }
      },
      "78": {
        start: {
          line: 293,
          column: 4
        },
        end: {
          line: 293,
          column: 25
        }
      },
      "79": {
        start: {
          line: 294,
          column: 4
        },
        end: {
          line: 294,
          column: 25
        }
      },
      "80": {
        start: {
          line: 299,
          column: 20
        },
        end: {
          line: 299,
          column: 45
        }
      },
      "81": {
        start: {
          line: 303,
          column: 2
        },
        end: {
          line: 303,
          column: 65
        }
      },
      "82": {
        start: {
          line: 307,
          column: 2
        },
        end: {
          line: 307,
          column: 37
        }
      },
      "83": {
        start: {
          line: 311,
          column: 2
        },
        end: {
          line: 315,
          column: 3
        }
      },
      "84": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 312,
          column: 42
        }
      },
      "85": {
        start: {
          line: 313,
          column: 9
        },
        end: {
          line: 315,
          column: 3
        }
      },
      "86": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 314,
          column: 44
        }
      },
      "87": {
        start: {
          line: 319,
          column: 2
        },
        end: {
          line: 319,
          column: 32
        }
      },
      "88": {
        start: {
          line: 323,
          column: 2
        },
        end: {
          line: 323,
          column: 24
        }
      },
      "89": {
        start: {
          line: 327,
          column: 0
        },
        end: {
          line: 327,
          column: 41
        }
      },
      "90": {
        start: {
          line: 328,
          column: 0
        },
        end: {
          line: 328,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 31,
            column: 3
          }
        },
        loc: {
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 33,
            column: 3
          }
        },
        line: 31
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 38,
            column: 2
          },
          end: {
            line: 38,
            column: 3
          }
        },
        loc: {
          start: {
            line: 38,
            column: 116
          },
          end: {
            line: 56,
            column: 3
          }
        },
        line: 38
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 61,
            column: 2
          },
          end: {
            line: 61,
            column: 3
          }
        },
        loc: {
          start: {
            line: 61,
            column: 39
          },
          end: {
            line: 76,
            column: 3
          }
        },
        line: 61
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 81,
            column: 2
          },
          end: {
            line: 81,
            column: 3
          }
        },
        loc: {
          start: {
            line: 81,
            column: 61
          },
          end: {
            line: 97,
            column: 3
          }
        },
        line: 81
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 102,
            column: 2
          },
          end: {
            line: 102,
            column: 3
          }
        },
        loc: {
          start: {
            line: 102,
            column: 41
          },
          end: {
            line: 105,
            column: 3
          }
        },
        line: 102
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 110,
            column: 2
          },
          end: {
            line: 110,
            column: 3
          }
        },
        loc: {
          start: {
            line: 110,
            column: 41
          },
          end: {
            line: 113,
            column: 3
          }
        },
        line: 110
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 118,
            column: 2
          },
          end: {
            line: 118,
            column: 3
          }
        },
        loc: {
          start: {
            line: 118,
            column: 60
          },
          end: {
            line: 139,
            column: 3
          }
        },
        line: 118
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 138,
            column: 28
          },
          end: {
            line: 138,
            column: 29
          }
        },
        loc: {
          start: {
            line: 138,
            column: 40
          },
          end: {
            line: 138,
            column: 67
          }
        },
        line: 138
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 144,
            column: 2
          },
          end: {
            line: 144,
            column: 3
          }
        },
        loc: {
          start: {
            line: 144,
            column: 90
          },
          end: {
            line: 178,
            column: 3
          }
        },
        line: 144
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 157,
            column: 48
          },
          end: {
            line: 157,
            column: 49
          }
        },
        loc: {
          start: {
            line: 157,
            column: 62
          },
          end: {
            line: 157,
            column: 84
          }
        },
        line: 157
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 158,
            column: 49
          },
          end: {
            line: 158,
            column: 50
          }
        },
        loc: {
          start: {
            line: 158,
            column: 56
          },
          end: {
            line: 158,
            column: 73
          }
        },
        line: 158
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 161,
            column: 45
          },
          end: {
            line: 161,
            column: 46
          }
        },
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 162,
            column: 77
          }
        },
        line: 162
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 162,
            column: 24
          },
          end: {
            line: 162,
            column: 25
          }
        },
        loc: {
          start: {
            line: 162,
            column: 47
          },
          end: {
            line: 162,
            column: 76
          }
        },
        line: 162
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 183,
            column: 2
          },
          end: {
            line: 183,
            column: 3
          }
        },
        loc: {
          start: {
            line: 183,
            column: 66
          },
          end: {
            line: 200,
            column: 3
          }
        },
        line: 183
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 205,
            column: 2
          },
          end: {
            line: 205,
            column: 3
          }
        },
        loc: {
          start: {
            line: 205,
            column: 61
          },
          end: {
            line: 219,
            column: 3
          }
        },
        line: 205
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 224,
            column: 2
          },
          end: {
            line: 224,
            column: 3
          }
        },
        loc: {
          start: {
            line: 224,
            column: 33
          },
          end: {
            line: 231,
            column: 3
          }
        },
        line: 224
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 225,
            column: 41
          },
          end: {
            line: 225,
            column: 42
          }
        },
        loc: {
          start: {
            line: 225,
            column: 47
          },
          end: {
            line: 230,
            column: 5
          }
        },
        line: 225
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 236,
            column: 2
          },
          end: {
            line: 236,
            column: 3
          }
        },
        loc: {
          start: {
            line: 236,
            column: 32
          },
          end: {
            line: 241,
            column: 3
          }
        },
        line: 236
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 246,
            column: 2
          },
          end: {
            line: 246,
            column: 3
          }
        },
        loc: {
          start: {
            line: 246,
            column: 43
          },
          end: {
            line: 251,
            column: 3
          }
        },
        line: 246
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 256,
            column: 2
          },
          end: {
            line: 256,
            column: 3
          }
        },
        loc: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 276,
            column: 3
          }
        },
        line: 265
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 270,
            column: 59
          },
          end: {
            line: 270,
            column: 60
          }
        },
        loc: {
          start: {
            line: 270,
            column: 70
          },
          end: {
            line: 274,
            column: 7
          }
        },
        line: 270
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 281,
            column: 2
          },
          end: {
            line: 281,
            column: 3
          }
        },
        loc: {
          start: {
            line: 281,
            column: 18
          },
          end: {
            line: 295,
            column: 3
          }
        },
        line: 281
      },
      "22": {
        name: "addClient",
        decl: {
          start: {
            line: 302,
            column: 16
          },
          end: {
            line: 302,
            column: 25
          }
        },
        loc: {
          start: {
            line: 302,
            column: 130
          },
          end: {
            line: 304,
            column: 1
          }
        },
        line: 302
      },
      "23": {
        name: "removeClient",
        decl: {
          start: {
            line: 306,
            column: 16
          },
          end: {
            line: 306,
            column: 28
          }
        },
        loc: {
          start: {
            line: 306,
            column: 53
          },
          end: {
            line: 308,
            column: 1
          }
        },
        line: 306
      },
      "24": {
        name: "broadcastUpdate",
        decl: {
          start: {
            line: 310,
            column: 16
          },
          end: {
            line: 310,
            column: 31
          }
        },
        loc: {
          start: {
            line: 310,
            column: 88
          },
          end: {
            line: 316,
            column: 1
          }
        },
        line: 310
      },
      "25": {
        name: "getBroadcasterStats",
        decl: {
          start: {
            line: 318,
            column: 16
          },
          end: {
            line: 318,
            column: 35
          }
        },
        loc: {
          start: {
            line: 318,
            column: 38
          },
          end: {
            line: 320,
            column: 1
          }
        },
        line: 318
      },
      "26": {
        name: "cleanupBroadcaster",
        decl: {
          start: {
            line: 322,
            column: 16
          },
          end: {
            line: 322,
            column: 34
          }
        },
        loc: {
          start: {
            line: 322,
            column: 43
          },
          end: {
            line: 324,
            column: 1
          }
        },
        line: 322
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "1": {
        loc: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "2": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "3": {
        loc: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "4": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 146,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 146,
            column: 36
          }
        }, {
          start: {
            line: 146,
            column: 40
          },
          end: {
            line: 146,
            column: 75
          }
        }],
        line: 146
      },
      "5": {
        loc: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "6": {
        loc: {
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "7": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 156,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 156,
            column: 38
          }
        }, {
          start: {
            line: 156,
            column: 42
          },
          end: {
            line: 156,
            column: 62
          }
        }],
        line: 156
      },
      "8": {
        loc: {
          start: {
            line: 157,
            column: 25
          },
          end: {
            line: 157,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 25
          },
          end: {
            line: 157,
            column: 85
          }
        }, {
          start: {
            line: 157,
            column: 89
          },
          end: {
            line: 157,
            column: 91
          }
        }],
        line: 157
      },
      "9": {
        loc: {
          start: {
            line: 165,
            column: 6
          },
          end: {
            line: 167,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 6
          },
          end: {
            line: 167,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "10": {
        loc: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "11": {
        loc: {
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 171,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 171,
            column: 32
          }
        }, {
          start: {
            line: 171,
            column: 36
          },
          end: {
            line: 171,
            column: 57
          }
        }],
        line: 171
      },
      "12": {
        loc: {
          start: {
            line: 172,
            column: 6
          },
          end: {
            line: 174,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 6
          },
          end: {
            line: 174,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "13": {
        loc: {
          start: {
            line: 210,
            column: 6
          },
          end: {
            line: 217,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 6
          },
          end: {
            line: 217,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "14": {
        loc: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 240,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "15": {
        loc: {
          start: {
            line: 311,
            column: 2
          },
          end: {
            line: 315,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 2
          },
          end: {
            line: 315,
            column: 3
          }
        }, {
          start: {
            line: 313,
            column: 9
          },
          end: {
            line: 315,
            column: 3
          }
        }],
        line: 311
      },
      "16": {
        loc: {
          start: {
            line: 313,
            column: 9
          },
          end: {
            line: 315,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 9
          },
          end: {
            line: 315,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 313
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c3659cac7f237f3754afd9390a751188b7255fe0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10nvt9mvwk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10nvt9mvwk();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Real-time Broadcasting System
 * 
 * Handles live updates to connected clients via Server-Sent Events (SSE)
 * for the live transfer feed experience
 */
var RealTimeBroadcaster = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  RealTimeBroadcaster() {
    /* istanbul ignore next */
    _classCallCheck(this, RealTimeBroadcaster);
    _defineProperty(this, "clients", (cov_10nvt9mvwk().s[0]++, new Map()));
    /* istanbul ignore next */
    _defineProperty(this, "messageHistory", (cov_10nvt9mvwk().s[1]++, []));
    /* istanbul ignore next */
    _defineProperty(this, "heartbeatInterval", (cov_10nvt9mvwk().s[2]++, null));
    /* istanbul ignore next */
    cov_10nvt9mvwk().f[0]++;
    cov_10nvt9mvwk().s[3]++;
    this.startHeartbeat();
  }

  /**
   * Add a new client connection
   */
  return _createClass(RealTimeBroadcaster, [{
    key: "addClient",
    value: function addClient(clientId, response, controller, filters) {
      /* istanbul ignore next */
      cov_10nvt9mvwk().f[1]++;
      var client =
      /* istanbul ignore next */
      (cov_10nvt9mvwk().s[4]++, {
        id: clientId,
        response: response,
        controller: controller,
        filters: filters,
        connectedAt: new Date()
      });
      /* istanbul ignore next */
      cov_10nvt9mvwk().s[5]++;
      this.clients.set(clientId, client);
      /* istanbul ignore next */
      cov_10nvt9mvwk().s[6]++;
      console.log(
      /* istanbul ignore next */
      "\uD83D\uDCE1 Client ".concat(clientId, " connected. Total clients: ").concat(this.clients.size));

      // Send recent message history to new client
      /* istanbul ignore next */
      cov_10nvt9mvwk().s[7]++;
      this.sendHistoryToClient(client);

      // Broadcast updated connection count
      /* istanbul ignore next */
      cov_10nvt9mvwk().s[8]++;
      this.broadcastConnectionCount();
    }

    /**
     * Remove a client connection
     */
  }, {
    key: "removeClient",
    value: function removeClient(clientId) {
      /* istanbul ignore next */
      cov_10nvt9mvwk().f[2]++;
      cov_10nvt9mvwk().s[9]++;
      if (this.clients.has(clientId)) {
        /* istanbul ignore next */
        cov_10nvt9mvwk().b[0][0]++;
        cov_10nvt9mvwk().s[10]++;
        try {
          var client =
          /* istanbul ignore next */
          (cov_10nvt9mvwk().s[11]++, this.clients.get(clientId));
          /* istanbul ignore next */
          cov_10nvt9mvwk().s[12]++;
          client.controller.close();
        } catch (error) {
          /* istanbul ignore next */
          cov_10nvt9mvwk().s[13]++;
          console.warn(
          /* istanbul ignore next */
          "Error closing client ".concat(clientId, ":"), error);
        }
        /* istanbul ignore next */
        cov_10nvt9mvwk().s[14]++;
        this.clients[
        /* istanbul ignore next */
        "delete"](clientId);
        /* istanbul ignore next */
        cov_10nvt9mvwk().s[15]++;
        console.log(
        /* istanbul ignore next */
        "\uD83D\uDCE1 Client ".concat(clientId, " disconnected. Total clients: ").concat(this.clients.size));

        // Broadcast updated connection count
        /* istanbul ignore next */
        cov_10nvt9mvwk().s[16]++;
        this.broadcastConnectionCount();
      } else
      /* istanbul ignore next */
      {
        cov_10nvt9mvwk().b[0][1]++;
      }
    }

    /**
     * Broadcast a message to all connected clients
     */
  }, {
    key: "broadcast",
    value: function broadcast(type, data) {
      /* istanbul ignore next */
      cov_10nvt9mvwk().f[3]++;
      var message =
      /* istanbul ignore next */
      (cov_10nvt9mvwk().s[17]++, {
        type: type,
        data: data,
        timestamp: new Date(),
        id:
        /* istanbul ignore next */
        "msg_".concat(Date.now(), "_").concat(Math.random().toString(36).substr(2, 9))
      });

      // Add to history (keep last 50 messages)
      /* istanbul ignore next */
      cov_10nvt9mvwk().s[18]++;
      this.messageHistory.push(message);
      /* istanbul ignore next */
      cov_10nvt9mvwk().s[19]++;
      if (this.messageHistory.length > 50) {
        /* istanbul ignore next */
        cov_10nvt9mvwk().b[1][0]++;
        cov_10nvt9mvwk().s[20]++;
        this.messageHistory = this.messageHistory.slice(-50);
      } else
      /* istanbul ignore next */
      {
        cov_10nvt9mvwk().b[1][1]++;
      }

      // Send to all clients
      cov_10nvt9mvwk().s[21]++;
      this.sendToAllClients(message);
    }

    /**
     * Broadcast a feed update
     */
  }, {
    key: "broadcastFeedUpdate",
    value: function broadcastFeedUpdate(update) {
      /* istanbul ignore next */
      cov_10nvt9mvwk().f[4]++;
      cov_10nvt9mvwk().s[22]++;
      console.log(
      /* istanbul ignore next */
      "\uD83D\uDCE1 Broadcasting feed update: ".concat(update.id));
      /* istanbul ignore next */
      cov_10nvt9mvwk().s[23]++;
      this.broadcast('feed-update', update);
    }

    /**
     * Broadcast breaking news
     */
  }, {
    key: "broadcastBreakingNews",
    value: function broadcastBreakingNews(news) {
      /* istanbul ignore next */
      cov_10nvt9mvwk().f[5]++;
      cov_10nvt9mvwk().s[24]++;
      console.log(
      /* istanbul ignore next */
      "\uD83D\uDEA8 Broadcasting breaking news: ".concat(news.id));
      /* istanbul ignore next */
      cov_10nvt9mvwk().s[25]++;
      this.broadcast('breaking-news', news);
    }

    /**
     * Send message to all clients with optional filtering
     */
  }, {
    key: "sendToAllClients",
    value: function sendToAllClients(message) {
      /* istanbul ignore next */
      var _this = this;
      cov_10nvt9mvwk().f[6]++;
      var clientsToRemove =
      /* istanbul ignore next */
      (cov_10nvt9mvwk().s[26]++, []);
      /* istanbul ignore next */
      cov_10nvt9mvwk().s[27]++;
      var _iterator = _createForOfIteratorHelper(this.clients),
        _step;
      /* istanbul ignore next */
      try {
        for (
        /* istanbul ignore next */
        _iterator.s();
        /* istanbul ignore next */
        !(_step = _iterator.n()).done;) {
          /* istanbul ignore next */
          var _step$value = _slicedToArray(_step.value, 2),
            clientId = _step$value[0],
            client = _step$value[1];
          /* istanbul ignore next */
          cov_10nvt9mvwk().s[28]++;
          try {
            /* istanbul ignore next */
            cov_10nvt9mvwk().s[29]++;
            // Check if client should receive this message based on filters
            if (!this.shouldSendToClient(client, message)) {
              /* istanbul ignore next */
              cov_10nvt9mvwk().b[2][0]++;
              cov_10nvt9mvwk().s[30]++;
              continue;
            } else
            /* istanbul ignore next */
            {
              cov_10nvt9mvwk().b[2][1]++;
            }
            var formattedMessage =
            /* istanbul ignore next */
            (cov_10nvt9mvwk().s[31]++, this.formatSSEMessage(message));
            /* istanbul ignore next */
            cov_10nvt9mvwk().s[32]++;
            client.controller.enqueue(formattedMessage);
          } catch (error) {
            /* istanbul ignore next */
            cov_10nvt9mvwk().s[33]++;
            console.warn(
            /* istanbul ignore next */
            "Failed to send message to client ".concat(clientId, ":"), error);
            /* istanbul ignore next */
            cov_10nvt9mvwk().s[34]++;
            clientsToRemove.push(clientId);
          }
        }

        // Remove failed clients
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      /* istanbul ignore next */
      cov_10nvt9mvwk().s[35]++;
      clientsToRemove.forEach(function (clientId) {
        /* istanbul ignore next */
        cov_10nvt9mvwk().f[7]++;
        cov_10nvt9mvwk().s[36]++;
        return _this.removeClient(clientId);
      });
    }

    /**
     * Check if a message should be sent to a specific client based on filters
     */
  }, {
    key: "shouldSendToClient",
    value: function shouldSendToClient(client, message) {
      /* istanbul ignore next */
      var _client$filters, _client$filters2;
      cov_10nvt9mvwk().f[8]++;
      cov_10nvt9mvwk().s[37]++;
      // Always send heartbeat and connection count messages
      if (
      /* istanbul ignore next */
      (cov_10nvt9mvwk().b[4][0]++, message.type === 'heartbeat') ||
      /* istanbul ignore next */
      (cov_10nvt9mvwk().b[4][1]++, message.type === 'connection-count')) {
        /* istanbul ignore next */
        cov_10nvt9mvwk().b[3][0]++;
        cov_10nvt9mvwk().s[38]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_10nvt9mvwk().b[3][1]++;
      }

      // Always send breaking news
      cov_10nvt9mvwk().s[39]++;
      if (message.type === 'breaking-news') {
        /* istanbul ignore next */
        cov_10nvt9mvwk().b[5][0]++;
        cov_10nvt9mvwk().s[40]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_10nvt9mvwk().b[5][1]++;
      }

      // Check tag filters for feed updates
      cov_10nvt9mvwk().s[41]++;
      if (
      /* istanbul ignore next */
      (cov_10nvt9mvwk().b[7][0]++, message.type === 'feed-update') &&
      /* istanbul ignore next */
      (cov_10nvt9mvwk().b[7][1]++, (_client$filters = client.filters) !== null && _client$filters !== void 0 &&
      /* istanbul ignore next */
      _client$filters.tags)) {
        /* istanbul ignore next */
        var _message$data$tags;
        cov_10nvt9mvwk().b[6][0]++;
        var updateTags =
        /* istanbul ignore next */
        (cov_10nvt9mvwk().s[42]++,
        /* istanbul ignore next */
        (cov_10nvt9mvwk().b[8][0]++, (_message$data$tags = message.data.tags) === null || _message$data$tags === void 0 ? void 0 :
        /* istanbul ignore next */
        _message$data$tags.map(function (tag) {
          /* istanbul ignore next */
          cov_10nvt9mvwk().f[9]++;
          cov_10nvt9mvwk().s[43]++;
          return tag.name.toLowerCase();
        })) ||
        /* istanbul ignore next */
        (cov_10nvt9mvwk().b[8][1]++, []));
        var clientTags =
        /* istanbul ignore next */
        (cov_10nvt9mvwk().s[44]++, client.filters.tags.map(function (tag) {
          /* istanbul ignore next */
          cov_10nvt9mvwk().f[10]++;
          cov_10nvt9mvwk().s[45]++;
          return tag.toLowerCase();
        }));

        // Send if any tag matches
        var hasMatchingTag =
        /* istanbul ignore next */
        (cov_10nvt9mvwk().s[46]++, clientTags.some(function (clientTag) {
          /* istanbul ignore next */
          cov_10nvt9mvwk().f[11]++;
          cov_10nvt9mvwk().s[47]++;
          return updateTags.some(function (updateTag) {
            /* istanbul ignore next */
            cov_10nvt9mvwk().f[12]++;
            cov_10nvt9mvwk().s[48]++;
            return updateTag.includes(clientTag);
          });
        }));
        /* istanbul ignore next */
        cov_10nvt9mvwk().s[49]++;
        if (!hasMatchingTag) {
          /* istanbul ignore next */
          cov_10nvt9mvwk().b[9][0]++;
          cov_10nvt9mvwk().s[50]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_10nvt9mvwk().b[9][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_10nvt9mvwk().b[6][1]++;
      }

      // Check priority filters
      cov_10nvt9mvwk().s[51]++;
      if (
      /* istanbul ignore next */
      (cov_10nvt9mvwk().b[11][0]++, (_client$filters2 = client.filters) !== null && _client$filters2 !== void 0 &&
      /* istanbul ignore next */
      _client$filters2.priority) &&
      /* istanbul ignore next */
      (cov_10nvt9mvwk().b[11][1]++, message.data.priority)) {
        /* istanbul ignore next */
        cov_10nvt9mvwk().b[10][0]++;
        cov_10nvt9mvwk().s[52]++;
        if (!client.filters.priority.includes(message.data.priority.toLowerCase())) {
          /* istanbul ignore next */
          cov_10nvt9mvwk().b[12][0]++;
          cov_10nvt9mvwk().s[53]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_10nvt9mvwk().b[12][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_10nvt9mvwk().b[10][1]++;
      }
      cov_10nvt9mvwk().s[54]++;
      return true;
    }

    /**
     * Format message for Server-Sent Events
     */
  }, {
    key: "formatSSEMessage",
    value: function formatSSEMessage(message) {
      /* istanbul ignore next */
      cov_10nvt9mvwk().f[13]++;
      var sseData =
      /* istanbul ignore next */
      (cov_10nvt9mvwk().s[55]++, {
        id: message.id,
        type: message.type,
        data: message.data,
        timestamp: message.timestamp.toISOString()
      });
      var formattedMessage =
      /* istanbul ignore next */
      (cov_10nvt9mvwk().s[56]++, [
      /* istanbul ignore next */
      "id: ".concat(message.id),
      /* istanbul ignore next */
      "event: ".concat(message.type),
      /* istanbul ignore next */
      "data: ".concat(JSON.stringify(sseData)), '', ''].join('\n'));
      /* istanbul ignore next */
      cov_10nvt9mvwk().s[57]++;
      return new TextEncoder().encode(formattedMessage);
    }

    /**
     * Send recent message history to a new client
     */
  }, {
    key: "sendHistoryToClient",
    value: function sendHistoryToClient(client) {
      /* istanbul ignore next */
      cov_10nvt9mvwk().f[14]++;
      // Send last 10 messages to catch up new clients
      var recentMessages =
      /* istanbul ignore next */
      (cov_10nvt9mvwk().s[58]++, this.messageHistory.slice(-10));
      /* istanbul ignore next */
      cov_10nvt9mvwk().s[59]++;
      var _iterator2 = _createForOfIteratorHelper(recentMessages),
        _step2;
      /* istanbul ignore next */
      try {
        for (
        /* istanbul ignore next */
        _iterator2.s();
        /* istanbul ignore next */
        !(_step2 = _iterator2.n()).done;) {
          /* istanbul ignore next */
          var message = _step2.value;
          /* istanbul ignore next */
          cov_10nvt9mvwk().s[60]++;
          if (this.shouldSendToClient(client, message)) {
            /* istanbul ignore next */
            cov_10nvt9mvwk().b[13][0]++;
            cov_10nvt9mvwk().s[61]++;
            try {
              var formattedMessage =
              /* istanbul ignore next */
              (cov_10nvt9mvwk().s[62]++, this.formatSSEMessage(message));
              /* istanbul ignore next */
              cov_10nvt9mvwk().s[63]++;
              client.controller.enqueue(formattedMessage);
            } catch (error) {
              /* istanbul ignore next */
              cov_10nvt9mvwk().s[64]++;
              console.warn(
              /* istanbul ignore next */
              "Failed to send history to client ".concat(client.id, ":"), error);
            }
          } else
          /* istanbul ignore next */
          {
            cov_10nvt9mvwk().b[13][1]++;
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }

    /**
     * Start heartbeat to keep connections alive
     */
  }, {
    key: "startHeartbeat",
    value: function startHeartbeat() {
      /* istanbul ignore next */
      var _this2 = this;
      cov_10nvt9mvwk().f[15]++;
      cov_10nvt9mvwk().s[65]++;
      this.heartbeatInterval = setInterval(function () {
        /* istanbul ignore next */
        cov_10nvt9mvwk().f[16]++;
        cov_10nvt9mvwk().s[66]++;
        _this2.broadcast('heartbeat', {
          timestamp: new Date().toISOString(),
          clientCount: _this2.clients.size
        });
      }, 30000); // Every 30 seconds
    }

    /**
     * Stop heartbeat
     */
  }, {
    key: "stopHeartbeat",
    value: function stopHeartbeat() {
      /* istanbul ignore next */
      cov_10nvt9mvwk().f[17]++;
      cov_10nvt9mvwk().s[67]++;
      if (this.heartbeatInterval) {
        /* istanbul ignore next */
        cov_10nvt9mvwk().b[14][0]++;
        cov_10nvt9mvwk().s[68]++;
        clearInterval(this.heartbeatInterval);
        /* istanbul ignore next */
        cov_10nvt9mvwk().s[69]++;
        this.heartbeatInterval = null;
      } else
      /* istanbul ignore next */
      {
        cov_10nvt9mvwk().b[14][1]++;
      }
    }

    /**
     * Broadcast current connection count
     */
  }, {
    key: "broadcastConnectionCount",
    value: function broadcastConnectionCount() {
      /* istanbul ignore next */
      cov_10nvt9mvwk().f[18]++;
      cov_10nvt9mvwk().s[70]++;
      this.broadcast('connection-count', {
        count: this.clients.size,
        timestamp: new Date().toISOString()
      });
    }

    /**
     * Get connection statistics
     */
  }, {
    key: "getStats",
    value: function getStats() {
      /* istanbul ignore next */
      cov_10nvt9mvwk().f[19]++;
      cov_10nvt9mvwk().s[71]++;
      return {
        totalClients: this.clients.size,
        messagesSent: this.messageHistory.length,
        uptime: Date.now(),
        // This should track actual uptime
        clientDetails: Array.from(this.clients.values()).map(function (client) {
          /* istanbul ignore next */
          cov_10nvt9mvwk().f[20]++;
          cov_10nvt9mvwk().s[72]++;
          return {
            id: client.id,
            connectedAt: client.connectedAt,
            filters: client.filters
          };
        })
      };
    }

    /**
     * Cleanup all connections
     */
  }, {
    key: "cleanup",
    value: function cleanup() {
      /* istanbul ignore next */
      cov_10nvt9mvwk().f[21]++;
      cov_10nvt9mvwk().s[73]++;
      console.log('🧹 Cleaning up broadcaster...');

      // Close all client connections
      /* istanbul ignore next */
      cov_10nvt9mvwk().s[74]++;
      var _iterator3 = _createForOfIteratorHelper(this.clients),
        _step3;
      /* istanbul ignore next */
      try {
        for (
        /* istanbul ignore next */
        _iterator3.s();
        /* istanbul ignore next */
        !(_step3 = _iterator3.n()).done;) {
          /* istanbul ignore next */
          var _step3$value = _slicedToArray(_step3.value, 2),
            clientId = _step3$value[0],
            client = _step3$value[1];
          /* istanbul ignore next */
          cov_10nvt9mvwk().s[75]++;
          try {
            /* istanbul ignore next */
            cov_10nvt9mvwk().s[76]++;
            client.controller.close();
          } catch (error) {
            /* istanbul ignore next */
            cov_10nvt9mvwk().s[77]++;
            console.warn(
            /* istanbul ignore next */
            "Error closing client ".concat(clientId, " during cleanup:"), error);
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
      /* istanbul ignore next */
      cov_10nvt9mvwk().s[78]++;
      this.clients.clear();
      /* istanbul ignore next */
      cov_10nvt9mvwk().s[79]++;
      this.stopHeartbeat();
    }
  }]);
}(); // Global broadcaster instance
var broadcaster =
/* istanbul ignore next */
(cov_10nvt9mvwk().s[80]++, new RealTimeBroadcaster());

// Export functions for use in API routes
export function addClient(clientId, response, controller, filters) {
  /* istanbul ignore next */
  cov_10nvt9mvwk().f[22]++;
  cov_10nvt9mvwk().s[81]++;
  broadcaster.addClient(clientId, response, controller, filters);
}
export function removeClient(clientId) {
  /* istanbul ignore next */
  cov_10nvt9mvwk().f[23]++;
  cov_10nvt9mvwk().s[82]++;
  broadcaster.removeClient(clientId);
}
export function broadcastUpdate(type, data) {
  /* istanbul ignore next */
  cov_10nvt9mvwk().f[24]++;
  cov_10nvt9mvwk().s[83]++;
  if (type === 'feed-update') {
    /* istanbul ignore next */
    cov_10nvt9mvwk().b[15][0]++;
    cov_10nvt9mvwk().s[84]++;
    broadcaster.broadcastFeedUpdate(data);
  } else {
    /* istanbul ignore next */
    cov_10nvt9mvwk().b[15][1]++;
    cov_10nvt9mvwk().s[85]++;
    if (type === 'breaking-news') {
      /* istanbul ignore next */
      cov_10nvt9mvwk().b[16][0]++;
      cov_10nvt9mvwk().s[86]++;
      broadcaster.broadcastBreakingNews(data);
    } else
    /* istanbul ignore next */
    {
      cov_10nvt9mvwk().b[16][1]++;
    }
  }
}
export function getBroadcasterStats() {
  /* istanbul ignore next */
  cov_10nvt9mvwk().f[25]++;
  cov_10nvt9mvwk().s[87]++;
  return broadcaster.getStats();
}
export function cleanupBroadcaster() {
  /* istanbul ignore next */
  cov_10nvt9mvwk().f[26]++;
  cov_10nvt9mvwk().s[88]++;
  broadcaster.cleanup();
}

// Cleanup on process exit
/* istanbul ignore next */
cov_10nvt9mvwk().s[89]++;
process.on('SIGINT', cleanupBroadcaster);
/* istanbul ignore next */
cov_10nvt9mvwk().s[90]++;
process.on('SIGTERM', cleanupBroadcaster);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,