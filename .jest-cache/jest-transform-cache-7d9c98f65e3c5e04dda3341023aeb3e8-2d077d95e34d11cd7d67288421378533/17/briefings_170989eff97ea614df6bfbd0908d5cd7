0986cccfc79ca7fc7a003fccf2561875
/* istanbul ignore next */ function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function cov_b33tzcwt4() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/database/briefings.ts";
  var hash = "731ccb9425f325d217d6ec58a92028a48a7f21dc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/database/briefings.ts",
    statementMap: {
      "0": {
        start: {
          line: 31,
          column: 15
        },
        end: {
          line: 31,
          column: 60
        }
      },
      "1": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "2": {
        start: {
          line: 46,
          column: 61
        },
        end: {
          line: 50,
          column: 11
        }
      },
      "3": {
        start: {
          line: 55,
          column: 44
        },
        end: {
          line: 58,
          column: 11
        }
      },
      "4": {
        start: {
          line: 84,
          column: 2
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "5": {
        start: {
          line: 122,
          column: 2
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "6": {
        start: {
          line: 166,
          column: 43
        },
        end: {
          line: 215,
          column: 3
        }
      },
      "7": {
        start: {
          line: 217,
          column: 29
        },
        end: {
          line: 240,
          column: 4
        }
      },
      "8": {
        start: {
          line: 242,
          column: 2
        },
        end: {
          line: 250,
          column: 4
        }
      },
      "9": {
        start: {
          line: 261,
          column: 26
        },
        end: {
          line: 270,
          column: 4
        }
      },
      "10": {
        start: {
          line: 272,
          column: 2
        },
        end: {
          line: 274,
          column: 3
        }
      },
      "11": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 273,
          column: 14
        }
      },
      "12": {
        start: {
          line: 276,
          column: 17
        },
        end: {
          line: 276,
          column: 57
        }
      },
      "13": {
        start: {
          line: 276,
          column: 49
        },
        end: {
          line: 276,
          column: 56
        }
      },
      "14": {
        start: {
          line: 279,
          column: 2
        },
        end: {
          line: 293,
          column: 5
        }
      },
      "15": {
        start: {
          line: 313,
          column: 2
        },
        end: {
          line: 328,
          column: 5
        }
      },
      "16": {
        start: {
          line: 335,
          column: 2
        },
        end: {
          line: 338,
          column: 5
        }
      },
      "17": {
        start: {
          line: 345,
          column: 2
        },
        end: {
          line: 347,
          column: 5
        }
      },
      "18": {
        start: {
          line: 354,
          column: 19
        },
        end: {
          line: 373,
          column: 4
        }
      },
      "19": {
        start: {
          line: 375,
          column: 2
        },
        end: {
          line: 377,
          column: 3
        }
      },
      "20": {
        start: {
          line: 376,
          column: 4
        },
        end: {
          line: 376,
          column: 16
        }
      },
      "21": {
        start: {
          line: 379,
          column: 21
        },
        end: {
          line: 387,
          column: 3
        }
      },
      "22": {
        start: {
          line: 380,
          column: 21
        },
        end: {
          line: 385,
          column: 5
        }
      },
      "23": {
        start: {
          line: 389,
          column: 2
        },
        end: {
          line: 400,
          column: 4
        }
      },
      "24": {
        start: {
          line: 409,
          column: 19
        },
        end: {
          line: 412,
          column: 4
        }
      },
      "25": {
        start: {
          line: 414,
          column: 2
        },
        end: {
          line: 414,
          column: 20
        }
      },
      "26": {
        start: {
          line: 421,
          column: 2
        },
        end: {
          line: 426,
          column: 5
        }
      },
      "27": {
        start: {
          line: 433,
          column: 2
        },
        end: {
          line: 438,
          column: 5
        }
      },
      "28": {
        start: {
          line: 445,
          column: 19
        },
        end: {
          line: 448,
          column: 4
        }
      },
      "29": {
        start: {
          line: 450,
          column: 2
        },
        end: {
          line: 450,
          column: 24
        }
      },
      "30": {
        start: {
          line: 450,
          column: 17
        },
        end: {
          line: 450,
          column: 24
        }
      },
      "31": {
        start: {
          line: 454,
          column: 4
        },
        end: {
          line: 454,
          column: 63
        }
      },
      "32": {
        start: {
          line: 455,
          column: 22
        },
        end: {
          line: 455,
          column: 63
        }
      },
      "33": {
        start: {
          line: 457,
          column: 2
        },
        end: {
          line: 462,
          column: 5
        }
      }
    },
    fnMap: {
      "0": {
        name: "createBriefing",
        decl: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 36
          }
        },
        loc: {
          start: {
            line: 30,
            column: 3
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 30
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 46,
            column: 37
          },
          end: {
            line: 46,
            column: 38
          }
        },
        loc: {
          start: {
            line: 46,
            column: 61
          },
          end: {
            line: 50,
            column: 11
          }
        },
        line: 46
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 55,
            column: 32
          },
          end: {
            line: 55,
            column: 33
          }
        },
        loc: {
          start: {
            line: 55,
            column: 44
          },
          end: {
            line: 58,
            column: 11
          }
        },
        line: 55
      },
      "3": {
        name: "getBriefingByTimestamp",
        decl: {
          start: {
            line: 81,
            column: 22
          },
          end: {
            line: 81,
            column: 44
          }
        },
        loc: {
          start: {
            line: 83,
            column: 41
          },
          end: {
            line: 114,
            column: 1
          }
        },
        line: 83
      },
      "4": {
        name: "getBriefingBySlug",
        decl: {
          start: {
            line: 119,
            column: 22
          },
          end: {
            line: 119,
            column: 39
          }
        },
        loc: {
          start: {
            line: 121,
            column: 41
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 121
      },
      "5": {
        name: "listBriefings",
        decl: {
          start: {
            line: 157,
            column: 22
          },
          end: {
            line: 157,
            column: 35
          }
        },
        loc: {
          start: {
            line: 165,
            column: 19
          },
          end: {
            line: 251,
            column: 1
          }
        },
        line: 165
      },
      "6": {
        name: "getRelatedBriefings",
        decl: {
          start: {
            line: 256,
            column: 22
          },
          end: {
            line: 256,
            column: 41
          }
        },
        loc: {
          start: {
            line: 259,
            column: 23
          },
          end: {
            line: 294,
            column: 1
          }
        },
        line: 259
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 276,
            column: 42
          },
          end: {
            line: 276,
            column: 43
          }
        },
        loc: {
          start: {
            line: 276,
            column: 49
          },
          end: {
            line: 276,
            column: 56
          }
        },
        line: 276
      },
      "8": {
        name: "updateBriefing",
        decl: {
          start: {
            line: 299,
            column: 22
          },
          end: {
            line: 299,
            column: 36
          }
        },
        loc: {
          start: {
            line: 312,
            column: 2
          },
          end: {
            line: 329,
            column: 1
          }
        },
        line: 312
      },
      "9": {
        name: "publishBriefing",
        decl: {
          start: {
            line: 334,
            column: 22
          },
          end: {
            line: 334,
            column: 37
          }
        },
        loc: {
          start: {
            line: 334,
            column: 50
          },
          end: {
            line: 339,
            column: 1
          }
        },
        line: 334
      },
      "10": {
        name: "deleteBriefing",
        decl: {
          start: {
            line: 344,
            column: 22
          },
          end: {
            line: 344,
            column: 36
          }
        },
        loc: {
          start: {
            line: 344,
            column: 49
          },
          end: {
            line: 348,
            column: 1
          }
        },
        line: 344
      },
      "11": {
        name: "getBriefingStats",
        decl: {
          start: {
            line: 353,
            column: 22
          },
          end: {
            line: 353,
            column: 38
          }
        },
        loc: {
          start: {
            line: 353,
            column: 59
          },
          end: {
            line: 401,
            column: 1
          }
        },
        line: 353
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 380,
            column: 5
          }
        },
        loc: {
          start: {
            line: 380,
            column: 21
          },
          end: {
            line: 385,
            column: 5
          }
        },
        line: 380
      },
      "13": {
        name: "briefingExistsForTimestamp",
        decl: {
          start: {
            line: 406,
            column: 22
          },
          end: {
            line: 406,
            column: 48
          }
        },
        loc: {
          start: {
            line: 408,
            column: 20
          },
          end: {
            line: 415,
            column: 1
          }
        },
        line: 408
      },
      "14": {
        name: "incrementBriefingViews",
        decl: {
          start: {
            line: 420,
            column: 22
          },
          end: {
            line: 420,
            column: 44
          }
        },
        loc: {
          start: {
            line: 420,
            column: 57
          },
          end: {
            line: 427,
            column: 1
          }
        },
        line: 420
      },
      "15": {
        name: "incrementBriefingShares",
        decl: {
          start: {
            line: 432,
            column: 22
          },
          end: {
            line: 432,
            column: 45
          }
        },
        loc: {
          start: {
            line: 432,
            column: 58
          },
          end: {
            line: 439,
            column: 1
          }
        },
        line: 432
      },
      "16": {
        name: "updateBriefingReadDepth",
        decl: {
          start: {
            line: 444,
            column: 22
          },
          end: {
            line: 444,
            column: 45
          }
        },
        loc: {
          start: {
            line: 444,
            column: 73
          },
          end: {
            line: 463,
            column: 1
          }
        },
        line: 444
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 158,
            column: 2
          },
          end: {
            line: 158,
            column: 10
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 158,
            column: 9
          },
          end: {
            line: 158,
            column: 10
          }
        }],
        line: 158
      },
      "1": {
        loc: {
          start: {
            line: 159,
            column: 2
          },
          end: {
            line: 159,
            column: 12
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 159,
            column: 10
          },
          end: {
            line: 159,
            column: 12
          }
        }],
        line: 159
      },
      "2": {
        loc: {
          start: {
            line: 169,
            column: 6
          },
          end: {
            line: 173,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 10
          },
          end: {
            line: 170,
            column: 31
          }
        }, {
          start: {
            line: 171,
            column: 10
          },
          end: {
            line: 173,
            column: 14
          }
        }],
        line: 169
      },
      "3": {
        loc: {
          start: {
            line: 171,
            column: 10
          },
          end: {
            line: 173,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 172,
            column: 34
          }
        }, {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 173,
            column: 14
          }
        }],
        line: 171
      },
      "4": {
        loc: {
          start: {
            line: 176,
            column: 6
          },
          end: {
            line: 183,
            column: 12
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 177,
            column: 10
          },
          end: {
            line: 182,
            column: 11
          }
        }, {
          start: {
            line: 183,
            column: 10
          },
          end: {
            line: 183,
            column: 12
          }
        }],
        line: 176
      },
      "5": {
        loc: {
          start: {
            line: 176,
            column: 6
          },
          end: {
            line: 176,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 6
          },
          end: {
            line: 176,
            column: 15
          }
        }, {
          start: {
            line: 176,
            column: 19
          },
          end: {
            line: 176,
            column: 26
          }
        }],
        line: 176
      },
      "6": {
        loc: {
          start: {
            line: 179,
            column: 18
          },
          end: {
            line: 179,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 18
          },
          end: {
            line: 179,
            column: 27
          }
        }, {
          start: {
            line: 179,
            column: 31
          },
          end: {
            line: 179,
            column: 49
          }
        }],
        line: 179
      },
      "7": {
        loc: {
          start: {
            line: 180,
            column: 18
          },
          end: {
            line: 180,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 18
          },
          end: {
            line: 180,
            column: 25
          }
        }, {
          start: {
            line: 180,
            column: 29
          },
          end: {
            line: 180,
            column: 45
          }
        }],
        line: 180
      },
      "8": {
        loc: {
          start: {
            line: 186,
            column: 6
          },
          end: {
            line: 198,
            column: 12
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 187,
            column: 10
          },
          end: {
            line: 197,
            column: 11
          }
        }, {
          start: {
            line: 198,
            column: 10
          },
          end: {
            line: 198,
            column: 12
          }
        }],
        line: 186
      },
      "9": {
        loc: {
          start: {
            line: 186,
            column: 6
          },
          end: {
            line: 186,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 6
          },
          end: {
            line: 186,
            column: 10
          }
        }, {
          start: {
            line: 186,
            column: 14
          },
          end: {
            line: 186,
            column: 29
          }
        }],
        line: 186
      },
      "10": {
        loc: {
          start: {
            line: 201,
            column: 6
          },
          end: {
            line: 213,
            column: 12
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 10
          },
          end: {
            line: 212,
            column: 11
          }
        }, {
          start: {
            line: 213,
            column: 10
          },
          end: {
            line: 213,
            column: 12
          }
        }],
        line: 201
      },
      "11": {
        loc: {
          start: {
            line: 201,
            column: 6
          },
          end: {
            line: 201,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 6
          },
          end: {
            line: 201,
            column: 13
          }
        }, {
          start: {
            line: 201,
            column: 17
          },
          end: {
            line: 201,
            column: 35
          }
        }],
        line: 201
      },
      "12": {
        loc: {
          start: {
            line: 258,
            column: 2
          },
          end: {
            line: 258,
            column: 11
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 258,
            column: 10
          },
          end: {
            line: 258,
            column: 11
          }
        }],
        line: 258
      },
      "13": {
        loc: {
          start: {
            line: 272,
            column: 2
          },
          end: {
            line: 274,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 2
          },
          end: {
            line: 274,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "14": {
        loc: {
          start: {
            line: 316,
            column: 10
          },
          end: {
            line: 316,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 316,
            column: 10
          },
          end: {
            line: 316,
            column: 20
          }
        }, {
          start: {
            line: 316,
            column: 24
          },
          end: {
            line: 316,
            column: 45
          }
        }],
        line: 316
      },
      "15": {
        loc: {
          start: {
            line: 317,
            column: 10
          },
          end: {
            line: 317,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 317,
            column: 10
          },
          end: {
            line: 317,
            column: 22
          }
        }, {
          start: {
            line: 317,
            column: 26
          },
          end: {
            line: 317,
            column: 51
          }
        }],
        line: 317
      },
      "16": {
        loc: {
          start: {
            line: 318,
            column: 10
          },
          end: {
            line: 318,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 318,
            column: 10
          },
          end: {
            line: 318,
            column: 29
          }
        }, {
          start: {
            line: 318,
            column: 33
          },
          end: {
            line: 318,
            column: 72
          }
        }],
        line: 318
      },
      "17": {
        loc: {
          start: {
            line: 319,
            column: 10
          },
          end: {
            line: 319,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 319,
            column: 10
          },
          end: {
            line: 319,
            column: 30
          }
        }, {
          start: {
            line: 319,
            column: 34
          },
          end: {
            line: 319,
            column: 75
          }
        }],
        line: 319
      },
      "18": {
        loc: {
          start: {
            line: 320,
            column: 10
          },
          end: {
            line: 320,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 10
          },
          end: {
            line: 320,
            column: 37
          }
        }, {
          start: {
            line: 320,
            column: 41
          },
          end: {
            line: 320,
            column: 68
          }
        }],
        line: 320
      },
      "19": {
        loc: {
          start: {
            line: 321,
            column: 10
          },
          end: {
            line: 321,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 321,
            column: 10
          },
          end: {
            line: 321,
            column: 38
          }
        }, {
          start: {
            line: 321,
            column: 42
          },
          end: {
            line: 321,
            column: 71
          }
        }],
        line: 321
      },
      "20": {
        loc: {
          start: {
            line: 322,
            column: 10
          },
          end: {
            line: 322,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 322,
            column: 10
          },
          end: {
            line: 322,
            column: 39
          }
        }, {
          start: {
            line: 322,
            column: 43
          },
          end: {
            line: 322,
            column: 74
          }
        }],
        line: 322
      },
      "21": {
        loc: {
          start: {
            line: 323,
            column: 10
          },
          end: {
            line: 323,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 323,
            column: 10
          },
          end: {
            line: 323,
            column: 40
          }
        }, {
          start: {
            line: 323,
            column: 44
          },
          end: {
            line: 323,
            column: 77
          }
        }],
        line: 323
      },
      "22": {
        loc: {
          start: {
            line: 324,
            column: 10
          },
          end: {
            line: 324,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 324,
            column: 10
          },
          end: {
            line: 324,
            column: 26
          }
        }, {
          start: {
            line: 324,
            column: 30
          },
          end: {
            line: 324,
            column: 63
          }
        }],
        line: 324
      },
      "23": {
        loc: {
          start: {
            line: 325,
            column: 10
          },
          end: {
            line: 325,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 325,
            column: 10
          },
          end: {
            line: 325,
            column: 26
          }
        }, {
          start: {
            line: 325,
            column: 30
          },
          end: {
            line: 325,
            column: 47
          }
        }, {
          start: {
            line: 325,
            column: 51
          },
          end: {
            line: 325,
            column: 78
          }
        }],
        line: 325
      },
      "24": {
        loc: {
          start: {
            line: 375,
            column: 2
          },
          end: {
            line: 377,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 2
          },
          end: {
            line: 377,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 375
      },
      "25": {
        loc: {
          start: {
            line: 382,
            column: 28
          },
          end: {
            line: 382,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 382,
            column: 45
          },
          end: {
            line: 382,
            column: 46
          }
        }, {
          start: {
            line: 382,
            column: 49
          },
          end: {
            line: 382,
            column: 50
          }
        }],
        line: 382
      },
      "26": {
        loc: {
          start: {
            line: 383,
            column: 30
          },
          end: {
            line: 383,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 383,
            column: 48
          },
          end: {
            line: 383,
            column: 49
          }
        }, {
          start: {
            line: 383,
            column: 52
          },
          end: {
            line: 383,
            column: 53
          }
        }],
        line: 383
      },
      "27": {
        loc: {
          start: {
            line: 393,
            column: 16
          },
          end: {
            line: 393,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 393,
            column: 38
          },
          end: {
            line: 393,
            column: 73
          }
        }, {
          start: {
            line: 393,
            column: 76
          },
          end: {
            line: 393,
            column: 77
          }
        }],
        line: 393
      },
      "28": {
        loc: {
          start: {
            line: 394,
            column: 17
          },
          end: {
            line: 394,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 394,
            column: 39
          },
          end: {
            line: 394,
            column: 75
          }
        }, {
          start: {
            line: 394,
            column: 78
          },
          end: {
            line: 394,
            column: 79
          }
        }],
        line: 394
      },
      "29": {
        loc: {
          start: {
            line: 396,
            column: 8
          },
          end: {
            line: 398,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 397,
            column: 12
          },
          end: {
            line: 397,
            column: 55
          }
        }, {
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 398,
            column: 13
          }
        }],
        line: 396
      },
      "30": {
        loc: {
          start: {
            line: 450,
            column: 2
          },
          end: {
            line: 450,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 2
          },
          end: {
            line: 450,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "731ccb9425f325d217d6ec58a92028a48a7f21dc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_b33tzcwt4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_b33tzcwt4();
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Briefing Data Access Layer
 * Database operations for magazine-style briefings
 */

import { prisma } from "@/lib/prisma";
import { BriefingStatus } from "@/types/briefing";
import { generateSlug } from "@/lib/utils/slug";

/**
 * Create a new briefing
 */
export
/* istanbul ignore next */
function createBriefing(_x) {
  return _createBriefing.apply(this, arguments);
}

/**
 * Get briefing by timestamp
 */
/* istanbul ignore next */
function _createBriefing() {
  _createBriefing = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(data)
  /* istanbul ignore next */
  {
    var slug;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_b33tzcwt4().f[0]++;
          slug = (cov_b33tzcwt4().s[0]++, generateSlug(data.title.main, data.timestamp));
          cov_b33tzcwt4().s[1]++;
          _context.n = 1;
          return prisma.briefing.create({
            data: {
              slug: slug,
              timestamp: data.timestamp,
              title: data.title,
              content: data.content,
              visualTimeline: data.visualTimeline,
              sidebarSections: data.sidebarSections,
              readTime: data.readTime,
              wordCount: data.wordCount,
              terryScore: data.terryScore,
              feedItems: {
                createMany: {
                  data: data.feedItemIds.map(function (feedItemId, index) {
                    /* istanbul ignore next */
                    cov_b33tzcwt4().f[1]++;
                    cov_b33tzcwt4().s[2]++;
                    return {
                      feedItemId: feedItemId,
                      position: index,
                      section: "main" // TODO: Map to actual sections
                    };
                  })
                }
              },
              tags: {
                createMany: {
                  data: data.tagIds.map(function (tagId) {
                    /* istanbul ignore next */
                    cov_b33tzcwt4().f[2]++;
                    cov_b33tzcwt4().s[3]++;
                    return {
                      tagId: tagId,
                      relevance: 1.0 // TODO: Calculate relevance
                    };
                  })
                }
              }
            },
            include: {
              feedItems: {
                include: {
                  feedItem: true
                }
              },
              tags: {
                include: {
                  tag: true
                }
              },
              media: true
            }
          });
        case 1:
          return _context.a(2, _context.v);
      }
    }, _callee);
  }));
  return _createBriefing.apply(this, arguments);
}
export
/* istanbul ignore next */
function getBriefingByTimestamp(_x2) {
  return _getBriefingByTimestamp.apply(this, arguments);
}

/**
 * Get briefing by slug
 */
/* istanbul ignore next */
function _getBriefingByTimestamp() {
  _getBriefingByTimestamp = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2(timestamp)
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_b33tzcwt4().f[3]++;
          cov_b33tzcwt4().s[4]++;
          _context2.n = 1;
          return prisma.briefing.findUnique({
            where: {
              timestamp: timestamp
            },
            include: {
              feedItems: {
                include: {
                  feedItem: {
                    include: {
                      source: true,
                      tags: {
                        include: {
                          tag: true
                        }
                      },
                      media: true
                    }
                  }
                },
                orderBy: {
                  position: "asc"
                }
              },
              tags: {
                include: {
                  tag: true
                },
                orderBy: {
                  relevance: "desc"
                }
              },
              media: {
                orderBy: {
                  createdAt: "asc"
                }
              }
            }
          });
        case 1:
          return _context2.a(2, _context2.v);
      }
    }, _callee2);
  }));
  return _getBriefingByTimestamp.apply(this, arguments);
}
export
/* istanbul ignore next */
function getBriefingBySlug(_x3) {
  return _getBriefingBySlug.apply(this, arguments);
}

/**
 * List briefings with pagination and filtering
 */
/* istanbul ignore next */
function _getBriefingBySlug() {
  _getBriefingBySlug = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee3(slug)
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context3) {
      while (1) switch (_context3.n) {
        case 0:
          cov_b33tzcwt4().f[4]++;
          cov_b33tzcwt4().s[5]++;
          _context3.n = 1;
          return prisma.briefing.findUnique({
            where: {
              slug: slug
            },
            include: {
              feedItems: {
                include: {
                  feedItem: {
                    include: {
                      source: true,
                      tags: {
                        include: {
                          tag: true
                        }
                      },
                      media: true
                    }
                  }
                },
                orderBy: {
                  position: "asc"
                }
              },
              tags: {
                include: {
                  tag: true
                },
                orderBy: {
                  relevance: "desc"
                }
              },
              media: {
                orderBy: {
                  createdAt: "asc"
                }
              }
            }
          });
        case 1:
          return _context3.a(2, _context3.v);
      }
    }, _callee3);
  }));
  return _getBriefingBySlug.apply(this, arguments);
}
export
/* istanbul ignore next */
function listBriefings(_x4) {
  return _listBriefings.apply(this, arguments);
}

/**
 * Get related briefings
 */
/* istanbul ignore next */
function _listBriefings() {
  _listBriefings = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee4(
  /* istanbul ignore next */
  _ref)
  /* istanbul ignore next */
  {
    var _ref$page, page, _ref$limit, limit, status, tags, leagues, startDate, endDate, where, _ref2, _ref3, briefings, total;
    return _regenerator().w(function (_context4) {
      while (1) switch (_context4.n) {
        case 0:
          _ref$page = _ref.page, page = _ref$page === void 0 ? (cov_b33tzcwt4().b[0][0]++, 1) : _ref$page, _ref$limit = _ref.limit, limit = _ref$limit === void 0 ? (cov_b33tzcwt4().b[1][0]++, 24) : _ref$limit, status = _ref.status, tags = _ref.tags, leagues = _ref.leagues, startDate = _ref.startDate, endDate = _ref.endDate;
          cov_b33tzcwt4().f[5]++;
          where = (cov_b33tzcwt4().s[6]++, {
            AND: [
            // Status filter
            status === BriefingStatus.Published ?
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[2][0]++, {
              isPublished: true
            }) :
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[2][1]++, status === BriefingStatus.Draft ?
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[3][0]++, {
              isPublished: false
            }) :
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[3][1]++, {})),
            // Date range filter
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[5][0]++, startDate) ||
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[5][1]++, endDate) ?
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[4][0]++, {
              timestamp:
              /* istanbul ignore next */
              _objectSpread(_objectSpread({},
              /* istanbul ignore next */
              (cov_b33tzcwt4().b[6][0]++, startDate) &&
              /* istanbul ignore next */
              (cov_b33tzcwt4().b[6][1]++, {
                gte: startDate
              })),
              /* istanbul ignore next */
              (cov_b33tzcwt4().b[7][0]++, endDate) &&
              /* istanbul ignore next */
              (cov_b33tzcwt4().b[7][1]++, {
                lte: endDate
              }))
            }) :
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[4][1]++, {}),
            // Tag filter
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[9][0]++, tags) &&
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[9][1]++, tags.length > 0) ?
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[8][0]++, {
              tags: {
                some: {
                  tag: {
                    name: {
                      /* istanbul ignore next */
                      "in": tags
                    }
                  }
                }
              }
            }) :
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[8][1]++, {}),
            // League filter (through feed items)
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[11][0]++, leagues) &&
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[11][1]++, leagues.length > 0) ?
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[10][0]++, {
              feedItems: {
                some: {
                  feedItem: {
                    league: {
                      /* istanbul ignore next */
                      "in": leagues
                    }
                  }
                }
              }
            }) :
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[10][1]++, {})]
          });
          cov_b33tzcwt4().s[7]++;
          _context4.n = 1;
          return Promise.all([prisma.briefing.findMany({
            where: where,
            skip: (page - 1) * limit,
            take: limit,
            orderBy: {
              timestamp: "desc"
            },
            include: {
              tags: {
                include: {
                  tag: true
                },
                take: 5,
                orderBy: {
                  relevance: "desc"
                }
              },
              _count: {
                select: {
                  feedItems: true,
                  media: true
                }
              }
            }
          }), prisma.briefing.count({
            where: where
          })]);
        case 1:
          _ref2 = _context4.v;
          _ref3 = _slicedToArray(_ref2, 2);
          briefings = _ref3[0];
          total = _ref3[1];
          cov_b33tzcwt4().s[8]++;
          return _context4.a(2, {
            briefings: briefings,
            pagination: {
              page: page,
              limit: limit,
              total: total,
              pages: Math.ceil(total / limit)
            }
          });
      }
    }, _callee4);
  }));
  return _listBriefings.apply(this, arguments);
}
export
/* istanbul ignore next */
function getRelatedBriefings(_x5) {
  return _getRelatedBriefings.apply(this, arguments);
}

/**
 * Update briefing
 */
/* istanbul ignore next */
function _getRelatedBriefings() {
  _getRelatedBriefings = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee5(briefingId)
  /* istanbul ignore next */
  {
    var limit,
      currentBriefing,
      tagIds,
      _args5 = arguments;
    return _regenerator().w(function (_context5) {
      while (1) switch (_context5.n) {
        case 0:
          limit = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : (cov_b33tzcwt4().b[12][0]++, 4);
          cov_b33tzcwt4().f[6]++;
          cov_b33tzcwt4().s[9]++;
          _context5.n = 1;
          return prisma.briefing.findUnique({
            where: {
              id: briefingId
            },
            include: {
              tags: {
                select: {
                  tagId: true
                }
              }
            }
          });
        case 1:
          currentBriefing = _context5.v;
          cov_b33tzcwt4().s[10]++;
          if (currentBriefing) {
            _context5.n = 2;
            break;
          }
          cov_b33tzcwt4().b[13][0]++;
          cov_b33tzcwt4().s[11]++;
          return _context5.a(2, []);
        case 2:
          cov_b33tzcwt4().b[13][1]++;
        case 3:
          tagIds = (cov_b33tzcwt4().s[12]++, currentBriefing.tags.map(function (t) {
            /* istanbul ignore next */
            cov_b33tzcwt4().f[7]++;
            cov_b33tzcwt4().s[13]++;
            return t.tagId;
          })); // Find briefings with similar tags
          cov_b33tzcwt4().s[14]++;
          _context5.n = 4;
          return prisma.briefing.findMany({
            where: {
              id: {
                not: briefingId
              },
              isPublished: true,
              tags: {
                some: {
                  tagId: {
                    /* istanbul ignore next */
                    "in": tagIds
                  }
                }
              }
            },
            orderBy: [{
              timestamp: "desc"
            }],
            take: limit
          });
        case 4:
          return _context5.a(2, _context5.v);
      }
    }, _callee5);
  }));
  return _getRelatedBriefings.apply(this, arguments);
}
export
/* istanbul ignore next */
function updateBriefing(_x6, _x7) {
  return _updateBriefing.apply(this, arguments);
}

/**
 * Publish briefing
 */
/* istanbul ignore next */
function _updateBriefing() {
  _updateBriefing = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee6(id, data)
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context6) {
      while (1) switch (_context6.n) {
        case 0:
          cov_b33tzcwt4().f[8]++;
          cov_b33tzcwt4().s[15]++;
          _context6.n = 1;
          return prisma.briefing.update({
            where: {
              id: id
            },
            data:
            /* istanbul ignore next */
            _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[14][0]++, data.title) &&
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[14][1]++, {
              title: data.title
            })),
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[15][0]++, data.content) &&
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[15][1]++, {
              content: data.content
            })),
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[16][0]++, data.visualTimeline) &&
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[16][1]++, {
              visualTimeline: data.visualTimeline
            })),
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[17][0]++, data.sidebarSections) &&
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[17][1]++, {
              sidebarSections: data.sidebarSections
            })),
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[18][0]++, data.readTime !== undefined) &&
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[18][1]++, {
              readTime: data.readTime
            })),
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[19][0]++, data.wordCount !== undefined) &&
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[19][1]++, {
              wordCount: data.wordCount
            })),
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[20][0]++, data.terryScore !== undefined) &&
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[20][1]++, {
              terryScore: data.terryScore
            })),
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[21][0]++, data.isPublished !== undefined) &&
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[21][1]++, {
              isPublished: data.isPublished
            })),
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[22][0]++, data.publishedAt) &&
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[22][1]++, {
              publishedAt: data.publishedAt
            })),
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[23][0]++, data.isPublished) &&
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[23][1]++, !data.publishedAt) &&
            /* istanbul ignore next */
            (cov_b33tzcwt4().b[23][2]++, {
              publishedAt: new Date()
            })), {}, {
              version: {
                increment: 1
              }
            })
          });
        case 1:
          return _context6.a(2, _context6.v);
      }
    }, _callee6);
  }));
  return _updateBriefing.apply(this, arguments);
}
export
/* istanbul ignore next */
function publishBriefing(_x8) {
  return _publishBriefing.apply(this, arguments);
}

/**
 * Delete briefing
 */
/* istanbul ignore next */
function _publishBriefing() {
  _publishBriefing = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee7(id)
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context7) {
      while (1) switch (_context7.n) {
        case 0:
          cov_b33tzcwt4().f[9]++;
          cov_b33tzcwt4().s[16]++;
          _context7.n = 1;
          return updateBriefing(id, {
            isPublished: true,
            publishedAt: new Date()
          });
        case 1:
          return _context7.a(2, _context7.v);
      }
    }, _callee7);
  }));
  return _publishBriefing.apply(this, arguments);
}
export
/* istanbul ignore next */
function deleteBriefing(_x9) {
  return _deleteBriefing.apply(this, arguments);
}

/**
 * Get briefing statistics
 */
/* istanbul ignore next */
function _deleteBriefing() {
  _deleteBriefing = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee8(id)
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context8) {
      while (1) switch (_context8.n) {
        case 0:
          cov_b33tzcwt4().f[10]++;
          cov_b33tzcwt4().s[17]++;
          _context8.n = 1;
          return prisma.briefing[
          /* istanbul ignore next */
          "delete"]({
            where: {
              id: id
            }
          });
        case 1:
          return _context8.a(2, _context8.v);
      }
    }, _callee8);
  }));
  return _deleteBriefing.apply(this, arguments);
}
export
/* istanbul ignore next */
function getBriefingStats(_x0) {
  return _getBriefingStats.apply(this, arguments);
}

/**
 * Check if briefing exists for timestamp
 */
/* istanbul ignore next */
function _getBriefingStats() {
  _getBriefingStats = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee9(briefingId)
  /* istanbul ignore next */
  {
    var briefing, emailStats;
    return _regenerator().w(function (_context9) {
      while (1) switch (_context9.n) {
        case 0:
          cov_b33tzcwt4().f[11]++;
          cov_b33tzcwt4().s[18]++;
          _context9.n = 1;
          return prisma.briefing.findUnique({
            where: {
              id: briefingId
            },
            include: {
              _count: {
                select: {
                  feedItems: true,
                  tags: true,
                  media: true,
                  emails: true
                }
              },
              emails: {
                select: {
                  openedAt: true,
                  clickedAt: true,
                  clickCount: true
                }
              }
            }
          });
        case 1:
          briefing = _context9.v;
          cov_b33tzcwt4().s[19]++;
          if (briefing) {
            _context9.n = 2;
            break;
          }
          cov_b33tzcwt4().b[24][0]++;
          cov_b33tzcwt4().s[20]++;
          return _context9.a(2, null);
        case 2:
          cov_b33tzcwt4().b[24][1]++;
        case 3:
          emailStats = (cov_b33tzcwt4().s[21]++, briefing.emails.reduce(function (acc, email) {
            /* istanbul ignore next */
            cov_b33tzcwt4().f[12]++;
            cov_b33tzcwt4().s[22]++;
            return {
              sent: acc.sent + 1,
              opened: acc.opened + (email.openedAt ?
              /* istanbul ignore next */
              (cov_b33tzcwt4().b[25][0]++, 1) :
              /* istanbul ignore next */
              (cov_b33tzcwt4().b[25][1]++, 0)),
              clicked: acc.clicked + (email.clickedAt ?
              /* istanbul ignore next */
              (cov_b33tzcwt4().b[26][0]++, 1) :
              /* istanbul ignore next */
              (cov_b33tzcwt4().b[26][1]++, 0)),
              totalClicks: acc.totalClicks + email.clickCount
            };
          }, {
            sent: 0,
            opened: 0,
            clicked: 0,
            totalClicks: 0
          }));
          cov_b33tzcwt4().s[23]++;
          return _context9.a(2, _objectSpread(_objectSpread({}, briefing), {}, {
            emailStats:
            /* istanbul ignore next */
            _objectSpread(_objectSpread({}, emailStats), {}, {
              openRate: emailStats.sent > 0 ?
              /* istanbul ignore next */
              (cov_b33tzcwt4().b[27][0]++, emailStats.opened / emailStats.sent) :
              /* istanbul ignore next */
              (cov_b33tzcwt4().b[27][1]++, 0),
              clickRate: emailStats.sent > 0 ?
              /* istanbul ignore next */
              (cov_b33tzcwt4().b[28][0]++, emailStats.clicked / emailStats.sent) :
              /* istanbul ignore next */
              (cov_b33tzcwt4().b[28][1]++, 0),
              avgClicksPerEmail: emailStats.clicked > 0 ?
              /* istanbul ignore next */
              (cov_b33tzcwt4().b[29][0]++, emailStats.totalClicks / emailStats.clicked) :
              /* istanbul ignore next */
              (cov_b33tzcwt4().b[29][1]++, 0)
            })
          }));
      }
    }, _callee9);
  }));
  return _getBriefingStats.apply(this, arguments);
}
export
/* istanbul ignore next */
function briefingExistsForTimestamp(_x1) {
  return _briefingExistsForTimestamp.apply(this, arguments);
}

/**
 * Increment briefing view count
 */
/* istanbul ignore next */
function _briefingExistsForTimestamp() {
  _briefingExistsForTimestamp = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee0(timestamp)
  /* istanbul ignore next */
  {
    var briefing;
    return _regenerator().w(function (_context0) {
      while (1) switch (_context0.n) {
        case 0:
          cov_b33tzcwt4().f[13]++;
          cov_b33tzcwt4().s[24]++;
          _context0.n = 1;
          return prisma.briefing.findUnique({
            where: {
              timestamp: timestamp
            },
            select: {
              id: true
            }
          });
        case 1:
          briefing = _context0.v;
          cov_b33tzcwt4().s[25]++;
          return _context0.a(2, !!briefing);
      }
    }, _callee0);
  }));
  return _briefingExistsForTimestamp.apply(this, arguments);
}
export
/* istanbul ignore next */
function incrementBriefingViews(_x10) {
  return _incrementBriefingViews.apply(this, arguments);
}

/**
 * Increment briefing share count
 */
/* istanbul ignore next */
function _incrementBriefingViews() {
  _incrementBriefingViews = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee1(id)
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context1) {
      while (1) switch (_context1.n) {
        case 0:
          cov_b33tzcwt4().f[14]++;
          cov_b33tzcwt4().s[26]++;
          _context1.n = 1;
          return prisma.briefing.update({
            where: {
              id: id
            },
            data: {
              viewCount: {
                increment: 1
              }
            }
          });
        case 1:
          return _context1.a(2, _context1.v);
      }
    }, _callee1);
  }));
  return _incrementBriefingViews.apply(this, arguments);
}
export
/* istanbul ignore next */
function incrementBriefingShares(_x11) {
  return _incrementBriefingShares.apply(this, arguments);
}

/**
 * Update briefing read depth
 */
/* istanbul ignore next */
function _incrementBriefingShares() {
  _incrementBriefingShares = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee10(id)
  /* istanbul ignore next */
  {
    return _regenerator().w(function (_context10) {
      while (1) switch (_context10.n) {
        case 0:
          cov_b33tzcwt4().f[15]++;
          cov_b33tzcwt4().s[27]++;
          _context10.n = 1;
          return prisma.briefing.update({
            where: {
              id: id
            },
            data: {
              shareCount: {
                increment: 1
              }
            }
          });
        case 1:
          return _context10.a(2, _context10.v);
      }
    }, _callee10);
  }));
  return _incrementBriefingShares.apply(this, arguments);
}
export
/* istanbul ignore next */
function updateBriefingReadDepth(_x12, _x13) {
  return _updateBriefingReadDepth.apply(this, arguments);
}
/* istanbul ignore next */
function _updateBriefingReadDepth() {
  _updateBriefingReadDepth = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee11(id, depth)
  /* istanbul ignore next */
  {
    var briefing, totalDepth, newAvgDepth;
    return _regenerator().w(function (_context11) {
      while (1) switch (_context11.n) {
        case 0:
          cov_b33tzcwt4().f[16]++;
          cov_b33tzcwt4().s[28]++;
          _context11.n = 1;
          return prisma.briefing.findUnique({
            where: {
              id: id
            },
            select: {
              avgReadDepth: true,
              viewCount: true
            }
          });
        case 1:
          briefing = _context11.v;
          cov_b33tzcwt4().s[29]++;
          if (briefing) {
            _context11.n = 2;
            break;
          }
          cov_b33tzcwt4().b[30][0]++;
          cov_b33tzcwt4().s[30]++;
          return _context11.a(2);
        case 2:
          cov_b33tzcwt4().b[30][1]++;
        case 3:
          // Calculate new average read depth
          totalDepth = (cov_b33tzcwt4().s[31]++, briefing.avgReadDepth * Math.max(briefing.viewCount - 1, 1));
          newAvgDepth = (cov_b33tzcwt4().s[32]++, (totalDepth + depth) / briefing.viewCount);
          cov_b33tzcwt4().s[33]++;
          _context11.n = 4;
          return prisma.briefing.update({
            where: {
              id: id
            },
            data: {
              avgReadDepth: Math.min(newAvgDepth, 1.0) // Cap at 100%
            }
          });
        case 4:
          return _context11.a(2, _context11.v);
      }
    }, _callee11);
  }));
  return _updateBriefingReadDepth.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,