dc388a21cc893f9b5a7055294d82a0a1
/* istanbul ignore next */
function cov_2p073au1g1() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/validations/subscriber.ts";
  var hash = "fddf909eb876747e499d96b78b7be8debab97949";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/validations/subscriber.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 40
        },
        end: {
          line: 16,
          column: 2
        }
      },
      "1": {
        start: {
          line: 19,
          column: 36
        },
        end: {
          line: 24,
          column: 2
        }
      },
      "2": {
        start: {
          line: 27,
          column: 35
        },
        end: {
          line: 48,
          column: 2
        }
      },
      "3": {
        start: {
          line: 51,
          column: 43
        },
        end: {
          line: 69,
          column: 2
        }
      },
      "4": {
        start: {
          line: 72,
          column: 27
        },
        end: {
          line: 103,
          column: 3
        }
      },
      "5": {
        start: {
          line: 80,
          column: 30
        },
        end: {
          line: 86,
          column: 7
        }
      },
      "6": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 87,
          column: 69
        }
      },
      "7": {
        start: {
          line: 87,
          column: 48
        },
        end: {
          line: 87,
          column: 67
        }
      },
      "8": {
        start: {
          line: 94,
          column: 25
        },
        end: {
          line: 94,
          column: 44
        }
      },
      "9": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 100,
          column: 8
        }
      },
      "10": {
        start: {
          line: 106,
          column: 32
        },
        end: {
          line: 186,
          column: 2
        }
      },
      "11": {
        start: {
          line: 189,
          column: 35
        },
        end: {
          line: 261,
          column: 2
        }
      },
      "12": {
        start: {
          line: 264,
          column: 38
        },
        end: {
          line: 290,
          column: 2
        }
      },
      "13": {
        start: {
          line: 267,
          column: 43
        },
        end: {
          line: 267,
          column: 55
        }
      },
      "14": {
        start: {
          line: 292,
          column: 39
        },
        end: {
          line: 292,
          column: 76
        }
      },
      "15": {
        start: {
          line: 294,
          column: 40
        },
        end: {
          line: 307,
          column: 2
        }
      },
      "16": {
        start: {
          line: 310,
          column: 36
        },
        end: {
          line: 323,
          column: 2
        }
      },
      "17": {
        start: {
          line: 325,
          column: 37
        },
        end: {
          line: 333,
          column: 2
        }
      },
      "18": {
        start: {
          line: 336,
          column: 46
        },
        end: {
          line: 343,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        loc: {
          start: {
            line: 78,
            column: 15
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 78
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 87,
            column: 35
          },
          end: {
            line: 87,
            column: 36
          }
        },
        loc: {
          start: {
            line: 87,
            column: 48
          },
          end: {
            line: 87,
            column: 67
          }
        },
        line: 87
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        loc: {
          start: {
            line: 92,
            column: 15
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 92
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 267,
            column: 34
          },
          end: {
            line: 267,
            column: 35
          }
        },
        loc: {
          start: {
            line: 267,
            column: 43
          },
          end: {
            line: 267,
            column: 55
          }
        },
        line: 267
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 99,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 96,
            column: 18
          }
        }, {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 97,
            column: 32
          }
        }, {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 98,
            column: 35
          }
        }, {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 99,
            column: 33
          }
        }],
        line: 96
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fddf909eb876747e499d96b78b7be8debab97949"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2p073au1g1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2p073au1g1();
import { z } from "zod";

/**
 * Subscriber and Email Management Schemas
 * Validates subscriber data and email campaign structures
 */

// Subscription status
export var SubscriptionStatusSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[0]++, z[
/* istanbul ignore next */
"enum"](["pending",
// Waiting for email confirmation
"active",
// Confirmed and receiving emails
"paused",
// Temporarily paused by user
"unsubscribed",
// Permanently unsubscribed
"bounced",
// Email bounced
"complained" // Marked as spam
]));

// Email frequency preferences
export var EmailFrequencySchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[1]++, z[
/* istanbul ignore next */
"enum"](["all",
// All briefings (3x daily)
"daily",
// Once daily (evening summary)
"weekly",
// Weekly digest
"major_only" // Only major transfer news
]));

// Preferred teams (for personalization)
export var PreferredTeamSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[2]++, z[
/* istanbul ignore next */
"enum"](["arsenal", "aston_villa", "bournemouth", "brentford", "brighton", "burnley", "chelsea", "crystal_palace", "everton", "fulham", "liverpool", "luton", "manchester_city", "manchester_united", "newcastle", "nottingham_forest", "sheffield_united", "tottenham", "west_ham", "wolves"]));

// Subscriber preferences
export var SubscriberPreferencesSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[3]++, z.object({
  emailFrequency: EmailFrequencySchema[
  /* istanbul ignore next */
  "default"]("all"),
  preferredTeams: z.array(PreferredTeamSchema).max(5)[
  /* istanbul ignore next */
  "default"]([]),
  receiveBreakingNews: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](true),
  emailFormat: z[
  /* istanbul ignore next */
  "enum"](["html", "text"])[
  /* istanbul ignore next */
  "default"]("html"),
  timezone: z.string()[
  /* istanbul ignore next */
  "default"]("Europe/London"),
  language: z[
  /* istanbul ignore next */
  "enum"](["en"])[
  /* istanbul ignore next */
  "default"]("en"),
  // Future expansion

  // Content preferences
  includeRumours: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](true),
  includeConfirmed: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](true),
  includeLoanDeals: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](true),
  includeYouthPlayers: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](false),
  // Communication preferences
  marketingEmails: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](false),
  surveyParticipation: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](false),
  feedbackRequests: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](true)
}));

// Email validation with comprehensive checks
export var EmailSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[4]++, z.string().email({
  message: "Please enter a valid email address"
}).min(5, {
  message: "Email must be at least 5 characters long"
}).max(254, {
  message: "Email must be no more than 254 characters long"
}).refine(function (email) {
  /* istanbul ignore next */
  cov_2p073au1g1().f[0]++;
  // Check for common invalid patterns
  var invalidPatterns =
  /* istanbul ignore next */
  (cov_2p073au1g1().s[5]++, [/\.\./,
  // Double dots
  /^\./,
  // Starting with dot
  /\.$/,
  // Ending with dot
  /@.*@/,
  // Multiple @ symbols
  /\s/ // Whitespace
  ]);
  /* istanbul ignore next */
  cov_2p073au1g1().s[6]++;
  return !invalidPatterns.some(function (pattern) {
    /* istanbul ignore next */
    cov_2p073au1g1().f[1]++;
    cov_2p073au1g1().s[7]++;
    return pattern.test(email);
  });
}, {
  message: "Email format is invalid"
}).refine(function (email) {
  /* istanbul ignore next */
  cov_2p073au1g1().f[2]++;
  // Check for valid domain structure
  var domainPart =
  /* istanbul ignore next */
  (cov_2p073au1g1().s[8]++, email.split("@")[1]);
  /* istanbul ignore next */
  cov_2p073au1g1().s[9]++;
  return /* istanbul ignore next */(cov_2p073au1g1().b[0][0]++, domainPart) &&
  /* istanbul ignore next */
  (cov_2p073au1g1().b[0][1]++, domainPart.includes(".")) &&
  /* istanbul ignore next */
  (cov_2p073au1g1().b[0][2]++, !domainPart.startsWith(".")) &&
  /* istanbul ignore next */
  (cov_2p073au1g1().b[0][3]++, !domainPart.endsWith("."));
}, {
  message: "Email domain is invalid"
}));

// Main subscriber schema
export var SubscriberSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[10]++, z.object({
  id: z.string(),
  email: EmailSchema,
  status: SubscriptionStatusSchema,
  preferences: SubscriberPreferencesSchema,
  // Subscription tracking
  subscribedAt: z.date(),
  confirmedAt: z.date().optional(),
  lastEmailSent: z.date().optional(),
  lastEngagement: z.date().optional(),
  // Source tracking
  subscriptionSource: z[
  /* istanbul ignore next */
  "enum"](["website", "social_media", "referral", "organic", "paid_ad", "other"])[
  /* istanbul ignore next */
  "default"]("website"),
  referrerUrl: z.string().url().optional(),
  utmParameters: z.object({
    source: z.string().optional(),
    medium: z.string().optional(),
    campaign: z.string().optional(),
    term: z.string().optional(),
    content: z.string().optional()
  }).optional(),
  // Engagement metrics
  emailsReceived: z.number().min(0)[
  /* istanbul ignore next */
  "default"](0),
  emailsOpened: z.number().min(0)[
  /* istanbul ignore next */
  "default"](0),
  linksClicked: z.number().min(0)[
  /* istanbul ignore next */
  "default"](0),
  lastOpenedAt: z.date().optional(),
  lastClickedAt: z.date().optional(),
  // Device and location info (anonymized)
  lastKnownLocation: z.object({
    country: z.string().length(2).optional(),
    // ISO country code
    region: z.string().optional(),
    city: z.string().optional()
  }).optional(),
  deviceInfo: z.object({
    platform: z[
    /* istanbul ignore next */
    "enum"](["mobile", "tablet", "desktop", "unknown"]).optional(),
    emailClient: z.string().optional()
  }).optional(),
  // Unsubscribe tracking
  unsubscribedAt: z.date().optional(),
  unsubscribeReason: z[
  /* istanbul ignore next */
  "enum"](["too_frequent", "not_relevant", "poor_quality", "changed_email", "privacy_concerns", "other"]).optional(),
  unsubscribeFeedback: z.string().max(500).optional(),
  // Data compliance
  gdprConsent: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](false),
  consentDate: z.date().optional(),
  dataProcessingConsent: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](false),
  ipAddress: z.string().ip().optional(),
  // For audit trail

  // System fields
  createdAt: z.date(),
  updatedAt: z.date(),
  isTestAccount: z[
  /* istanbul ignore next */
  "boolean"]()[
  /* istanbul ignore next */
  "default"](false)
}));

// Email campaign schemas
export var EmailCampaignSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[11]++, z.object({
  id: z.string(),
  name: z.string().min(1).max(255),
  type: z[
  /* istanbul ignore next */
  "enum"](["briefing", "breaking_news", "weekly_digest", "welcome", "reengagement"]),
  // Content
  subject: z.string().min(5).max(100),
  preheader: z.string().min(10).max(200).optional(),
  htmlContent: z.string().min(100),
  textContent: z.string().min(100),
  // Targeting
  targetAudience: z.object({
    includeStatuses: z.array(SubscriptionStatusSchema)[
    /* istanbul ignore next */
    "default"](["active"]),
    excludeStatuses: z.array(SubscriptionStatusSchema)[
    /* istanbul ignore next */
    "default"](["unsubscribed", "bounced", "complained"]),
    preferredTeams: z.array(PreferredTeamSchema).optional(),
    emailFrequency: z.array(EmailFrequencySchema).optional(),
    lastEngagementBefore: z.date().optional(),
    lastEngagementAfter: z.date().optional()
  }),
  // Scheduling
  scheduledAt: z.date().optional(),
  sentAt: z.date().optional(),
  status: z[
  /* istanbul ignore next */
  "enum"](["draft", "scheduled", "sending", "sent", "cancelled"]),
  // Performance metrics
  metrics: z.object({
    recipientCount: z.number().min(0)[
    /* istanbul ignore next */
    "default"](0),
    deliveredCount: z.number().min(0)[
    /* istanbul ignore next */
    "default"](0),
    bouncedCount: z.number().min(0)[
    /* istanbul ignore next */
    "default"](0),
    openedCount: z.number().min(0)[
    /* istanbul ignore next */
    "default"](0),
    clickedCount: z.number().min(0)[
    /* istanbul ignore next */
    "default"](0),
    unsubscribedCount: z.number().min(0)[
    /* istanbul ignore next */
    "default"](0),
    complainedCount: z.number().min(0)[
    /* istanbul ignore next */
    "default"](0),
    // Calculated rates
    deliveryRate: z.number().min(0).max(1)[
    /* istanbul ignore next */
    "default"](0),
    openRate: z.number().min(0).max(1)[
    /* istanbul ignore next */
    "default"](0),
    clickRate: z.number().min(0).max(1)[
    /* istanbul ignore next */
    "default"](0),
    unsubscribeRate: z.number().min(0).max(1)[
    /* istanbul ignore next */
    "default"](0),
    complaintRate: z.number().min(0).max(1)[
    /* istanbul ignore next */
    "default"](0)
  })[
  /* istanbul ignore next */
  "default"]({
    recipientCount: 0,
    deliveredCount: 0,
    bouncedCount: 0,
    openedCount: 0,
    clickedCount: 0,
    unsubscribedCount: 0,
    complainedCount: 0,
    deliveryRate: 0,
    openRate: 0,
    clickRate: 0,
    unsubscribeRate: 0,
    complaintRate: 0
  }).optional(),
  // System fields
  createdAt: z.date(),
  updatedAt: z.date(),
  createdBy: z.string()
}));

// Subscriber action schemas
export var SubscribeRequestSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[12]++, z.object({
  email: EmailSchema,
  preferences: SubscriberPreferencesSchema.partial().optional(),
  gdprConsent: z[
  /* istanbul ignore next */
  "boolean"]().refine(function (val) {
    /* istanbul ignore next */
    cov_2p073au1g1().f[3]++;
    cov_2p073au1g1().s[13]++;
    return val === true;
  }, {
    message: "GDPR consent is required"
  }),
  subscriptionSource: z[
  /* istanbul ignore next */
  "enum"](["website", "social_media", "referral", "organic", "paid_ad", "other"])[
  /* istanbul ignore next */
  "default"]("website"),
  referrerUrl: z.string().url().optional(),
  utmParameters: z.object({
    source: z.string().optional(),
    medium: z.string().optional(),
    campaign: z.string().optional(),
    term: z.string().optional(),
    content: z.string().optional()
  }).optional()
}));
export var UpdatePreferencesSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[14]++, SubscriberPreferencesSchema.partial());
export var UnsubscribeRequestSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[15]++, z.object({
  email: EmailSchema,
  reason: z[
  /* istanbul ignore next */
  "enum"](["too_frequent", "not_relevant", "poor_quality", "changed_email", "privacy_concerns", "other"]).optional(),
  feedback: z.string().max(500).optional()
}));

// Email tracking schemas
export var EmailOpenEventSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[16]++, z.object({
  subscriberId: z.string(),
  campaignId: z.string(),
  openedAt: z.date(),
  ipAddress: z.string().ip().optional(),
  userAgent: z.string().optional(),
  location: z.object({
    country: z.string().length(2).optional(),
    region: z.string().optional(),
    city: z.string().optional()
  }).optional()
}));
export var EmailClickEventSchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[17]++, z.object({
  subscriberId: z.string(),
  campaignId: z.string(),
  clickedAt: z.date(),
  url: z.string().url(),
  linkText: z.string().optional(),
  ipAddress: z.string().ip().optional(),
  userAgent: z.string().optional()
}));

// Subscriber analytics query schema
export var SubscriberAnalyticsQuerySchema =
/* istanbul ignore next */
(cov_2p073au1g1().s[18]++, z.object({
  dateFrom: z.date().optional(),
  dateTo: z.date().optional(),
  segmentBy: z[
  /* istanbul ignore next */
  "enum"](["status", "source", "team", "frequency"]).optional(),
  metrics: z.array(z[
  /* istanbul ignore next */
  "enum"](["growth", "engagement", "churn", "ltv"]))[
  /* istanbul ignore next */
  "default"](["growth"])
}));

// Export types
//# sourceMappingURL=data:application/json;charset=utf-8;base64,