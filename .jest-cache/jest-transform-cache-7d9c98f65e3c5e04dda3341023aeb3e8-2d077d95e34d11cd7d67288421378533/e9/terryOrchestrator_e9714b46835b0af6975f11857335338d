23c1485275e55f886b8ecbddf1cec9bc
/* istanbul ignore next */
function cov_yn9gu44e3() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/ai/terryOrchestrator.ts";
  var hash = "68ac4d0c1cedcd36bc90a4fa8f802a1d871ee3af";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/ai/terryOrchestrator.ts",
    statementMap: {
      "0": {
        start: {
          line: 53,
          column: 70
        },
        end: {
          line: 67,
          column: 1
        }
      },
      "1": {
        start: {
          line: 75,
          column: 31
        },
        end: {
          line: 75,
          column: 36
        }
      },
      "2": {
        start: {
          line: 76,
          column: 46
        },
        end: {
          line: 76,
          column: 50
        }
      },
      "3": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 25
        }
      },
      "4": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 40
        }
      },
      "5": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "6": {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 60
        }
      },
      "7": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "8": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 26
        }
      },
      "9": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 64
        }
      },
      "10": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 44
        }
      },
      "11": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "12": {
        start: {
          line: 100,
          column: 6
        },
        end: {
          line: 100,
          column: 36
        }
      },
      "13": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 103,
          column: 73
        }
      },
      "14": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "15": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 111,
          column: 56
        }
      },
      "16": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "17": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 27
        }
      },
      "18": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "19": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 37
        }
      },
      "20": {
        start: {
          line: 120,
          column: 6
        },
        end: {
          line: 120,
          column: 29
        }
      },
      "21": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 31
        }
      },
      "22": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 60
        }
      },
      "23": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 74
        }
      },
      "24": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 35
        }
      },
      "25": {
        start: {
          line: 149,
          column: 31
        },
        end: {
          line: 149,
          column: 32
        }
      },
      "26": {
        start: {
          line: 151,
          column: 29
        },
        end: {
          line: 166,
          column: 5
        }
      },
      "27": {
        start: {
          line: 152,
          column: 6
        },
        end: {
          line: 152,
          column: 34
        }
      },
      "28": {
        start: {
          line: 152,
          column: 27
        },
        end: {
          line: 152,
          column: 34
        }
      },
      "29": {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 157,
          column: 8
        }
      },
      "30": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 169,
          column: 41
        }
      },
      "31": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "32": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "33": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 180,
          column: 76
        }
      },
      "34": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "35": {
        start: {
          line: 183,
          column: 6
        },
        end: {
          line: 194,
          column: 7
        }
      },
      "36": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 47
        }
      },
      "37": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 42
        }
      },
      "38": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 49
        }
      },
      "39": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 30
        }
      },
      "40": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 78
        }
      },
      "41": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "42": {
        start: {
          line: 204,
          column: 6
        },
        end: {
          line: 204,
          column: 13
        }
      },
      "43": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 213,
          column: 5
        }
      },
      "44": {
        start: {
          line: 212,
          column: 6
        },
        end: {
          line: 212,
          column: 13
        }
      },
      "45": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 229,
          column: 5
        }
      },
      "46": {
        start: {
          line: 220,
          column: 22
        },
        end: {
          line: 223,
          column: 7
        }
      },
      "47": {
        start: {
          line: 224,
          column: 6
        },
        end: {
          line: 227,
          column: 7
        }
      },
      "48": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 46
        }
      },
      "49": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 72
        }
      },
      "50": {
        start: {
          line: 228,
          column: 6
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "51": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 238,
          column: 5
        }
      },
      "52": {
        start: {
          line: 233,
          column: 22
        },
        end: {
          line: 233,
          column: 70
        }
      },
      "53": {
        start: {
          line: 234,
          column: 6
        },
        end: {
          line: 237,
          column: 7
        }
      },
      "54": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 43
        }
      },
      "55": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 68
        }
      },
      "56": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 245,
          column: 59
        }
      },
      "57": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 253,
          column: 6
        }
      },
      "58": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 31
        }
      },
      "59": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 256,
          column: 27
        }
      },
      "60": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 263,
          column: 32
        }
      },
      "61": {
        start: {
          line: 263,
          column: 25
        },
        end: {
          line: 263,
          column: 32
        }
      },
      "62": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 265,
          column: 53
        }
      },
      "63": {
        start: {
          line: 267,
          column: 4
        },
        end: {
          line: 283,
          column: 5
        }
      },
      "64": {
        start: {
          line: 269,
          column: 30
        },
        end: {
          line: 269,
          column: 70
        }
      },
      "65": {
        start: {
          line: 272,
          column: 6
        },
        end: {
          line: 272,
          column: 54
        }
      },
      "66": {
        start: {
          line: 275,
          column: 6
        },
        end: {
          line: 275,
          column: 44
        }
      },
      "67": {
        start: {
          line: 278,
          column: 6
        },
        end: {
          line: 278,
          column: 45
        }
      },
      "68": {
        start: {
          line: 280,
          column: 6
        },
        end: {
          line: 280,
          column: 36
        }
      },
      "69": {
        start: {
          line: 282,
          column: 6
        },
        end: {
          line: 282,
          column: 58
        }
      },
      "70": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 293,
          column: 6
        }
      },
      "71": {
        start: {
          line: 294,
          column: 37
        },
        end: {
          line: 294,
          column: 39
        }
      },
      "72": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 315,
          column: 5
        }
      },
      "73": {
        start: {
          line: 307,
          column: 6
        },
        end: {
          line: 309,
          column: 8
        }
      },
      "74": {
        start: {
          line: 311,
          column: 6
        },
        end: {
          line: 314,
          column: 7
        }
      },
      "75": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 47
        }
      },
      "76": {
        start: {
          line: 324,
          column: 4
        },
        end: {
          line: 324,
          column: 77
        }
      },
      "77": {
        start: {
          line: 327,
          column: 32
        },
        end: {
          line: 327,
          column: 64
        }
      },
      "78": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 329,
          column: 65
        }
      },
      "79": {
        start: {
          line: 336,
          column: 24
        },
        end: {
          line: 336,
          column: 45
        }
      },
      "80": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 341,
          column: 5
        }
      },
      "81": {
        start: {
          line: 340,
          column: 6
        },
        end: {
          line: 340,
          column: 33
        }
      },
      "82": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 346,
          column: 5
        }
      },
      "83": {
        start: {
          line: 345,
          column: 6
        },
        end: {
          line: 345,
          column: 33
        }
      },
      "84": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 349,
          column: 31
        }
      },
      "85": {
        start: {
          line: 356,
          column: 23
        },
        end: {
          line: 356,
          column: 50
        }
      },
      "86": {
        start: {
          line: 358,
          column: 4
        },
        end: {
          line: 364,
          column: 7
        }
      },
      "87": {
        start: {
          line: 374,
          column: 4
        },
        end: {
          line: 376,
          column: 5
        }
      },
      "88": {
        start: {
          line: 375,
          column: 6
        },
        end: {
          line: 375,
          column: 19
        }
      },
      "89": {
        start: {
          line: 378,
          column: 4
        },
        end: {
          line: 378,
          column: 78
        }
      },
      "90": {
        start: {
          line: 380,
          column: 20
        },
        end: {
          line: 383,
          column: 5
        }
      },
      "91": {
        start: {
          line: 385,
          column: 4
        },
        end: {
          line: 388,
          column: 5
        }
      },
      "92": {
        start: {
          line: 386,
          column: 6
        },
        end: {
          line: 386,
          column: 44
        }
      },
      "93": {
        start: {
          line: 387,
          column: 6
        },
        end: {
          line: 387,
          column: 65
        }
      },
      "94": {
        start: {
          line: 390,
          column: 4
        },
        end: {
          line: 390,
          column: 19
        }
      },
      "95": {
        start: {
          line: 397,
          column: 34
        },
        end: {
          line: 397,
          column: 61
        }
      },
      "96": {
        start: {
          line: 398,
          column: 27
        },
        end: {
          line: 398,
          column: 66
        }
      },
      "97": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 411,
          column: 6
        }
      },
      "98": {
        start: {
          line: 418,
          column: 4
        },
        end: {
          line: 418,
          column: 51
        }
      },
      "99": {
        start: {
          line: 421,
          column: 4
        },
        end: {
          line: 423,
          column: 5
        }
      },
      "100": {
        start: {
          line: 422,
          column: 6
        },
        end: {
          line: 422,
          column: 59
        }
      },
      "101": {
        start: {
          line: 425,
          column: 4
        },
        end: {
          line: 425,
          column: 57
        }
      },
      "102": {
        start: {
          line: 432,
          column: 4
        },
        end: {
          line: 432,
          column: 40
        }
      },
      "103": {
        start: {
          line: 433,
          column: 4
        },
        end: {
          line: 433,
          column: 34
        }
      },
      "104": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 434,
          column: 54
        }
      },
      "105": {
        start: {
          line: 441,
          column: 4
        },
        end: {
          line: 450,
          column: 6
        }
      },
      "106": {
        start: {
          line: 457,
          column: 4
        },
        end: {
          line: 457,
          column: 61
        }
      },
      "107": {
        start: {
          line: 457,
          column: 36
        },
        end: {
          line: 457,
          column: 59
        }
      },
      "108": {
        start: {
          line: 462,
          column: 33
        },
        end: {
          line: 462,
          column: 56
        }
      },
      "109": {
        start: {
          line: 471,
          column: 32
        },
        end: {
          line: 479,
          column: 1
        }
      },
      "110": {
        start: {
          line: 474,
          column: 2
        },
        end: {
          line: 476,
          column: 3
        }
      },
      "111": {
        start: {
          line: 475,
          column: 4
        },
        end: {
          line: 475,
          column: 43
        }
      },
      "112": {
        start: {
          line: 477,
          column: 2
        },
        end: {
          line: 477,
          column: 28
        }
      },
      "113": {
        start: {
          line: 478,
          column: 2
        },
        end: {
          line: 478,
          column: 27
        }
      },
      "114": {
        start: {
          line: 484,
          column: 31
        },
        end: {
          line: 486,
          column: 1
        }
      },
      "115": {
        start: {
          line: 485,
          column: 2
        },
        end: {
          line: 485,
          column: 27
        }
      },
      "116": {
        start: {
          line: 491,
          column: 36
        },
        end: {
          line: 493,
          column: 1
        }
      },
      "117": {
        start: {
          line: 492,
          column: 2
        },
        end: {
          line: 492,
          column: 39
        }
      },
      "118": {
        start: {
          line: 498,
          column: 40
        },
        end: {
          line: 503,
          column: 1
        }
      },
      "119": {
        start: {
          line: 502,
          column: 2
        },
        end: {
          line: 502,
          column: 79
        }
      },
      "120": {
        start: {
          line: 508,
          column: 39
        },
        end: {
          line: 512,
          column: 1
        }
      },
      "121": {
        start: {
          line: 511,
          column: 2
        },
        end: {
          line: 511,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 78,
            column: 2
          },
          end: {
            line: 78,
            column: 3
          }
        },
        loc: {
          start: {
            line: 78,
            column: 79
          },
          end: {
            line: 81,
            column: 3
          }
        },
        line: 78
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 86,
            column: 2
          },
          end: {
            line: 86,
            column: 3
          }
        },
        loc: {
          start: {
            line: 86,
            column: 23
          },
          end: {
            line: 104,
            column: 3
          }
        },
        line: 86
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 109,
            column: 2
          },
          end: {
            line: 109,
            column: 3
          }
        },
        loc: {
          start: {
            line: 109,
            column: 22
          },
          end: {
            line: 127,
            column: 3
          }
        },
        line: 109
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 132,
            column: 2
          },
          end: {
            line: 132,
            column: 3
          }
        },
        loc: {
          start: {
            line: 132,
            column: 51
          },
          end: {
            line: 140,
            column: 3
          }
        },
        line: 132
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 145,
            column: 2
          },
          end: {
            line: 145,
            column: 3
          }
        },
        loc: {
          start: {
            line: 145,
            column: 42
          },
          end: {
            line: 170,
            column: 3
          }
        },
        line: 145
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 151,
            column: 29
          },
          end: {
            line: 151,
            column: 30
          }
        },
        loc: {
          start: {
            line: 151,
            column: 35
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 151
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 175,
            column: 2
          },
          end: {
            line: 175,
            column: 3
          }
        },
        loc: {
          start: {
            line: 175,
            column: 73
          },
          end: {
            line: 196,
            column: 3
          }
        },
        line: 175
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 201,
            column: 2
          },
          end: {
            line: 201,
            column: 3
          }
        },
        loc: {
          start: {
            line: 201,
            column: 68
          },
          end: {
            line: 239,
            column: 3
          }
        },
        line: 201
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 244,
            column: 2
          },
          end: {
            line: 244,
            column: 3
          }
        },
        loc: {
          start: {
            line: 244,
            column: 41
          },
          end: {
            line: 257,
            column: 3
          }
        },
        line: 244
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 249,
            column: 6
          },
          end: {
            line: 249,
            column: 7
          }
        },
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 251,
            column: 7
          }
        },
        line: 249
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 262,
            column: 2
          },
          end: {
            line: 262,
            column: 3
          }
        },
        loc: {
          start: {
            line: 262,
            column: 49
          },
          end: {
            line: 284,
            column: 3
          }
        },
        line: 262
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 289,
            column: 2
          },
          end: {
            line: 289,
            column: 3
          }
        },
        loc: {
          start: {
            line: 289,
            column: 58
          },
          end: {
            line: 316,
            column: 3
          }
        },
        line: 289
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 321,
            column: 2
          },
          end: {
            line: 321,
            column: 3
          }
        },
        loc: {
          start: {
            line: 323,
            column: 10
          },
          end: {
            line: 330,
            column: 3
          }
        },
        line: 323
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 335,
            column: 2
          },
          end: {
            line: 335,
            column: 3
          }
        },
        loc: {
          start: {
            line: 335,
            column: 41
          },
          end: {
            line: 350,
            column: 3
          }
        },
        line: 335
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 355,
            column: 2
          },
          end: {
            line: 355,
            column: 3
          }
        },
        loc: {
          start: {
            line: 355,
            column: 73
          },
          end: {
            line: 365,
            column: 3
          }
        },
        line: 355
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 370,
            column: 2
          },
          end: {
            line: 370,
            column: 3
          }
        },
        loc: {
          start: {
            line: 373,
            column: 22
          },
          end: {
            line: 391,
            column: 3
          }
        },
        line: 373
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 396,
            column: 2
          },
          end: {
            line: 396,
            column: 3
          }
        },
        loc: {
          start: {
            line: 396,
            column: 21
          },
          end: {
            line: 412,
            column: 3
          }
        },
        line: 396
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 417,
            column: 2
          },
          end: {
            line: 417,
            column: 3
          }
        },
        loc: {
          start: {
            line: 417,
            column: 74
          },
          end: {
            line: 426,
            column: 3
          }
        },
        line: 417
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 431,
            column: 2
          },
          end: {
            line: 431,
            column: 3
          }
        },
        loc: {
          start: {
            line: 431,
            column: 28
          },
          end: {
            line: 435,
            column: 3
          }
        },
        line: 431
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 440,
            column: 2
          },
          end: {
            line: 440,
            column: 3
          }
        },
        loc: {
          start: {
            line: 440,
            column: 53
          },
          end: {
            line: 451,
            column: 3
          }
        },
        line: 440
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 456,
            column: 2
          },
          end: {
            line: 456,
            column: 3
          }
        },
        loc: {
          start: {
            line: 456,
            column: 43
          },
          end: {
            line: 458,
            column: 3
          }
        },
        line: 456
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 457,
            column: 23
          },
          end: {
            line: 457,
            column: 24
          }
        },
        loc: {
          start: {
            line: 457,
            column: 36
          },
          end: {
            line: 457,
            column: 59
          }
        },
        line: 457
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 471,
            column: 32
          },
          end: {
            line: 471,
            column: 33
          }
        },
        loc: {
          start: {
            line: 473,
            column: 5
          },
          end: {
            line: 479,
            column: 1
          }
        },
        line: 473
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 484,
            column: 31
          },
          end: {
            line: 484,
            column: 32
          }
        },
        loc: {
          start: {
            line: 484,
            column: 37
          },
          end: {
            line: 486,
            column: 1
          }
        },
        line: 484
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 491,
            column: 36
          },
          end: {
            line: 491,
            column: 37
          }
        },
        loc: {
          start: {
            line: 491,
            column: 42
          },
          end: {
            line: 493,
            column: 1
          }
        },
        line: 491
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 498,
            column: 40
          },
          end: {
            line: 498,
            column: 41
          }
        },
        loc: {
          start: {
            line: 501,
            column: 5
          },
          end: {
            line: 503,
            column: 1
          }
        },
        line: 501
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 508,
            column: 39
          },
          end: {
            line: 508,
            column: 40
          }
        },
        loc: {
          start: {
            line: 510,
            column: 5
          },
          end: {
            line: 512,
            column: 1
          }
        },
        line: 510
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 78,
            column: 14
          },
          end: {
            line: 78,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 78,
            column: 49
          },
          end: {
            line: 78,
            column: 77
          }
        }],
        line: 78
      },
      "1": {
        loc: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "2": {
        loc: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "3": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "4": {
        loc: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "5": {
        loc: {
          start: {
            line: 152,
            column: 6
          },
          end: {
            line: 152,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 6
          },
          end: {
            line: 152,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "6": {
        loc: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "7": {
        loc: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "8": {
        loc: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "9": {
        loc: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "10": {
        loc: {
          start: {
            line: 217,
            column: 6
          },
          end: {
            line: 218,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 6
          },
          end: {
            line: 217,
            column: 34
          }
        }, {
          start: {
            line: 218,
            column: 6
          },
          end: {
            line: 218,
            column: 51
          }
        }],
        line: 217
      },
      "11": {
        loc: {
          start: {
            line: 224,
            column: 6
          },
          end: {
            line: 227,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 6
          },
          end: {
            line: 227,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "12": {
        loc: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 238,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 238,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "13": {
        loc: {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 232,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 232,
            column: 31
          }
        }, {
          start: {
            line: 232,
            column: 35
          },
          end: {
            line: 232,
            column: 64
          }
        }],
        line: 232
      },
      "14": {
        loc: {
          start: {
            line: 234,
            column: 6
          },
          end: {
            line: 237,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 6
          },
          end: {
            line: 237,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "15": {
        loc: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "16": {
        loc: {
          start: {
            line: 306,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "17": {
        loc: {
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 339
      },
      "18": {
        loc: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "19": {
        loc: {
          start: {
            line: 372,
            column: 4
          },
          end: {
            line: 372,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 372,
            column: 30
          },
          end: {
            line: 372,
            column: 34
          }
        }],
        line: 372
      },
      "20": {
        loc: {
          start: {
            line: 374,
            column: 4
          },
          end: {
            line: 376,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 4
          },
          end: {
            line: 376,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "21": {
        loc: {
          start: {
            line: 385,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 385,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 385
      },
      "22": {
        loc: {
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 423,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 423,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 421
      },
      "23": {
        loc: {
          start: {
            line: 474,
            column: 2
          },
          end: {
            line: 476,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 2
          },
          end: {
            line: 476,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 474
      },
      "24": {
        loc: {
          start: {
            line: 500,
            column: 2
          },
          end: {
            line: 500,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 500,
            column: 28
          },
          end: {
            line: 500,
            column: 32
          }
        }],
        line: 500
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "68ac4d0c1cedcd36bc90a4fa8f802a1d871ee3af"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_yn9gu44e3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_yn9gu44e3();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Terry Commentary Orchestrator
 * Main coordination service for Terry's continuous commentary system
 */

import { globalMonitor } from '@/lib/twitter/globalMonitor';
import { terryIntegration, DEFAULT_INTEGRATION_CONFIG } from './terryIntegration';

// TODO: Fix circular dependency with feedStore
// import { useFeedStore } from '@/lib/stores/feedStore';

// Default orchestration configuration
export var DEFAULT_ORCHESTRATION_CONFIG =
/* istanbul ignore next */
(cov_yn9gu44e3().s[0]++, {
  integration: DEFAULT_INTEGRATION_CONFIG,
  monitoring: {
    enableAutoCommentary: true,
    processAllIncomingTweets: true,
    prioritizeBreakingNews: true,
    minConfidenceForTerry: 0.6
  },
  scheduling: {
    enableHourlyUpdates: true,
    enableBreakingNewsAlerts: true,
    peakHours: [9, 10, 11, 16, 17, 18, 19, 20],
    // Morning and evening peak
    quietHours: [0, 1, 2, 3, 4, 5, 6] // Late night/early morning
  }
});

/**
 * Terry Commentary Orchestrator Class
 */
export
/* istanbul ignore next */
var TerryOrchestrator = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  TerryOrchestrator() {
    /* istanbul ignore next */
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_yn9gu44e3().b[0][0]++, DEFAULT_ORCHESTRATION_CONFIG);
    /* istanbul ignore next */
    _classCallCheck(this, TerryOrchestrator);
    _defineProperty(this, "isRunning", (cov_yn9gu44e3().s[1]++, false));
    /* istanbul ignore next */
    _defineProperty(this, "intervalId", (cov_yn9gu44e3().s[2]++, null));
    /* istanbul ignore next */
    cov_yn9gu44e3().f[0]++;
    cov_yn9gu44e3().s[3]++;
    this.config = config;
    /* istanbul ignore next */
    cov_yn9gu44e3().s[4]++;
    this.stats = this.initializeStats();
  }

  /**
   * Start Terry's continuous commentary system
   */
  return _createClass(TerryOrchestrator, [{
    key: "start",
    value: function start() {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[1]++;
      cov_yn9gu44e3().s[5]++;
      if (this.isRunning) {
        /* istanbul ignore next */
        cov_yn9gu44e3().b[1][0]++;
        cov_yn9gu44e3().s[6]++;
        console.warn('Terry Orchestrator is already running');
        /* istanbul ignore next */
        cov_yn9gu44e3().s[7]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_yn9gu44e3().b[1][1]++;
      }
      cov_yn9gu44e3().s[8]++;
      this.isRunning = true;
      /* istanbul ignore next */
      cov_yn9gu44e3().s[9]++;
      console.log('🎭 Starting Terry Commentary Orchestrator...');

      // Hook into global monitoring system
      /* istanbul ignore next */
      cov_yn9gu44e3().s[10]++;
      this.setupGlobalMonitoringIntegration();

      // Start hourly update cycle if enabled
      /* istanbul ignore next */
      cov_yn9gu44e3().s[11]++;
      if (this.config.scheduling.enableHourlyUpdates) {
        /* istanbul ignore next */
        cov_yn9gu44e3().b[2][0]++;
        cov_yn9gu44e3().s[12]++;
        this.startHourlyUpdateCycle();
      } else
      /* istanbul ignore next */
      {
        cov_yn9gu44e3().b[2][1]++;
      }
      cov_yn9gu44e3().s[13]++;
      console.log('🎬 Terry Commentary Orchestrator started successfully');
    }

    /**
     * Stop Terry's commentary system
     */
  }, {
    key: "stop",
    value: function stop() {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[2]++;
      cov_yn9gu44e3().s[14]++;
      if (!this.isRunning) {
        /* istanbul ignore next */
        cov_yn9gu44e3().b[3][0]++;
        cov_yn9gu44e3().s[15]++;
        console.warn('Terry Orchestrator is not running');
        /* istanbul ignore next */
        cov_yn9gu44e3().s[16]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_yn9gu44e3().b[3][1]++;
      }
      cov_yn9gu44e3().s[17]++;
      this.isRunning = false;

      // Stop hourly updates
      /* istanbul ignore next */
      cov_yn9gu44e3().s[18]++;
      if (this.intervalId) {
        /* istanbul ignore next */
        cov_yn9gu44e3().b[4][0]++;
        cov_yn9gu44e3().s[19]++;
        clearInterval(this.intervalId);
        /* istanbul ignore next */
        cov_yn9gu44e3().s[20]++;
        this.intervalId = null;
      } else
      /* istanbul ignore next */
      {
        cov_yn9gu44e3().b[4][1]++;
      }

      // Clean up Terry integration
      cov_yn9gu44e3().s[21]++;
      terryIntegration.cleanup();
      /* istanbul ignore next */
      cov_yn9gu44e3().s[22]++;
      console.log('⏹️ Terry Commentary Orchestrator stopped');
    }

    /**
     * Setup integration with global monitoring system
     */
  }, {
    key: "setupGlobalMonitoringIntegration",
    value: function setupGlobalMonitoringIntegration() {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[3]++;
      cov_yn9gu44e3().s[23]++;
      // In production, this would hook into the global monitor's event system
      // For now, we'll simulate by checking for new tweets periodically

      console.log('🔗 Connecting Terry to global ITK monitoring system...');

      // Monitor the feed store for new items and add Terry commentary
      /* istanbul ignore next */
      cov_yn9gu44e3().s[24]++;
      this.monitorFeedStoreChanges();
    }

    /**
     * Monitor feed store changes and add Terry commentary
     */
  }, {
    key: "monitorFeedStoreChanges",
    value: function monitorFeedStoreChanges() {
      /* istanbul ignore next */
      var _this = this;
      cov_yn9gu44e3().f[4]++;
      // In a real implementation, this would use store subscriptions
      // For now, we'll implement a polling approach

      var lastProcessedCount =
      /* istanbul ignore next */
      (cov_yn9gu44e3().s[25]++, 0);
      /* istanbul ignore next */
      cov_yn9gu44e3().s[26]++;
      var checkForNewItems = function checkForNewItems() {
        /* istanbul ignore next */
        cov_yn9gu44e3().f[5]++;
        cov_yn9gu44e3().s[27]++;
        if (!_this.isRunning) {
          /* istanbul ignore next */
          cov_yn9gu44e3().b[5][0]++;
          cov_yn9gu44e3().s[28]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_yn9gu44e3().b[5][1]++;
        }

        // TODO: Re-enable feed store monitoring once circular dependency is fixed
        cov_yn9gu44e3().s[29]++;
        console.log('Feed store monitoring disabled temporarily due to circular dependency');
        // const feedStore = useFeedStore.getState();
        // const currentItemCount = feedStore.items.length;
        //
        // if (currentItemCount > lastProcessedCount) {
        //   const newItems = feedStore.items.slice(lastProcessedCount);
        //   this.processNewFeedItems(newItems);
        //   lastProcessedCount = currentItemCount;
        // }
      };

      // Check every 30 seconds for new items
      /* istanbul ignore next */
      cov_yn9gu44e3().s[30]++;
      setInterval(checkForNewItems, 30000);
    }

    /**
     * Process new feed items for Terry commentary
     */
  }, {
    key: "processNewFeedItems",
    value: (function () {
      var _processNewFeedItems = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee(newItems)
      /* istanbul ignore next */
      {
        var _iterator, _step, item, _t, _t2;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              cov_yn9gu44e3().f[6]++;
              cov_yn9gu44e3().s[31]++;
              if (this.config.monitoring.enableAutoCommentary) {
                _context.n = 1;
                break;
              }
              cov_yn9gu44e3().b[6][0]++;
              cov_yn9gu44e3().s[32]++;
              return _context.a(2);
            case 1:
              cov_yn9gu44e3().b[6][1]++;
            case 2:
              cov_yn9gu44e3().s[33]++;
              console.log(
              /* istanbul ignore next */
              "\uD83D\uDD04 Terry processing ".concat(newItems.length, " new feed items..."));
              cov_yn9gu44e3().s[34]++;
              _iterator = _createForOfIteratorHelper(newItems);
              _context.p = 3;
              _iterator.s();
            case 4:
              if ((_step = _iterator.n()).done) {
                _context.n = 10;
                break;
              }
              item = _step.value;
              cov_yn9gu44e3().s[35]++;
              _context.p = 5;
              cov_yn9gu44e3().s[36]++;
              _context.n = 6;
              return this.processSingleFeedItem(item);
            case 6:
              cov_yn9gu44e3().s[37]++;
              this.stats.totalTweetsProcessed++;

              // Update last activity time
              cov_yn9gu44e3().s[38]++;
              this.stats.lastActivityTime = new Date();

              // Small delay between items
              cov_yn9gu44e3().s[39]++;
              _context.n = 7;
              return this.sleep(500);
            case 7:
              _context.n = 9;
              break;
            case 8:
              _context.p = 8;
              _t = _context.v;
              cov_yn9gu44e3().s[40]++;
              console.error(
              /* istanbul ignore next */
              "Terry failed to process feed item ".concat(item.id, ":"),
              /* istanbul ignore next */
              _t);
            case 9:
              _context.n = 4;
              break;
            case 10:
              _context.n = 12;
              break;
            case 11:
              _context.p = 11;
              _t2 = _context.v;
              _iterator.e(_t2);
            case 12:
              _context.p = 12;
              _iterator.f();
              return _context.f(12);
            case 13:
              return _context.a(2);
          }
        }, _callee, this, [[5, 8], [3, 11, 12, 13]]);
      }));
      function processNewFeedItems(_x) {
        return _processNewFeedItems.apply(this, arguments);
      }
      return processNewFeedItems;
    }()
    /**
     * Process a single feed item for Terry commentary
     */
    )
  }, {
    key: "processSingleFeedItem",
    value: (function () {
      var _processSingleFeedItem = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(feedItem)
      /* istanbul ignore next */
      {
        var _feedItem$metadata;
        var success, _success;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              cov_yn9gu44e3().f[7]++;
              cov_yn9gu44e3().s[41]++;
              if (this.isWithinActiveHours()) {
                _context2.n = 1;
                break;
              }
              cov_yn9gu44e3().b[7][0]++;
              cov_yn9gu44e3().s[42]++;
              return _context2.a(2);
            case 1:
              cov_yn9gu44e3().b[7][1]++;
            case 2:
              cov_yn9gu44e3().s[43]++;
              if (!(
              /* istanbul ignore next */
              ((_feedItem$metadata = feedItem.metadata) === null || _feedItem$metadata === void 0 ? void 0 :
              /* istanbul ignore next */
              _feedItem$metadata.relevanceScore) < this.config.monitoring.minConfidenceForTerry)) {
                _context2.n = 3;
                break;
              }
              cov_yn9gu44e3().b[8][0]++;
              cov_yn9gu44e3().s[44]++;
              return _context2.a(2);
            case 3:
              cov_yn9gu44e3().b[8][1]++;
            case 4:
              cov_yn9gu44e3().s[45]++;
              if (!(
              /* istanbul ignore next */
              (cov_yn9gu44e3().b[10][0]++, feedItem.type === 'breaking') &&
              /* istanbul ignore next */
              (cov_yn9gu44e3().b[10][1]++, this.config.monitoring.prioritizeBreakingNews))) {
                _context2.n = 6;
                break;
              }
              cov_yn9gu44e3().b[9][0]++;
              cov_yn9gu44e3().s[46]++;
              _context2.n = 5;
              return terryIntegration.processBreakingNews(feedItem, true);
            case 5:
              success = _context2.v;
              cov_yn9gu44e3().s[47]++;
              if (success) {
                /* istanbul ignore next */
                cov_yn9gu44e3().b[11][0]++;
                cov_yn9gu44e3().s[48]++;
                this.stats.breakingNewsCommentaries++;
                /* istanbul ignore next */
                cov_yn9gu44e3().s[49]++;
                console.log(
                /* istanbul ignore next */
                "\uD83D\uDEA8 Terry processed breaking news: ".concat(feedItem.id));
              } else
              /* istanbul ignore next */
              {
                cov_yn9gu44e3().b[11][1]++;
              }
              cov_yn9gu44e3().s[50]++;
              return _context2.a(2);
            case 6:
              cov_yn9gu44e3().b[9][1]++;
            case 7:
              cov_yn9gu44e3().s[51]++;
              if (!(
              /* istanbul ignore next */
              (cov_yn9gu44e3().b[13][0]++, feedItem.type === 'itk') ||
              /* istanbul ignore next */
              (cov_yn9gu44e3().b[13][1]++, feedItem.type === 'confirmed'))) {
                _context2.n = 9;
                break;
              }
              cov_yn9gu44e3().b[12][0]++;
              cov_yn9gu44e3().s[52]++;
              _context2.n = 8;
              return terryIntegration.processFeedItem(feedItem);
            case 8:
              _success = _context2.v;
              cov_yn9gu44e3().s[53]++;
              if (_success) {
                /* istanbul ignore next */
                cov_yn9gu44e3().b[14][0]++;
                cov_yn9gu44e3().s[54]++;
                this.stats.commentariesGenerated++;
                /* istanbul ignore next */
                cov_yn9gu44e3().s[55]++;
                console.log(
                /* istanbul ignore next */
                "\uD83D\uDCAC Terry added commentary to: ".concat(feedItem.id));
              } else
              /* istanbul ignore next */
              {
                cov_yn9gu44e3().b[14][1]++;
              }
              _context2.n = 10;
              break;
            case 9:
              cov_yn9gu44e3().b[12][1]++;
            case 10:
              return _context2.a(2);
          }
        }, _callee2, this);
      }));
      function processSingleFeedItem(_x2) {
        return _processSingleFeedItem.apply(this, arguments);
      }
      return processSingleFeedItem;
    }()
    /**
     * Start hourly update cycle
     */
    )
  }, {
    key: "startHourlyUpdateCycle",
    value: function startHourlyUpdateCycle() {
      /* istanbul ignore next */
      var _this2 = this;
      cov_yn9gu44e3().f[8]++;
      cov_yn9gu44e3().s[56]++;
      console.log('⏰ Starting Terry hourly update cycle...');

      // Run every hour
      /* istanbul ignore next */
      cov_yn9gu44e3().s[57]++;
      this.intervalId = setInterval(function () {
        /* istanbul ignore next */
        cov_yn9gu44e3().f[9]++;
        cov_yn9gu44e3().s[58]++;
        _this2.runHourlyUpdate();
      }, 60 * 60 * 1000);

      // Run initial update
      /* istanbul ignore next */
      cov_yn9gu44e3().s[59]++;
      this.runHourlyUpdate();
    }

    /**
     * Run hourly Terry update cycle
     */
  }, {
    key: "runHourlyUpdate",
    value: (function () {
      var _runHourlyUpdate = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3()
      /* istanbul ignore next */
      {
        var monitoringStats, _t3;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              cov_yn9gu44e3().f[10]++;
              cov_yn9gu44e3().s[60]++;
              if (this.isRunning) {
                _context3.n = 1;
                break;
              }
              cov_yn9gu44e3().b[15][0]++;
              cov_yn9gu44e3().s[61]++;
              return _context3.a(2);
            case 1:
              cov_yn9gu44e3().b[15][1]++;
            case 2:
              cov_yn9gu44e3().s[62]++;
              console.log('🕐 Running Terry hourly update...');
              cov_yn9gu44e3().s[63]++;
              _context3.p = 3;
              cov_yn9gu44e3().s[64]++;
              _context3.n = 4;
              return globalMonitor.runMonitoringCycle();
            case 4:
              monitoringStats = _context3.v;
              cov_yn9gu44e3().s[65]++;
              // Update Terry stats
              this.updateStatsFromMonitoring(monitoringStats);

              // Process any pending high-priority items
              cov_yn9gu44e3().s[66]++;
              _context3.n = 5;
              return this.processHighPriorityItems();
            case 5:
              cov_yn9gu44e3().s[67]++;
              // Log hourly summary
              this.logHourlySummary(monitoringStats);
              cov_yn9gu44e3().s[68]++;
              this.stats.activeHoursToday++;
              _context3.n = 7;
              break;
            case 6:
              _context3.p = 6;
              _t3 = _context3.v;
              cov_yn9gu44e3().s[69]++;
              console.error('Terry hourly update failed:',
              /* istanbul ignore next */
              _t3);
            case 7:
              return _context3.a(2);
          }
        }, _callee3, this, [[3, 6]]);
      }));
      function runHourlyUpdate() {
        return _runHourlyUpdate.apply(this, arguments);
      }
      return runHourlyUpdate;
    }()
    /**
     * Process high-priority items that need immediate Terry attention
     */
    )
  }, {
    key: "processHighPriorityItems",
    value: (function () {
      var _processHighPriorityItems = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4()
      /* istanbul ignore next */
      {
        var highPriorityItems, _iterator2, _step2, item, _t4;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_yn9gu44e3().f[11]++;
              cov_yn9gu44e3().s[70]++;
              // TODO: Re-enable feed store access once circular dependency is fixed
              console.log('High priority item processing disabled temporarily due to circular dependency');
              highPriorityItems = (cov_yn9gu44e3().s[71]++, []); // const feedStore = useFeedStore.getState();
              //
              // // Find breaking news and high-priority items without Terry commentary
              // const highPriorityItems = feedStore.items.filter(
              //   (item) =>
              //     (item.type === 'breaking' || item.metadata.priority === 'high') &&
              //     !item.terryCommentary &&
              //     item.metadata.relevanceScore >=
              //       this.config.monitoring.minConfidenceForTerry
              // );
              cov_yn9gu44e3().s[72]++;
              if (!(highPriorityItems.length > 0)) {
                _context4.n = 8;
                break;
              }
              cov_yn9gu44e3().b[16][0]++;
              cov_yn9gu44e3().s[73]++;
              console.log(
              /* istanbul ignore next */
              "\u26A1 Terry processing ".concat(highPriorityItems.length, " high-priority items..."));
              cov_yn9gu44e3().s[74]++;
              _iterator2 = _createForOfIteratorHelper(highPriorityItems.slice(0, 3));
              _context4.p = 1;
              _iterator2.s();
            case 2:
              if ((_step2 = _iterator2.n()).done) {
                _context4.n = 4;
                break;
              }
              item = _step2.value;
              cov_yn9gu44e3().s[75]++;
              _context4.n = 3;
              return this.processSingleFeedItem(item);
            case 3:
              _context4.n = 2;
              break;
            case 4:
              _context4.n = 6;
              break;
            case 5:
              _context4.p = 5;
              _t4 = _context4.v;
              _iterator2.e(_t4);
            case 6:
              _context4.p = 6;
              _iterator2.f();
              return _context4.f(6);
            case 7:
              _context4.n = 9;
              break;
            case 8:
              cov_yn9gu44e3().b[16][1]++;
            case 9:
              return _context4.a(2);
          }
        }, _callee4, this, [[1, 5, 6, 7]]);
      }));
      function processHighPriorityItems() {
        return _processHighPriorityItems.apply(this, arguments);
      }
      return processHighPriorityItems;
    }()
    /**
     * Update stats from global monitoring
     */
    )
  }, {
    key: "updateStatsFromMonitoring",
    value: function updateStatsFromMonitoring(monitoringStats) {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[12]++;
      cov_yn9gu44e3().s[76]++;
      this.stats.transferTweetsDetected += monitoringStats.totalTransferTweets;

      // Update average response time (simplified calculation)
      var currentResponseTime =
      /* istanbul ignore next */
      (cov_yn9gu44e3().s[77]++, monitoringStats.processingTimeMs);
      /* istanbul ignore next */
      cov_yn9gu44e3().s[78]++;
      this.stats.averageResponseTime = (this.stats.averageResponseTime + currentResponseTime) / 2;
    }

    /**
     * Check if current time is within Terry's active hours
     */
  }, {
    key: "isWithinActiveHours",
    value: function isWithinActiveHours() {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[13]++;
      var currentHour =
      /* istanbul ignore next */
      (cov_yn9gu44e3().s[79]++, new Date().getHours());

      // Check if it's quiet hours (Terry less active)
      /* istanbul ignore next */
      cov_yn9gu44e3().s[80]++;
      if (this.config.scheduling.quietHours.includes(currentHour)) {
        /* istanbul ignore next */
        cov_yn9gu44e3().b[17][0]++;
        cov_yn9gu44e3().s[81]++;
        return Math.random() < 0.2; // 20% chance during quiet hours
      } else
      /* istanbul ignore next */
      {
        cov_yn9gu44e3().b[17][1]++;
      }

      // Check if it's peak hours (Terry more active)
      cov_yn9gu44e3().s[82]++;
      if (this.config.scheduling.peakHours.includes(currentHour)) {
        /* istanbul ignore next */
        cov_yn9gu44e3().b[18][0]++;
        cov_yn9gu44e3().s[83]++;
        return Math.random() < 0.8; // 80% chance during peak hours
      } else
      /* istanbul ignore next */
      {
        cov_yn9gu44e3().b[18][1]++;
      }

      // Regular hours
      cov_yn9gu44e3().s[84]++;
      return Math.random() < 0.5; // 50% chance during regular hours
    }

    /**
     * Log hourly summary
     */
  }, {
    key: "logHourlySummary",
    value: function logHourlySummary(monitoringStats) {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[14]++;
      var terryStats =
      /* istanbul ignore next */
      (cov_yn9gu44e3().s[85]++, terryIntegration.getStats());
      /* istanbul ignore next */
      cov_yn9gu44e3().s[86]++;
      console.log('📊 Terry Hourly Summary:', {
        transferTweetsDetected: monitoringStats.totalTransferTweets,
        commentariesGenerated: terryStats.commentariesGenerated,
        successRate:
        /* istanbul ignore next */
        "".concat(terryStats.successRate, "%"),
        voiceConsistency:
        /* istanbul ignore next */
        "".concat(Math.round(terryStats.voiceConsistencyAverage * 100), "%"),
        activeHours: this.stats.activeHoursToday
      });
    }

    /**
     * Generate Terry's Breaking News alert
     */
  }, {
    key: "generateBreakingNewsAlert",
    value: (function () {
      var _generateBreakingNewsAlert = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee5(feedItem)
      /* istanbul ignore next */
      {
        var isGenuineDrama,
          success,
          _args5 = arguments;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              isGenuineDrama = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : (cov_yn9gu44e3().b[19][0]++, true);
              cov_yn9gu44e3().f[15]++;
              cov_yn9gu44e3().s[87]++;
              if (this.config.scheduling.enableBreakingNewsAlerts) {
                _context5.n = 1;
                break;
              }
              cov_yn9gu44e3().b[20][0]++;
              cov_yn9gu44e3().s[88]++;
              return _context5.a(2, false);
            case 1:
              cov_yn9gu44e3().b[20][1]++;
            case 2:
              cov_yn9gu44e3().s[89]++;
              console.log(
              /* istanbul ignore next */
              "\uD83D\uDEA8 Terry Breaking News Alert triggered for: ".concat(feedItem.id));
              cov_yn9gu44e3().s[90]++;
              _context5.n = 3;
              return terryIntegration.processBreakingNews(feedItem, isGenuineDrama);
            case 3:
              success = _context5.v;
              cov_yn9gu44e3().s[91]++;
              if (success) {
                /* istanbul ignore next */
                cov_yn9gu44e3().b[21][0]++;
                cov_yn9gu44e3().s[92]++;
                this.stats.breakingNewsCommentaries++;
                /* istanbul ignore next */
                cov_yn9gu44e3().s[93]++;
                console.log('🎬 Terry Breaking News commentary published');
              } else
              /* istanbul ignore next */
              {
                cov_yn9gu44e3().b[21][1]++;
              }
              cov_yn9gu44e3().s[94]++;
              return _context5.a(2, success);
          }
        }, _callee5, this);
      }));
      function generateBreakingNewsAlert(_x3) {
        return _generateBreakingNewsAlert.apply(this, arguments);
      }
      return generateBreakingNewsAlert;
    }()
    /**
     * Get comprehensive Terry orchestration status
     */
    )
  }, {
    key: "getStatus",
    value: function getStatus() {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[16]++;
      var terryIntegrationStats =
      /* istanbul ignore next */
      (cov_yn9gu44e3().s[95]++, terryIntegration.getStats());
      var terryAnalytics =
      /* istanbul ignore next */
      (cov_yn9gu44e3().s[96]++, terryIntegration.getDetailedAnalytics());
      /* istanbul ignore next */
      cov_yn9gu44e3().s[97]++;
      return {
        isRunning: this.isRunning,
        config: this.config,
        stats:
        /* istanbul ignore next */
        _objectSpread(_objectSpread({}, this.stats), {}, {
          voiceConsistencyRate: terryIntegrationStats.voiceConsistencyAverage
        }),
        integration: terryIntegrationStats,
        analytics: terryAnalytics,
        currentHour: new Date().getHours(),
        isActiveHour: this.isWithinActiveHours()
      };
    }

    /**
     * Update orchestration configuration
     */
  }, {
    key: "updateConfig",
    value: function updateConfig(newConfig) {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[17]++;
      cov_yn9gu44e3().s[98]++;
      this.config =
      /* istanbul ignore next */
      _objectSpread(_objectSpread({}, this.config), newConfig);

      // Update integration config if provided
      /* istanbul ignore next */
      cov_yn9gu44e3().s[99]++;
      if (newConfig.integration) {
        /* istanbul ignore next */
        cov_yn9gu44e3().b[22][0]++;
        cov_yn9gu44e3().s[100]++;
        terryIntegration.updateConfig(newConfig.integration);
      } else
      /* istanbul ignore next */
      {
        cov_yn9gu44e3().b[22][1]++;
      }
      cov_yn9gu44e3().s[101]++;
      console.log('🔧 Updated Terry orchestration config');
    }

    /**
     * Reset statistics
     */
  }, {
    key: "resetStats",
    value: function resetStats() {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[18]++;
      cov_yn9gu44e3().s[102]++;
      this.stats = this.initializeStats();
      /* istanbul ignore next */
      cov_yn9gu44e3().s[103]++;
      terryIntegration.resetStats();
      /* istanbul ignore next */
      cov_yn9gu44e3().s[104]++;
      console.log('📊 Terry orchestration stats reset');
    }

    /**
     * Initialize stats
     */
  }, {
    key: "initializeStats",
    value: function initializeStats() {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[19]++;
      cov_yn9gu44e3().s[105]++;
      return {
        totalTweetsProcessed: 0,
        transferTweetsDetected: 0,
        commentariesGenerated: 0,
        breakingNewsCommentaries: 0,
        averageResponseTime: 0,
        voiceConsistencyRate: 0,
        activeHoursToday: 0,
        lastActivityTime: null
      };
    }

    /**
     * Utility function for delays
     */
  }, {
    key: "sleep",
    value: function sleep(ms) {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[20]++;
      cov_yn9gu44e3().s[106]++;
      return new Promise(function (resolve) {
        /* istanbul ignore next */
        cov_yn9gu44e3().f[21]++;
        cov_yn9gu44e3().s[107]++;
        return setTimeout(resolve, ms);
      });
    }
  }]);
}();

// Export singleton instance
export var terryOrchestrator =
/* istanbul ignore next */
(cov_yn9gu44e3().s[108]++, new TerryOrchestrator());

/**
 * Convenience functions
 */

/**
 * Start Terry's continuous commentary system
 */
/* istanbul ignore next */
cov_yn9gu44e3().s[109]++;
export var startTerrySystem = function startTerrySystem(config) {
  /* istanbul ignore next */
  cov_yn9gu44e3().f[22]++;
  cov_yn9gu44e3().s[110]++;
  if (config) {
    /* istanbul ignore next */
    cov_yn9gu44e3().b[23][0]++;
    cov_yn9gu44e3().s[111]++;
    terryOrchestrator.updateConfig(config);
  } else
  /* istanbul ignore next */
  {
    cov_yn9gu44e3().b[23][1]++;
  }
  cov_yn9gu44e3().s[112]++;
  terryOrchestrator.start();
  /* istanbul ignore next */
  cov_yn9gu44e3().s[113]++;
  return terryOrchestrator;
};

/**
 * Stop Terry's commentary system
 */
/* istanbul ignore next */
cov_yn9gu44e3().s[114]++;
export var stopTerrySystem = function stopTerrySystem() {
  /* istanbul ignore next */
  cov_yn9gu44e3().f[23]++;
  cov_yn9gu44e3().s[115]++;
  terryOrchestrator.stop();
};

/**
 * Get Terry system status
 */
/* istanbul ignore next */
cov_yn9gu44e3().s[116]++;
export var getTerrySystemStatus = function getTerrySystemStatus() {
  /* istanbul ignore next */
  cov_yn9gu44e3().f[24]++;
  cov_yn9gu44e3().s[117]++;
  return terryOrchestrator.getStatus();
};

/**
 * Generate Terry breaking news alert
 */
/* istanbul ignore next */
cov_yn9gu44e3().s[118]++;
export var triggerTerryBreakingNews = function triggerTerryBreakingNews(feedItem) {
  /* istanbul ignore next */
  var isGenuineDrama = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_yn9gu44e3().b[24][0]++, true);
  /* istanbul ignore next */
  cov_yn9gu44e3().f[25]++;
  cov_yn9gu44e3().s[119]++;
  return terryOrchestrator.generateBreakingNewsAlert(feedItem, isGenuineDrama);
};

/**
 * Update Terry system configuration
 */
/* istanbul ignore next */
cov_yn9gu44e3().s[120]++;
export var updateTerrySystemConfig = function updateTerrySystemConfig(config) {
  /* istanbul ignore next */
  cov_yn9gu44e3().f[26]++;
  cov_yn9gu44e3().s[121]++;
  terryOrchestrator.updateConfig(config);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,