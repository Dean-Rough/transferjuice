6c013ae052ab6f531c5e2e995629eeaf
/* istanbul ignore next */ function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function cov_4xpk6k48y() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/components/feed/ServerFeedContainer.tsx";
  var hash = "a90bd2212e5d2dd37d5947f12b49043bfd1b91ef";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/components/feed/ServerFeedContainer.tsx",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 2
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 7,
          column: 6
        }
      },
      "2": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 11,
          column: 5
        }
      },
      "3": {
        start: {
          line: 10,
          column: 6
        },
        end: {
          line: 10,
          column: 44
        }
      },
      "4": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 33
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 16
        }
      },
      "6": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 50
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 16
        }
      },
      "8": {
        start: {
          line: 22,
          column: 19
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "9": {
        start: {
          line: 24,
          column: 2
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "11": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 35
        }
      },
      "12": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 40,
          column: 3
        }
      },
      "13": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 39,
          column: 6
        }
      },
      "14": {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 60,
          column: 4
        }
      },
      "15": {
        start: {
          line: 50,
          column: 10
        },
        end: {
          line: 56,
          column: 12
        }
      }
    },
    fnMap: {
      "0": {
        name: "getFeedData",
        decl: {
          start: {
            line: 3,
            column: 15
          },
          end: {
            line: 3,
            column: 26
          }
        },
        loc: {
          start: {
            line: 3,
            column: 29
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 3
      },
      "1": {
        name: "ServerFeedContainer",
        decl: {
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 21,
            column: 41
          }
        },
        loc: {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 49,
            column: 19
          },
          end: {
            line: 49,
            column: 20
          }
        },
        loc: {
          start: {
            line: 50,
            column: 10
          },
          end: {
            line: 56,
            column: 12
          }
        },
        line: 50
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 24,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 24,
            column: 15
          }
        }, {
          start: {
            line: 24,
            column: 19
          },
          end: {
            line: 24,
            column: 36
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 32,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 32,
            column: 29
          }
        }, {
          start: {
            line: 32,
            column: 33
          },
          end: {
            line: 32,
            column: 35
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 2
          },
          end: {
            line: 40,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 2
          },
          end: {
            line: 40,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a90bd2212e5d2dd37d5947f12b49043bfd1b91ef"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4xpk6k48y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4xpk6k48y();
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
import { FeedItem } from "./FeedItem";
/* istanbul ignore next */
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
function getFeedData() {
  return _getFeedData.apply(this, arguments);
}
/* istanbul ignore next */
function _getFeedData() {
  _getFeedData = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee()
  /* istanbul ignore next */
  {
    var res, data, _t;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_4xpk6k48y().f[0]++;
          cov_4xpk6k48y().s[0]++;
          _context.p = 1;
          cov_4xpk6k48y().s[1]++;
          _context.n = 2;
          return fetch("http://localhost:4433/api/feed?limit=20", {
            next: {
              revalidate: 60
            } // Revalidate every minute
          });
        case 2:
          res = _context.v;
          cov_4xpk6k48y().s[2]++;
          if (res.ok) {
            _context.n = 3;
            break;
          }
          cov_4xpk6k48y().b[0][0]++;
          cov_4xpk6k48y().s[3]++;
          throw new Error(
          /* istanbul ignore next */
          "HTTP ".concat(res.status));
        case 3:
          cov_4xpk6k48y().b[0][1]++;
        case 4:
          cov_4xpk6k48y().s[4]++;
          _context.n = 5;
          return res.json();
        case 5:
          data = _context.v;
          cov_4xpk6k48y().s[5]++;
          return _context.a(2, data);
        case 6:
          _context.p = 6;
          _t = _context.v;
          cov_4xpk6k48y().s[6]++;
          console.error("Failed to fetch feed:",
          /* istanbul ignore next */
          _t);
          cov_4xpk6k48y().s[7]++;
          return _context.a(2, null);
      }
    }, _callee, null, [[1, 6]]);
  }));
  return _getFeedData.apply(this, arguments);
}
export
/* istanbul ignore next */
function ServerFeedContainer() {
  return _ServerFeedContainer.apply(this, arguments);
}
/* istanbul ignore next */
function _ServerFeedContainer() {
  _ServerFeedContainer = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2()
  /* istanbul ignore next */
  {
    var feedData, items;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_4xpk6k48y().f[1]++;
          cov_4xpk6k48y().s[8]++;
          _context2.n = 1;
          return getFeedData();
        case 1:
          feedData = _context2.v;
          cov_4xpk6k48y().s[9]++;
          if (!(
          /* istanbul ignore next */
          (cov_4xpk6k48y().b[2][0]++, !feedData) ||
          /* istanbul ignore next */
          (cov_4xpk6k48y().b[2][1]++, !feedData.success))) {
            _context2.n = 2;
            break;
          }
          cov_4xpk6k48y().b[1][0]++;
          cov_4xpk6k48y().s[10]++;
          return _context2.a(2, /*#__PURE__*/
          /* istanbul ignore next */
          _jsx(
          /* istanbul ignore next */
          "div",
          /* istanbul ignore next */
          {
            className: "flex items-center justify-center h-64",
            children: /*#__PURE__*/
            /* istanbul ignore next */
            _jsx(
            /* istanbul ignore next */
            "div",
            /* istanbul ignore next */
            {
              className: "text-red-500",
              children: "Failed to load feed"
            })
          }));
        case 2:
          cov_4xpk6k48y().b[1][1]++;
        case 3:
          items = (cov_4xpk6k48y().s[11]++,
          /* istanbul ignore next */
          (cov_4xpk6k48y().b[3][0]++, feedData.data) ||
          /* istanbul ignore next */
          (cov_4xpk6k48y().b[3][1]++, []));
          cov_4xpk6k48y().s[12]++;
          if (!(items.length === 0)) {
            _context2.n = 4;
            break;
          }
          cov_4xpk6k48y().b[4][0]++;
          cov_4xpk6k48y().s[13]++;
          return _context2.a(2, /*#__PURE__*/
          /* istanbul ignore next */
          _jsx(
          /* istanbul ignore next */
          "div",
          /* istanbul ignore next */
          {
            className: "flex items-center justify-center h-64",
            children: /*#__PURE__*/
            /* istanbul ignore next */
            _jsx(
            /* istanbul ignore next */
            "div",
            /* istanbul ignore next */
            {
              className: "text-gray-500",
              children: "No transfer updates available"
            })
          }));
        case 4:
          cov_4xpk6k48y().b[4][1]++;
        case 5:
          cov_4xpk6k48y().s[14]++;
          return _context2.a(2, /*#__PURE__*/
          /* istanbul ignore next */
          _jsxs(
          /* istanbul ignore next */
          "div",
          /* istanbul ignore next */
          {
            className: "feed-container",
            children: [/*#__PURE__*/
            /* istanbul ignore next */
            _jsxs(
            /* istanbul ignore next */
            "div",
            /* istanbul ignore next */
            {
              className: "border-b border-border p-4",
              children: [/*#__PURE__*/
              /* istanbul ignore next */
              _jsx(
              /* istanbul ignore next */
              "h2",
              /* istanbul ignore next */
              {
                className: "text-xl font-bold",
                children: "Live Transfer Feed"
              }), /*#__PURE__*/
              /* istanbul ignore next */
              _jsxs(
              /* istanbul ignore next */
              "p",
              /* istanbul ignore next */
              {
                className: "text-sm text-gray-500",
                children: [items.length, " updates"]
              })]
            }), /*#__PURE__*/
            /* istanbul ignore next */
            _jsx(
            /* istanbul ignore next */
            "div",
            /* istanbul ignore next */
            {
              className: "divide-y divide-border",
              children: items.map(function (item) {
                /* istanbul ignore next */
                cov_4xpk6k48y().f[2]++;
                cov_4xpk6k48y().s[15]++;
                return /*#__PURE__*/ /* istanbul ignore next */_jsx(FeedItem,
                /* istanbul ignore next */
                {
                  item:
                  /* istanbul ignore next */
                  _objectSpread(_objectSpread({}, item), {}, {
                    timestamp: new Date(item.timestamp)
                  })
                }, item.id);
              })
            })]
          }));
      }
    }, _callee2);
  }));
  return _ServerFeedContainer.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,