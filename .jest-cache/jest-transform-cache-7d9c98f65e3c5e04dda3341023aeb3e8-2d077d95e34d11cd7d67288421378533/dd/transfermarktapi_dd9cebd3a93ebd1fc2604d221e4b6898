469ca833a90524ff9601d1a0dc73d592
/* istanbul ignore next */
function cov_2r2iciyi43() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/transfermarkt-api.ts";
  var hash = "d5c597d2137221b70c430ae730d031774e085da5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/transfermarkt-api.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 21
        },
        end: {
          line: 4,
          column: 56
        }
      },
      "1": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 22
        }
      },
      "2": {
        start: {
          line: 10,
          column: 33
        },
        end: {
          line: 10,
          column: 37
        }
      },
      "3": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "4": {
        start: {
          line: 14,
          column: 6
        },
        end: {
          line: 14,
          column: 47
        }
      },
      "5": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 26
        }
      },
      "7": {
        start: {
          line: 21,
          column: 30
        },
        end: {
          line: 21,
          column: 49
        }
      },
      "8": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "9": {
        start: {
          line: 24,
          column: 23
        },
        end: {
          line: 24,
          column: 59
        }
      },
      "10": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 25,
          column: 68
        }
      },
      "11": {
        start: {
          line: 25,
          column: 37
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "12": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 31
        }
      },
      "13": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 105,
          column: 49
        }
      },
      "14": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 38
        }
      },
      "15": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "16": {
        start: {
          line: 111,
          column: 23
        },
        end: {
          line: 111,
          column: 64
        }
      },
      "17": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 117,
          column: 7
        }
      },
      "18": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 10
        }
      },
      "19": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 35
        }
      },
      "20": {
        start: {
          line: 121,
          column: 6
        },
        end: {
          line: 121,
          column: 71
        }
      },
      "21": {
        start: {
          line: 122,
          column: 6
        },
        end: {
          line: 122,
          column: 18
        }
      },
      "22": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 77
        }
      },
      "23": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 133,
          column: 56
        }
      },
      "24": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 138,
          column: 61
        }
      },
      "25": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 58
        }
      },
      "26": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 148,
          column: 73
        }
      },
      "27": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 153,
          column: 52
        }
      },
      "28": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 158,
          column: 52
        }
      },
      "29": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 165,
          column: 6
        }
      },
      "30": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 170,
          column: 64
        }
      },
      "31": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 188,
          column: 5
        }
      },
      "32": {
        start: {
          line: 177,
          column: 27
        },
        end: {
          line: 177,
          column: 74
        }
      },
      "33": {
        start: {
          line: 179,
          column: 6
        },
        end: {
          line: 182,
          column: 7
        }
      },
      "34": {
        start: {
          line: 180,
          column: 30
        },
        end: {
          line: 180,
          column: 45
        }
      },
      "35": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 58
        }
      },
      "36": {
        start: {
          line: 184,
          column: 6
        },
        end: {
          line: 184,
          column: 16
        }
      },
      "37": {
        start: {
          line: 186,
          column: 6
        },
        end: {
          line: 186,
          column: 67
        }
      },
      "38": {
        start: {
          line: 187,
          column: 6
        },
        end: {
          line: 187,
          column: 16
        }
      },
      "39": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 248,
          column: 5
        }
      },
      "40": {
        start: {
          line: 205,
          column: 22
        },
        end: {
          line: 205,
          column: 58
        }
      },
      "41": {
        start: {
          line: 206,
          column: 23
        },
        end: {
          line: 206,
          column: 27
        }
      },
      "42": {
        start: {
          line: 207,
          column: 24
        },
        end: {
          line: 207,
          column: 28
        }
      },
      "43": {
        start: {
          line: 208,
          column: 22
        },
        end: {
          line: 208,
          column: 26
        }
      },
      "44": {
        start: {
          line: 210,
          column: 6
        },
        end: {
          line: 215,
          column: 7
        }
      },
      "45": {
        start: {
          line: 211,
          column: 23
        },
        end: {
          line: 211,
          column: 33
        }
      },
      "46": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 60
        }
      },
      "47": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 65
        }
      },
      "48": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 61
        }
      },
      "49": {
        start: {
          line: 218,
          column: 24
        },
        end: {
          line: 218,
          column: 56
        }
      },
      "50": {
        start: {
          line: 219,
          column: 22
        },
        end: {
          line: 219,
          column: 52
        }
      },
      "51": {
        start: {
          line: 221,
          column: 25
        },
        end: {
          line: 221,
          column: 29
        }
      },
      "52": {
        start: {
          line: 222,
          column: 23
        },
        end: {
          line: 222,
          column: 27
        }
      },
      "53": {
        start: {
          line: 224,
          column: 6
        },
        end: {
          line: 226,
          column: 7
        }
      },
      "54": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 66
        }
      },
      "55": {
        start: {
          line: 228,
          column: 6
        },
        end: {
          line: 230,
          column: 7
        }
      },
      "56": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 62
        }
      },
      "57": {
        start: {
          line: 232,
          column: 6
        },
        end: {
          line: 238,
          column: 8
        }
      },
      "58": {
        start: {
          line: 240,
          column: 6
        },
        end: {
          line: 240,
          column: 61
        }
      },
      "59": {
        start: {
          line: 241,
          column: 6
        },
        end: {
          line: 247,
          column: 8
        }
      },
      "60": {
        start: {
          line: 253,
          column: 32
        },
        end: {
          line: 253,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 12,
            column: 3
          }
        },
        loc: {
          start: {
            line: 12,
            column: 43
          },
          end: {
            line: 17,
            column: 3
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 19,
            column: 3
          }
        },
        loc: {
          start: {
            line: 19,
            column: 34
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 25
          }
        },
        loc: {
          start: {
            line: 25,
            column: 37
          },
          end: {
            line: 25,
            column: 66
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 107,
            column: 2
          },
          end: {
            line: 107,
            column: 3
          }
        },
        loc: {
          start: {
            line: 107,
            column: 57
          },
          end: {
            line: 124,
            column: 3
          }
        },
        line: 107
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 127,
            column: 2
          },
          end: {
            line: 127,
            column: 3
          }
        },
        loc: {
          start: {
            line: 127,
            column: 58
          },
          end: {
            line: 129,
            column: 3
          }
        },
        line: 127
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 132,
            column: 2
          },
          end: {
            line: 132,
            column: 3
          }
        },
        loc: {
          start: {
            line: 132,
            column: 67
          },
          end: {
            line: 134,
            column: 3
          }
        },
        line: 132
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 137,
            column: 2
          },
          end: {
            line: 137,
            column: 3
          }
        },
        loc: {
          start: {
            line: 137,
            column: 71
          },
          end: {
            line: 139,
            column: 3
          }
        },
        line: 137
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 142,
            column: 2
          },
          end: {
            line: 142,
            column: 3
          }
        },
        loc: {
          start: {
            line: 142,
            column: 66
          },
          end: {
            line: 144,
            column: 3
          }
        },
        line: 142
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 147,
            column: 2
          },
          end: {
            line: 147,
            column: 3
          }
        },
        loc: {
          start: {
            line: 147,
            column: 54
          },
          end: {
            line: 149,
            column: 3
          }
        },
        line: 147
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 152,
            column: 2
          },
          end: {
            line: 152,
            column: 3
          }
        },
        loc: {
          start: {
            line: 152,
            column: 61
          },
          end: {
            line: 154,
            column: 3
          }
        },
        line: 152
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 157,
            column: 2
          },
          end: {
            line: 157,
            column: 3
          }
        },
        loc: {
          start: {
            line: 157,
            column: 65
          },
          end: {
            line: 159,
            column: 3
          }
        },
        line: 157
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 162,
            column: 2
          },
          end: {
            line: 162,
            column: 3
          }
        },
        loc: {
          start: {
            line: 162,
            column: 68
          },
          end: {
            line: 166,
            column: 3
          }
        },
        line: 162
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 169,
            column: 2
          },
          end: {
            line: 169,
            column: 3
          }
        },
        loc: {
          start: {
            line: 169,
            column: 75
          },
          end: {
            line: 171,
            column: 3
          }
        },
        line: 169
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 174,
            column: 2
          },
          end: {
            line: 174,
            column: 3
          }
        },
        loc: {
          start: {
            line: 174,
            column: 56
          },
          end: {
            line: 189,
            column: 3
          }
        },
        line: 174
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 192,
            column: 2
          },
          end: {
            line: 192,
            column: 3
          }
        },
        loc: {
          start: {
            line: 202,
            column: 5
          },
          end: {
            line: 249,
            column: 3
          }
        },
        line: 202
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 113,
            column: 6
          },
          end: {
            line: 117,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 6
          },
          end: {
            line: 117,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "3": {
        loc: {
          start: {
            line: 179,
            column: 6
          },
          end: {
            line: 182,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 6
          },
          end: {
            line: 182,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "4": {
        loc: {
          start: {
            line: 210,
            column: 6
          },
          end: {
            line: 215,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 6
          },
          end: {
            line: 215,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "5": {
        loc: {
          start: {
            line: 224,
            column: 6
          },
          end: {
            line: 226,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 6
          },
          end: {
            line: 226,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "6": {
        loc: {
          start: {
            line: 228,
            column: 6
          },
          end: {
            line: 230,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 6
          },
          end: {
            line: 230,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d5c597d2137221b70c430ae730d031774e085da5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2r2iciyi43 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2r2iciyi43();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
// Transfermarkt API integration
// Documentation: https://transfermarkt-api.fly.dev/docs

var API_BASE_URL =
/* istanbul ignore next */
(cov_2r2iciyi43().s[0]++, "https://transfermarkt-api.fly.dev");

// Rate limiting: 2 calls per 3 seconds as per documentation
/* istanbul ignore next */
var RateLimiter = /*#__PURE__*/function () {
  function RateLimiter() {
    _classCallCheck(this, RateLimiter);
    _defineProperty(this, "lastCall", (cov_2r2iciyi43().s[1]++, 0));
    _defineProperty(this, "minInterval", (cov_2r2iciyi43().s[2]++, 1500));
  }
  return _createClass(RateLimiter, [{
    key: "throttle",
    value: function () {
      var _throttle = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee()
      /* istanbul ignore next */
      {
        var now, timeSinceLastCall, waitTime;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              cov_2r2iciyi43().f[1]++;
              now = (cov_2r2iciyi43().s[6]++, Date.now());
              timeSinceLastCall = (cov_2r2iciyi43().s[7]++, now - this.lastCall);
              cov_2r2iciyi43().s[8]++;
              if (!(timeSinceLastCall < this.minInterval)) {
                _context.n = 2;
                break;
              }
              cov_2r2iciyi43().b[1][0]++;
              waitTime = (cov_2r2iciyi43().s[9]++, this.minInterval - timeSinceLastCall);
              cov_2r2iciyi43().s[10]++;
              _context.n = 1;
              return new Promise(function (resolve) {
                /* istanbul ignore next */
                cov_2r2iciyi43().f[2]++;
                cov_2r2iciyi43().s[11]++;
                return setTimeout(resolve, waitTime);
              });
            case 1:
              _context.n = 3;
              break;
            case 2:
              cov_2r2iciyi43().b[1][1]++;
            case 3:
              cov_2r2iciyi43().s[12]++;
              this.lastCall = Date.now();
            case 4:
              return _context.a(2);
          }
        }, _callee, this);
      }));
      function throttle() {
        return _throttle.apply(this, arguments);
      }
      return throttle;
    }()
  }], [{
    key: "getInstance",
    value:
    // 1.5 seconds between calls

    function getInstance() {
      /* istanbul ignore next */
      cov_2r2iciyi43().f[0]++;
      cov_2r2iciyi43().s[3]++;
      if (!RateLimiter.instance) {
        /* istanbul ignore next */
        cov_2r2iciyi43().b[0][0]++;
        cov_2r2iciyi43().s[4]++;
        RateLimiter.instance = new RateLimiter();
      } else
      /* istanbul ignore next */
      {
        cov_2r2iciyi43().b[0][1]++;
      }
      cov_2r2iciyi43().s[5]++;
      return RateLimiter.instance;
    }
  }]);
}();
/* istanbul ignore next */
var TransfermarktAPI = /*#__PURE__*/function () {
  function TransfermarktAPI() {
    _classCallCheck(this, TransfermarktAPI);
    _defineProperty(this, "rateLimiter", (cov_2r2iciyi43().s[13]++, RateLimiter.getInstance()));
  }
  return _createClass(TransfermarktAPI, [{
    key: "request",
    value: function () {
      var _request = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(endpoint)
      /* istanbul ignore next */
      {
        var response, _t;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              cov_2r2iciyi43().f[3]++;
              cov_2r2iciyi43().s[14]++;
              _context2.n = 1;
              return this.rateLimiter.throttle();
            case 1:
              cov_2r2iciyi43().s[15]++;
              _context2.p = 2;
              cov_2r2iciyi43().s[16]++;
              _context2.n = 3;
              return fetch(
              /* istanbul ignore next */
              "".concat(API_BASE_URL).concat(endpoint));
            case 3:
              response = _context2.v;
              cov_2r2iciyi43().s[17]++;
              if (response.ok) {
                _context2.n = 4;
                break;
              }
              cov_2r2iciyi43().b[2][0]++;
              cov_2r2iciyi43().s[18]++;
              throw new Error(
              /* istanbul ignore next */
              "API request failed: ".concat(response.status, " ").concat(response.statusText));
            case 4:
              cov_2r2iciyi43().b[2][1]++;
            case 5:
              cov_2r2iciyi43().s[19]++;
              _context2.n = 6;
              return response.json();
            case 6:
              return _context2.a(2, _context2.v);
            case 7:
              _context2.p = 7;
              _t = _context2.v;
              cov_2r2iciyi43().s[20]++;
              console.error(
              /* istanbul ignore next */
              "Transfermarkt API error for ".concat(endpoint, ":"),
              /* istanbul ignore next */
              _t);
              cov_2r2iciyi43().s[21]++;
              throw _t;
            case 8:
              return _context2.a(2);
          }
        }, _callee2, this, [[2, 7]]);
      }));
      function request(_x) {
        return _request.apply(this, arguments);
      }
      return request;
    }() // Search for players
  }, {
    key: "searchPlayers",
    value: function () {
      var _searchPlayers = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3(playerName)
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              cov_2r2iciyi43().f[4]++;
              cov_2r2iciyi43().s[22]++;
              return _context3.a(2, this.request(
              /* istanbul ignore next */
              "/players/search/".concat(encodeURIComponent(playerName))));
          }
        }, _callee3, this);
      }));
      function searchPlayers(_x2) {
        return _searchPlayers.apply(this, arguments);
      }
      return searchPlayers;
    }() // Get player profile with image
  }, {
    key: "getPlayerProfile",
    value: function () {
      var _getPlayerProfile = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4(playerId)
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_2r2iciyi43().f[5]++;
              cov_2r2iciyi43().s[23]++;
              return _context4.a(2, this.request(
              /* istanbul ignore next */
              "/players/".concat(playerId, "/profile")));
          }
        }, _callee4, this);
      }));
      function getPlayerProfile(_x3) {
        return _getPlayerProfile.apply(this, arguments);
      }
      return getPlayerProfile;
    }() // Get player market value history
  }, {
    key: "getPlayerMarketValue",
    value: function () {
      var _getPlayerMarketValue = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee5(playerId)
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              cov_2r2iciyi43().f[6]++;
              cov_2r2iciyi43().s[24]++;
              return _context5.a(2, this.request(
              /* istanbul ignore next */
              "/players/".concat(playerId, "/market_value")));
          }
        }, _callee5, this);
      }));
      function getPlayerMarketValue(_x4) {
        return _getPlayerMarketValue.apply(this, arguments);
      }
      return getPlayerMarketValue;
    }() // Get player transfer history
  }, {
    key: "getPlayerTransfers",
    value: function () {
      var _getPlayerTransfers = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee6(playerId)
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context6) {
          while (1) switch (_context6.n) {
            case 0:
              cov_2r2iciyi43().f[7]++;
              cov_2r2iciyi43().s[25]++;
              return _context6.a(2, this.request(
              /* istanbul ignore next */
              "/players/".concat(playerId, "/transfers")));
          }
        }, _callee6, this);
      }));
      function getPlayerTransfers(_x5) {
        return _getPlayerTransfers.apply(this, arguments);
      }
      return getPlayerTransfers;
    }() // Search for clubs
  }, {
    key: "searchClubs",
    value: function () {
      var _searchClubs = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee7(clubName)
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context7) {
          while (1) switch (_context7.n) {
            case 0:
              cov_2r2iciyi43().f[8]++;
              cov_2r2iciyi43().s[26]++;
              return _context7.a(2, this.request(
              /* istanbul ignore next */
              "/clubs/search/".concat(encodeURIComponent(clubName))));
          }
        }, _callee7, this);
      }));
      function searchClubs(_x6) {
        return _searchClubs.apply(this, arguments);
      }
      return searchClubs;
    }() // Get club profile with badge
  }, {
    key: "getClubProfile",
    value: function () {
      var _getClubProfile = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee8(clubId)
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context8) {
          while (1) switch (_context8.n) {
            case 0:
              cov_2r2iciyi43().f[9]++;
              cov_2r2iciyi43().s[27]++;
              return _context8.a(2, this.request(
              /* istanbul ignore next */
              "/clubs/".concat(clubId, "/profile")));
          }
        }, _callee8, this);
      }));
      function getClubProfile(_x7) {
        return _getClubProfile.apply(this, arguments);
      }
      return getClubProfile;
    }() // Get club players
  }, {
    key: "getClubPlayers",
    value: function () {
      var _getClubPlayers = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee9(clubId)
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context9) {
          while (1) switch (_context9.n) {
            case 0:
              cov_2r2iciyi43().f[10]++;
              cov_2r2iciyi43().s[28]++;
              return _context9.a(2, this.request(
              /* istanbul ignore next */
              "/clubs/".concat(clubId, "/players")));
          }
        }, _callee9, this);
      }));
      function getClubPlayers(_x8) {
        return _getClubPlayers.apply(this, arguments);
      }
      return getClubPlayers;
    }() // Search competitions (e.g., Premier League)
  }, {
    key: "searchCompetitions",
    value: function () {
      var _searchCompetitions = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee0(competitionName)
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context0) {
          while (1) switch (_context0.n) {
            case 0:
              cov_2r2iciyi43().f[11]++;
              cov_2r2iciyi43().s[29]++;
              return _context0.a(2, this.request(
              /* istanbul ignore next */
              "/competitions/search/".concat(encodeURIComponent(competitionName))));
          }
        }, _callee0, this);
      }));
      function searchCompetitions(_x9) {
        return _searchCompetitions.apply(this, arguments);
      }
      return searchCompetitions;
    }() // Get competition clubs
  }, {
    key: "getCompetitionClubs",
    value: function () {
      var _getCompetitionClubs = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee1(competitionId)
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context1) {
          while (1) switch (_context1.n) {
            case 0:
              cov_2r2iciyi43().f[12]++;
              cov_2r2iciyi43().s[30]++;
              return _context1.a(2, this.request(
              /* istanbul ignore next */
              "/competitions/".concat(competitionId, "/clubs")));
          }
        }, _callee1, this);
      }));
      function getCompetitionClubs(_x0) {
        return _getCompetitionClubs.apply(this, arguments);
      }
      return getCompetitionClubs;
    }() // Helper method to get Premier League clubs
  }, {
    key: "getPremierLeagueClubs",
    value: function () {
      var _getPremierLeagueClubs = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee10()
      /* istanbul ignore next */
      {
        var competitions, premierLeague, _t2;
        return _regenerator().w(function (_context10) {
          while (1) switch (_context10.n) {
            case 0:
              cov_2r2iciyi43().f[13]++;
              cov_2r2iciyi43().s[31]++;
              _context10.p = 1;
              cov_2r2iciyi43().s[32]++;
              _context10.n = 2;
              return this.searchCompetitions("Premier League");
            case 2:
              competitions = _context10.v;
              cov_2r2iciyi43().s[33]++;
              if (!(competitions.length > 0)) {
                _context10.n = 3;
                break;
              }
              cov_2r2iciyi43().b[3][0]++;
              premierLeague = (cov_2r2iciyi43().s[34]++, competitions[0]);
              cov_2r2iciyi43().s[35]++;
              return _context10.a(2, this.getCompetitionClubs(premierLeague.id));
            case 3:
              cov_2r2iciyi43().b[3][1]++;
            case 4:
              cov_2r2iciyi43().s[36]++;
              return _context10.a(2, []);
            case 5:
              _context10.p = 5;
              _t2 = _context10.v;
              cov_2r2iciyi43().s[37]++;
              console.error("Error fetching Premier League clubs:",
              /* istanbul ignore next */
              _t2);
              cov_2r2iciyi43().s[38]++;
              return _context10.a(2, []);
          }
        }, _callee10, this, [[1, 5]]);
      }));
      function getPremierLeagueClubs() {
        return _getPremierLeagueClubs.apply(this, arguments);
      }
      return getPremierLeagueClubs;
    }() // Enhanced method to get transfer with enriched data
  }, {
    key: "getEnrichedTransfer",
    value: function () {
      var _getEnrichedTransfer = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee11(playerName, fromClub, toClub)
      /* istanbul ignore next */
      {
        var players, playerData, marketValue, transfers, player, fromClubs, toClubs, fromClubData, toClubData, _t3;
        return _regenerator().w(function (_context11) {
          while (1) switch (_context11.n) {
            case 0:
              cov_2r2iciyi43().f[14]++;
              cov_2r2iciyi43().s[39]++;
              _context11.p = 1;
              cov_2r2iciyi43().s[40]++;
              _context11.n = 2;
              return this.searchPlayers(playerName);
            case 2:
              players = _context11.v;
              playerData = (cov_2r2iciyi43().s[41]++, null);
              marketValue = (cov_2r2iciyi43().s[42]++, null);
              transfers = (cov_2r2iciyi43().s[43]++, null);
              cov_2r2iciyi43().s[44]++;
              if (!(players.length > 0)) {
                _context11.n = 6;
                break;
              }
              cov_2r2iciyi43().b[4][0]++;
              player = (cov_2r2iciyi43().s[45]++, players[0]);
              cov_2r2iciyi43().s[46]++;
              _context11.n = 3;
              return this.getPlayerProfile(player.id);
            case 3:
              playerData = _context11.v;
              cov_2r2iciyi43().s[47]++;
              _context11.n = 4;
              return this.getPlayerMarketValue(player.id);
            case 4:
              marketValue = _context11.v;
              cov_2r2iciyi43().s[48]++;
              _context11.n = 5;
              return this.getPlayerTransfers(player.id);
            case 5:
              transfers = _context11.v;
              _context11.n = 7;
              break;
            case 6:
              cov_2r2iciyi43().b[4][1]++;
            case 7:
              cov_2r2iciyi43().s[49]++;
              _context11.n = 8;
              return this.searchClubs(fromClub);
            case 8:
              fromClubs = _context11.v;
              cov_2r2iciyi43().s[50]++;
              _context11.n = 9;
              return this.searchClubs(toClub);
            case 9:
              toClubs = _context11.v;
              fromClubData = (cov_2r2iciyi43().s[51]++, null);
              toClubData = (cov_2r2iciyi43().s[52]++, null);
              cov_2r2iciyi43().s[53]++;
              if (!(fromClubs.length > 0)) {
                _context11.n = 11;
                break;
              }
              cov_2r2iciyi43().b[5][0]++;
              cov_2r2iciyi43().s[54]++;
              _context11.n = 10;
              return this.getClubProfile(fromClubs[0].id);
            case 10:
              fromClubData = _context11.v;
              _context11.n = 12;
              break;
            case 11:
              cov_2r2iciyi43().b[5][1]++;
            case 12:
              cov_2r2iciyi43().s[55]++;
              if (!(toClubs.length > 0)) {
                _context11.n = 14;
                break;
              }
              cov_2r2iciyi43().b[6][0]++;
              cov_2r2iciyi43().s[56]++;
              _context11.n = 13;
              return this.getClubProfile(toClubs[0].id);
            case 13:
              toClubData = _context11.v;
              _context11.n = 15;
              break;
            case 14:
              cov_2r2iciyi43().b[6][1]++;
            case 15:
              cov_2r2iciyi43().s[57]++;
              return _context11.a(2, {
                player: playerData,
                fromClubData: fromClubData,
                toClubData: toClubData,
                marketValue: marketValue,
                transfers: transfers
              });
            case 16:
              _context11.p = 16;
              _t3 = _context11.v;
              cov_2r2iciyi43().s[58]++;
              console.error("Error enriching transfer data:",
              /* istanbul ignore next */
              _t3);
              cov_2r2iciyi43().s[59]++;
              return _context11.a(2, {
                player: null,
                fromClubData: null,
                toClubData: null,
                marketValue: null,
                transfers: null
              });
          }
        }, _callee11, this, [[1, 16]]);
      }));
      function getEnrichedTransfer(_x1, _x10, _x11) {
        return _getEnrichedTransfer.apply(this, arguments);
      }
      return getEnrichedTransfer;
    }()
  }]);
}(); // Export singleton instance
export var transfermarktAPI =
/* istanbul ignore next */
(cov_2r2iciyi43().s[60]++, new TransfermarktAPI());

// Export types
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMnIyaWNpeWk0MyIsImFjdHVhbENvdmVyYWdlIiwiX3R5cGVvZiIsIm8iLCJTeW1ib2wiLCJpdGVyYXRvciIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiX3JlZ2VuZXJhdG9yIiwiZSIsInQiLCJyIiwibiIsInRvU3RyaW5nVGFnIiwiaSIsImMiLCJHZW5lcmF0b3IiLCJ1IiwiT2JqZWN0IiwiY3JlYXRlIiwiX3JlZ2VuZXJhdG9yRGVmaW5lMiIsImYiLCJwIiwieSIsIkciLCJ2IiwiYSIsImQiLCJiaW5kIiwibGVuZ3RoIiwibCIsIlR5cGVFcnJvciIsImNhbGwiLCJkb25lIiwidmFsdWUiLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwiZ2V0UHJvdG90eXBlT2YiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsImRpc3BsYXlOYW1lIiwidyIsIm0iLCJkZWZpbmVQcm9wZXJ0eSIsIl9yZWdlbmVyYXRvckRlZmluZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIl9pbnZva2UiLCJhc3luY0dlbmVyYXRvclN0ZXAiLCJQcm9taXNlIiwicmVzb2x2ZSIsInRoZW4iLCJfYXN5bmNUb0dlbmVyYXRvciIsImFyZ3VtZW50cyIsImFwcGx5IiwiX25leHQiLCJfdGhyb3ciLCJfY2xhc3NDYWxsQ2hlY2siLCJfZGVmaW5lUHJvcGVydGllcyIsIl90b1Byb3BlcnR5S2V5Iiwia2V5IiwiX2NyZWF0ZUNsYXNzIiwiX2RlZmluZVByb3BlcnR5IiwiX3RvUHJpbWl0aXZlIiwidG9QcmltaXRpdmUiLCJTdHJpbmciLCJOdW1iZXIiLCJBUElfQkFTRV9VUkwiLCJzIiwiUmF0ZUxpbWl0ZXIiLCJfdGhyb3R0bGUiLCJfY2FsbGVlIiwibm93IiwidGltZVNpbmNlTGFzdENhbGwiLCJ3YWl0VGltZSIsIl9jb250ZXh0IiwiRGF0ZSIsImxhc3RDYWxsIiwibWluSW50ZXJ2YWwiLCJiIiwic2V0VGltZW91dCIsInRocm90dGxlIiwiZ2V0SW5zdGFuY2UiLCJpbnN0YW5jZSIsIlRyYW5zZmVybWFya3RBUEkiLCJfcmVxdWVzdCIsIl9jYWxsZWUyIiwiZW5kcG9pbnQiLCJyZXNwb25zZSIsIl90IiwiX2NvbnRleHQyIiwicmF0ZUxpbWl0ZXIiLCJmZXRjaCIsImNvbmNhdCIsIm9rIiwiRXJyb3IiLCJzdGF0dXMiLCJzdGF0dXNUZXh0IiwianNvbiIsImNvbnNvbGUiLCJlcnJvciIsInJlcXVlc3QiLCJfeCIsIl9zZWFyY2hQbGF5ZXJzIiwiX2NhbGxlZTMiLCJwbGF5ZXJOYW1lIiwiX2NvbnRleHQzIiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwic2VhcmNoUGxheWVycyIsIl94MiIsIl9nZXRQbGF5ZXJQcm9maWxlIiwiX2NhbGxlZTQiLCJwbGF5ZXJJZCIsIl9jb250ZXh0NCIsImdldFBsYXllclByb2ZpbGUiLCJfeDMiLCJfZ2V0UGxheWVyTWFya2V0VmFsdWUiLCJfY2FsbGVlNSIsIl9jb250ZXh0NSIsImdldFBsYXllck1hcmtldFZhbHVlIiwiX3g0IiwiX2dldFBsYXllclRyYW5zZmVycyIsIl9jYWxsZWU2IiwiX2NvbnRleHQ2IiwiZ2V0UGxheWVyVHJhbnNmZXJzIiwiX3g1IiwiX3NlYXJjaENsdWJzIiwiX2NhbGxlZTciLCJjbHViTmFtZSIsIl9jb250ZXh0NyIsInNlYXJjaENsdWJzIiwiX3g2IiwiX2dldENsdWJQcm9maWxlIiwiX2NhbGxlZTgiLCJjbHViSWQiLCJfY29udGV4dDgiLCJnZXRDbHViUHJvZmlsZSIsIl94NyIsIl9nZXRDbHViUGxheWVycyIsIl9jYWxsZWU5IiwiX2NvbnRleHQ5IiwiZ2V0Q2x1YlBsYXllcnMiLCJfeDgiLCJfc2VhcmNoQ29tcGV0aXRpb25zIiwiX2NhbGxlZTAiLCJjb21wZXRpdGlvbk5hbWUiLCJfY29udGV4dDAiLCJzZWFyY2hDb21wZXRpdGlvbnMiLCJfeDkiLCJfZ2V0Q29tcGV0aXRpb25DbHVicyIsIl9jYWxsZWUxIiwiY29tcGV0aXRpb25JZCIsIl9jb250ZXh0MSIsImdldENvbXBldGl0aW9uQ2x1YnMiLCJfeDAiLCJfZ2V0UHJlbWllckxlYWd1ZUNsdWJzIiwiX2NhbGxlZTEwIiwiY29tcGV0aXRpb25zIiwicHJlbWllckxlYWd1ZSIsIl90MiIsIl9jb250ZXh0MTAiLCJpZCIsImdldFByZW1pZXJMZWFndWVDbHVicyIsIl9nZXRFbnJpY2hlZFRyYW5zZmVyIiwiX2NhbGxlZTExIiwiZnJvbUNsdWIiLCJ0b0NsdWIiLCJwbGF5ZXJzIiwicGxheWVyRGF0YSIsIm1hcmtldFZhbHVlIiwidHJhbnNmZXJzIiwicGxheWVyIiwiZnJvbUNsdWJzIiwidG9DbHVicyIsImZyb21DbHViRGF0YSIsInRvQ2x1YkRhdGEiLCJfdDMiLCJfY29udGV4dDExIiwiZ2V0RW5yaWNoZWRUcmFuc2ZlciIsIl94MSIsIl94MTAiLCJfeDExIiwidHJhbnNmZXJtYXJrdEFQSSJdLCJzb3VyY2VzIjpbInRyYW5zZmVybWFya3QtYXBpLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRyYW5zZmVybWFya3QgQVBJIGludGVncmF0aW9uXG4vLyBEb2N1bWVudGF0aW9uOiBodHRwczovL3RyYW5zZmVybWFya3QtYXBpLmZseS5kZXYvZG9jc1xuXG5jb25zdCBBUElfQkFTRV9VUkwgPSBcImh0dHBzOi8vdHJhbnNmZXJtYXJrdC1hcGkuZmx5LmRldlwiO1xuXG4vLyBSYXRlIGxpbWl0aW5nOiAyIGNhbGxzIHBlciAzIHNlY29uZHMgYXMgcGVyIGRvY3VtZW50YXRpb25cbmNsYXNzIFJhdGVMaW1pdGVyIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IFJhdGVMaW1pdGVyO1xuICBwcml2YXRlIGxhc3RDYWxsID0gMDtcbiAgcHJpdmF0ZSByZWFkb25seSBtaW5JbnRlcnZhbCA9IDE1MDA7IC8vIDEuNSBzZWNvbmRzIGJldHdlZW4gY2FsbHNcblxuICBwdWJsaWMgc3RhdGljIGdldEluc3RhbmNlKCk6IFJhdGVMaW1pdGVyIHtcbiAgICBpZiAoIVJhdGVMaW1pdGVyLmluc3RhbmNlKSB7XG4gICAgICBSYXRlTGltaXRlci5pbnN0YW5jZSA9IG5ldyBSYXRlTGltaXRlcigpO1xuICAgIH1cbiAgICByZXR1cm4gUmF0ZUxpbWl0ZXIuaW5zdGFuY2U7XG4gIH1cblxuICBhc3luYyB0aHJvdHRsZSgpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICAgIGNvbnN0IHRpbWVTaW5jZUxhc3RDYWxsID0gbm93IC0gdGhpcy5sYXN0Q2FsbDtcblxuICAgIGlmICh0aW1lU2luY2VMYXN0Q2FsbCA8IHRoaXMubWluSW50ZXJ2YWwpIHtcbiAgICAgIGNvbnN0IHdhaXRUaW1lID0gdGhpcy5taW5JbnRlcnZhbCAtIHRpbWVTaW5jZUxhc3RDYWxsO1xuICAgICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgd2FpdFRpbWUpKTtcbiAgICB9XG5cbiAgICB0aGlzLmxhc3RDYWxsID0gRGF0ZS5ub3coKTtcbiAgfVxufVxuXG5pbnRlcmZhY2UgUGxheWVyUHJvZmlsZSB7XG4gIGlkOiBudW1iZXI7XG4gIG5hbWU6IHN0cmluZztcbiAgaW1hZ2VfdXJsOiBzdHJpbmc7XG4gIHNoaXJ0X251bWJlcjogbnVtYmVyO1xuICBwb3NpdGlvbjogc3RyaW5nO1xuICBhZ2U6IG51bWJlcjtcbiAgaGVpZ2h0OiBzdHJpbmc7XG4gIGZvb3Q6IHN0cmluZztcbiAgam9pbmVkOiBzdHJpbmc7XG4gIGNvbnRyYWN0X2V4cGlyZXM6IHN0cmluZztcbiAgbWFya2V0X3ZhbHVlOiBzdHJpbmc7XG4gIG5hdGlvbmFsaXR5OiBzdHJpbmc7XG4gIHNlY29uZF9uYXRpb25hbGl0eT86IHN0cmluZztcbiAgY2x1Yjoge1xuICAgIGlkOiBudW1iZXI7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGltYWdlX3VybDogc3RyaW5nO1xuICB9O1xufVxuXG5pbnRlcmZhY2UgQ2x1YlByb2ZpbGUge1xuICBpZDogbnVtYmVyO1xuICBuYW1lOiBzdHJpbmc7XG4gIGltYWdlX3VybDogc3RyaW5nO1xuICBsZWdhbF9mb3JtOiBzdHJpbmc7XG4gIGFkZHJlc3NfbGluZV8xOiBzdHJpbmc7XG4gIGFkZHJlc3NfbGluZV8yOiBzdHJpbmc7XG4gIGFkZHJlc3NfbGluZV8zOiBzdHJpbmc7XG4gIHRlbDogc3RyaW5nO1xuICBmYXg6IHN0cmluZztcbiAgd2Vic2l0ZTogc3RyaW5nO1xuICBmb3VuZGVkOiBudW1iZXI7XG4gIG1lbWJlcnM6IG51bWJlcjtcbiAgb3RoZXJfc3BvcnRzOiBzdHJpbmdbXTtcbiAgY29sb3JzOiBzdHJpbmdbXTtcbiAgc3RhZGl1bV9uYW1lOiBzdHJpbmc7XG4gIHN0YWRpdW1fc2VhdHM6IG51bWJlcjtcbiAgY3VycmVudF90cmFuc2Zlcl9yZWNvcmQ6IHN0cmluZztcbiAgY3VycmVudF9tYXJrZXRfdmFsdWU6IHN0cmluZztcbiAgc3F1YWRfc2l6ZTogbnVtYmVyO1xuICBzcXVhZF9hdmVyYWdlX2FnZTogbnVtYmVyO1xuICBmb3JlaWduZXJzX251bWJlcjogbnVtYmVyO1xuICBmb3JlaWduZXJzX3BlcmNlbnRhZ2U6IG51bWJlcjtcbiAgbmF0aW9uYWxfdGVhbV9wbGF5ZXJzOiBudW1iZXI7XG59XG5cbmludGVyZmFjZSBUcmFuc2ZlciB7XG4gIGlkOiBudW1iZXI7XG4gIHBsYXllcl9uYW1lOiBzdHJpbmc7XG4gIHBsYXllcl9pZDogbnVtYmVyO1xuICB0cmFuc2Zlcl9kYXRlOiBzdHJpbmc7XG4gIHRyYW5zZmVyX2ZlZTogc3RyaW5nO1xuICBmcm9tX2NsdWI6IHtcbiAgICBpZDogbnVtYmVyO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBpbWFnZV91cmw6IHN0cmluZztcbiAgfTtcbiAgdG9fY2x1Yjoge1xuICAgIGlkOiBudW1iZXI7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGltYWdlX3VybDogc3RyaW5nO1xuICB9O1xufVxuXG5pbnRlcmZhY2UgTWFya2V0VmFsdWUge1xuICBhZ2U6IG51bWJlcjtcbiAgZGF0ZTogc3RyaW5nO1xuICBtYXJrZXRfdmFsdWU6IHN0cmluZztcbiAgY2x1Yl9uYW1lOiBzdHJpbmc7XG59XG5cbmNsYXNzIFRyYW5zZmVybWFya3RBUEkge1xuICBwcml2YXRlIHJhdGVMaW1pdGVyID0gUmF0ZUxpbWl0ZXIuZ2V0SW5zdGFuY2UoKTtcblxuICBwcml2YXRlIGFzeW5jIHJlcXVlc3Q8VD4oZW5kcG9pbnQ6IHN0cmluZyk6IFByb21pc2U8VD4ge1xuICAgIGF3YWl0IHRoaXMucmF0ZUxpbWl0ZXIudGhyb3R0bGUoKTtcblxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke0FQSV9CQVNFX1VSTH0ke2VuZHBvaW50fWApO1xuXG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBgQVBJIHJlcXVlc3QgZmFpbGVkOiAke3Jlc3BvbnNlLnN0YXR1c30gJHtyZXNwb25zZS5zdGF0dXNUZXh0fWBcbiAgICAgICAgKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihgVHJhbnNmZXJtYXJrdCBBUEkgZXJyb3IgZm9yICR7ZW5kcG9pbnR9OmAsIGVycm9yKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuXG4gIC8vIFNlYXJjaCBmb3IgcGxheWVyc1xuICBhc3luYyBzZWFyY2hQbGF5ZXJzKHBsYXllck5hbWU6IHN0cmluZyk6IFByb21pc2U8YW55W10+IHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KGAvcGxheWVycy9zZWFyY2gvJHtlbmNvZGVVUklDb21wb25lbnQocGxheWVyTmFtZSl9YCk7XG4gIH1cblxuICAvLyBHZXQgcGxheWVyIHByb2ZpbGUgd2l0aCBpbWFnZVxuICBhc3luYyBnZXRQbGF5ZXJQcm9maWxlKHBsYXllcklkOiBudW1iZXIpOiBQcm9taXNlPFBsYXllclByb2ZpbGU+IHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KGAvcGxheWVycy8ke3BsYXllcklkfS9wcm9maWxlYCk7XG4gIH1cblxuICAvLyBHZXQgcGxheWVyIG1hcmtldCB2YWx1ZSBoaXN0b3J5XG4gIGFzeW5jIGdldFBsYXllck1hcmtldFZhbHVlKHBsYXllcklkOiBudW1iZXIpOiBQcm9taXNlPE1hcmtldFZhbHVlW10+IHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KGAvcGxheWVycy8ke3BsYXllcklkfS9tYXJrZXRfdmFsdWVgKTtcbiAgfVxuXG4gIC8vIEdldCBwbGF5ZXIgdHJhbnNmZXIgaGlzdG9yeVxuICBhc3luYyBnZXRQbGF5ZXJUcmFuc2ZlcnMocGxheWVySWQ6IG51bWJlcik6IFByb21pc2U8VHJhbnNmZXJbXT4ge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoYC9wbGF5ZXJzLyR7cGxheWVySWR9L3RyYW5zZmVyc2ApO1xuICB9XG5cbiAgLy8gU2VhcmNoIGZvciBjbHVic1xuICBhc3luYyBzZWFyY2hDbHVicyhjbHViTmFtZTogc3RyaW5nKTogUHJvbWlzZTxhbnlbXT4ge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoYC9jbHVicy9zZWFyY2gvJHtlbmNvZGVVUklDb21wb25lbnQoY2x1Yk5hbWUpfWApO1xuICB9XG5cbiAgLy8gR2V0IGNsdWIgcHJvZmlsZSB3aXRoIGJhZGdlXG4gIGFzeW5jIGdldENsdWJQcm9maWxlKGNsdWJJZDogbnVtYmVyKTogUHJvbWlzZTxDbHViUHJvZmlsZT4ge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoYC9jbHVicy8ke2NsdWJJZH0vcHJvZmlsZWApO1xuICB9XG5cbiAgLy8gR2V0IGNsdWIgcGxheWVyc1xuICBhc3luYyBnZXRDbHViUGxheWVycyhjbHViSWQ6IG51bWJlcik6IFByb21pc2U8UGxheWVyUHJvZmlsZVtdPiB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChgL2NsdWJzLyR7Y2x1YklkfS9wbGF5ZXJzYCk7XG4gIH1cblxuICAvLyBTZWFyY2ggY29tcGV0aXRpb25zIChlLmcuLCBQcmVtaWVyIExlYWd1ZSlcbiAgYXN5bmMgc2VhcmNoQ29tcGV0aXRpb25zKGNvbXBldGl0aW9uTmFtZTogc3RyaW5nKTogUHJvbWlzZTxhbnlbXT4ge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoXG4gICAgICBgL2NvbXBldGl0aW9ucy9zZWFyY2gvJHtlbmNvZGVVUklDb21wb25lbnQoY29tcGV0aXRpb25OYW1lKX1gXG4gICAgKTtcbiAgfVxuXG4gIC8vIEdldCBjb21wZXRpdGlvbiBjbHVic1xuICBhc3luYyBnZXRDb21wZXRpdGlvbkNsdWJzKGNvbXBldGl0aW9uSWQ6IG51bWJlcik6IFByb21pc2U8Q2x1YlByb2ZpbGVbXT4ge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoYC9jb21wZXRpdGlvbnMvJHtjb21wZXRpdGlvbklkfS9jbHVic2ApO1xuICB9XG5cbiAgLy8gSGVscGVyIG1ldGhvZCB0byBnZXQgUHJlbWllciBMZWFndWUgY2x1YnNcbiAgYXN5bmMgZ2V0UHJlbWllckxlYWd1ZUNsdWJzKCk6IFByb21pc2U8Q2x1YlByb2ZpbGVbXT4ge1xuICAgIHRyeSB7XG4gICAgICAvLyBTZWFyY2ggZm9yIFByZW1pZXIgTGVhZ3VlXG4gICAgICBjb25zdCBjb21wZXRpdGlvbnMgPSBhd2FpdCB0aGlzLnNlYXJjaENvbXBldGl0aW9ucyhcIlByZW1pZXIgTGVhZ3VlXCIpO1xuXG4gICAgICBpZiAoY29tcGV0aXRpb25zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgY29uc3QgcHJlbWllckxlYWd1ZSA9IGNvbXBldGl0aW9uc1swXTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0Q29tcGV0aXRpb25DbHVicyhwcmVtaWVyTGVhZ3VlLmlkKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFtdO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgUHJlbWllciBMZWFndWUgY2x1YnM6XCIsIGVycm9yKTtcbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gIH1cblxuICAvLyBFbmhhbmNlZCBtZXRob2QgdG8gZ2V0IHRyYW5zZmVyIHdpdGggZW5yaWNoZWQgZGF0YVxuICBhc3luYyBnZXRFbnJpY2hlZFRyYW5zZmVyKFxuICAgIHBsYXllck5hbWU6IHN0cmluZyxcbiAgICBmcm9tQ2x1Yjogc3RyaW5nLFxuICAgIHRvQ2x1Yjogc3RyaW5nXG4gICk6IFByb21pc2U8e1xuICAgIHBsYXllcjogUGxheWVyUHJvZmlsZSB8IG51bGw7XG4gICAgZnJvbUNsdWJEYXRhOiBDbHViUHJvZmlsZSB8IG51bGw7XG4gICAgdG9DbHViRGF0YTogQ2x1YlByb2ZpbGUgfCBudWxsO1xuICAgIG1hcmtldFZhbHVlOiBNYXJrZXRWYWx1ZVtdIHwgbnVsbDtcbiAgICB0cmFuc2ZlcnM6IFRyYW5zZmVyW10gfCBudWxsO1xuICB9PiB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIFNlYXJjaCBmb3IgcGxheWVyXG4gICAgICBjb25zdCBwbGF5ZXJzID0gYXdhaXQgdGhpcy5zZWFyY2hQbGF5ZXJzKHBsYXllck5hbWUpO1xuICAgICAgbGV0IHBsYXllckRhdGEgPSBudWxsO1xuICAgICAgbGV0IG1hcmtldFZhbHVlID0gbnVsbDtcbiAgICAgIGxldCB0cmFuc2ZlcnMgPSBudWxsO1xuXG4gICAgICBpZiAocGxheWVycy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGNvbnN0IHBsYXllciA9IHBsYXllcnNbMF07XG4gICAgICAgIHBsYXllckRhdGEgPSBhd2FpdCB0aGlzLmdldFBsYXllclByb2ZpbGUocGxheWVyLmlkKTtcbiAgICAgICAgbWFya2V0VmFsdWUgPSBhd2FpdCB0aGlzLmdldFBsYXllck1hcmtldFZhbHVlKHBsYXllci5pZCk7XG4gICAgICAgIHRyYW5zZmVycyA9IGF3YWl0IHRoaXMuZ2V0UGxheWVyVHJhbnNmZXJzKHBsYXllci5pZCk7XG4gICAgICB9XG5cbiAgICAgIC8vIFNlYXJjaCBmb3IgY2x1YnNcbiAgICAgIGNvbnN0IGZyb21DbHVicyA9IGF3YWl0IHRoaXMuc2VhcmNoQ2x1YnMoZnJvbUNsdWIpO1xuICAgICAgY29uc3QgdG9DbHVicyA9IGF3YWl0IHRoaXMuc2VhcmNoQ2x1YnModG9DbHViKTtcblxuICAgICAgbGV0IGZyb21DbHViRGF0YSA9IG51bGw7XG4gICAgICBsZXQgdG9DbHViRGF0YSA9IG51bGw7XG5cbiAgICAgIGlmIChmcm9tQ2x1YnMubGVuZ3RoID4gMCkge1xuICAgICAgICBmcm9tQ2x1YkRhdGEgPSBhd2FpdCB0aGlzLmdldENsdWJQcm9maWxlKGZyb21DbHVic1swXS5pZCk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0b0NsdWJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdG9DbHViRGF0YSA9IGF3YWl0IHRoaXMuZ2V0Q2x1YlByb2ZpbGUodG9DbHVic1swXS5pZCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBsYXllcjogcGxheWVyRGF0YSxcbiAgICAgICAgZnJvbUNsdWJEYXRhLFxuICAgICAgICB0b0NsdWJEYXRhLFxuICAgICAgICBtYXJrZXRWYWx1ZSxcbiAgICAgICAgdHJhbnNmZXJzLFxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGVucmljaGluZyB0cmFuc2ZlciBkYXRhOlwiLCBlcnJvcik7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwbGF5ZXI6IG51bGwsXG4gICAgICAgIGZyb21DbHViRGF0YTogbnVsbCxcbiAgICAgICAgdG9DbHViRGF0YTogbnVsbCxcbiAgICAgICAgbWFya2V0VmFsdWU6IG51bGwsXG4gICAgICAgIHRyYW5zZmVyczogbnVsbCxcbiAgICAgIH07XG4gICAgfVxuICB9XG59XG5cbi8vIEV4cG9ydCBzaW5nbGV0b24gaW5zdGFuY2VcbmV4cG9ydCBjb25zdCB0cmFuc2Zlcm1hcmt0QVBJID0gbmV3IFRyYW5zZmVybWFya3RBUEkoKTtcblxuLy8gRXhwb3J0IHR5cGVzXG5leHBvcnQgdHlwZSB7IFBsYXllclByb2ZpbGUsIENsdWJQcm9maWxlLCBUcmFuc2ZlciwgTWFya2V0VmFsdWUgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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