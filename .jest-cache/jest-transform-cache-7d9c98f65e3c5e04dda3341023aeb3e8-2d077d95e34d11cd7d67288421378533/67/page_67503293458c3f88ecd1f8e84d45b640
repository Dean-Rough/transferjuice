95cf1a213fe175b269286464ed6dbe19
"use client";

/* istanbul ignore next */
function cov_1m8kjf0u31() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/app/simple-test/page.tsx";
  var hash = "c0c85492ba0781497d49e6d75ad2ba3ac313b1cd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/app/simple-test/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 32
        },
        end: {
          line: 6,
          column: 57
        }
      },
      "1": {
        start: {
          line: 8,
          column: 2
        },
        end: {
          line: 11,
          column: 9
        }
      },
      "2": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 33
        }
      },
      "3": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 54
        }
      },
      "4": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 24,
          column: 4
        }
      },
      "5": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 18,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "SimpleTestPage",
        decl: {
          start: {
            line: 5,
            column: 24
          },
          end: {
            line: 5,
            column: 38
          }
        },
        loc: {
          start: {
            line: 5,
            column: 41
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 12
          },
          end: {
            line: 8,
            column: 13
          }
        },
        loc: {
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 11,
            column: 3
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 17
          },
          end: {
            line: 18,
            column: 18
          }
        },
        loc: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 18,
            column: 52
          }
        },
        line: 18
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c0c85492ba0781497d49e6d75ad2ba3ac313b1cd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1m8kjf0u31 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1m8kjf0u31();
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
import { useEffect, useState } from "react";
/* istanbul ignore next */
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export default function SimpleTestPage() {
  /* istanbul ignore next */
  cov_1m8kjf0u31().f[0]++;
  var
    /* istanbul ignore next */
    _ref = (cov_1m8kjf0u31().s[0]++, useState("Initial state")),
    /* istanbul ignore next */
    _ref2 = _slicedToArray(_ref, 2),
    /* istanbul ignore next */
    message = _ref2[0],
    /* istanbul ignore next */
    setMessage = _ref2[1];
  /* istanbul ignore next */
  cov_1m8kjf0u31().s[1]++;
  useEffect(function () {
    /* istanbul ignore next */
    cov_1m8kjf0u31().f[1]++;
    cov_1m8kjf0u31().s[2]++;
    setMessage("useEffect ran!");
    /* istanbul ignore next */
    cov_1m8kjf0u31().s[3]++;
    console.log("SimpleTestPage: useEffect executed");
  }, []);
  /* istanbul ignore next */
  cov_1m8kjf0u31().s[4]++;
  return /*#__PURE__*/ /* istanbul ignore next */_jsxs(
  /* istanbul ignore next */
  "div",
  /* istanbul ignore next */
  {
    className: "p-8",
    children: [/*#__PURE__*/
    /* istanbul ignore next */
    _jsx(
    /* istanbul ignore next */
    "h1",
    /* istanbul ignore next */
    {
      className: "text-2xl font-bold",
      children: "Simple Test"
    }), /*#__PURE__*/
    /* istanbul ignore next */
    _jsx(
    /* istanbul ignore next */
    "p",
    /* istanbul ignore next */
    {
      className: "mt-4",
      children: message
    }), /*#__PURE__*/
    /* istanbul ignore next */
    _jsx(
    /* istanbul ignore next */
    "button",
    /* istanbul ignore next */
    {
      onClick: function onClick() {
        /* istanbul ignore next */
        cov_1m8kjf0u31().f[2]++;
        cov_1m8kjf0u31().s[5]++;
        return setMessage("Button clicked!");
      },
      className: "mt-4 px-4 py-2 bg-blue-500 text-white rounded",
      children: "Click me"
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW04a2pmMHUzMSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIl9zbGljZWRUb0FycmF5IiwiciIsImUiLCJfYXJyYXlXaXRoSG9sZXMiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVSZXN0IiwiVHlwZUVycm9yIiwiYSIsIl9hcnJheUxpa2VUb0FycmF5IiwidCIsInRvU3RyaW5nIiwiY2FsbCIsInNsaWNlIiwiY29uc3RydWN0b3IiLCJBcnJheSIsImZyb20iLCJ0ZXN0IiwibGVuZ3RoIiwibiIsImwiLCJTeW1ib2wiLCJpdGVyYXRvciIsImkiLCJ1IiwibyIsIm5leHQiLCJPYmplY3QiLCJkb25lIiwicHVzaCIsInZhbHVlIiwiaXNBcnJheSIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwianN4IiwiX2pzeCIsImpzeHMiLCJfanN4cyIsIlNpbXBsZVRlc3RQYWdlIiwiX3JlZiIsIl9yZWYyIiwibWVzc2FnZSIsInNldE1lc3NhZ2UiLCJjb25zb2xlIiwibG9nIiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJvbkNsaWNrIl0sInNvdXJjZXMiOlsicGFnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2ltcGxlVGVzdFBhZ2UoKSB7XG4gIGNvbnN0IFttZXNzYWdlLCBzZXRNZXNzYWdlXSA9IHVzZVN0YXRlKFwiSW5pdGlhbCBzdGF0ZVwiKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldE1lc3NhZ2UoXCJ1c2VFZmZlY3QgcmFuIVwiKTtcbiAgICBjb25zb2xlLmxvZyhcIlNpbXBsZVRlc3RQYWdlOiB1c2VFZmZlY3QgZXhlY3V0ZWRcIik7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwicC04XCI+XG4gICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC0yeGwgZm9udC1ib2xkXCI+U2ltcGxlIFRlc3Q8L2gxPlxuICAgICAgPHAgY2xhc3NOYW1lPVwibXQtNFwiPnttZXNzYWdlfTwvcD5cbiAgICAgIDxidXR0b25cbiAgICAgICAgb25DbGljaz17KCkgPT4gc2V0TWVzc2FnZShcIkJ1dHRvbiBjbGlja2VkIVwiKX1cbiAgICAgICAgY2xhc3NOYW1lPVwibXQtNCBweC00IHB5LTIgYmctYmx1ZS01MDAgdGV4dC13aGl0ZSByb3VuZGVkXCJcbiAgICAgID5cbiAgICAgICAgQ2xpY2sgbWVcbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUFDO0FBQUEsU0FBQUEsZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZ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