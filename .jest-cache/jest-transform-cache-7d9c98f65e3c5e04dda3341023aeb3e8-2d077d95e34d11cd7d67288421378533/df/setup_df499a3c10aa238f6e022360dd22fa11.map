{"version":3,"names":["require","_util","_server","_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_classCallCheck","a","n","TypeError","_defineProperties","key","_createClass","i","_toPrimitive","toPrimitive","call","String","Number","global","TextEncoder","TextDecoder","globalThis","fetch","_require","Headers","Request","Response","IntersectionObserver","disconnect","observe","unobserve","ResizeObserver","window","jest","fn","mockImplementation","query","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","now","Date","mark","measure","clearMarks","clearMeasures","originalConsole","console","beforeEach","log","warn","error","afterEach","assign","clearAllMocks","server","resetHandlers","beforeAll","listen","onUnhandledRequest","afterAll","close"],"sources":["setup.ts"],"sourcesContent":["import \"@testing-library/jest-dom\";\nimport \"jest-extended\";\nimport { TextEncoder, TextDecoder } from \"util\";\n\n// Polyfills for testing environment\nglobal.TextEncoder = TextEncoder;\nglobal.TextDecoder = TextDecoder as any;\n\n// Polyfills for fetch API (required by MSW)\nif (typeof globalThis.fetch === \"undefined\") {\n  const { fetch, Headers, Request, Response } = require(\"undici\");\n  globalThis.fetch = fetch;\n  globalThis.Headers = Headers;\n  globalThis.Request = Request;\n  globalThis.Response = Response;\n}\n\nimport { server } from \"./mocks/server\";\n\n// Mock IntersectionObserver for components that use it\nglobal.IntersectionObserver = class IntersectionObserver {\n  constructor() {}\n  disconnect() {}\n  observe() {}\n  unobserve() {}\n};\n\n// Mock ResizeObserver for components that use it\nglobal.ResizeObserver = class ResizeObserver {\n  constructor() {}\n  disconnect() {}\n  observe() {}\n  unobserve() {}\n};\n\n// Mock window.matchMedia for responsive components\nObject.defineProperty(window, \"matchMedia\", {\n  writable: true,\n  value: jest.fn().mockImplementation((query) => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(), // deprecated\n    removeListener: jest.fn(), // deprecated\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n});\n\n// Mock performance API for components that use it\nObject.defineProperty(window, \"performance\", {\n  writable: true,\n  value: {\n    now: jest.fn(() => Date.now()),\n    mark: jest.fn(),\n    measure: jest.fn(),\n    clearMarks: jest.fn(),\n    clearMeasures: jest.fn(),\n  },\n});\n\n// Mock fetch for API calls\nglobal.fetch = jest.fn();\n\n// Suppress console.log/warn/error in tests unless explicitly needed\nconst originalConsole = { ...console };\nbeforeEach(() => {\n  console.log = jest.fn();\n  console.warn = jest.fn();\n  console.error = jest.fn();\n});\n\nafterEach(() => {\n  Object.assign(console, originalConsole);\n  jest.clearAllMocks();\n  server.resetHandlers();\n});\n\n// Start MSW server before all tests\nbeforeAll(() => {\n  server.listen({ onUnhandledRequest: \"error\" });\n});\n\n// Stop MSW server after all tests\nafterAll(() => {\n  server.close();\n});\n"],"mappings":"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","ignoreList":[]}