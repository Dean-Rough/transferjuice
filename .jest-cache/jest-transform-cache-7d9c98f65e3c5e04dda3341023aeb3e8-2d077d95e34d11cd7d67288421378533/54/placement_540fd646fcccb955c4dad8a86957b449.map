{"version":3,"names":["cov_1dieecog0","actualCoverage","_typeof","o","Symbol","iterator","constructor","prototype","_createForOfIteratorHelper","r","e","t","Array","isArray","_unsupportedIterableToArray","length","_n","F","s","n","done","value","f","TypeError","a","u","call","next","_arrayLikeToArray","toString","slice","name","from","test","_regenerator","toStringTag","i","c","Generator","Object","create","_regeneratorDefine2","p","y","G","v","d","bind","l","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_classCallCheck","_defineProperties","key","_createClass","_toPrimitive","toPrimitive","String","Number","z","OpenAI","ImagePlacementSchema","object","id","string","imageId","sectionId","position","order","number","size","alignment","caption","relevanceScore","min","max","contextMatch","playerMatch","clubMatch","topicMatch","sentimentMatch","layout","breakAt","wrapText","marginTop","marginBottom","responsive","mobile","tablet","desktop","optimization","lazyLoad","preload","priority","srcSet","array","ArticleLayoutSchema","articleId","sections","placements","heroImage","optional","thumbnailImage","metadata","totalImages","averageRelevance","layoutScore","readabilityImpact","loadTime","performance","totalImageSize","compressionRatio","lazyLoadCount","preloadCount","ImagePlacementService","config","maxImagesPerSection","minRelevanceScore","preferredAspectRatio","enableLazyLoading","optimizeForMobile","openai","apiKey","openaiApiKey","_createArticleLayout","_callee","availableImages","contentAnalyses","_this","startTime","sectionPlacements","allPlacements","layoutTime","_context","Date","now","selectHeroImage","selectThumbnailImage","all","map","section","createSectionPlacements","flatMap","sp","calculateLayoutMetrics","calculatePerformanceMetrics","parse","concat","createArticleLayout","_x","_x2","_x3","_findOptimalPlacements","_callee2","content","contentAnalysis","_this2","relevantImages","filteredImages","topImages","_ref","image","score","placement","_context2","scoreImageRelevance","scored","sort","b","createPlacement","findOptimalPlacements","_x4","_x5","_x6","_selectHeroImage","_callee3","firstSection","_this3","candidates","_context3","undefined","img","variants","large","width","type","aScore","calculateHeroScore","bScore","generateCaption","createResponsiveLayout","generateSrcSet","_x7","_x8","_selectThumbnailImage","_callee4","_context4","aspect","medium","height","createThumbnailPlacement","_x9","_x0","thumbnail","url","_createSectionPlacements","_callee5","sectionAnalysis","_context5","find","analysis","sourceTweets","some","tweetId","_x1","_x10","_x11","_scoreImageRelevance","_callee7","images","_this4","results","_context7","_ref2","_callee6","_context6","calculateContextMatch","calculateOverallRelevance","_x15","_x12","_x13","_x14","_calculateContextMatch","_callee8","_context8","calculatePlayerMatch","calculateClubMatch","calculateTopicMatch","calculateSentimentMatch","_x16","_x17","_x18","playerNames","entities","players","toLowerCase","imageTitle","title","imageAlt","altText","matchScore","_iterator","_step","playerName","includes","nameParts","split","_iterator2","_step2","part","err","Math","clubNames","clubs","_iterator3","_step3","clubName","lowerClubName","abbreviations","generateClubAbbreviations","_iterator4","_step4","abbrev","clubWords","_iterator5","_step5","word","_calculateTopicMatch","_callee9","_response$choices$","response","_t","_context9","chat","completions","model","messages","role","source","substring","max_tokens","temperature","parseInt","choices","message","trim","console","warn","_x19","_x20","sentiment","classification","transferType","weights","accessibility","readabilityScore","_createPlacement","_callee0","_context0","determineOptimalPosition","determineOptimalSize","determineOptimalAlignment","_x21","_x22","_x23","_x24","_x25","contentLength","_generateCaption","_callee1","_response$choices$2","_t2","_context1","attribution","_x26","_x27","baseMargin","replace","reduce","sum","round","usedImages","fileSize","originalSize"],"sources":["placement.ts"],"sourcesContent":["/**\n * Contextual Image Placement System\n * AI-powered image-to-content matching and layout optimization\n */\n\nimport type { ProcessedImage } from './processor';\nimport type { ArticleSection } from '@/lib/ai/article-generator';\nimport type { ContentAnalysis } from '@/lib/ai/content-analyzer';\nimport { z } from 'zod';\nimport OpenAI from 'openai';\n\n// Placement schemas\nexport const ImagePlacementSchema = z.object({\n  id: z.string(),\n  imageId: z.string(),\n  sectionId: z.string(),\n  position: z.enum(['header', 'inline', 'sidebar', 'footer']),\n  order: z.number(),\n  size: z.enum(['thumbnail', 'medium', 'large', 'full-width']),\n  alignment: z.enum(['left', 'center', 'right', 'justify']),\n  caption: z.string(),\n  relevanceScore: z.number().min(0).max(100),\n  contextMatch: z.object({\n    playerMatch: z.number().min(0).max(100),\n    clubMatch: z.number().min(0).max(100),\n    topicMatch: z.number().min(0).max(100),\n    sentimentMatch: z.number().min(0).max(100),\n  }),\n  layout: z.object({\n    breakAt: z.number(), // Character position in content\n    wrapText: z.boolean(),\n    marginTop: z.number(),\n    marginBottom: z.number(),\n    responsive: z.object({\n      mobile: z.object({\n        size: z.enum(['thumbnail', 'medium', 'large']),\n        alignment: z.enum(['left', 'center', 'right']),\n      }),\n      tablet: z.object({\n        size: z.enum(['thumbnail', 'medium', 'large']),\n        alignment: z.enum(['left', 'center', 'right']),\n      }),\n      desktop: z.object({\n        size: z.enum(['thumbnail', 'medium', 'large', 'full-width']),\n        alignment: z.enum(['left', 'center', 'right', 'justify']),\n      }),\n    }),\n  }),\n  optimization: z.object({\n    lazyLoad: z.boolean(),\n    preload: z.boolean(),\n    priority: z.enum(['high', 'medium', 'low']),\n    srcSet: z.array(z.string()),\n  }),\n});\n\nexport const ArticleLayoutSchema = z.object({\n  articleId: z.string(),\n  sections: z.array(\n    z.object({\n      sectionId: z.string(),\n      placements: z.array(ImagePlacementSchema),\n    })\n  ),\n  heroImage: ImagePlacementSchema.optional(),\n  thumbnailImage: ImagePlacementSchema.optional(),\n  metadata: z.object({\n    totalImages: z.number(),\n    averageRelevance: z.number(),\n    layoutScore: z.number().min(0).max(100),\n    readabilityImpact: z.number().min(-10).max(10),\n    loadTime: z.number(),\n  }),\n  performance: z.object({\n    totalImageSize: z.number(),\n    compressionRatio: z.number(),\n    lazyLoadCount: z.number(),\n    preloadCount: z.number(),\n  }),\n});\n\nexport type ImagePlacement = z.infer<typeof ImagePlacementSchema>;\nexport type ArticleLayout = z.infer<typeof ArticleLayoutSchema>;\n\ninterface PlacementConfig {\n  openaiApiKey: string;\n  maxImagesPerSection?: number;\n  minRelevanceScore?: number;\n  preferredAspectRatio?: number;\n  enableLazyLoading?: boolean;\n  optimizeForMobile?: boolean;\n}\n\nexport class ImagePlacementService {\n  private openai: OpenAI;\n  private config: Required<PlacementConfig>;\n\n  constructor(config: PlacementConfig) {\n    this.config = {\n      maxImagesPerSection: 2,\n      minRelevanceScore: 60,\n      preferredAspectRatio: 1.5, // 3:2 ratio\n      enableLazyLoading: true,\n      optimizeForMobile: true,\n      ...config,\n    };\n\n    this.openai = new OpenAI({\n      apiKey: this.config.openaiApiKey,\n    });\n  }\n\n  /**\n   * Create optimal image layout for an article\n   */\n  async createArticleLayout(\n    sections: ArticleSection[],\n    availableImages: ProcessedImage[],\n    contentAnalyses: ContentAnalysis[]\n  ): Promise<ArticleLayout> {\n    const startTime = Date.now();\n\n    // Select hero image\n    const heroImage = await this.selectHeroImage(availableImages, sections[0]);\n\n    // Select thumbnail for article preview\n    const thumbnailImage = await this.selectThumbnailImage(\n      availableImages,\n      sections\n    );\n\n    // Create placements for each section\n    const sectionPlacements = await Promise.all(\n      sections.map((section) =>\n        this.createSectionPlacements(section, availableImages, contentAnalyses)\n      )\n    );\n\n    // Calculate layout metrics\n    const allPlacements = sectionPlacements.flatMap((sp) => sp.placements);\n    const metadata = this.calculateLayoutMetrics(allPlacements);\n    const performance = this.calculatePerformanceMetrics(\n      allPlacements,\n      availableImages\n    );\n\n    const layoutTime = Date.now() - startTime;\n\n    return ArticleLayoutSchema.parse({\n      articleId: `layout_${Date.now()}`,\n      sections: sectionPlacements,\n      heroImage,\n      thumbnailImage,\n      metadata: {\n        ...metadata,\n        loadTime: layoutTime,\n      },\n      performance,\n    });\n  }\n\n  /**\n   * Find optimal image placements for content\n   */\n  async findOptimalPlacements(\n    content: string,\n    availableImages: ProcessedImage[],\n    contentAnalysis: ContentAnalysis\n  ): Promise<ImagePlacement[]> {\n    const placements: ImagePlacement[] = [];\n\n    // Filter images by relevance\n    const relevantImages = await this.scoreImageRelevance(\n      availableImages,\n      content,\n      contentAnalysis\n    );\n\n    const filteredImages = relevantImages.filter(\n      (scored) => scored.score >= this.config.minRelevanceScore\n    );\n\n    // Create placements for top images\n    const topImages = filteredImages\n      .sort((a, b) => b.score - a.score)\n      .slice(0, this.config.maxImagesPerSection);\n\n    for (let i = 0; i < topImages.length; i++) {\n      const { image, score, contextMatch } = topImages[i];\n\n      const placement = await this.createPlacement(\n        image,\n        content,\n        i,\n        score,\n        contextMatch\n      );\n\n      placements.push(placement);\n    }\n\n    return placements;\n  }\n\n  /**\n   * Select hero image for article\n   */\n  private async selectHeroImage(\n    availableImages: ProcessedImage[],\n    firstSection: ArticleSection\n  ): Promise<ImagePlacement | undefined> {\n    if (availableImages.length === 0) return undefined;\n\n    // Prefer high-quality, high-relevance images for hero\n    const candidates = availableImages\n      .filter((img) => img.variants.large.width >= 600)\n      .filter((img) => img.type === 'player' || img.type === 'club')\n      .sort((a, b) => {\n        // Prioritize by type, then by resolution\n        const aScore = this.calculateHeroScore(a);\n        const bScore = this.calculateHeroScore(b);\n        return bScore - aScore;\n      });\n\n    if (candidates.length === 0) return undefined;\n\n    const heroImage = candidates[0];\n    const caption = await this.generateCaption(heroImage, firstSection.content);\n\n    return {\n      id: `hero_${heroImage.id}`,\n      imageId: heroImage.id,\n      sectionId: firstSection.id,\n      position: 'header',\n      order: 0,\n      size: 'full-width',\n      alignment: 'center',\n      caption,\n      relevanceScore: 95,\n      contextMatch: {\n        playerMatch: 90,\n        clubMatch: 85,\n        topicMatch: 95,\n        sentimentMatch: 80,\n      },\n      layout: this.createResponsiveLayout('header', 'full-width'),\n      optimization: {\n        lazyLoad: false,\n        preload: true,\n        priority: 'high',\n        srcSet: this.generateSrcSet(heroImage),\n      },\n    };\n  }\n\n  /**\n   * Select thumbnail image for article preview\n   */\n  private async selectThumbnailImage(\n    availableImages: ProcessedImage[],\n    sections: ArticleSection[]\n  ): Promise<ImagePlacement | undefined> {\n    if (availableImages.length === 0) return undefined;\n\n    // Prefer square or landscape images for thumbnails\n    const candidates = availableImages.filter((img) => {\n      const aspect = img.variants.medium.width / img.variants.medium.height;\n      return aspect >= 1.0 && aspect <= 2.0; // 1:1 to 2:1 ratio\n    });\n\n    if (candidates.length === 0)\n      return availableImages[0]\n        ? this.createThumbnailPlacement(availableImages[0])\n        : undefined;\n\n    return this.createThumbnailPlacement(candidates[0]);\n  }\n\n  /**\n   * Create thumbnail placement configuration\n   */\n  private createThumbnailPlacement(image: ProcessedImage): ImagePlacement {\n    return {\n      id: `thumb_${image.id}`,\n      imageId: image.id,\n      sectionId: 'thumbnail',\n      position: 'inline',\n      order: 0,\n      size: 'thumbnail',\n      alignment: 'center',\n      caption: '',\n      relevanceScore: 80,\n      contextMatch: {\n        playerMatch: 75,\n        clubMatch: 75,\n        topicMatch: 80,\n        sentimentMatch: 70,\n      },\n      layout: this.createResponsiveLayout('inline', 'thumbnail'),\n      optimization: {\n        lazyLoad: false,\n        preload: true,\n        priority: 'high',\n        srcSet: [image.variants.thumbnail.url],\n      },\n    };\n  }\n\n  /**\n   * Create placements for a section\n   */\n  private async createSectionPlacements(\n    section: ArticleSection,\n    availableImages: ProcessedImage[],\n    contentAnalyses: ContentAnalysis[]\n  ): Promise<{ sectionId: string; placements: ImagePlacement[] }> {\n    const sectionAnalysis = contentAnalyses.find((analysis) =>\n      section.sourceTweets.some((tweetId) => analysis.tweetId === tweetId)\n    );\n\n    if (!sectionAnalysis) {\n      return { sectionId: section.id, placements: [] };\n    }\n\n    const placements = await this.findOptimalPlacements(\n      section.content,\n      availableImages,\n      sectionAnalysis\n    );\n\n    return {\n      sectionId: section.id,\n      placements: placements.map((p) => ({ ...p, sectionId: section.id })),\n    };\n  }\n\n  /**\n   * Score image relevance to content\n   */\n  private async scoreImageRelevance(\n    images: ProcessedImage[],\n    content: string,\n    contentAnalysis: ContentAnalysis\n  ): Promise<\n    Array<{\n      image: ProcessedImage;\n      score: number;\n      contextMatch: ImagePlacement['contextMatch'];\n    }>\n  > {\n    const results = await Promise.all(\n      images.map(async (image) => {\n        const contextMatch = await this.calculateContextMatch(\n          image,\n          content,\n          contentAnalysis\n        );\n\n        const score = this.calculateOverallRelevance(contextMatch, image);\n\n        return { image, score, contextMatch };\n      })\n    );\n\n    return results;\n  }\n\n  /**\n   * Calculate context match scores\n   */\n  private async calculateContextMatch(\n    image: ProcessedImage,\n    content: string,\n    contentAnalysis: ContentAnalysis\n  ): Promise<ImagePlacement['contextMatch']> {\n    const playerMatch = this.calculatePlayerMatch(image, contentAnalysis);\n    const clubMatch = this.calculateClubMatch(image, contentAnalysis);\n    const topicMatch = await this.calculateTopicMatch(image, content);\n    const sentimentMatch = this.calculateSentimentMatch(image, contentAnalysis);\n\n    return {\n      playerMatch,\n      clubMatch,\n      topicMatch,\n      sentimentMatch,\n    };\n  }\n\n  /**\n   * Calculate player name matching\n   */\n  private calculatePlayerMatch(\n    image: ProcessedImage,\n    contentAnalysis: ContentAnalysis\n  ): number {\n    if (image.type !== 'player') return 50; // Neutral for non-player images\n\n    const playerNames = contentAnalysis.entities.players.map((p) =>\n      p.name.toLowerCase()\n    );\n    const imageTitle = image.title.toLowerCase();\n    const imageAlt = image.altText.toLowerCase();\n\n    let matchScore = 0;\n\n    for (const playerName of playerNames) {\n      if (imageTitle.includes(playerName) || imageAlt.includes(playerName)) {\n        matchScore += 60; // Higher base score for exact matches\n      }\n\n      // Partial name matching\n      const nameParts = playerName.split(' ');\n      for (const part of nameParts) {\n        if (\n          part.length > 2 &&\n          (imageTitle.includes(part) || imageAlt.includes(part))\n        ) {\n          matchScore += 20; // Higher partial match bonus\n        }\n      }\n    }\n\n    // If we found any player-related content, give minimum good score\n    if (matchScore > 0 && matchScore < 60) {\n      matchScore = 60;\n    }\n\n    return Math.min(matchScore, 100);\n  }\n\n  /**\n   * Calculate club name matching\n   */\n  private calculateClubMatch(\n    image: ProcessedImage,\n    contentAnalysis: ContentAnalysis\n  ): number {\n    if (image.type !== 'club') return 50; // Neutral for non-club images\n\n    const clubNames = contentAnalysis.entities.clubs.map((c) =>\n      c.name.toLowerCase()\n    );\n    const imageTitle = image.title.toLowerCase();\n    const imageAlt = image.altText.toLowerCase();\n\n    let matchScore = 0;\n\n    for (const clubName of clubNames) {\n      const lowerClubName = clubName.toLowerCase();\n\n      // Direct name matching\n      if (\n        imageTitle.includes(lowerClubName) ||\n        imageAlt.includes(lowerClubName)\n      ) {\n        matchScore += 80; // Higher base score for exact matches\n      }\n\n      // Common club abbreviations\n      const abbreviations = this.generateClubAbbreviations(clubName);\n      for (const abbrev of abbreviations) {\n        if (imageTitle.includes(abbrev) || imageAlt.includes(abbrev)) {\n          matchScore += 60; // Higher abbreviation bonus\n        }\n      }\n\n      // Partial word matching for club names\n      const clubWords = lowerClubName.split(' ');\n      for (const word of clubWords) {\n        if (\n          word.length > 2 &&\n          (imageTitle.includes(word) || imageAlt.includes(word))\n        ) {\n          matchScore += 30;\n        }\n      }\n    }\n\n    return Math.min(matchScore, 100);\n  }\n\n  /**\n   * Calculate topic relevance using AI\n   */\n  private async calculateTopicMatch(\n    image: ProcessedImage,\n    content: string\n  ): Promise<number> {\n    try {\n      const response = await this.openai.chat.completions.create({\n        model: 'gpt-4-turbo-preview',\n        messages: [\n          {\n            role: 'system',\n            content:\n              'You are an expert at matching images to content. Rate how well an image relates to the given text content on a scale of 0-100.',\n          },\n          {\n            role: 'user',\n            content: `Rate the relevance of this image to the content (0-100):\n\nImage: ${image.title}\nAlt text: ${image.altText}\nType: ${image.type}\nSource: ${image.source}\n\nContent: ${content.substring(0, 500)}...\n\nReturn only a number between 0 and 100.`,\n          },\n        ],\n        max_tokens: 10,\n        temperature: 0.1,\n      });\n\n      const score = parseInt(\n        response.choices[0]?.message?.content?.trim() || '50'\n      );\n      return Math.max(0, Math.min(100, score));\n    } catch (error) {\n      console.warn('Topic matching failed, using fallback:', error);\n      return 50; // Neutral fallback\n    }\n  }\n\n  /**\n   * Calculate sentiment matching\n   */\n  private calculateSentimentMatch(\n    image: ProcessedImage,\n    contentAnalysis: ContentAnalysis\n  ): number {\n    // Images from celebrations/signings match positive sentiment\n    if (\n      image.type === 'celebration' &&\n      contentAnalysis.sentiment.sentiment === 'positive'\n    ) {\n      return 90;\n    }\n\n    // News images are generally neutral and match any sentiment\n    if (image.type === 'news') {\n      return 75;\n    }\n\n    // Player/club images match based on transfer context\n    if (contentAnalysis.classification.transferType === 'CONFIRMED') {\n      return 85;\n    }\n\n    return 70; // Default moderate match\n  }\n\n  /**\n   * Calculate overall relevance score\n   */\n  private calculateOverallRelevance(\n    contextMatch: ImagePlacement['contextMatch'],\n    image: ProcessedImage\n  ): number {\n    const weights = {\n      playerMatch: 0.3,\n      clubMatch: 0.3,\n      topicMatch: 0.25,\n      sentimentMatch: 0.15,\n    };\n\n    let score =\n      contextMatch.playerMatch * weights.playerMatch +\n      contextMatch.clubMatch * weights.clubMatch +\n      contextMatch.topicMatch * weights.topicMatch +\n      contextMatch.sentimentMatch * weights.sentimentMatch;\n\n    // Quality bonuses\n    if (image.accessibility.readabilityScore > 80) score += 5;\n    if (image.optimization.compressionRatio > 0.5) score += 3;\n    if (image.variants.large.width >= 800) score += 2;\n\n    return Math.min(score, 100);\n  }\n\n  /**\n   * Create individual placement\n   */\n  private async createPlacement(\n    image: ProcessedImage,\n    content: string,\n    order: number,\n    relevanceScore: number,\n    contextMatch: ImagePlacement['contextMatch']\n  ): Promise<ImagePlacement> {\n    const position = this.determineOptimalPosition(content, order);\n    const size = this.determineOptimalSize(image, position);\n    const alignment = this.determineOptimalAlignment(size, position);\n    const caption = await this.generateCaption(image, content);\n\n    return {\n      id: `placement_${image.id}_${order}`,\n      imageId: image.id,\n      sectionId: '', // Will be set by caller\n      position,\n      order,\n      size,\n      alignment,\n      caption,\n      relevanceScore,\n      contextMatch,\n      layout: this.createResponsiveLayout(position, size),\n      optimization: {\n        lazyLoad: this.config.enableLazyLoading && order > 0,\n        preload: order === 0,\n        priority: order === 0 ? 'high' : 'medium',\n        srcSet: this.generateSrcSet(image),\n      },\n    };\n  }\n\n  /**\n   * Determine optimal position for image\n   */\n  private determineOptimalPosition(\n    content: string,\n    order: number\n  ): ImagePlacement['position'] {\n    const contentLength = content.length;\n\n    if (order === 0 && contentLength < 500) return 'sidebar'; // First image in short content goes to sidebar\n    if (order === 0) return 'inline'; // First image in longer content inline\n\n    if (contentLength > 1000) return 'inline'; // Long content benefits from inline images\n\n    return 'sidebar'; // Shorter content can use sidebar\n  }\n\n  /**\n   * Determine optimal size for image\n   */\n  private determineOptimalSize(\n    image: ProcessedImage,\n    position: ImagePlacement['position']\n  ): ImagePlacement['size'] {\n    if (position === 'header') return 'full-width';\n    if (position === 'sidebar') return 'medium';\n\n    // For inline, choose based on image quality and aspect ratio\n    const aspect = image.variants.large.width / image.variants.large.height;\n\n    if (aspect > 1.8) return 'large'; // Wide images work well large\n    if (aspect < 1.2) return 'medium'; // Square-ish images better medium\n\n    return 'medium'; // Default to medium\n  }\n\n  /**\n   * Determine optimal alignment\n   */\n  private determineOptimalAlignment(\n    size: ImagePlacement['size'],\n    position: ImagePlacement['position']\n  ): ImagePlacement['alignment'] {\n    if (position === 'header') return 'center';\n    if (position === 'sidebar') return 'right';\n    if (size === 'full-width') return 'center';\n\n    return 'left'; // Default for inline images\n  }\n\n  /**\n   * Generate image caption\n   */\n  private async generateCaption(\n    image: ProcessedImage,\n    content: string\n  ): Promise<string> {\n    try {\n      const response = await this.openai.chat.completions.create({\n        model: 'gpt-4-turbo-preview',\n        messages: [\n          {\n            role: 'system',\n            content:\n              'Generate concise, informative captions for transfer news images. Include attribution and keep under 100 characters.',\n          },\n          {\n            role: 'user',\n            content: `Generate a caption for this image in the context of this content:\n\nImage: ${image.title}\nAlt text: ${image.altText}\nAttribution: ${image.attribution}\nType: ${image.type}\n\nContent context: ${content.substring(0, 300)}...\n\nCreate a caption that's informative, includes proper attribution, and is under 100 characters.`,\n          },\n        ],\n        max_tokens: 50,\n        temperature: 0.3,\n      });\n\n      const caption = response.choices[0]?.message?.content?.trim();\n      return caption && caption.length <= 100\n        ? caption\n        : `${image.title} (${image.attribution})`;\n    } catch (error) {\n      console.warn('Caption generation failed:', error);\n      return `${image.title} (${image.attribution})`;\n    }\n  }\n\n  /**\n   * Create responsive layout configuration\n   */\n  private createResponsiveLayout(\n    position: ImagePlacement['position'],\n    size: ImagePlacement['size']\n  ): ImagePlacement['layout'] {\n    const baseMargin = 16;\n\n    return {\n      breakAt: 0, // Will be calculated during actual placement\n      wrapText: position === 'inline',\n      marginTop: baseMargin,\n      marginBottom: baseMargin,\n      responsive: {\n        mobile: {\n          size: size === 'full-width' ? 'large' : 'medium',\n          alignment: 'center',\n        },\n        tablet: {\n          size: size === 'full-width' ? 'large' : (size as any),\n          alignment: position === 'sidebar' ? 'right' : 'center',\n        },\n        desktop: {\n          size,\n          alignment: position === 'header' ? 'center' : 'left',\n        },\n      },\n    };\n  }\n\n  /**\n   * Generate responsive srcSet\n   */\n  private generateSrcSet(image: ProcessedImage): string[] {\n    return [\n      `${image.variants.thumbnail.url} 150w`,\n      `${image.variants.medium.url} 400w`,\n      `${image.variants.large.url} 800w`,\n    ];\n  }\n\n  /**\n   * Calculate hero image score\n   */\n  private calculateHeroScore(image: ProcessedImage): number {\n    let score = 0;\n\n    // Type preferences\n    if (image.type === 'player') score += 40;\n    else if (image.type === 'club') score += 35;\n    else if (image.type === 'celebration') score += 30;\n    else score += 20;\n\n    // Quality bonuses\n    score += image.accessibility.readabilityScore * 0.2;\n    score += image.variants.large.width / 10; // Resolution bonus\n\n    // Source preferences\n    if (image.source === 'twitter') score += 10;\n\n    return score;\n  }\n\n  /**\n   * Generate club abbreviations for matching\n   */\n  private generateClubAbbreviations(clubName: string): string[] {\n    const name = clubName.toLowerCase();\n    const abbreviations: string[] = [];\n\n    // Common patterns\n    if (name.includes('manchester united'))\n      abbreviations.push('mufc', 'united');\n    if (name.includes('manchester city')) abbreviations.push('mcfc', 'city');\n    if (name.includes('arsenal')) abbreviations.push('afc');\n    if (name.includes('chelsea')) abbreviations.push('cfc');\n    if (name.includes('liverpool')) abbreviations.push('lfc');\n    if (name.includes('tottenham')) abbreviations.push('thfc', 'spurs');\n\n    // Generic patterns\n    if (name.includes(' fc')) abbreviations.push(name.replace(' fc', ' f.c.'));\n    if (name.includes(' united'))\n      abbreviations.push(name.replace(' united', ' utd'));\n\n    return abbreviations;\n  }\n\n  /**\n   * Calculate layout metrics\n   */\n  private calculateLayoutMetrics(\n    placements: ImagePlacement[]\n  ): Omit<ArticleLayout['metadata'], 'loadTime'> {\n    const totalImages = placements.length;\n    const averageRelevance =\n      placements.length > 0\n        ? placements.reduce((sum, p) => sum + p.relevanceScore, 0) /\n          placements.length\n        : 0;\n\n    // Layout score based on image distribution and relevance\n    let layoutScore = averageRelevance * 0.6;\n\n    // Bonus for good image distribution\n    if (totalImages >= 2 && totalImages <= 4) layoutScore += 20;\n    else if (totalImages === 1) layoutScore += 10;\n    else if (totalImages > 4) layoutScore -= 10;\n\n    // Readability impact (negative if too many images)\n    const readabilityImpact = totalImages > 3 ? -2 * (totalImages - 3) : 1;\n\n    return {\n      totalImages,\n      averageRelevance: Math.round(averageRelevance),\n      layoutScore: Math.max(0, Math.min(100, Math.round(layoutScore))),\n      readabilityImpact,\n    };\n  }\n\n  /**\n   * Calculate performance metrics\n   */\n  private calculatePerformanceMetrics(\n    placements: ImagePlacement[],\n    availableImages: ProcessedImage[]\n  ): ArticleLayout['performance'] {\n    const usedImages = availableImages.filter((img) =>\n      placements.some((p) => p.imageId === img.id)\n    );\n\n    const totalImageSize = usedImages.reduce(\n      (sum, img) => sum + img.variants.large.fileSize,\n      0\n    );\n\n    const originalSize = usedImages.reduce(\n      (sum, img) => sum + img.optimization.originalSize,\n      0\n    );\n\n    const compressionRatio =\n      originalSize > 0 ? (originalSize - totalImageSize) / originalSize : 0;\n\n    const lazyLoadCount = placements.filter(\n      (p) => p.optimization.lazyLoad\n    ).length;\n    const preloadCount = placements.filter(\n      (p) => p.optimization.preload\n    ).length;\n\n    return {\n      totalImageSize,\n      compressionRatio,\n      lazyLoadCount,\n      preloadCount,\n    };\n  }\n}\n"],"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","ignoreList":[]}