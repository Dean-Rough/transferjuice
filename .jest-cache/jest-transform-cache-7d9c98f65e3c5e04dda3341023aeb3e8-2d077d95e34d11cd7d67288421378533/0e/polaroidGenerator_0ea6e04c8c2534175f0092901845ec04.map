{"version":3,"names":["cov_1uvpgc68ga","actualCoverage","_regenerator","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","generatePolaroidFrame","_x","_generatePolaroidFrame","_callee","options","params","_context","s","URLSearchParams","player","playerName","club","b","clubName","frame","frameColor","style","concat","imageUrl","toString","generateBatchPolaroids","_x2","_generateBatchPolaroids","_callee3","players","results","_context3","Map","all","map","_ref","_callee2","url","_t","_context2","set","console","error","_x3"],"sources":["polaroidGenerator.ts"],"sourcesContent":["/**\n * Polaroid Frame Generator\n * Creates Instagram-style polaroid frames for player images\n */\n\nexport interface PolaroidFrameOptions {\n  imageUrl: string;\n  playerName: string;\n  clubName?: string;\n  frameColor?: string;\n  style?: \"vintage\" | \"modern\" | \"classic\";\n}\n\n/**\n * Generate polaroid frame for player image\n */\nexport async function generatePolaroidFrame(\n  options: PolaroidFrameOptions\n): Promise<string> {\n  // In production, this would use Canvas API or Sharp to generate actual images\n  // For now, return the original image URL with query params for CSS styling\n\n  const params = new URLSearchParams({\n    player: options.playerName,\n    club: options.clubName || \"\",\n    frame: options.frameColor || \"#FFFFFF\",\n    style: options.style || \"vintage\",\n  });\n\n  // In production, this would return a generated image URL\n  // For now, we'll use the original image and apply CSS styling\n  return `${options.imageUrl}?polaroid=${params.toString()}`;\n}\n\n/**\n * Generate batch of polaroids\n */\nexport async function generateBatchPolaroids(\n  players: PolaroidFrameOptions[]\n): Promise<Map<string, string>> {\n  const results = new Map<string, string>();\n\n  await Promise.all(\n    players.map(async (player) => {\n      try {\n        const url = await generatePolaroidFrame(player);\n        results.set(player.playerName, url);\n      } catch (error) {\n        console.error(\n          `Failed to generate polaroid for ${player.playerName}:`,\n          error\n        );\n      }\n    })\n  );\n\n  return results;\n}\n"],"mappings":"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","ignoreList":[]}