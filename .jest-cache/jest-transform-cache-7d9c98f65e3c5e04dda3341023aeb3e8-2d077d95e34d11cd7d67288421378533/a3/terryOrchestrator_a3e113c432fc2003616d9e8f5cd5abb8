f91058c4e6a6a5e430d57c245505f914
/* istanbul ignore next */
function cov_yn9gu44e3() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/ai/terryOrchestrator.ts";
  var hash = "68ac4d0c1cedcd36bc90a4fa8f802a1d871ee3af";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/ai/terryOrchestrator.ts",
    statementMap: {
      "0": {
        start: {
          line: 53,
          column: 70
        },
        end: {
          line: 67,
          column: 1
        }
      },
      "1": {
        start: {
          line: 75,
          column: 31
        },
        end: {
          line: 75,
          column: 36
        }
      },
      "2": {
        start: {
          line: 76,
          column: 46
        },
        end: {
          line: 76,
          column: 50
        }
      },
      "3": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 25
        }
      },
      "4": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 40
        }
      },
      "5": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "6": {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 60
        }
      },
      "7": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "8": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 26
        }
      },
      "9": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 64
        }
      },
      "10": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 44
        }
      },
      "11": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "12": {
        start: {
          line: 100,
          column: 6
        },
        end: {
          line: 100,
          column: 36
        }
      },
      "13": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 103,
          column: 73
        }
      },
      "14": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "15": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 111,
          column: 56
        }
      },
      "16": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "17": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 27
        }
      },
      "18": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "19": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 37
        }
      },
      "20": {
        start: {
          line: 120,
          column: 6
        },
        end: {
          line: 120,
          column: 29
        }
      },
      "21": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 31
        }
      },
      "22": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 60
        }
      },
      "23": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 74
        }
      },
      "24": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 35
        }
      },
      "25": {
        start: {
          line: 149,
          column: 31
        },
        end: {
          line: 149,
          column: 32
        }
      },
      "26": {
        start: {
          line: 151,
          column: 29
        },
        end: {
          line: 166,
          column: 5
        }
      },
      "27": {
        start: {
          line: 152,
          column: 6
        },
        end: {
          line: 152,
          column: 34
        }
      },
      "28": {
        start: {
          line: 152,
          column: 27
        },
        end: {
          line: 152,
          column: 34
        }
      },
      "29": {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 157,
          column: 8
        }
      },
      "30": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 169,
          column: 41
        }
      },
      "31": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "32": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "33": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 180,
          column: 76
        }
      },
      "34": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "35": {
        start: {
          line: 183,
          column: 6
        },
        end: {
          line: 194,
          column: 7
        }
      },
      "36": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 47
        }
      },
      "37": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 42
        }
      },
      "38": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 49
        }
      },
      "39": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 30
        }
      },
      "40": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 78
        }
      },
      "41": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 205,
          column: 5
        }
      },
      "42": {
        start: {
          line: 204,
          column: 6
        },
        end: {
          line: 204,
          column: 13
        }
      },
      "43": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 213,
          column: 5
        }
      },
      "44": {
        start: {
          line: 212,
          column: 6
        },
        end: {
          line: 212,
          column: 13
        }
      },
      "45": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 229,
          column: 5
        }
      },
      "46": {
        start: {
          line: 220,
          column: 22
        },
        end: {
          line: 223,
          column: 7
        }
      },
      "47": {
        start: {
          line: 224,
          column: 6
        },
        end: {
          line: 227,
          column: 7
        }
      },
      "48": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 46
        }
      },
      "49": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 72
        }
      },
      "50": {
        start: {
          line: 228,
          column: 6
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "51": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 238,
          column: 5
        }
      },
      "52": {
        start: {
          line: 233,
          column: 22
        },
        end: {
          line: 233,
          column: 70
        }
      },
      "53": {
        start: {
          line: 234,
          column: 6
        },
        end: {
          line: 237,
          column: 7
        }
      },
      "54": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 43
        }
      },
      "55": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 68
        }
      },
      "56": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 245,
          column: 59
        }
      },
      "57": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 253,
          column: 6
        }
      },
      "58": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 31
        }
      },
      "59": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 256,
          column: 27
        }
      },
      "60": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 263,
          column: 32
        }
      },
      "61": {
        start: {
          line: 263,
          column: 25
        },
        end: {
          line: 263,
          column: 32
        }
      },
      "62": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 265,
          column: 53
        }
      },
      "63": {
        start: {
          line: 267,
          column: 4
        },
        end: {
          line: 283,
          column: 5
        }
      },
      "64": {
        start: {
          line: 269,
          column: 30
        },
        end: {
          line: 269,
          column: 70
        }
      },
      "65": {
        start: {
          line: 272,
          column: 6
        },
        end: {
          line: 272,
          column: 54
        }
      },
      "66": {
        start: {
          line: 275,
          column: 6
        },
        end: {
          line: 275,
          column: 44
        }
      },
      "67": {
        start: {
          line: 278,
          column: 6
        },
        end: {
          line: 278,
          column: 45
        }
      },
      "68": {
        start: {
          line: 280,
          column: 6
        },
        end: {
          line: 280,
          column: 36
        }
      },
      "69": {
        start: {
          line: 282,
          column: 6
        },
        end: {
          line: 282,
          column: 58
        }
      },
      "70": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 293,
          column: 6
        }
      },
      "71": {
        start: {
          line: 294,
          column: 37
        },
        end: {
          line: 294,
          column: 39
        }
      },
      "72": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 315,
          column: 5
        }
      },
      "73": {
        start: {
          line: 307,
          column: 6
        },
        end: {
          line: 309,
          column: 8
        }
      },
      "74": {
        start: {
          line: 311,
          column: 6
        },
        end: {
          line: 314,
          column: 7
        }
      },
      "75": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 47
        }
      },
      "76": {
        start: {
          line: 324,
          column: 4
        },
        end: {
          line: 324,
          column: 77
        }
      },
      "77": {
        start: {
          line: 327,
          column: 32
        },
        end: {
          line: 327,
          column: 64
        }
      },
      "78": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 329,
          column: 65
        }
      },
      "79": {
        start: {
          line: 336,
          column: 24
        },
        end: {
          line: 336,
          column: 45
        }
      },
      "80": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 341,
          column: 5
        }
      },
      "81": {
        start: {
          line: 340,
          column: 6
        },
        end: {
          line: 340,
          column: 33
        }
      },
      "82": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 346,
          column: 5
        }
      },
      "83": {
        start: {
          line: 345,
          column: 6
        },
        end: {
          line: 345,
          column: 33
        }
      },
      "84": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 349,
          column: 31
        }
      },
      "85": {
        start: {
          line: 356,
          column: 23
        },
        end: {
          line: 356,
          column: 50
        }
      },
      "86": {
        start: {
          line: 358,
          column: 4
        },
        end: {
          line: 364,
          column: 7
        }
      },
      "87": {
        start: {
          line: 374,
          column: 4
        },
        end: {
          line: 376,
          column: 5
        }
      },
      "88": {
        start: {
          line: 375,
          column: 6
        },
        end: {
          line: 375,
          column: 19
        }
      },
      "89": {
        start: {
          line: 378,
          column: 4
        },
        end: {
          line: 378,
          column: 78
        }
      },
      "90": {
        start: {
          line: 380,
          column: 20
        },
        end: {
          line: 383,
          column: 5
        }
      },
      "91": {
        start: {
          line: 385,
          column: 4
        },
        end: {
          line: 388,
          column: 5
        }
      },
      "92": {
        start: {
          line: 386,
          column: 6
        },
        end: {
          line: 386,
          column: 44
        }
      },
      "93": {
        start: {
          line: 387,
          column: 6
        },
        end: {
          line: 387,
          column: 65
        }
      },
      "94": {
        start: {
          line: 390,
          column: 4
        },
        end: {
          line: 390,
          column: 19
        }
      },
      "95": {
        start: {
          line: 397,
          column: 34
        },
        end: {
          line: 397,
          column: 61
        }
      },
      "96": {
        start: {
          line: 398,
          column: 27
        },
        end: {
          line: 398,
          column: 66
        }
      },
      "97": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 411,
          column: 6
        }
      },
      "98": {
        start: {
          line: 418,
          column: 4
        },
        end: {
          line: 418,
          column: 51
        }
      },
      "99": {
        start: {
          line: 421,
          column: 4
        },
        end: {
          line: 423,
          column: 5
        }
      },
      "100": {
        start: {
          line: 422,
          column: 6
        },
        end: {
          line: 422,
          column: 59
        }
      },
      "101": {
        start: {
          line: 425,
          column: 4
        },
        end: {
          line: 425,
          column: 57
        }
      },
      "102": {
        start: {
          line: 432,
          column: 4
        },
        end: {
          line: 432,
          column: 40
        }
      },
      "103": {
        start: {
          line: 433,
          column: 4
        },
        end: {
          line: 433,
          column: 34
        }
      },
      "104": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 434,
          column: 54
        }
      },
      "105": {
        start: {
          line: 441,
          column: 4
        },
        end: {
          line: 450,
          column: 6
        }
      },
      "106": {
        start: {
          line: 457,
          column: 4
        },
        end: {
          line: 457,
          column: 61
        }
      },
      "107": {
        start: {
          line: 457,
          column: 36
        },
        end: {
          line: 457,
          column: 59
        }
      },
      "108": {
        start: {
          line: 462,
          column: 33
        },
        end: {
          line: 462,
          column: 56
        }
      },
      "109": {
        start: {
          line: 471,
          column: 32
        },
        end: {
          line: 479,
          column: 1
        }
      },
      "110": {
        start: {
          line: 474,
          column: 2
        },
        end: {
          line: 476,
          column: 3
        }
      },
      "111": {
        start: {
          line: 475,
          column: 4
        },
        end: {
          line: 475,
          column: 43
        }
      },
      "112": {
        start: {
          line: 477,
          column: 2
        },
        end: {
          line: 477,
          column: 28
        }
      },
      "113": {
        start: {
          line: 478,
          column: 2
        },
        end: {
          line: 478,
          column: 27
        }
      },
      "114": {
        start: {
          line: 484,
          column: 31
        },
        end: {
          line: 486,
          column: 1
        }
      },
      "115": {
        start: {
          line: 485,
          column: 2
        },
        end: {
          line: 485,
          column: 27
        }
      },
      "116": {
        start: {
          line: 491,
          column: 36
        },
        end: {
          line: 493,
          column: 1
        }
      },
      "117": {
        start: {
          line: 492,
          column: 2
        },
        end: {
          line: 492,
          column: 39
        }
      },
      "118": {
        start: {
          line: 498,
          column: 40
        },
        end: {
          line: 503,
          column: 1
        }
      },
      "119": {
        start: {
          line: 502,
          column: 2
        },
        end: {
          line: 502,
          column: 79
        }
      },
      "120": {
        start: {
          line: 508,
          column: 39
        },
        end: {
          line: 512,
          column: 1
        }
      },
      "121": {
        start: {
          line: 511,
          column: 2
        },
        end: {
          line: 511,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 78,
            column: 2
          },
          end: {
            line: 78,
            column: 3
          }
        },
        loc: {
          start: {
            line: 78,
            column: 79
          },
          end: {
            line: 81,
            column: 3
          }
        },
        line: 78
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 86,
            column: 2
          },
          end: {
            line: 86,
            column: 3
          }
        },
        loc: {
          start: {
            line: 86,
            column: 23
          },
          end: {
            line: 104,
            column: 3
          }
        },
        line: 86
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 109,
            column: 2
          },
          end: {
            line: 109,
            column: 3
          }
        },
        loc: {
          start: {
            line: 109,
            column: 22
          },
          end: {
            line: 127,
            column: 3
          }
        },
        line: 109
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 132,
            column: 2
          },
          end: {
            line: 132,
            column: 3
          }
        },
        loc: {
          start: {
            line: 132,
            column: 51
          },
          end: {
            line: 140,
            column: 3
          }
        },
        line: 132
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 145,
            column: 2
          },
          end: {
            line: 145,
            column: 3
          }
        },
        loc: {
          start: {
            line: 145,
            column: 42
          },
          end: {
            line: 170,
            column: 3
          }
        },
        line: 145
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 151,
            column: 29
          },
          end: {
            line: 151,
            column: 30
          }
        },
        loc: {
          start: {
            line: 151,
            column: 35
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 151
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 175,
            column: 2
          },
          end: {
            line: 175,
            column: 3
          }
        },
        loc: {
          start: {
            line: 175,
            column: 73
          },
          end: {
            line: 196,
            column: 3
          }
        },
        line: 175
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 201,
            column: 2
          },
          end: {
            line: 201,
            column: 3
          }
        },
        loc: {
          start: {
            line: 201,
            column: 68
          },
          end: {
            line: 239,
            column: 3
          }
        },
        line: 201
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 244,
            column: 2
          },
          end: {
            line: 244,
            column: 3
          }
        },
        loc: {
          start: {
            line: 244,
            column: 41
          },
          end: {
            line: 257,
            column: 3
          }
        },
        line: 244
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 249,
            column: 6
          },
          end: {
            line: 249,
            column: 7
          }
        },
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 251,
            column: 7
          }
        },
        line: 249
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 262,
            column: 2
          },
          end: {
            line: 262,
            column: 3
          }
        },
        loc: {
          start: {
            line: 262,
            column: 49
          },
          end: {
            line: 284,
            column: 3
          }
        },
        line: 262
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 289,
            column: 2
          },
          end: {
            line: 289,
            column: 3
          }
        },
        loc: {
          start: {
            line: 289,
            column: 58
          },
          end: {
            line: 316,
            column: 3
          }
        },
        line: 289
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 321,
            column: 2
          },
          end: {
            line: 321,
            column: 3
          }
        },
        loc: {
          start: {
            line: 323,
            column: 10
          },
          end: {
            line: 330,
            column: 3
          }
        },
        line: 323
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 335,
            column: 2
          },
          end: {
            line: 335,
            column: 3
          }
        },
        loc: {
          start: {
            line: 335,
            column: 41
          },
          end: {
            line: 350,
            column: 3
          }
        },
        line: 335
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 355,
            column: 2
          },
          end: {
            line: 355,
            column: 3
          }
        },
        loc: {
          start: {
            line: 355,
            column: 73
          },
          end: {
            line: 365,
            column: 3
          }
        },
        line: 355
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 370,
            column: 2
          },
          end: {
            line: 370,
            column: 3
          }
        },
        loc: {
          start: {
            line: 373,
            column: 22
          },
          end: {
            line: 391,
            column: 3
          }
        },
        line: 373
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 396,
            column: 2
          },
          end: {
            line: 396,
            column: 3
          }
        },
        loc: {
          start: {
            line: 396,
            column: 21
          },
          end: {
            line: 412,
            column: 3
          }
        },
        line: 396
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 417,
            column: 2
          },
          end: {
            line: 417,
            column: 3
          }
        },
        loc: {
          start: {
            line: 417,
            column: 74
          },
          end: {
            line: 426,
            column: 3
          }
        },
        line: 417
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 431,
            column: 2
          },
          end: {
            line: 431,
            column: 3
          }
        },
        loc: {
          start: {
            line: 431,
            column: 28
          },
          end: {
            line: 435,
            column: 3
          }
        },
        line: 431
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 440,
            column: 2
          },
          end: {
            line: 440,
            column: 3
          }
        },
        loc: {
          start: {
            line: 440,
            column: 53
          },
          end: {
            line: 451,
            column: 3
          }
        },
        line: 440
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 456,
            column: 2
          },
          end: {
            line: 456,
            column: 3
          }
        },
        loc: {
          start: {
            line: 456,
            column: 43
          },
          end: {
            line: 458,
            column: 3
          }
        },
        line: 456
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 457,
            column: 23
          },
          end: {
            line: 457,
            column: 24
          }
        },
        loc: {
          start: {
            line: 457,
            column: 36
          },
          end: {
            line: 457,
            column: 59
          }
        },
        line: 457
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 471,
            column: 32
          },
          end: {
            line: 471,
            column: 33
          }
        },
        loc: {
          start: {
            line: 473,
            column: 5
          },
          end: {
            line: 479,
            column: 1
          }
        },
        line: 473
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 484,
            column: 31
          },
          end: {
            line: 484,
            column: 32
          }
        },
        loc: {
          start: {
            line: 484,
            column: 37
          },
          end: {
            line: 486,
            column: 1
          }
        },
        line: 484
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 491,
            column: 36
          },
          end: {
            line: 491,
            column: 37
          }
        },
        loc: {
          start: {
            line: 491,
            column: 42
          },
          end: {
            line: 493,
            column: 1
          }
        },
        line: 491
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 498,
            column: 40
          },
          end: {
            line: 498,
            column: 41
          }
        },
        loc: {
          start: {
            line: 501,
            column: 5
          },
          end: {
            line: 503,
            column: 1
          }
        },
        line: 501
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 508,
            column: 39
          },
          end: {
            line: 508,
            column: 40
          }
        },
        loc: {
          start: {
            line: 510,
            column: 5
          },
          end: {
            line: 512,
            column: 1
          }
        },
        line: 510
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 78,
            column: 14
          },
          end: {
            line: 78,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 78,
            column: 49
          },
          end: {
            line: 78,
            column: 77
          }
        }],
        line: 78
      },
      "1": {
        loc: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "2": {
        loc: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "3": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "4": {
        loc: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "5": {
        loc: {
          start: {
            line: 152,
            column: 6
          },
          end: {
            line: 152,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 6
          },
          end: {
            line: 152,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "6": {
        loc: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "7": {
        loc: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "8": {
        loc: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "9": {
        loc: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "10": {
        loc: {
          start: {
            line: 217,
            column: 6
          },
          end: {
            line: 218,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 6
          },
          end: {
            line: 217,
            column: 34
          }
        }, {
          start: {
            line: 218,
            column: 6
          },
          end: {
            line: 218,
            column: 51
          }
        }],
        line: 217
      },
      "11": {
        loc: {
          start: {
            line: 224,
            column: 6
          },
          end: {
            line: 227,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 6
          },
          end: {
            line: 227,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "12": {
        loc: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 238,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 238,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "13": {
        loc: {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 232,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 232,
            column: 31
          }
        }, {
          start: {
            line: 232,
            column: 35
          },
          end: {
            line: 232,
            column: 64
          }
        }],
        line: 232
      },
      "14": {
        loc: {
          start: {
            line: 234,
            column: 6
          },
          end: {
            line: 237,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 6
          },
          end: {
            line: 237,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "15": {
        loc: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "16": {
        loc: {
          start: {
            line: 306,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "17": {
        loc: {
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 339
      },
      "18": {
        loc: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "19": {
        loc: {
          start: {
            line: 372,
            column: 4
          },
          end: {
            line: 372,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 372,
            column: 30
          },
          end: {
            line: 372,
            column: 34
          }
        }],
        line: 372
      },
      "20": {
        loc: {
          start: {
            line: 374,
            column: 4
          },
          end: {
            line: 376,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 4
          },
          end: {
            line: 376,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "21": {
        loc: {
          start: {
            line: 385,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 385,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 385
      },
      "22": {
        loc: {
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 423,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 423,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 421
      },
      "23": {
        loc: {
          start: {
            line: 474,
            column: 2
          },
          end: {
            line: 476,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 2
          },
          end: {
            line: 476,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 474
      },
      "24": {
        loc: {
          start: {
            line: 500,
            column: 2
          },
          end: {
            line: 500,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 500,
            column: 28
          },
          end: {
            line: 500,
            column: 32
          }
        }],
        line: 500
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "68ac4d0c1cedcd36bc90a4fa8f802a1d871ee3af"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_yn9gu44e3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_yn9gu44e3();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * Terry Commentary Orchestrator
 * Main coordination service for Terry's continuous commentary system
 */

import { globalMonitor } from "@/lib/twitter/globalMonitor";
import { terryIntegration, DEFAULT_INTEGRATION_CONFIG } from "./terryIntegration";

// TODO: Fix circular dependency with feedStore
// import { useFeedStore } from '@/lib/stores/feedStore';

// Default orchestration configuration
export var DEFAULT_ORCHESTRATION_CONFIG =
/* istanbul ignore next */
(cov_yn9gu44e3().s[0]++, {
  integration: DEFAULT_INTEGRATION_CONFIG,
  monitoring: {
    enableAutoCommentary: true,
    processAllIncomingTweets: true,
    prioritizeBreakingNews: true,
    minConfidenceForTerry: 0.6
  },
  scheduling: {
    enableHourlyUpdates: true,
    enableBreakingNewsAlerts: true,
    peakHours: [9, 10, 11, 16, 17, 18, 19, 20],
    // Morning and evening peak
    quietHours: [0, 1, 2, 3, 4, 5, 6] // Late night/early morning
  }
});

/**
 * Terry Commentary Orchestrator Class
 */
export
/* istanbul ignore next */
var TerryOrchestrator = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  TerryOrchestrator() {
    /* istanbul ignore next */
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_yn9gu44e3().b[0][0]++, DEFAULT_ORCHESTRATION_CONFIG);
    /* istanbul ignore next */
    _classCallCheck(this, TerryOrchestrator);
    _defineProperty(this, "isRunning", (cov_yn9gu44e3().s[1]++, false));
    /* istanbul ignore next */
    _defineProperty(this, "intervalId", (cov_yn9gu44e3().s[2]++, null));
    /* istanbul ignore next */
    cov_yn9gu44e3().f[0]++;
    cov_yn9gu44e3().s[3]++;
    this.config = config;
    /* istanbul ignore next */
    cov_yn9gu44e3().s[4]++;
    this.stats = this.initializeStats();
  }

  /**
   * Start Terry's continuous commentary system
   */
  return _createClass(TerryOrchestrator, [{
    key: "start",
    value: function start() {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[1]++;
      cov_yn9gu44e3().s[5]++;
      if (this.isRunning) {
        /* istanbul ignore next */
        cov_yn9gu44e3().b[1][0]++;
        cov_yn9gu44e3().s[6]++;
        console.warn("Terry Orchestrator is already running");
        /* istanbul ignore next */
        cov_yn9gu44e3().s[7]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_yn9gu44e3().b[1][1]++;
      }
      cov_yn9gu44e3().s[8]++;
      this.isRunning = true;
      /* istanbul ignore next */
      cov_yn9gu44e3().s[9]++;
      console.log("🎭 Starting Terry Commentary Orchestrator...");

      // Hook into global monitoring system
      /* istanbul ignore next */
      cov_yn9gu44e3().s[10]++;
      this.setupGlobalMonitoringIntegration();

      // Start hourly update cycle if enabled
      /* istanbul ignore next */
      cov_yn9gu44e3().s[11]++;
      if (this.config.scheduling.enableHourlyUpdates) {
        /* istanbul ignore next */
        cov_yn9gu44e3().b[2][0]++;
        cov_yn9gu44e3().s[12]++;
        this.startHourlyUpdateCycle();
      } else
      /* istanbul ignore next */
      {
        cov_yn9gu44e3().b[2][1]++;
      }
      cov_yn9gu44e3().s[13]++;
      console.log("🎬 Terry Commentary Orchestrator started successfully");
    }

    /**
     * Stop Terry's commentary system
     */
  }, {
    key: "stop",
    value: function stop() {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[2]++;
      cov_yn9gu44e3().s[14]++;
      if (!this.isRunning) {
        /* istanbul ignore next */
        cov_yn9gu44e3().b[3][0]++;
        cov_yn9gu44e3().s[15]++;
        console.warn("Terry Orchestrator is not running");
        /* istanbul ignore next */
        cov_yn9gu44e3().s[16]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_yn9gu44e3().b[3][1]++;
      }
      cov_yn9gu44e3().s[17]++;
      this.isRunning = false;

      // Stop hourly updates
      /* istanbul ignore next */
      cov_yn9gu44e3().s[18]++;
      if (this.intervalId) {
        /* istanbul ignore next */
        cov_yn9gu44e3().b[4][0]++;
        cov_yn9gu44e3().s[19]++;
        clearInterval(this.intervalId);
        /* istanbul ignore next */
        cov_yn9gu44e3().s[20]++;
        this.intervalId = null;
      } else
      /* istanbul ignore next */
      {
        cov_yn9gu44e3().b[4][1]++;
      }

      // Clean up Terry integration
      cov_yn9gu44e3().s[21]++;
      terryIntegration.cleanup();
      /* istanbul ignore next */
      cov_yn9gu44e3().s[22]++;
      console.log("⏹️ Terry Commentary Orchestrator stopped");
    }

    /**
     * Setup integration with global monitoring system
     */
  }, {
    key: "setupGlobalMonitoringIntegration",
    value: function setupGlobalMonitoringIntegration() {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[3]++;
      cov_yn9gu44e3().s[23]++;
      // In production, this would hook into the global monitor's event system
      // For now, we'll simulate by checking for new tweets periodically

      console.log("🔗 Connecting Terry to global ITK monitoring system...");

      // Monitor the feed store for new items and add Terry commentary
      /* istanbul ignore next */
      cov_yn9gu44e3().s[24]++;
      this.monitorFeedStoreChanges();
    }

    /**
     * Monitor feed store changes and add Terry commentary
     */
  }, {
    key: "monitorFeedStoreChanges",
    value: function monitorFeedStoreChanges() {
      /* istanbul ignore next */
      var _this = this;
      cov_yn9gu44e3().f[4]++;
      // In a real implementation, this would use store subscriptions
      // For now, we'll implement a polling approach

      var lastProcessedCount =
      /* istanbul ignore next */
      (cov_yn9gu44e3().s[25]++, 0);
      /* istanbul ignore next */
      cov_yn9gu44e3().s[26]++;
      var checkForNewItems = function checkForNewItems() {
        /* istanbul ignore next */
        cov_yn9gu44e3().f[5]++;
        cov_yn9gu44e3().s[27]++;
        if (!_this.isRunning) {
          /* istanbul ignore next */
          cov_yn9gu44e3().b[5][0]++;
          cov_yn9gu44e3().s[28]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_yn9gu44e3().b[5][1]++;
        }

        // TODO: Re-enable feed store monitoring once circular dependency is fixed
        cov_yn9gu44e3().s[29]++;
        console.log("Feed store monitoring disabled temporarily due to circular dependency");
        // const feedStore = useFeedStore.getState();
        // const currentItemCount = feedStore.items.length;
        //
        // if (currentItemCount > lastProcessedCount) {
        //   const newItems = feedStore.items.slice(lastProcessedCount);
        //   this.processNewFeedItems(newItems);
        //   lastProcessedCount = currentItemCount;
        // }
      };

      // Check every 30 seconds for new items
      /* istanbul ignore next */
      cov_yn9gu44e3().s[30]++;
      setInterval(checkForNewItems, 30000);
    }

    /**
     * Process new feed items for Terry commentary
     */
  }, {
    key: "processNewFeedItems",
    value: (function () {
      var _processNewFeedItems = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee(newItems)
      /* istanbul ignore next */
      {
        var _iterator, _step, item, _t, _t2;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              cov_yn9gu44e3().f[6]++;
              cov_yn9gu44e3().s[31]++;
              if (this.config.monitoring.enableAutoCommentary) {
                _context.n = 1;
                break;
              }
              cov_yn9gu44e3().b[6][0]++;
              cov_yn9gu44e3().s[32]++;
              return _context.a(2);
            case 1:
              cov_yn9gu44e3().b[6][1]++;
            case 2:
              cov_yn9gu44e3().s[33]++;
              console.log(
              /* istanbul ignore next */
              "\uD83D\uDD04 Terry processing ".concat(newItems.length, " new feed items..."));
              cov_yn9gu44e3().s[34]++;
              _iterator = _createForOfIteratorHelper(newItems);
              _context.p = 3;
              _iterator.s();
            case 4:
              if ((_step = _iterator.n()).done) {
                _context.n = 10;
                break;
              }
              item = _step.value;
              cov_yn9gu44e3().s[35]++;
              _context.p = 5;
              cov_yn9gu44e3().s[36]++;
              _context.n = 6;
              return this.processSingleFeedItem(item);
            case 6:
              cov_yn9gu44e3().s[37]++;
              this.stats.totalTweetsProcessed++;

              // Update last activity time
              cov_yn9gu44e3().s[38]++;
              this.stats.lastActivityTime = new Date();

              // Small delay between items
              cov_yn9gu44e3().s[39]++;
              _context.n = 7;
              return this.sleep(500);
            case 7:
              _context.n = 9;
              break;
            case 8:
              _context.p = 8;
              _t = _context.v;
              cov_yn9gu44e3().s[40]++;
              console.error(
              /* istanbul ignore next */
              "Terry failed to process feed item ".concat(item.id, ":"),
              /* istanbul ignore next */
              _t);
            case 9:
              _context.n = 4;
              break;
            case 10:
              _context.n = 12;
              break;
            case 11:
              _context.p = 11;
              _t2 = _context.v;
              _iterator.e(_t2);
            case 12:
              _context.p = 12;
              _iterator.f();
              return _context.f(12);
            case 13:
              return _context.a(2);
          }
        }, _callee, this, [[5, 8], [3, 11, 12, 13]]);
      }));
      function processNewFeedItems(_x) {
        return _processNewFeedItems.apply(this, arguments);
      }
      return processNewFeedItems;
    }()
    /**
     * Process a single feed item for Terry commentary
     */
    )
  }, {
    key: "processSingleFeedItem",
    value: (function () {
      var _processSingleFeedItem = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(feedItem)
      /* istanbul ignore next */
      {
        var _feedItem$metadata;
        var success, _success;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              cov_yn9gu44e3().f[7]++;
              cov_yn9gu44e3().s[41]++;
              if (this.isWithinActiveHours()) {
                _context2.n = 1;
                break;
              }
              cov_yn9gu44e3().b[7][0]++;
              cov_yn9gu44e3().s[42]++;
              return _context2.a(2);
            case 1:
              cov_yn9gu44e3().b[7][1]++;
            case 2:
              cov_yn9gu44e3().s[43]++;
              if (!(
              /* istanbul ignore next */
              ((_feedItem$metadata = feedItem.metadata) === null || _feedItem$metadata === void 0 ? void 0 :
              /* istanbul ignore next */
              _feedItem$metadata.relevanceScore) < this.config.monitoring.minConfidenceForTerry)) {
                _context2.n = 3;
                break;
              }
              cov_yn9gu44e3().b[8][0]++;
              cov_yn9gu44e3().s[44]++;
              return _context2.a(2);
            case 3:
              cov_yn9gu44e3().b[8][1]++;
            case 4:
              cov_yn9gu44e3().s[45]++;
              if (!(
              /* istanbul ignore next */
              (cov_yn9gu44e3().b[10][0]++, feedItem.type === "breaking") &&
              /* istanbul ignore next */
              (cov_yn9gu44e3().b[10][1]++, this.config.monitoring.prioritizeBreakingNews))) {
                _context2.n = 6;
                break;
              }
              cov_yn9gu44e3().b[9][0]++;
              cov_yn9gu44e3().s[46]++;
              _context2.n = 5;
              return terryIntegration.processBreakingNews(feedItem, true);
            case 5:
              success = _context2.v;
              cov_yn9gu44e3().s[47]++;
              if (success) {
                /* istanbul ignore next */
                cov_yn9gu44e3().b[11][0]++;
                cov_yn9gu44e3().s[48]++;
                this.stats.breakingNewsCommentaries++;
                /* istanbul ignore next */
                cov_yn9gu44e3().s[49]++;
                console.log(
                /* istanbul ignore next */
                "\uD83D\uDEA8 Terry processed breaking news: ".concat(feedItem.id));
              } else
              /* istanbul ignore next */
              {
                cov_yn9gu44e3().b[11][1]++;
              }
              cov_yn9gu44e3().s[50]++;
              return _context2.a(2);
            case 6:
              cov_yn9gu44e3().b[9][1]++;
            case 7:
              cov_yn9gu44e3().s[51]++;
              if (!(
              /* istanbul ignore next */
              (cov_yn9gu44e3().b[13][0]++, feedItem.type === "itk") ||
              /* istanbul ignore next */
              (cov_yn9gu44e3().b[13][1]++, feedItem.type === "confirmed"))) {
                _context2.n = 9;
                break;
              }
              cov_yn9gu44e3().b[12][0]++;
              cov_yn9gu44e3().s[52]++;
              _context2.n = 8;
              return terryIntegration.processFeedItem(feedItem);
            case 8:
              _success = _context2.v;
              cov_yn9gu44e3().s[53]++;
              if (_success) {
                /* istanbul ignore next */
                cov_yn9gu44e3().b[14][0]++;
                cov_yn9gu44e3().s[54]++;
                this.stats.commentariesGenerated++;
                /* istanbul ignore next */
                cov_yn9gu44e3().s[55]++;
                console.log(
                /* istanbul ignore next */
                "\uD83D\uDCAC Terry added commentary to: ".concat(feedItem.id));
              } else
              /* istanbul ignore next */
              {
                cov_yn9gu44e3().b[14][1]++;
              }
              _context2.n = 10;
              break;
            case 9:
              cov_yn9gu44e3().b[12][1]++;
            case 10:
              return _context2.a(2);
          }
        }, _callee2, this);
      }));
      function processSingleFeedItem(_x2) {
        return _processSingleFeedItem.apply(this, arguments);
      }
      return processSingleFeedItem;
    }()
    /**
     * Start hourly update cycle
     */
    )
  }, {
    key: "startHourlyUpdateCycle",
    value: function startHourlyUpdateCycle() {
      /* istanbul ignore next */
      var _this2 = this;
      cov_yn9gu44e3().f[8]++;
      cov_yn9gu44e3().s[56]++;
      console.log("⏰ Starting Terry hourly update cycle...");

      // Run every hour
      /* istanbul ignore next */
      cov_yn9gu44e3().s[57]++;
      this.intervalId = setInterval(function () {
        /* istanbul ignore next */
        cov_yn9gu44e3().f[9]++;
        cov_yn9gu44e3().s[58]++;
        _this2.runHourlyUpdate();
      }, 60 * 60 * 1000);

      // Run initial update
      /* istanbul ignore next */
      cov_yn9gu44e3().s[59]++;
      this.runHourlyUpdate();
    }

    /**
     * Run hourly Terry update cycle
     */
  }, {
    key: "runHourlyUpdate",
    value: (function () {
      var _runHourlyUpdate = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3()
      /* istanbul ignore next */
      {
        var monitoringStats, _t3;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              cov_yn9gu44e3().f[10]++;
              cov_yn9gu44e3().s[60]++;
              if (this.isRunning) {
                _context3.n = 1;
                break;
              }
              cov_yn9gu44e3().b[15][0]++;
              cov_yn9gu44e3().s[61]++;
              return _context3.a(2);
            case 1:
              cov_yn9gu44e3().b[15][1]++;
            case 2:
              cov_yn9gu44e3().s[62]++;
              console.log("🕐 Running Terry hourly update...");
              cov_yn9gu44e3().s[63]++;
              _context3.p = 3;
              cov_yn9gu44e3().s[64]++;
              _context3.n = 4;
              return globalMonitor.runMonitoringCycle();
            case 4:
              monitoringStats = _context3.v;
              cov_yn9gu44e3().s[65]++;
              // Update Terry stats
              this.updateStatsFromMonitoring(monitoringStats);

              // Process any pending high-priority items
              cov_yn9gu44e3().s[66]++;
              _context3.n = 5;
              return this.processHighPriorityItems();
            case 5:
              cov_yn9gu44e3().s[67]++;
              // Log hourly summary
              this.logHourlySummary(monitoringStats);
              cov_yn9gu44e3().s[68]++;
              this.stats.activeHoursToday++;
              _context3.n = 7;
              break;
            case 6:
              _context3.p = 6;
              _t3 = _context3.v;
              cov_yn9gu44e3().s[69]++;
              console.error("Terry hourly update failed:",
              /* istanbul ignore next */
              _t3);
            case 7:
              return _context3.a(2);
          }
        }, _callee3, this, [[3, 6]]);
      }));
      function runHourlyUpdate() {
        return _runHourlyUpdate.apply(this, arguments);
      }
      return runHourlyUpdate;
    }()
    /**
     * Process high-priority items that need immediate Terry attention
     */
    )
  }, {
    key: "processHighPriorityItems",
    value: (function () {
      var _processHighPriorityItems = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4()
      /* istanbul ignore next */
      {
        var highPriorityItems, _iterator2, _step2, item, _t4;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_yn9gu44e3().f[11]++;
              cov_yn9gu44e3().s[70]++;
              // TODO: Re-enable feed store access once circular dependency is fixed
              console.log("High priority item processing disabled temporarily due to circular dependency");
              highPriorityItems = (cov_yn9gu44e3().s[71]++, []); // const feedStore = useFeedStore.getState();
              //
              // // Find breaking news and high-priority items without Terry commentary
              // const highPriorityItems = feedStore.items.filter(
              //   (item) =>
              //     (item.type === 'breaking' || item.metadata.priority === 'high') &&
              //     !item.terryCommentary &&
              //     item.metadata.relevanceScore >=
              //       this.config.monitoring.minConfidenceForTerry
              // );
              cov_yn9gu44e3().s[72]++;
              if (!(highPriorityItems.length > 0)) {
                _context4.n = 8;
                break;
              }
              cov_yn9gu44e3().b[16][0]++;
              cov_yn9gu44e3().s[73]++;
              console.log(
              /* istanbul ignore next */
              "\u26A1 Terry processing ".concat(highPriorityItems.length, " high-priority items..."));
              cov_yn9gu44e3().s[74]++;
              _iterator2 = _createForOfIteratorHelper(highPriorityItems.slice(0, 3));
              _context4.p = 1;
              _iterator2.s();
            case 2:
              if ((_step2 = _iterator2.n()).done) {
                _context4.n = 4;
                break;
              }
              item = _step2.value;
              cov_yn9gu44e3().s[75]++;
              _context4.n = 3;
              return this.processSingleFeedItem(item);
            case 3:
              _context4.n = 2;
              break;
            case 4:
              _context4.n = 6;
              break;
            case 5:
              _context4.p = 5;
              _t4 = _context4.v;
              _iterator2.e(_t4);
            case 6:
              _context4.p = 6;
              _iterator2.f();
              return _context4.f(6);
            case 7:
              _context4.n = 9;
              break;
            case 8:
              cov_yn9gu44e3().b[16][1]++;
            case 9:
              return _context4.a(2);
          }
        }, _callee4, this, [[1, 5, 6, 7]]);
      }));
      function processHighPriorityItems() {
        return _processHighPriorityItems.apply(this, arguments);
      }
      return processHighPriorityItems;
    }()
    /**
     * Update stats from global monitoring
     */
    )
  }, {
    key: "updateStatsFromMonitoring",
    value: function updateStatsFromMonitoring(monitoringStats) {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[12]++;
      cov_yn9gu44e3().s[76]++;
      this.stats.transferTweetsDetected += monitoringStats.totalTransferTweets;

      // Update average response time (simplified calculation)
      var currentResponseTime =
      /* istanbul ignore next */
      (cov_yn9gu44e3().s[77]++, monitoringStats.processingTimeMs);
      /* istanbul ignore next */
      cov_yn9gu44e3().s[78]++;
      this.stats.averageResponseTime = (this.stats.averageResponseTime + currentResponseTime) / 2;
    }

    /**
     * Check if current time is within Terry's active hours
     */
  }, {
    key: "isWithinActiveHours",
    value: function isWithinActiveHours() {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[13]++;
      var currentHour =
      /* istanbul ignore next */
      (cov_yn9gu44e3().s[79]++, new Date().getHours());

      // Check if it's quiet hours (Terry less active)
      /* istanbul ignore next */
      cov_yn9gu44e3().s[80]++;
      if (this.config.scheduling.quietHours.includes(currentHour)) {
        /* istanbul ignore next */
        cov_yn9gu44e3().b[17][0]++;
        cov_yn9gu44e3().s[81]++;
        return Math.random() < 0.2; // 20% chance during quiet hours
      } else
      /* istanbul ignore next */
      {
        cov_yn9gu44e3().b[17][1]++;
      }

      // Check if it's peak hours (Terry more active)
      cov_yn9gu44e3().s[82]++;
      if (this.config.scheduling.peakHours.includes(currentHour)) {
        /* istanbul ignore next */
        cov_yn9gu44e3().b[18][0]++;
        cov_yn9gu44e3().s[83]++;
        return Math.random() < 0.8; // 80% chance during peak hours
      } else
      /* istanbul ignore next */
      {
        cov_yn9gu44e3().b[18][1]++;
      }

      // Regular hours
      cov_yn9gu44e3().s[84]++;
      return Math.random() < 0.5; // 50% chance during regular hours
    }

    /**
     * Log hourly summary
     */
  }, {
    key: "logHourlySummary",
    value: function logHourlySummary(monitoringStats) {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[14]++;
      var terryStats =
      /* istanbul ignore next */
      (cov_yn9gu44e3().s[85]++, terryIntegration.getStats());
      /* istanbul ignore next */
      cov_yn9gu44e3().s[86]++;
      console.log("📊 Terry Hourly Summary:", {
        transferTweetsDetected: monitoringStats.totalTransferTweets,
        commentariesGenerated: terryStats.commentariesGenerated,
        successRate:
        /* istanbul ignore next */
        "".concat(terryStats.successRate, "%"),
        voiceConsistency:
        /* istanbul ignore next */
        "".concat(Math.round(terryStats.voiceConsistencyAverage * 100), "%"),
        activeHours: this.stats.activeHoursToday
      });
    }

    /**
     * Generate Terry's Breaking News alert
     */
  }, {
    key: "generateBreakingNewsAlert",
    value: (function () {
      var _generateBreakingNewsAlert = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee5(feedItem)
      /* istanbul ignore next */
      {
        var isGenuineDrama,
          success,
          _args5 = arguments;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              isGenuineDrama = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : (cov_yn9gu44e3().b[19][0]++, true);
              cov_yn9gu44e3().f[15]++;
              cov_yn9gu44e3().s[87]++;
              if (this.config.scheduling.enableBreakingNewsAlerts) {
                _context5.n = 1;
                break;
              }
              cov_yn9gu44e3().b[20][0]++;
              cov_yn9gu44e3().s[88]++;
              return _context5.a(2, false);
            case 1:
              cov_yn9gu44e3().b[20][1]++;
            case 2:
              cov_yn9gu44e3().s[89]++;
              console.log(
              /* istanbul ignore next */
              "\uD83D\uDEA8 Terry Breaking News Alert triggered for: ".concat(feedItem.id));
              cov_yn9gu44e3().s[90]++;
              _context5.n = 3;
              return terryIntegration.processBreakingNews(feedItem, isGenuineDrama);
            case 3:
              success = _context5.v;
              cov_yn9gu44e3().s[91]++;
              if (success) {
                /* istanbul ignore next */
                cov_yn9gu44e3().b[21][0]++;
                cov_yn9gu44e3().s[92]++;
                this.stats.breakingNewsCommentaries++;
                /* istanbul ignore next */
                cov_yn9gu44e3().s[93]++;
                console.log("🎬 Terry Breaking News commentary published");
              } else
              /* istanbul ignore next */
              {
                cov_yn9gu44e3().b[21][1]++;
              }
              cov_yn9gu44e3().s[94]++;
              return _context5.a(2, success);
          }
        }, _callee5, this);
      }));
      function generateBreakingNewsAlert(_x3) {
        return _generateBreakingNewsAlert.apply(this, arguments);
      }
      return generateBreakingNewsAlert;
    }()
    /**
     * Get comprehensive Terry orchestration status
     */
    )
  }, {
    key: "getStatus",
    value: function getStatus() {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[16]++;
      var terryIntegrationStats =
      /* istanbul ignore next */
      (cov_yn9gu44e3().s[95]++, terryIntegration.getStats());
      var terryAnalytics =
      /* istanbul ignore next */
      (cov_yn9gu44e3().s[96]++, terryIntegration.getDetailedAnalytics());
      /* istanbul ignore next */
      cov_yn9gu44e3().s[97]++;
      return {
        isRunning: this.isRunning,
        config: this.config,
        stats:
        /* istanbul ignore next */
        _objectSpread(_objectSpread({}, this.stats), {}, {
          voiceConsistencyRate: terryIntegrationStats.voiceConsistencyAverage
        }),
        integration: terryIntegrationStats,
        analytics: terryAnalytics,
        currentHour: new Date().getHours(),
        isActiveHour: this.isWithinActiveHours()
      };
    }

    /**
     * Update orchestration configuration
     */
  }, {
    key: "updateConfig",
    value: function updateConfig(newConfig) {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[17]++;
      cov_yn9gu44e3().s[98]++;
      this.config =
      /* istanbul ignore next */
      _objectSpread(_objectSpread({}, this.config), newConfig);

      // Update integration config if provided
      /* istanbul ignore next */
      cov_yn9gu44e3().s[99]++;
      if (newConfig.integration) {
        /* istanbul ignore next */
        cov_yn9gu44e3().b[22][0]++;
        cov_yn9gu44e3().s[100]++;
        terryIntegration.updateConfig(newConfig.integration);
      } else
      /* istanbul ignore next */
      {
        cov_yn9gu44e3().b[22][1]++;
      }
      cov_yn9gu44e3().s[101]++;
      console.log("🔧 Updated Terry orchestration config");
    }

    /**
     * Reset statistics
     */
  }, {
    key: "resetStats",
    value: function resetStats() {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[18]++;
      cov_yn9gu44e3().s[102]++;
      this.stats = this.initializeStats();
      /* istanbul ignore next */
      cov_yn9gu44e3().s[103]++;
      terryIntegration.resetStats();
      /* istanbul ignore next */
      cov_yn9gu44e3().s[104]++;
      console.log("📊 Terry orchestration stats reset");
    }

    /**
     * Initialize stats
     */
  }, {
    key: "initializeStats",
    value: function initializeStats() {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[19]++;
      cov_yn9gu44e3().s[105]++;
      return {
        totalTweetsProcessed: 0,
        transferTweetsDetected: 0,
        commentariesGenerated: 0,
        breakingNewsCommentaries: 0,
        averageResponseTime: 0,
        voiceConsistencyRate: 0,
        activeHoursToday: 0,
        lastActivityTime: null
      };
    }

    /**
     * Utility function for delays
     */
  }, {
    key: "sleep",
    value: function sleep(ms) {
      /* istanbul ignore next */
      cov_yn9gu44e3().f[20]++;
      cov_yn9gu44e3().s[106]++;
      return new Promise(function (resolve) {
        /* istanbul ignore next */
        cov_yn9gu44e3().f[21]++;
        cov_yn9gu44e3().s[107]++;
        return setTimeout(resolve, ms);
      });
    }
  }]);
}();

// Export singleton instance
export var terryOrchestrator =
/* istanbul ignore next */
(cov_yn9gu44e3().s[108]++, new TerryOrchestrator());

/**
 * Convenience functions
 */

/**
 * Start Terry's continuous commentary system
 */
/* istanbul ignore next */
cov_yn9gu44e3().s[109]++;
export var startTerrySystem = function startTerrySystem(config) {
  /* istanbul ignore next */
  cov_yn9gu44e3().f[22]++;
  cov_yn9gu44e3().s[110]++;
  if (config) {
    /* istanbul ignore next */
    cov_yn9gu44e3().b[23][0]++;
    cov_yn9gu44e3().s[111]++;
    terryOrchestrator.updateConfig(config);
  } else
  /* istanbul ignore next */
  {
    cov_yn9gu44e3().b[23][1]++;
  }
  cov_yn9gu44e3().s[112]++;
  terryOrchestrator.start();
  /* istanbul ignore next */
  cov_yn9gu44e3().s[113]++;
  return terryOrchestrator;
};

/**
 * Stop Terry's commentary system
 */
/* istanbul ignore next */
cov_yn9gu44e3().s[114]++;
export var stopTerrySystem = function stopTerrySystem() {
  /* istanbul ignore next */
  cov_yn9gu44e3().f[23]++;
  cov_yn9gu44e3().s[115]++;
  terryOrchestrator.stop();
};

/**
 * Get Terry system status
 */
/* istanbul ignore next */
cov_yn9gu44e3().s[116]++;
export var getTerrySystemStatus = function getTerrySystemStatus() {
  /* istanbul ignore next */
  cov_yn9gu44e3().f[24]++;
  cov_yn9gu44e3().s[117]++;
  return terryOrchestrator.getStatus();
};

/**
 * Generate Terry breaking news alert
 */
/* istanbul ignore next */
cov_yn9gu44e3().s[118]++;
export var triggerTerryBreakingNews = function triggerTerryBreakingNews(feedItem) {
  /* istanbul ignore next */
  var isGenuineDrama = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_yn9gu44e3().b[24][0]++, true);
  /* istanbul ignore next */
  cov_yn9gu44e3().f[25]++;
  cov_yn9gu44e3().s[119]++;
  return terryOrchestrator.generateBreakingNewsAlert(feedItem, isGenuineDrama);
};

/**
 * Update Terry system configuration
 */
/* istanbul ignore next */
cov_yn9gu44e3().s[120]++;
export var updateTerrySystemConfig = function updateTerrySystemConfig(config) {
  /* istanbul ignore next */
  cov_yn9gu44e3().f[26]++;
  cov_yn9gu44e3().s[121]++;
  terryOrchestrator.updateConfig(config);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfeW45Z3U0NGUzIiwiYWN0dWFsQ292ZXJhZ2UiLCJfdHlwZW9mIiwibyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJfcmVnZW5lcmF0b3IiLCJuIiwidG9TdHJpbmdUYWciLCJpIiwiYyIsIkdlbmVyYXRvciIsInUiLCJjcmVhdGUiLCJfcmVnZW5lcmF0b3JEZWZpbmUyIiwiZiIsInAiLCJ5IiwiRyIsInYiLCJhIiwiZCIsImJpbmQiLCJsIiwiVHlwZUVycm9yIiwiY2FsbCIsImRvbmUiLCJ2YWx1ZSIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUiLCJnZXRQcm90b3R5cGVPZiIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiZGlzcGxheU5hbWUiLCJ3IiwibSIsIl9yZWdlbmVyYXRvckRlZmluZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiX2ludm9rZSIsIl9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIiwiQXJyYXkiLCJpc0FycmF5IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiX24iLCJGIiwicyIsIm5leHQiLCJfYXJyYXlMaWtlVG9BcnJheSIsInRvU3RyaW5nIiwic2xpY2UiLCJuYW1lIiwiZnJvbSIsInRlc3QiLCJhc3luY0dlbmVyYXRvclN0ZXAiLCJQcm9taXNlIiwicmVzb2x2ZSIsInRoZW4iLCJfYXN5bmNUb0dlbmVyYXRvciIsIl9uZXh0IiwiX3Rocm93IiwiX2NsYXNzQ2FsbENoZWNrIiwiX2RlZmluZVByb3BlcnRpZXMiLCJfdG9Qcm9wZXJ0eUtleSIsImtleSIsIl9jcmVhdGVDbGFzcyIsIl90b1ByaW1pdGl2ZSIsInRvUHJpbWl0aXZlIiwiU3RyaW5nIiwiTnVtYmVyIiwiZ2xvYmFsTW9uaXRvciIsInRlcnJ5SW50ZWdyYXRpb24iLCJERUZBVUxUX0lOVEVHUkFUSU9OX0NPTkZJRyIsIkRFRkFVTFRfT1JDSEVTVFJBVElPTl9DT05GSUciLCJpbnRlZ3JhdGlvbiIsIm1vbml0b3JpbmciLCJlbmFibGVBdXRvQ29tbWVudGFyeSIsInByb2Nlc3NBbGxJbmNvbWluZ1R3ZWV0cyIsInByaW9yaXRpemVCcmVha2luZ05ld3MiLCJtaW5Db25maWRlbmNlRm9yVGVycnkiLCJzY2hlZHVsaW5nIiwiZW5hYmxlSG91cmx5VXBkYXRlcyIsImVuYWJsZUJyZWFraW5nTmV3c0FsZXJ0cyIsInBlYWtIb3VycyIsInF1aWV0SG91cnMiLCJUZXJyeU9yY2hlc3RyYXRvciIsImNvbmZpZyIsInVuZGVmaW5lZCIsImIiLCJzdGF0cyIsImluaXRpYWxpemVTdGF0cyIsInN0YXJ0IiwiaXNSdW5uaW5nIiwiY29uc29sZSIsIndhcm4iLCJsb2ciLCJzZXR1cEdsb2JhbE1vbml0b3JpbmdJbnRlZ3JhdGlvbiIsInN0YXJ0SG91cmx5VXBkYXRlQ3ljbGUiLCJzdG9wIiwiaW50ZXJ2YWxJZCIsImNsZWFySW50ZXJ2YWwiLCJjbGVhbnVwIiwibW9uaXRvckZlZWRTdG9yZUNoYW5nZXMiLCJfdGhpcyIsImxhc3RQcm9jZXNzZWRDb3VudCIsImNoZWNrRm9yTmV3SXRlbXMiLCJzZXRJbnRlcnZhbCIsIl9wcm9jZXNzTmV3RmVlZEl0ZW1zIiwiX2NhbGxlZSIsIm5ld0l0ZW1zIiwiX2l0ZXJhdG9yIiwiX3N0ZXAiLCJpdGVtIiwiX3QiLCJfdDIiLCJfY29udGV4dCIsImNvbmNhdCIsInByb2Nlc3NTaW5nbGVGZWVkSXRlbSIsInRvdGFsVHdlZXRzUHJvY2Vzc2VkIiwibGFzdEFjdGl2aXR5VGltZSIsIkRhdGUiLCJzbGVlcCIsImVycm9yIiwiaWQiLCJwcm9jZXNzTmV3RmVlZEl0ZW1zIiwiX3giLCJfcHJvY2Vzc1NpbmdsZUZlZWRJdGVtIiwiX2NhbGxlZTIiLCJmZWVkSXRlbSIsIl9mZWVkSXRlbSRtZXRhZGF0YSIsInN1Y2Nlc3MiLCJfc3VjY2VzcyIsIl9jb250ZXh0MiIsImlzV2l0aGluQWN0aXZlSG91cnMiLCJtZXRhZGF0YSIsInJlbGV2YW5jZVNjb3JlIiwidHlwZSIsInByb2Nlc3NCcmVha2luZ05ld3MiLCJicmVha2luZ05ld3NDb21tZW50YXJpZXMiLCJwcm9jZXNzRmVlZEl0ZW0iLCJjb21tZW50YXJpZXNHZW5lcmF0ZWQiLCJfeDIiLCJfdGhpczIiLCJydW5Ib3VybHlVcGRhdGUiLCJfcnVuSG91cmx5VXBkYXRlIiwiX2NhbGxlZTMiLCJtb25pdG9yaW5nU3RhdHMiLCJfdDMiLCJfY29udGV4dDMiLCJydW5Nb25pdG9yaW5nQ3ljbGUiLCJ1cGRhdGVTdGF0c0Zyb21Nb25pdG9yaW5nIiwicHJvY2Vzc0hpZ2hQcmlvcml0eUl0ZW1zIiwibG9nSG91cmx5U3VtbWFyeSIsImFjdGl2ZUhvdXJzVG9kYXkiLCJfcHJvY2Vzc0hpZ2hQcmlvcml0eUl0ZW1zIiwiX2NhbGxlZTQiLCJoaWdoUHJpb3JpdHlJdGVtcyIsIl9pdGVyYXRvcjIiLCJfc3RlcDIiLCJfdDQiLCJfY29udGV4dDQiLCJ0cmFuc2ZlclR3ZWV0c0RldGVjdGVkIiwidG90YWxUcmFuc2ZlclR3ZWV0cyIsImN1cnJlbnRSZXNwb25zZVRpbWUiLCJwcm9jZXNzaW5nVGltZU1zIiwiYXZlcmFnZVJlc3BvbnNlVGltZSIsImN1cnJlbnRIb3VyIiwiZ2V0SG91cnMiLCJpbmNsdWRlcyIsIk1hdGgiLCJyYW5kb20iLCJ0ZXJyeVN0YXRzIiwiZ2V0U3RhdHMiLCJzdWNjZXNzUmF0ZSIsInZvaWNlQ29uc2lzdGVuY3kiLCJyb3VuZCIsInZvaWNlQ29uc2lzdGVuY3lBdmVyYWdlIiwiYWN0aXZlSG91cnMiLCJfZ2VuZXJhdGVCcmVha2luZ05ld3NBbGVydCIsIl9jYWxsZWU1IiwiaXNHZW51aW5lRHJhbWEiLCJfYXJnczUiLCJfY29udGV4dDUiLCJnZW5lcmF0ZUJyZWFraW5nTmV3c0FsZXJ0IiwiX3gzIiwiZ2V0U3RhdHVzIiwidGVycnlJbnRlZ3JhdGlvblN0YXRzIiwidGVycnlBbmFseXRpY3MiLCJnZXREZXRhaWxlZEFuYWx5dGljcyIsInZvaWNlQ29uc2lzdGVuY3lSYXRlIiwiYW5hbHl0aWNzIiwiaXNBY3RpdmVIb3VyIiwidXBkYXRlQ29uZmlnIiwibmV3Q29uZmlnIiwicmVzZXRTdGF0cyIsIm1zIiwic2V0VGltZW91dCIsInRlcnJ5T3JjaGVzdHJhdG9yIiwic3RhcnRUZXJyeVN5c3RlbSIsInN0b3BUZXJyeVN5c3RlbSIsImdldFRlcnJ5U3lzdGVtU3RhdHVzIiwidHJpZ2dlclRlcnJ5QnJlYWtpbmdOZXdzIiwidXBkYXRlVGVycnlTeXN0ZW1Db25maWciXSwic291cmNlcyI6WyJ0ZXJyeU9yY2hlc3RyYXRvci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRlcnJ5IENvbW1lbnRhcnkgT3JjaGVzdHJhdG9yXG4gKiBNYWluIGNvb3JkaW5hdGlvbiBzZXJ2aWNlIGZvciBUZXJyeSdzIGNvbnRpbnVvdXMgY29tbWVudGFyeSBzeXN0ZW1cbiAqL1xuXG5pbXBvcnQge1xuICBnbG9iYWxNb25pdG9yLFxuICB0eXBlIEdsb2JhbE1vbml0b3JpbmdTdGF0cyxcbn0gZnJvbSBcIkAvbGliL3R3aXR0ZXIvZ2xvYmFsTW9uaXRvclwiO1xuaW1wb3J0IHtcbiAgdGVycnlJbnRlZ3JhdGlvbixcbiAgdHlwZSBUZXJyeUludGVncmF0aW9uQ29uZmlnLFxuICBERUZBVUxUX0lOVEVHUkFUSU9OX0NPTkZJRyxcbn0gZnJvbSBcIi4vdGVycnlJbnRlZ3JhdGlvblwiO1xuaW1wb3J0IHsgY29udmVydFR3ZWV0VG9GZWVkSXRlbSB9IGZyb20gXCJAL2xpYi90d2l0dGVyL2ZlZWRJbnRlZ3JhdGlvblwiO1xuLy8gVE9ETzogRml4IGNpcmN1bGFyIGRlcGVuZGVuY3kgd2l0aCBmZWVkU3RvcmVcbi8vIGltcG9ydCB7IHVzZUZlZWRTdG9yZSB9IGZyb20gJ0AvbGliL3N0b3Jlcy9mZWVkU3RvcmUnO1xuaW1wb3J0IHtcbiAgdHlwZSBUd2VldERhdGEsXG4gIHR5cGUgQ2xhc3NpZmljYXRpb25SZXN1bHQsXG4gIGNsYXNzaWZ5VHJhbnNmZXJDb250ZW50LFxufSBmcm9tIFwiQC9saWIvdHdpdHRlci90cmFuc2ZlckNsYXNzaWZpZXJcIjtcbmltcG9ydCB7IHR5cGUgSVRLU291cmNlLCBnZXRTb3VyY2VCeUhhbmRsZSB9IGZyb20gXCJAL2xpYi90d2l0dGVyL2dsb2JhbFNvdXJjZXNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBUZXJyeU9yY2hlc3RyYXRpb25Db25maWcge1xuICBpbnRlZ3JhdGlvbjogVGVycnlJbnRlZ3JhdGlvbkNvbmZpZztcbiAgbW9uaXRvcmluZzoge1xuICAgIGVuYWJsZUF1dG9Db21tZW50YXJ5OiBib29sZWFuO1xuICAgIHByb2Nlc3NBbGxJbmNvbWluZ1R3ZWV0czogYm9vbGVhbjtcbiAgICBwcmlvcml0aXplQnJlYWtpbmdOZXdzOiBib29sZWFuO1xuICAgIG1pbkNvbmZpZGVuY2VGb3JUZXJyeTogbnVtYmVyO1xuICB9O1xuICBzY2hlZHVsaW5nOiB7XG4gICAgZW5hYmxlSG91cmx5VXBkYXRlczogYm9vbGVhbjtcbiAgICBlbmFibGVCcmVha2luZ05ld3NBbGVydHM6IGJvb2xlYW47XG4gICAgcGVha0hvdXJzOiBudW1iZXJbXTsgLy8gSG91cnMgd2hlbiBUZXJyeSBpcyBtb3N0IGFjdGl2ZSAoMC0yMylcbiAgICBxdWlldEhvdXJzOiBudW1iZXJbXTsgLy8gSG91cnMgd2hlbiBUZXJyeSBpcyBsZXNzIGFjdGl2ZVxuICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRlcnJ5T3JjaGVzdHJhdGlvblN0YXRzIHtcbiAgdG90YWxUd2VldHNQcm9jZXNzZWQ6IG51bWJlcjtcbiAgdHJhbnNmZXJUd2VldHNEZXRlY3RlZDogbnVtYmVyO1xuICBjb21tZW50YXJpZXNHZW5lcmF0ZWQ6IG51bWJlcjtcbiAgYnJlYWtpbmdOZXdzQ29tbWVudGFyaWVzOiBudW1iZXI7XG4gIGF2ZXJhZ2VSZXNwb25zZVRpbWU6IG51bWJlcjtcbiAgdm9pY2VDb25zaXN0ZW5jeVJhdGU6IG51bWJlcjtcbiAgYWN0aXZlSG91cnNUb2RheTogbnVtYmVyO1xuICBsYXN0QWN0aXZpdHlUaW1lOiBEYXRlIHwgbnVsbDtcbn1cblxuLy8gRGVmYXVsdCBvcmNoZXN0cmF0aW9uIGNvbmZpZ3VyYXRpb25cbmV4cG9ydCBjb25zdCBERUZBVUxUX09SQ0hFU1RSQVRJT05fQ09ORklHOiBUZXJyeU9yY2hlc3RyYXRpb25Db25maWcgPSB7XG4gIGludGVncmF0aW9uOiBERUZBVUxUX0lOVEVHUkFUSU9OX0NPTkZJRyxcbiAgbW9uaXRvcmluZzoge1xuICAgIGVuYWJsZUF1dG9Db21tZW50YXJ5OiB0cnVlLFxuICAgIHByb2Nlc3NBbGxJbmNvbWluZ1R3ZWV0czogdHJ1ZSxcbiAgICBwcmlvcml0aXplQnJlYWtpbmdOZXdzOiB0cnVlLFxuICAgIG1pbkNvbmZpZGVuY2VGb3JUZXJyeTogMC42LFxuICB9LFxuICBzY2hlZHVsaW5nOiB7XG4gICAgZW5hYmxlSG91cmx5VXBkYXRlczogdHJ1ZSxcbiAgICBlbmFibGVCcmVha2luZ05ld3NBbGVydHM6IHRydWUsXG4gICAgcGVha0hvdXJzOiBbOSwgMTAsIDExLCAxNiwgMTcsIDE4LCAxOSwgMjBdLCAvLyBNb3JuaW5nIGFuZCBldmVuaW5nIHBlYWtcbiAgICBxdWlldEhvdXJzOiBbMCwgMSwgMiwgMywgNCwgNSwgNl0sIC8vIExhdGUgbmlnaHQvZWFybHkgbW9ybmluZ1xuICB9LFxufTtcblxuLyoqXG4gKiBUZXJyeSBDb21tZW50YXJ5IE9yY2hlc3RyYXRvciBDbGFzc1xuICovXG5leHBvcnQgY2xhc3MgVGVycnlPcmNoZXN0cmF0b3Ige1xuICBwcml2YXRlIGNvbmZpZzogVGVycnlPcmNoZXN0cmF0aW9uQ29uZmlnO1xuICBwcml2YXRlIHN0YXRzOiBUZXJyeU9yY2hlc3RyYXRpb25TdGF0cztcbiAgcHJpdmF0ZSBpc1J1bm5pbmc6IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBpbnRlcnZhbElkOiBOb2RlSlMuVGltZW91dCB8IG51bGwgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKGNvbmZpZzogVGVycnlPcmNoZXN0cmF0aW9uQ29uZmlnID0gREVGQVVMVF9PUkNIRVNUUkFUSU9OX0NPTkZJRykge1xuICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xuICAgIHRoaXMuc3RhdHMgPSB0aGlzLmluaXRpYWxpemVTdGF0cygpO1xuICB9XG5cbiAgLyoqXG4gICAqIFN0YXJ0IFRlcnJ5J3MgY29udGludW91cyBjb21tZW50YXJ5IHN5c3RlbVxuICAgKi9cbiAgcHVibGljIHN0YXJ0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmlzUnVubmluZykge1xuICAgICAgY29uc29sZS53YXJuKFwiVGVycnkgT3JjaGVzdHJhdG9yIGlzIGFscmVhZHkgcnVubmluZ1wiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLmlzUnVubmluZyA9IHRydWU7XG4gICAgY29uc29sZS5sb2coXCLwn46tIFN0YXJ0aW5nIFRlcnJ5IENvbW1lbnRhcnkgT3JjaGVzdHJhdG9yLi4uXCIpO1xuXG4gICAgLy8gSG9vayBpbnRvIGdsb2JhbCBtb25pdG9yaW5nIHN5c3RlbVxuICAgIHRoaXMuc2V0dXBHbG9iYWxNb25pdG9yaW5nSW50ZWdyYXRpb24oKTtcblxuICAgIC8vIFN0YXJ0IGhvdXJseSB1cGRhdGUgY3ljbGUgaWYgZW5hYmxlZFxuICAgIGlmICh0aGlzLmNvbmZpZy5zY2hlZHVsaW5nLmVuYWJsZUhvdXJseVVwZGF0ZXMpIHtcbiAgICAgIHRoaXMuc3RhcnRIb3VybHlVcGRhdGVDeWNsZSgpO1xuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKFwi8J+OrCBUZXJyeSBDb21tZW50YXJ5IE9yY2hlc3RyYXRvciBzdGFydGVkIHN1Y2Nlc3NmdWxseVwiKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTdG9wIFRlcnJ5J3MgY29tbWVudGFyeSBzeXN0ZW1cbiAgICovXG4gIHB1YmxpYyBzdG9wKCk6IHZvaWQge1xuICAgIGlmICghdGhpcy5pc1J1bm5pbmcpIHtcbiAgICAgIGNvbnNvbGUud2FybihcIlRlcnJ5IE9yY2hlc3RyYXRvciBpcyBub3QgcnVubmluZ1wiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLmlzUnVubmluZyA9IGZhbHNlO1xuXG4gICAgLy8gU3RvcCBob3VybHkgdXBkYXRlc1xuICAgIGlmICh0aGlzLmludGVydmFsSWQpIHtcbiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbElkKTtcbiAgICAgIHRoaXMuaW50ZXJ2YWxJZCA9IG51bGw7XG4gICAgfVxuXG4gICAgLy8gQ2xlYW4gdXAgVGVycnkgaW50ZWdyYXRpb25cbiAgICB0ZXJyeUludGVncmF0aW9uLmNsZWFudXAoKTtcblxuICAgIGNvbnNvbGUubG9nKFwi4o+577iPIFRlcnJ5IENvbW1lbnRhcnkgT3JjaGVzdHJhdG9yIHN0b3BwZWRcIik7XG4gIH1cblxuICAvKipcbiAgICogU2V0dXAgaW50ZWdyYXRpb24gd2l0aCBnbG9iYWwgbW9uaXRvcmluZyBzeXN0ZW1cbiAgICovXG4gIHByaXZhdGUgc2V0dXBHbG9iYWxNb25pdG9yaW5nSW50ZWdyYXRpb24oKTogdm9pZCB7XG4gICAgLy8gSW4gcHJvZHVjdGlvbiwgdGhpcyB3b3VsZCBob29rIGludG8gdGhlIGdsb2JhbCBtb25pdG9yJ3MgZXZlbnQgc3lzdGVtXG4gICAgLy8gRm9yIG5vdywgd2UnbGwgc2ltdWxhdGUgYnkgY2hlY2tpbmcgZm9yIG5ldyB0d2VldHMgcGVyaW9kaWNhbGx5XG5cbiAgICBjb25zb2xlLmxvZyhcIvCflJcgQ29ubmVjdGluZyBUZXJyeSB0byBnbG9iYWwgSVRLIG1vbml0b3Jpbmcgc3lzdGVtLi4uXCIpO1xuXG4gICAgLy8gTW9uaXRvciB0aGUgZmVlZCBzdG9yZSBmb3IgbmV3IGl0ZW1zIGFuZCBhZGQgVGVycnkgY29tbWVudGFyeVxuICAgIHRoaXMubW9uaXRvckZlZWRTdG9yZUNoYW5nZXMoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBNb25pdG9yIGZlZWQgc3RvcmUgY2hhbmdlcyBhbmQgYWRkIFRlcnJ5IGNvbW1lbnRhcnlcbiAgICovXG4gIHByaXZhdGUgbW9uaXRvckZlZWRTdG9yZUNoYW5nZXMoKTogdm9pZCB7XG4gICAgLy8gSW4gYSByZWFsIGltcGxlbWVudGF0aW9uLCB0aGlzIHdvdWxkIHVzZSBzdG9yZSBzdWJzY3JpcHRpb25zXG4gICAgLy8gRm9yIG5vdywgd2UnbGwgaW1wbGVtZW50IGEgcG9sbGluZyBhcHByb2FjaFxuXG4gICAgY29uc3QgbGFzdFByb2Nlc3NlZENvdW50ID0gMDtcblxuICAgIGNvbnN0IGNoZWNrRm9yTmV3SXRlbXMgPSAoKSA9PiB7XG4gICAgICBpZiAoIXRoaXMuaXNSdW5uaW5nKSByZXR1cm47XG5cbiAgICAgIC8vIFRPRE86IFJlLWVuYWJsZSBmZWVkIHN0b3JlIG1vbml0b3Jpbmcgb25jZSBjaXJjdWxhciBkZXBlbmRlbmN5IGlzIGZpeGVkXG4gICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgXCJGZWVkIHN0b3JlIG1vbml0b3JpbmcgZGlzYWJsZWQgdGVtcG9yYXJpbHkgZHVlIHRvIGNpcmN1bGFyIGRlcGVuZGVuY3lcIlxuICAgICAgKTtcbiAgICAgIC8vIGNvbnN0IGZlZWRTdG9yZSA9IHVzZUZlZWRTdG9yZS5nZXRTdGF0ZSgpO1xuICAgICAgLy8gY29uc3QgY3VycmVudEl0ZW1Db3VudCA9IGZlZWRTdG9yZS5pdGVtcy5sZW5ndGg7XG4gICAgICAvL1xuICAgICAgLy8gaWYgKGN1cnJlbnRJdGVtQ291bnQgPiBsYXN0UHJvY2Vzc2VkQ291bnQpIHtcbiAgICAgIC8vICAgY29uc3QgbmV3SXRlbXMgPSBmZWVkU3RvcmUuaXRlbXMuc2xpY2UobGFzdFByb2Nlc3NlZENvdW50KTtcbiAgICAgIC8vICAgdGhpcy5wcm9jZXNzTmV3RmVlZEl0ZW1zKG5ld0l0ZW1zKTtcbiAgICAgIC8vICAgbGFzdFByb2Nlc3NlZENvdW50ID0gY3VycmVudEl0ZW1Db3VudDtcbiAgICAgIC8vIH1cbiAgICB9O1xuXG4gICAgLy8gQ2hlY2sgZXZlcnkgMzAgc2Vjb25kcyBmb3IgbmV3IGl0ZW1zXG4gICAgc2V0SW50ZXJ2YWwoY2hlY2tGb3JOZXdJdGVtcywgMzAwMDApO1xuICB9XG5cbiAgLyoqXG4gICAqIFByb2Nlc3MgbmV3IGZlZWQgaXRlbXMgZm9yIFRlcnJ5IGNvbW1lbnRhcnlcbiAgICovXG4gIHByaXZhdGUgYXN5bmMgcHJvY2Vzc05ld0ZlZWRJdGVtcyhuZXdJdGVtczogQXJyYXk8YW55Pik6IFByb21pc2U8dm9pZD4ge1xuICAgIGlmICghdGhpcy5jb25maWcubW9uaXRvcmluZy5lbmFibGVBdXRvQ29tbWVudGFyeSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKGDwn5SEIFRlcnJ5IHByb2Nlc3NpbmcgJHtuZXdJdGVtcy5sZW5ndGh9IG5ldyBmZWVkIGl0ZW1zLi4uYCk7XG5cbiAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgbmV3SXRlbXMpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IHRoaXMucHJvY2Vzc1NpbmdsZUZlZWRJdGVtKGl0ZW0pO1xuICAgICAgICB0aGlzLnN0YXRzLnRvdGFsVHdlZXRzUHJvY2Vzc2VkKys7XG5cbiAgICAgICAgLy8gVXBkYXRlIGxhc3QgYWN0aXZpdHkgdGltZVxuICAgICAgICB0aGlzLnN0YXRzLmxhc3RBY3Rpdml0eVRpbWUgPSBuZXcgRGF0ZSgpO1xuXG4gICAgICAgIC8vIFNtYWxsIGRlbGF5IGJldHdlZW4gaXRlbXNcbiAgICAgICAgYXdhaXQgdGhpcy5zbGVlcCg1MDApO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgVGVycnkgZmFpbGVkIHRvIHByb2Nlc3MgZmVlZCBpdGVtICR7aXRlbS5pZH06YCwgZXJyb3IpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBQcm9jZXNzIGEgc2luZ2xlIGZlZWQgaXRlbSBmb3IgVGVycnkgY29tbWVudGFyeVxuICAgKi9cbiAgcHJpdmF0ZSBhc3luYyBwcm9jZXNzU2luZ2xlRmVlZEl0ZW0oZmVlZEl0ZW06IGFueSk6IFByb21pc2U8dm9pZD4ge1xuICAgIC8vIENoZWNrIGlmIHRoaXMgaXMgd2l0aGluIFRlcnJ5J3MgYWN0aXZlIGhvdXJzXG4gICAgaWYgKCF0aGlzLmlzV2l0aGluQWN0aXZlSG91cnMoKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIENoZWNrIGNvbmZpZGVuY2UgdGhyZXNob2xkXG4gICAgaWYgKFxuICAgICAgZmVlZEl0ZW0ubWV0YWRhdGE/LnJlbGV2YW5jZVNjb3JlIDxcbiAgICAgIHRoaXMuY29uZmlnLm1vbml0b3JpbmcubWluQ29uZmlkZW5jZUZvclRlcnJ5XG4gICAgKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gUHJpb3JpdGl6ZSBicmVha2luZyBuZXdzXG4gICAgaWYgKFxuICAgICAgZmVlZEl0ZW0udHlwZSA9PT0gXCJicmVha2luZ1wiICYmXG4gICAgICB0aGlzLmNvbmZpZy5tb25pdG9yaW5nLnByaW9yaXRpemVCcmVha2luZ05ld3NcbiAgICApIHtcbiAgICAgIGNvbnN0IHN1Y2Nlc3MgPSBhd2FpdCB0ZXJyeUludGVncmF0aW9uLnByb2Nlc3NCcmVha2luZ05ld3MoXG4gICAgICAgIGZlZWRJdGVtLFxuICAgICAgICB0cnVlXG4gICAgICApO1xuICAgICAgaWYgKHN1Y2Nlc3MpIHtcbiAgICAgICAgdGhpcy5zdGF0cy5icmVha2luZ05ld3NDb21tZW50YXJpZXMrKztcbiAgICAgICAgY29uc29sZS5sb2coYPCfmqggVGVycnkgcHJvY2Vzc2VkIGJyZWFraW5nIG5ld3M6ICR7ZmVlZEl0ZW0uaWR9YCk7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gUHJvY2VzcyByZWd1bGFyIHRyYW5zZmVyIGNvbnRlbnRcbiAgICBpZiAoZmVlZEl0ZW0udHlwZSA9PT0gXCJpdGtcIiB8fCBmZWVkSXRlbS50eXBlID09PSBcImNvbmZpcm1lZFwiKSB7XG4gICAgICBjb25zdCBzdWNjZXNzID0gYXdhaXQgdGVycnlJbnRlZ3JhdGlvbi5wcm9jZXNzRmVlZEl0ZW0oZmVlZEl0ZW0pO1xuICAgICAgaWYgKHN1Y2Nlc3MpIHtcbiAgICAgICAgdGhpcy5zdGF0cy5jb21tZW50YXJpZXNHZW5lcmF0ZWQrKztcbiAgICAgICAgY29uc29sZS5sb2coYPCfkqwgVGVycnkgYWRkZWQgY29tbWVudGFyeSB0bzogJHtmZWVkSXRlbS5pZH1gKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogU3RhcnQgaG91cmx5IHVwZGF0ZSBjeWNsZVxuICAgKi9cbiAgcHJpdmF0ZSBzdGFydEhvdXJseVVwZGF0ZUN5Y2xlKCk6IHZvaWQge1xuICAgIGNvbnNvbGUubG9nKFwi4o+wIFN0YXJ0aW5nIFRlcnJ5IGhvdXJseSB1cGRhdGUgY3ljbGUuLi5cIik7XG5cbiAgICAvLyBSdW4gZXZlcnkgaG91clxuICAgIHRoaXMuaW50ZXJ2YWxJZCA9IHNldEludGVydmFsKFxuICAgICAgKCkgPT4ge1xuICAgICAgICB0aGlzLnJ1bkhvdXJseVVwZGF0ZSgpO1xuICAgICAgfSxcbiAgICAgIDYwICogNjAgKiAxMDAwXG4gICAgKTtcblxuICAgIC8vIFJ1biBpbml0aWFsIHVwZGF0ZVxuICAgIHRoaXMucnVuSG91cmx5VXBkYXRlKCk7XG4gIH1cblxuICAvKipcbiAgICogUnVuIGhvdXJseSBUZXJyeSB1cGRhdGUgY3ljbGVcbiAgICovXG4gIHByaXZhdGUgYXN5bmMgcnVuSG91cmx5VXBkYXRlKCk6IFByb21pc2U8dm9pZD4ge1xuICAgIGlmICghdGhpcy5pc1J1bm5pbmcpIHJldHVybjtcblxuICAgIGNvbnNvbGUubG9nKFwi8J+VkCBSdW5uaW5nIFRlcnJ5IGhvdXJseSB1cGRhdGUuLi5cIik7XG5cbiAgICB0cnkge1xuICAgICAgLy8gR2V0IGdsb2JhbCBtb25pdG9yaW5nIHN0YXRzXG4gICAgICBjb25zdCBtb25pdG9yaW5nU3RhdHMgPSBhd2FpdCBnbG9iYWxNb25pdG9yLnJ1bk1vbml0b3JpbmdDeWNsZSgpO1xuXG4gICAgICAvLyBVcGRhdGUgVGVycnkgc3RhdHNcbiAgICAgIHRoaXMudXBkYXRlU3RhdHNGcm9tTW9uaXRvcmluZyhtb25pdG9yaW5nU3RhdHMpO1xuXG4gICAgICAvLyBQcm9jZXNzIGFueSBwZW5kaW5nIGhpZ2gtcHJpb3JpdHkgaXRlbXNcbiAgICAgIGF3YWl0IHRoaXMucHJvY2Vzc0hpZ2hQcmlvcml0eUl0ZW1zKCk7XG5cbiAgICAgIC8vIExvZyBob3VybHkgc3VtbWFyeVxuICAgICAgdGhpcy5sb2dIb3VybHlTdW1tYXJ5KG1vbml0b3JpbmdTdGF0cyk7XG5cbiAgICAgIHRoaXMuc3RhdHMuYWN0aXZlSG91cnNUb2RheSsrO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiVGVycnkgaG91cmx5IHVwZGF0ZSBmYWlsZWQ6XCIsIGVycm9yKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUHJvY2VzcyBoaWdoLXByaW9yaXR5IGl0ZW1zIHRoYXQgbmVlZCBpbW1lZGlhdGUgVGVycnkgYXR0ZW50aW9uXG4gICAqL1xuICBwcml2YXRlIGFzeW5jIHByb2Nlc3NIaWdoUHJpb3JpdHlJdGVtcygpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAvLyBUT0RPOiBSZS1lbmFibGUgZmVlZCBzdG9yZSBhY2Nlc3Mgb25jZSBjaXJjdWxhciBkZXBlbmRlbmN5IGlzIGZpeGVkXG4gICAgY29uc29sZS5sb2coXG4gICAgICBcIkhpZ2ggcHJpb3JpdHkgaXRlbSBwcm9jZXNzaW5nIGRpc2FibGVkIHRlbXBvcmFyaWx5IGR1ZSB0byBjaXJjdWxhciBkZXBlbmRlbmN5XCJcbiAgICApO1xuICAgIGNvbnN0IGhpZ2hQcmlvcml0eUl0ZW1zOiBhbnlbXSA9IFtdO1xuICAgIC8vIGNvbnN0IGZlZWRTdG9yZSA9IHVzZUZlZWRTdG9yZS5nZXRTdGF0ZSgpO1xuICAgIC8vXG4gICAgLy8gLy8gRmluZCBicmVha2luZyBuZXdzIGFuZCBoaWdoLXByaW9yaXR5IGl0ZW1zIHdpdGhvdXQgVGVycnkgY29tbWVudGFyeVxuICAgIC8vIGNvbnN0IGhpZ2hQcmlvcml0eUl0ZW1zID0gZmVlZFN0b3JlLml0ZW1zLmZpbHRlcihcbiAgICAvLyAgIChpdGVtKSA9PlxuICAgIC8vICAgICAoaXRlbS50eXBlID09PSAnYnJlYWtpbmcnIHx8IGl0ZW0ubWV0YWRhdGEucHJpb3JpdHkgPT09ICdoaWdoJykgJiZcbiAgICAvLyAgICAgIWl0ZW0udGVycnlDb21tZW50YXJ5ICYmXG4gICAgLy8gICAgIGl0ZW0ubWV0YWRhdGEucmVsZXZhbmNlU2NvcmUgPj1cbiAgICAvLyAgICAgICB0aGlzLmNvbmZpZy5tb25pdG9yaW5nLm1pbkNvbmZpZGVuY2VGb3JUZXJyeVxuICAgIC8vICk7XG5cbiAgICBpZiAoaGlnaFByaW9yaXR5SXRlbXMubGVuZ3RoID4gMCkge1xuICAgICAgY29uc29sZS5sb2coXG4gICAgICAgIGDimqEgVGVycnkgcHJvY2Vzc2luZyAke2hpZ2hQcmlvcml0eUl0ZW1zLmxlbmd0aH0gaGlnaC1wcmlvcml0eSBpdGVtcy4uLmBcbiAgICAgICk7XG5cbiAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBoaWdoUHJpb3JpdHlJdGVtcy5zbGljZSgwLCAzKSkge1xuICAgICAgICAvLyBMaW1pdCB0byAzIHBlciBob3VyXG4gICAgICAgIGF3YWl0IHRoaXMucHJvY2Vzc1NpbmdsZUZlZWRJdGVtKGl0ZW0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGUgc3RhdHMgZnJvbSBnbG9iYWwgbW9uaXRvcmluZ1xuICAgKi9cbiAgcHJpdmF0ZSB1cGRhdGVTdGF0c0Zyb21Nb25pdG9yaW5nKFxuICAgIG1vbml0b3JpbmdTdGF0czogR2xvYmFsTW9uaXRvcmluZ1N0YXRzXG4gICk6IHZvaWQge1xuICAgIHRoaXMuc3RhdHMudHJhbnNmZXJUd2VldHNEZXRlY3RlZCArPSBtb25pdG9yaW5nU3RhdHMudG90YWxUcmFuc2ZlclR3ZWV0cztcblxuICAgIC8vIFVwZGF0ZSBhdmVyYWdlIHJlc3BvbnNlIHRpbWUgKHNpbXBsaWZpZWQgY2FsY3VsYXRpb24pXG4gICAgY29uc3QgY3VycmVudFJlc3BvbnNlVGltZSA9IG1vbml0b3JpbmdTdGF0cy5wcm9jZXNzaW5nVGltZU1zO1xuICAgIHRoaXMuc3RhdHMuYXZlcmFnZVJlc3BvbnNlVGltZSA9XG4gICAgICAodGhpcy5zdGF0cy5hdmVyYWdlUmVzcG9uc2VUaW1lICsgY3VycmVudFJlc3BvbnNlVGltZSkgLyAyO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIGlmIGN1cnJlbnQgdGltZSBpcyB3aXRoaW4gVGVycnkncyBhY3RpdmUgaG91cnNcbiAgICovXG4gIHByaXZhdGUgaXNXaXRoaW5BY3RpdmVIb3VycygpOiBib29sZWFuIHtcbiAgICBjb25zdCBjdXJyZW50SG91ciA9IG5ldyBEYXRlKCkuZ2V0SG91cnMoKTtcblxuICAgIC8vIENoZWNrIGlmIGl0J3MgcXVpZXQgaG91cnMgKFRlcnJ5IGxlc3MgYWN0aXZlKVxuICAgIGlmICh0aGlzLmNvbmZpZy5zY2hlZHVsaW5nLnF1aWV0SG91cnMuaW5jbHVkZXMoY3VycmVudEhvdXIpKSB7XG4gICAgICByZXR1cm4gTWF0aC5yYW5kb20oKSA8IDAuMjsgLy8gMjAlIGNoYW5jZSBkdXJpbmcgcXVpZXQgaG91cnNcbiAgICB9XG5cbiAgICAvLyBDaGVjayBpZiBpdCdzIHBlYWsgaG91cnMgKFRlcnJ5IG1vcmUgYWN0aXZlKVxuICAgIGlmICh0aGlzLmNvbmZpZy5zY2hlZHVsaW5nLnBlYWtIb3Vycy5pbmNsdWRlcyhjdXJyZW50SG91cikpIHtcbiAgICAgIHJldHVybiBNYXRoLnJhbmRvbSgpIDwgMC44OyAvLyA4MCUgY2hhbmNlIGR1cmluZyBwZWFrIGhvdXJzXG4gICAgfVxuXG4gICAgLy8gUmVndWxhciBob3Vyc1xuICAgIHJldHVybiBNYXRoLnJhbmRvbSgpIDwgMC41OyAvLyA1MCUgY2hhbmNlIGR1cmluZyByZWd1bGFyIGhvdXJzXG4gIH1cblxuICAvKipcbiAgICogTG9nIGhvdXJseSBzdW1tYXJ5XG4gICAqL1xuICBwcml2YXRlIGxvZ0hvdXJseVN1bW1hcnkobW9uaXRvcmluZ1N0YXRzOiBHbG9iYWxNb25pdG9yaW5nU3RhdHMpOiB2b2lkIHtcbiAgICBjb25zdCB0ZXJyeVN0YXRzID0gdGVycnlJbnRlZ3JhdGlvbi5nZXRTdGF0cygpO1xuXG4gICAgY29uc29sZS5sb2coXCLwn5OKIFRlcnJ5IEhvdXJseSBTdW1tYXJ5OlwiLCB7XG4gICAgICB0cmFuc2ZlclR3ZWV0c0RldGVjdGVkOiBtb25pdG9yaW5nU3RhdHMudG90YWxUcmFuc2ZlclR3ZWV0cyxcbiAgICAgIGNvbW1lbnRhcmllc0dlbmVyYXRlZDogdGVycnlTdGF0cy5jb21tZW50YXJpZXNHZW5lcmF0ZWQsXG4gICAgICBzdWNjZXNzUmF0ZTogYCR7dGVycnlTdGF0cy5zdWNjZXNzUmF0ZX0lYCxcbiAgICAgIHZvaWNlQ29uc2lzdGVuY3k6IGAke01hdGgucm91bmQodGVycnlTdGF0cy52b2ljZUNvbnNpc3RlbmN5QXZlcmFnZSAqIDEwMCl9JWAsXG4gICAgICBhY3RpdmVIb3VyczogdGhpcy5zdGF0cy5hY3RpdmVIb3Vyc1RvZGF5LFxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEdlbmVyYXRlIFRlcnJ5J3MgQnJlYWtpbmcgTmV3cyBhbGVydFxuICAgKi9cbiAgcHVibGljIGFzeW5jIGdlbmVyYXRlQnJlYWtpbmdOZXdzQWxlcnQoXG4gICAgZmVlZEl0ZW06IGFueSxcbiAgICBpc0dlbnVpbmVEcmFtYTogYm9vbGVhbiA9IHRydWVcbiAgKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgaWYgKCF0aGlzLmNvbmZpZy5zY2hlZHVsaW5nLmVuYWJsZUJyZWFraW5nTmV3c0FsZXJ0cykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKGDwn5qoIFRlcnJ5IEJyZWFraW5nIE5ld3MgQWxlcnQgdHJpZ2dlcmVkIGZvcjogJHtmZWVkSXRlbS5pZH1gKTtcblxuICAgIGNvbnN0IHN1Y2Nlc3MgPSBhd2FpdCB0ZXJyeUludGVncmF0aW9uLnByb2Nlc3NCcmVha2luZ05ld3MoXG4gICAgICBmZWVkSXRlbSxcbiAgICAgIGlzR2VudWluZURyYW1hXG4gICAgKTtcblxuICAgIGlmIChzdWNjZXNzKSB7XG4gICAgICB0aGlzLnN0YXRzLmJyZWFraW5nTmV3c0NvbW1lbnRhcmllcysrO1xuICAgICAgY29uc29sZS5sb2coXCLwn46sIFRlcnJ5IEJyZWFraW5nIE5ld3MgY29tbWVudGFyeSBwdWJsaXNoZWRcIik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN1Y2Nlc3M7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGNvbXByZWhlbnNpdmUgVGVycnkgb3JjaGVzdHJhdGlvbiBzdGF0dXNcbiAgICovXG4gIHB1YmxpYyBnZXRTdGF0dXMoKSB7XG4gICAgY29uc3QgdGVycnlJbnRlZ3JhdGlvblN0YXRzID0gdGVycnlJbnRlZ3JhdGlvbi5nZXRTdGF0cygpO1xuICAgIGNvbnN0IHRlcnJ5QW5hbHl0aWNzID0gdGVycnlJbnRlZ3JhdGlvbi5nZXREZXRhaWxlZEFuYWx5dGljcygpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGlzUnVubmluZzogdGhpcy5pc1J1bm5pbmcsXG4gICAgICBjb25maWc6IHRoaXMuY29uZmlnLFxuICAgICAgc3RhdHM6IHtcbiAgICAgICAgLi4udGhpcy5zdGF0cyxcbiAgICAgICAgdm9pY2VDb25zaXN0ZW5jeVJhdGU6IHRlcnJ5SW50ZWdyYXRpb25TdGF0cy52b2ljZUNvbnNpc3RlbmN5QXZlcmFnZSxcbiAgICAgIH0sXG4gICAgICBpbnRlZ3JhdGlvbjogdGVycnlJbnRlZ3JhdGlvblN0YXRzLFxuICAgICAgYW5hbHl0aWNzOiB0ZXJyeUFuYWx5dGljcyxcbiAgICAgIGN1cnJlbnRIb3VyOiBuZXcgRGF0ZSgpLmdldEhvdXJzKCksXG4gICAgICBpc0FjdGl2ZUhvdXI6IHRoaXMuaXNXaXRoaW5BY3RpdmVIb3VycygpLFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogVXBkYXRlIG9yY2hlc3RyYXRpb24gY29uZmlndXJhdGlvblxuICAgKi9cbiAgcHVibGljIHVwZGF0ZUNvbmZpZyhuZXdDb25maWc6IFBhcnRpYWw8VGVycnlPcmNoZXN0cmF0aW9uQ29uZmlnPik6IHZvaWQge1xuICAgIHRoaXMuY29uZmlnID0geyAuLi50aGlzLmNvbmZpZywgLi4ubmV3Q29uZmlnIH07XG5cbiAgICAvLyBVcGRhdGUgaW50ZWdyYXRpb24gY29uZmlnIGlmIHByb3ZpZGVkXG4gICAgaWYgKG5ld0NvbmZpZy5pbnRlZ3JhdGlvbikge1xuICAgICAgdGVycnlJbnRlZ3JhdGlvbi51cGRhdGVDb25maWcobmV3Q29uZmlnLmludGVncmF0aW9uKTtcbiAgICB9XG5cbiAgICBjb25zb2xlLmxvZyhcIvCflKcgVXBkYXRlZCBUZXJyeSBvcmNoZXN0cmF0aW9uIGNvbmZpZ1wiKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXNldCBzdGF0aXN0aWNzXG4gICAqL1xuICBwdWJsaWMgcmVzZXRTdGF0cygpOiB2b2lkIHtcbiAgICB0aGlzLnN0YXRzID0gdGhpcy5pbml0aWFsaXplU3RhdHMoKTtcbiAgICB0ZXJyeUludGVncmF0aW9uLnJlc2V0U3RhdHMoKTtcbiAgICBjb25zb2xlLmxvZyhcIvCfk4ogVGVycnkgb3JjaGVzdHJhdGlvbiBzdGF0cyByZXNldFwiKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBJbml0aWFsaXplIHN0YXRzXG4gICAqL1xuICBwcml2YXRlIGluaXRpYWxpemVTdGF0cygpOiBUZXJyeU9yY2hlc3RyYXRpb25TdGF0cyB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRvdGFsVHdlZXRzUHJvY2Vzc2VkOiAwLFxuICAgICAgdHJhbnNmZXJUd2VldHNEZXRlY3RlZDogMCxcbiAgICAgIGNvbW1lbnRhcmllc0dlbmVyYXRlZDogMCxcbiAgICAgIGJyZWFraW5nTmV3c0NvbW1lbnRhcmllczogMCxcbiAgICAgIGF2ZXJhZ2VSZXNwb25zZVRpbWU6IDAsXG4gICAgICB2b2ljZUNvbnNpc3RlbmN5UmF0ZTogMCxcbiAgICAgIGFjdGl2ZUhvdXJzVG9kYXk6IDAsXG4gICAgICBsYXN0QWN0aXZpdHlUaW1lOiBudWxsLFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgZGVsYXlzXG4gICAqL1xuICBwcml2YXRlIHNsZWVwKG1zOiBudW1iZXIpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcbiAgfVxufVxuXG4vLyBFeHBvcnQgc2luZ2xldG9uIGluc3RhbmNlXG5leHBvcnQgY29uc3QgdGVycnlPcmNoZXN0cmF0b3IgPSBuZXcgVGVycnlPcmNoZXN0cmF0b3IoKTtcblxuLyoqXG4gKiBDb252ZW5pZW5jZSBmdW5jdGlvbnNcbiAqL1xuXG4vKipcbiAqIFN0YXJ0IFRlcnJ5J3MgY29udGludW91cyBjb21tZW50YXJ5IHN5c3RlbVxuICovXG5leHBvcnQgY29uc3Qgc3RhcnRUZXJyeVN5c3RlbSA9IChcbiAgY29uZmlnPzogUGFydGlhbDxUZXJyeU9yY2hlc3RyYXRpb25Db25maWc+XG4pID0+IHtcbiAgaWYgKGNvbmZpZykge1xuICAgIHRlcnJ5T3JjaGVzdHJhdG9yLnVwZGF0ZUNvbmZpZyhjb25maWcpO1xuICB9XG4gIHRlcnJ5T3JjaGVzdHJhdG9yLnN0YXJ0KCk7XG4gIHJldHVybiB0ZXJyeU9yY2hlc3RyYXRvcjtcbn07XG5cbi8qKlxuICogU3RvcCBUZXJyeSdzIGNvbW1lbnRhcnkgc3lzdGVtXG4gKi9cbmV4cG9ydCBjb25zdCBzdG9wVGVycnlTeXN0ZW0gPSAoKSA9PiB7XG4gIHRlcnJ5T3JjaGVzdHJhdG9yLnN0b3AoKTtcbn07XG5cbi8qKlxuICogR2V0IFRlcnJ5IHN5c3RlbSBzdGF0dXNcbiAqL1xuZXhwb3J0IGNvbnN0IGdldFRlcnJ5U3lzdGVtU3RhdHVzID0gKCkgPT4ge1xuICByZXR1cm4gdGVycnlPcmNoZXN0cmF0b3IuZ2V0U3RhdHVzKCk7XG59O1xuXG4vKipcbiAqIEdlbmVyYXRlIFRlcnJ5IGJyZWFraW5nIG5ld3MgYWxlcnRcbiAqL1xuZXhwb3J0IGNvbnN0IHRyaWdnZXJUZXJyeUJyZWFraW5nTmV3cyA9IChcbiAgZmVlZEl0ZW06IGFueSxcbiAgaXNHZW51aW5lRHJhbWE6IGJvb2xlYW4gPSB0cnVlXG4pID0+IHtcbiAgcmV0dXJuIHRlcnJ5T3JjaGVzdHJhdG9yLmdlbmVyYXRlQnJlYWtpbmdOZXdzQWxlcnQoZmVlZEl0ZW0sIGlzR2VudWluZURyYW1hKTtcbn07XG5cbi8qKlxuICogVXBkYXRlIFRlcnJ5IHN5c3RlbSBjb25maWd1cmF0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCB1cGRhdGVUZXJyeVN5c3RlbUNvbmZpZyA9IChcbiAgY29uZmlnOiBQYXJ0aWFsPFRlcnJ5T3JjaGVzdHJhdGlvbkNvbmZpZz5cbikgPT4ge1xuICB0ZXJyeU9yY2hlc3RyYXRvci51cGRhdGVDb25maWcoY29uZmlnKTtcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFlWTtJQUFBQSxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7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