21437e0a54a707912d48dd67cfc51772
/* istanbul ignore next */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SentimentAnalysisSchema = exports.EntityExtractionSchema = exports.ContentClassificationSchema = exports.ContentAnalysisSchema = exports.AIContentAnalyzer = void 0;
var
/* istanbul ignore next */
_openai = _interopRequireDefault(require("openai"));
var
/* istanbul ignore next */
_zod = require("zod");
/* istanbul ignore next */ function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function cov_2r6jebolsj() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/ai/content-analyzer.ts";
  var hash = "4b8b245a5fac22214c5b37eac84c5a63b5b5588a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/ai/content-analyzer.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 38
        },
        end: {
          line: 44,
          column: 2
        }
      },
      "1": {
        start: {
          line: 46,
          column: 39
        },
        end: {
          line: 60,
          column: 2
        }
      },
      "2": {
        start: {
          line: 62,
          column: 43
        },
        end: {
          line: 85,
          column: 2
        }
      },
      "3": {
        start: {
          line: 87,
          column: 37
        },
        end: {
          line: 96,
          column: 2
        }
      },
      "4": {
        start: {
          line: 134,
          column: 48
        },
        end: {
          line: 134,
          column: 57
        }
      },
      "5": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 143,
          column: 6
        }
      },
      "6": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 147,
          column: 7
        }
      },
      "7": {
        start: {
          line: 154,
          column: 22
        },
        end: {
          line: 154,
          column: 32
        }
      },
      "8": {
        start: {
          line: 157,
          column: 21
        },
        end: {
          line: 157,
          column: 49
        }
      },
      "9": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "10": {
        start: {
          line: 159,
          column: 21
        },
        end: {
          line: 159,
          column: 46
        }
      },
      "11": {
        start: {
          line: 160,
          column: 6
        },
        end: {
          line: 160,
          column: 67
        }
      },
      "12": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 204,
          column: 5
        }
      },
      "13": {
        start: {
          line: 165,
          column: 52
        },
        end: {
          line: 169,
          column: 8
        }
      },
      "14": {
        start: {
          line: 172,
          column: 27
        },
        end: {
          line: 177,
          column: 7
        }
      },
      "15": {
        start: {
          line: 178,
          column: 33
        },
        end: {
          line: 182,
          column: 7
        }
      },
      "16": {
        start: {
          line: 184,
          column: 40
        },
        end: {
          line: 192,
          column: 7
        }
      },
      "17": {
        start: {
          line: 195,
          column: 6
        },
        end: {
          line: 197,
          column: 7
        }
      },
      "18": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 43
        }
      },
      "19": {
        start: {
          line: 199,
          column: 6
        },
        end: {
          line: 199,
          column: 22
        }
      },
      "20": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 203,
          column: 8
        }
      },
      "21": {
        start: {
          line: 213,
          column: 19
        },
        end: {
          line: 213,
          column: 56
        }
      },
      "22": {
        start: {
          line: 215,
          column: 21
        },
        end: {
          line: 241,
          column: 6
        }
      },
      "23": {
        start: {
          line: 243,
          column: 20
        },
        end: {
          line: 243,
          column: 57
        }
      },
      "24": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 246,
          column: 5
        }
      },
      "25": {
        start: {
          line: 245,
          column: 6
        },
        end: {
          line: 245,
          column: 60
        }
      },
      "26": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 255,
          column: 5
        }
      },
      "27": {
        start: {
          line: 249,
          column: 21
        },
        end: {
          line: 249,
          column: 40
        }
      },
      "28": {
        start: {
          line: 250,
          column: 6
        },
        end: {
          line: 250,
          column: 55
        }
      },
      "29": {
        start: {
          line: 252,
          column: 6
        },
        end: {
          line: 254,
          column: 8
        }
      },
      "30": {
        start: {
          line: 262,
          column: 19
        },
        end: {
          line: 262,
          column: 58
        }
      },
      "31": {
        start: {
          line: 264,
          column: 21
        },
        end: {
          line: 287,
          column: 6
        }
      },
      "32": {
        start: {
          line: 289,
          column: 20
        },
        end: {
          line: 289,
          column: 57
        }
      },
      "33": {
        start: {
          line: 290,
          column: 4
        },
        end: {
          line: 292,
          column: 5
        }
      },
      "34": {
        start: {
          line: 291,
          column: 6
        },
        end: {
          line: 291,
          column: 63
        }
      },
      "35": {
        start: {
          line: 294,
          column: 4
        },
        end: {
          line: 301,
          column: 5
        }
      },
      "36": {
        start: {
          line: 295,
          column: 21
        },
        end: {
          line: 295,
          column: 40
        }
      },
      "37": {
        start: {
          line: 296,
          column: 6
        },
        end: {
          line: 296,
          column: 50
        }
      },
      "38": {
        start: {
          line: 298,
          column: 6
        },
        end: {
          line: 300,
          column: 8
        }
      },
      "39": {
        start: {
          line: 310,
          column: 19
        },
        end: {
          line: 310,
          column: 51
        }
      },
      "40": {
        start: {
          line: 312,
          column: 21
        },
        end: {
          line: 336,
          column: 6
        }
      },
      "41": {
        start: {
          line: 338,
          column: 20
        },
        end: {
          line: 338,
          column: 57
        }
      },
      "42": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 341,
          column: 5
        }
      },
      "43": {
        start: {
          line: 340,
          column: 6
        },
        end: {
          line: 340,
          column: 64
        }
      },
      "44": {
        start: {
          line: 343,
          column: 4
        },
        end: {
          line: 350,
          column: 5
        }
      },
      "45": {
        start: {
          line: 344,
          column: 21
        },
        end: {
          line: 344,
          column: 40
        }
      },
      "46": {
        start: {
          line: 345,
          column: 6
        },
        end: {
          line: 345,
          column: 51
        }
      },
      "47": {
        start: {
          line: 347,
          column: 6
        },
        end: {
          line: 349,
          column: 8
        }
      },
      "48": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 372,
          column: 13
        }
      },
      "49": {
        start: {
          line: 379,
          column: 4
        },
        end: {
          line: 387,
          column: 13
        }
      },
      "50": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 404,
          column: 13
        }
      },
      "51": {
        start: {
          line: 416,
          column: 16
        },
        end: {
          line: 416,
          column: 17
        }
      },
      "52": {
        start: {
          line: 419,
          column: 4
        },
        end: {
          line: 419,
          column: 44
        }
      },
      "53": {
        start: {
          line: 422,
          column: 24
        },
        end: {
          line: 422,
          column: 71
        }
      },
      "54": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 423,
          column: 43
        }
      },
      "55": {
        start: {
          line: 426,
          column: 4
        },
        end: {
          line: 436,
          column: 5
        }
      },
      "56": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 428,
          column: 20
        }
      },
      "57": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 429,
          column: 14
        }
      },
      "58": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 431,
          column: 20
        }
      },
      "59": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 432,
          column: 14
        }
      },
      "60": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 434,
          column: 19
        }
      },
      "61": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 435,
          column: 14
        }
      },
      "62": {
        start: {
          line: 439,
          column: 4
        },
        end: {
          line: 439,
          column: 42
        }
      },
      "63": {
        start: {
          line: 439,
          column: 30
        },
        end: {
          line: 439,
          column: 42
        }
      },
      "64": {
        start: {
          line: 442,
          column: 4
        },
        end: {
          line: 442,
          column: 40
        }
      },
      "65": {
        start: {
          line: 444,
          column: 4
        },
        end: {
          line: 444,
          column: 44
        }
      },
      "66": {
        start: {
          line: 455,
          column: 16
        },
        end: {
          line: 455,
          column: 17
        }
      },
      "67": {
        start: {
          line: 458,
          column: 4
        },
        end: {
          line: 458,
          column: 63
        }
      },
      "68": {
        start: {
          line: 458,
          column: 51
        },
        end: {
          line: 458,
          column: 63
        }
      },
      "69": {
        start: {
          line: 459,
          column: 4
        },
        end: {
          line: 459,
          column: 63
        }
      },
      "70": {
        start: {
          line: 459,
          column: 51
        },
        end: {
          line: 459,
          column: 63
        }
      },
      "71": {
        start: {
          line: 460,
          column: 4
        },
        end: {
          line: 460,
          column: 60
        }
      },
      "72": {
        start: {
          line: 460,
          column: 48
        },
        end: {
          line: 460,
          column: 60
        }
      },
      "73": {
        start: {
          line: 463,
          column: 4
        },
        end: {
          line: 463,
          column: 50
        }
      },
      "74": {
        start: {
          line: 466,
          column: 22
        },
        end: {
          line: 468,
          column: 5
        }
      },
      "75": {
        start: {
          line: 467,
          column: 18
        },
        end: {
          line: 467,
          column: 69
        }
      },
      "76": {
        start: {
          line: 469,
          column: 4
        },
        end: {
          line: 469,
          column: 31
        }
      },
      "77": {
        start: {
          line: 469,
          column: 19
        },
        end: {
          line: 469,
          column: 31
        }
      },
      "78": {
        start: {
          line: 472,
          column: 4
        },
        end: {
          line: 472,
          column: 64
        }
      },
      "79": {
        start: {
          line: 472,
          column: 52
        },
        end: {
          line: 472,
          column: 64
        }
      },
      "80": {
        start: {
          line: 473,
          column: 4
        },
        end: {
          line: 473,
          column: 65
        }
      },
      "81": {
        start: {
          line: 473,
          column: 53
        },
        end: {
          line: 473,
          column: 65
        }
      },
      "82": {
        start: {
          line: 475,
          column: 4
        },
        end: {
          line: 475,
          column: 44
        }
      },
      "83": {
        start: {
          line: 482,
          column: 4
        },
        end: {
          line: 482,
          column: 68
        }
      },
      "84": {
        start: {
          line: 489,
          column: 4
        },
        end: {
          line: 489,
          column: 23
        }
      },
      "85": {
        start: {
          line: 496,
          column: 4
        },
        end: {
          line: 499,
          column: 6
        }
      },
      "86": {
        start: {
          line: 506,
          column: 4
        },
        end: {
          line: 519,
          column: 5
        }
      },
      "87": {
        start: {
          line: 507,
          column: 23
        },
        end: {
          line: 511,
          column: 8
        }
      },
      "88": {
        start: {
          line: 513,
          column: 6
        },
        end: {
          line: 513,
          column: 29
        }
      },
      "89": {
        start: {
          line: 515,
          column: 6
        },
        end: {
          line: 518,
          column: 8
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 136,
            column: 2
          },
          end: {
            line: 136,
            column: 3
          }
        },
        loc: {
          start: {
            line: 136,
            column: 38
          },
          end: {
            line: 148,
            column: 3
          }
        },
        line: 136
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 153,
            column: 2
          },
          end: {
            line: 153,
            column: 3
          }
        },
        loc: {
          start: {
            line: 153,
            column: 66
          },
          end: {
            line: 205,
            column: 3
          }
        },
        line: 153
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 210,
            column: 2
          },
          end: {
            line: 210,
            column: 3
          }
        },
        loc: {
          start: {
            line: 212,
            column: 36
          },
          end: {
            line: 256,
            column: 3
          }
        },
        line: 212
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 261,
            column: 2
          },
          end: {
            line: 261,
            column: 3
          }
        },
        loc: {
          start: {
            line: 261,
            column: 78
          },
          end: {
            line: 302,
            column: 3
          }
        },
        line: 261
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 307,
            column: 2
          },
          end: {
            line: 307,
            column: 3
          }
        },
        loc: {
          start: {
            line: 309,
            column: 32
          },
          end: {
            line: 351,
            column: 3
          }
        },
        line: 309
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 356,
            column: 2
          },
          end: {
            line: 356,
            column: 3
          }
        },
        loc: {
          start: {
            line: 356,
            column: 63
          },
          end: {
            line: 373,
            column: 3
          }
        },
        line: 356
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 378,
            column: 2
          },
          end: {
            line: 378,
            column: 3
          }
        },
        loc: {
          start: {
            line: 378,
            column: 65
          },
          end: {
            line: 388,
            column: 3
          }
        },
        line: 378
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 393,
            column: 2
          },
          end: {
            line: 393,
            column: 3
          }
        },
        loc: {
          start: {
            line: 393,
            column: 58
          },
          end: {
            line: 405,
            column: 3
          }
        },
        line: 393
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 410,
            column: 2
          },
          end: {
            line: 410,
            column: 3
          }
        },
        loc: {
          start: {
            line: 415,
            column: 12
          },
          end: {
            line: 445,
            column: 3
          }
        },
        line: 415
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 450,
            column: 2
          },
          end: {
            line: 450,
            column: 3
          }
        },
        loc: {
          start: {
            line: 454,
            column: 12
          },
          end: {
            line: 476,
            column: 3
          }
        },
        line: 454
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 467,
            column: 6
          },
          end: {
            line: 467,
            column: 7
          }
        },
        loc: {
          start: {
            line: 467,
            column: 18
          },
          end: {
            line: 467,
            column: 69
          }
        },
        line: 467
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 481,
            column: 2
          },
          end: {
            line: 481,
            column: 3
          }
        },
        loc: {
          start: {
            line: 481,
            column: 54
          },
          end: {
            line: 483,
            column: 3
          }
        },
        line: 481
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 488,
            column: 2
          },
          end: {
            line: 488,
            column: 3
          }
        },
        loc: {
          start: {
            line: 488,
            column: 21
          },
          end: {
            line: 490,
            column: 3
          }
        },
        line: 488
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 495,
            column: 2
          },
          end: {
            line: 495,
            column: 3
          }
        },
        loc: {
          start: {
            line: 495,
            column: 53
          },
          end: {
            line: 500,
            column: 3
          }
        },
        line: 495
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 505,
            column: 2
          },
          end: {
            line: 505,
            column: 3
          }
        },
        loc: {
          start: {
            line: 505,
            column: 77
          },
          end: {
            line: 520,
            column: 3
          }
        },
        line: 505
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "1": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 158,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 158,
            column: 33
          }
        }, {
          start: {
            line: 158,
            column: 37
          },
          end: {
            line: 158,
            column: 61
          }
        }],
        line: 158
      },
      "2": {
        loc: {
          start: {
            line: 195,
            column: 6
          },
          end: {
            line: 197,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 6
          },
          end: {
            line: 197,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "3": {
        loc: {
          start: {
            line: 202,
            column: 53
          },
          end: {
            line: 202,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 78
          },
          end: {
            line: 202,
            column: 91
          }
        }, {
          start: {
            line: 202,
            column: 94
          },
          end: {
            line: 202,
            column: 109
          }
        }],
        line: 202
      },
      "4": {
        loc: {
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "5": {
        loc: {
          start: {
            line: 253,
            column: 47
          },
          end: {
            line: 253,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 253,
            column: 72
          },
          end: {
            line: 253,
            column: 85
          }
        }, {
          start: {
            line: 253,
            column: 88
          },
          end: {
            line: 253,
            column: 101
          }
        }],
        line: 253
      },
      "6": {
        loc: {
          start: {
            line: 290,
            column: 4
          },
          end: {
            line: 292,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 4
          },
          end: {
            line: 292,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "7": {
        loc: {
          start: {
            line: 299,
            column: 50
          },
          end: {
            line: 299,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 299,
            column: 75
          },
          end: {
            line: 299,
            column: 88
          }
        }, {
          start: {
            line: 299,
            column: 91
          },
          end: {
            line: 299,
            column: 104
          }
        }],
        line: 299
      },
      "8": {
        loc: {
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 339
      },
      "9": {
        loc: {
          start: {
            line: 348,
            column: 51
          },
          end: {
            line: 348,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 348,
            column: 76
          },
          end: {
            line: 348,
            column: 89
          }
        }, {
          start: {
            line: 348,
            column: 92
          },
          end: {
            line: 348,
            column: 105
          }
        }],
        line: 348
      },
      "10": {
        loc: {
          start: {
            line: 368,
            column: 2
          },
          end: {
            line: 368,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 368,
            column: 37
          },
          end: {
            line: 368,
            column: 107
          }
        }, {
          start: {
            line: 368,
            column: 110
          },
          end: {
            line: 368,
            column: 112
          }
        }],
        line: 368
      },
      "11": {
        loc: {
          start: {
            line: 369,
            column: 2
          },
          end: {
            line: 369,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 369,
            column: 32
          },
          end: {
            line: 369,
            column: 90
          }
        }, {
          start: {
            line: 369,
            column: 93
          },
          end: {
            line: 369,
            column: 95
          }
        }],
        line: 369
      },
      "12": {
        loc: {
          start: {
            line: 426,
            column: 4
          },
          end: {
            line: 436,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 427,
            column: 6
          },
          end: {
            line: 429,
            column: 14
          }
        }, {
          start: {
            line: 430,
            column: 6
          },
          end: {
            line: 432,
            column: 14
          }
        }, {
          start: {
            line: 433,
            column: 6
          },
          end: {
            line: 435,
            column: 14
          }
        }],
        line: 426
      },
      "13": {
        loc: {
          start: {
            line: 439,
            column: 4
          },
          end: {
            line: 439,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 439,
            column: 4
          },
          end: {
            line: 439,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 439
      },
      "14": {
        loc: {
          start: {
            line: 458,
            column: 4
          },
          end: {
            line: 458,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 458,
            column: 4
          },
          end: {
            line: 458,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 458
      },
      "15": {
        loc: {
          start: {
            line: 459,
            column: 4
          },
          end: {
            line: 459,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 459,
            column: 4
          },
          end: {
            line: 459,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 459
      },
      "16": {
        loc: {
          start: {
            line: 460,
            column: 4
          },
          end: {
            line: 460,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 460,
            column: 4
          },
          end: {
            line: 460,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 460
      },
      "17": {
        loc: {
          start: {
            line: 467,
            column: 18
          },
          end: {
            line: 467,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 467,
            column: 18
          },
          end: {
            line: 467,
            column: 39
          }
        }, {
          start: {
            line: 467,
            column: 43
          },
          end: {
            line: 467,
            column: 69
          }
        }],
        line: 467
      },
      "18": {
        loc: {
          start: {
            line: 469,
            column: 4
          },
          end: {
            line: 469,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 4
          },
          end: {
            line: 469,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 469
      },
      "19": {
        loc: {
          start: {
            line: 472,
            column: 4
          },
          end: {
            line: 472,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 472,
            column: 4
          },
          end: {
            line: 472,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 472
      },
      "20": {
        loc: {
          start: {
            line: 473,
            column: 4
          },
          end: {
            line: 473,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 473,
            column: 4
          },
          end: {
            line: 473,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 473
      },
      "21": {
        loc: {
          start: {
            line: 517,
            column: 48
          },
          end: {
            line: 517,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 517,
            column: 73
          },
          end: {
            line: 517,
            column: 86
          }
        }, {
          start: {
            line: 517,
            column: 89
          },
          end: {
            line: 517,
            column: 104
          }
        }],
        line: 517
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4b8b245a5fac22214c5b37eac84c5a63b5b5588a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2r6jebolsj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2r6jebolsj();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * AI Content Analyzer
 * Advanced NLP processing for tweet analysis and content classification
 */ // TODO: Fix circular dependency with terry-style
// import { applyTerryStyle } from '@/lib/terry-style';
// Analysis result schemas
var EntityExtractionSchema =
/* istanbul ignore next */
exports.EntityExtractionSchema = (cov_2r6jebolsj().s[0]++,
/* istanbul ignore next */
_zod.
/* istanbul ignore next */
z.object({
  players:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.array(
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.object({
    name:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.string(),
    confidence:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.number().min(0).max(1),
    position:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.string().optional(),
    currentClub:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.string().optional(),
    nationality:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.string().optional()
  })),
  clubs:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.array(
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.object({
    name:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.string(),
    confidence:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.number().min(0).max(1),
    league:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.string().optional(),
    country:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.string().optional()
  })),
  transferDetails:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.array(
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.object({
    type:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z[
    /* istanbul ignore next */
    "enum"](['fee', 'contract_length', 'wage', 'agent', 'medical_date']),
    value:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.string(),
    confidence:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.number().min(0).max(1)
  })),
  agents:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.array(
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.object({
    name:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.string().optional(),
    company:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.string().optional(),
    confidence:
    /* istanbul ignore next */
    _zod.
    /* istanbul ignore next */
    z.number().min(0).max(1)
  }))
}));
var SentimentAnalysisSchema =
/* istanbul ignore next */
exports.SentimentAnalysisSchema = (cov_2r6jebolsj().s[1]++,
/* istanbul ignore next */
_zod.
/* istanbul ignore next */
z.object({
  sentiment:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z[
  /* istanbul ignore next */
  "enum"](['positive', 'negative', 'neutral']),
  confidence:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.number().min(0).max(1),
  emotions:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.array(
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z[
  /* istanbul ignore next */
  "enum"](['excitement', 'disappointment', 'skepticism', 'optimism', 'anxiety'])),
  reliability:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.number().min(0).max(1),
  // How reliable the source seems
  urgency:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.number().min(0).max(1) // How urgent/breaking the news is
}));
var ContentClassificationSchema =
/* istanbul ignore next */
exports.ContentClassificationSchema = (cov_2r6jebolsj().s[2]++,
/* istanbul ignore next */
_zod.
/* istanbul ignore next */
z.object({
  isTransferRelated:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z[
  /* istanbul ignore next */
  "boolean"](),
  transferType:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z[
  /* istanbul ignore next */
  "enum"](['RUMOUR', 'TALKS', 'ADVANCED', 'MEDICAL', 'CONFIRMED', 'OFFICIAL']).optional(),
  priority:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z[
  /* istanbul ignore next */
  "enum"](['LOW', 'MEDIUM', 'HIGH', 'URGENT']),
  confidence:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.number().min(0).max(1),
  categories:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.array(
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z[
  /* istanbul ignore next */
  "enum"](['signing', 'departure', 'contract_extension', 'loan', 'medical', 'negotiation', 'rumour', 'denial', 'agent_talk', 'fee_discussion'])),
  keyPoints:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.array(
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.string()),
  duplicateOf:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.string().optional() // ID of original tweet if this is duplicate
}));
var ContentAnalysisSchema =
/* istanbul ignore next */
exports.ContentAnalysisSchema = (cov_2r6jebolsj().s[3]++,
/* istanbul ignore next */
_zod.
/* istanbul ignore next */
z.object({
  tweetId:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.string().optional(),
  // Add optional tweetId for image placement
  classification: ContentClassificationSchema,
  entities: EntityExtractionSchema,
  sentiment: SentimentAnalysisSchema,
  qualityScore:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.number().min(0).max(100),
  terryCompatibility:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.number().min(0).max(100),
  // How well it fits Terry's style
  processingTime:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.number(),
  aiModel:
  /* istanbul ignore next */
  _zod.
  /* istanbul ignore next */
  z.string()
}));
/* istanbul ignore next */
var AIContentAnalyzer = exports.AIContentAnalyzer = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  AIContentAnalyzer(config) {
    /* istanbul ignore next */
    _classCallCheck(this, AIContentAnalyzer);
    _defineProperty(this, "cache", (cov_2r6jebolsj().s[4]++, new Map()));
    /* istanbul ignore next */
    cov_2r6jebolsj().f[0]++;
    cov_2r6jebolsj().s[5]++;
    this.config =
    /* istanbul ignore next */
    _objectSpread({
      model: 'gpt-4.1',
      maxTokens: 1500,
      temperature: 0.3,
      enableCaching: true
    }, config);
    /* istanbul ignore next */
    cov_2r6jebolsj().s[6]++;
    this.openai = new
    /* istanbul ignore next */
    _openai[
    /* istanbul ignore next */
    "default"]({
      apiKey: this.config.openaiApiKey
    });
  }

  /**
   * Perform comprehensive analysis of tweet content
   */
  return _createClass(AIContentAnalyzer, [{
    key: "analyzeTweet",
    value: (function () {
      var _analyzeTweet = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee(input)
      /* istanbul ignore next */
      {
        var startTime, cacheKey, cached, _ref, _ref2, classification, entities, sentiment, qualityScore, terryCompatibility, analysis, _t;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              cov_2r6jebolsj().f[1]++;
              startTime = (cov_2r6jebolsj().s[7]++, Date.now()); // Check cache first
              cacheKey = (cov_2r6jebolsj().s[8]++, this.generateCacheKey(input));
              cov_2r6jebolsj().s[9]++;
              if (!(
              /* istanbul ignore next */
              (cov_2r6jebolsj().b[1][0]++, this.config.enableCaching) &&
              /* istanbul ignore next */
              (cov_2r6jebolsj().b[1][1]++, this.cache.has(cacheKey)))) {
                _context.n = 1;
                break;
              }
              cov_2r6jebolsj().b[0][0]++;
              cached = (cov_2r6jebolsj().s[10]++, this.cache.get(cacheKey));
              cov_2r6jebolsj().s[11]++;
              return _context.a(2, _objectSpread(_objectSpread({}, cached), {}, {
                processingTime: Date.now() - startTime
              }));
            case 1:
              cov_2r6jebolsj().b[0][1]++;
            case 2:
              cov_2r6jebolsj().s[12]++;
              _context.p = 3;
              cov_2r6jebolsj().s[13]++;
              _context.n = 4;
              return Promise.all([this.classifyContent(input), this.extractEntities(input), this.analyzeSentiment(input)]);
            case 4:
              _ref = _context.v;
              _ref2 = _slicedToArray(_ref, 3);
              classification = _ref2[0];
              entities = _ref2[1];
              sentiment = _ref2[2];
              // Calculate quality scores
              qualityScore = (cov_2r6jebolsj().s[14]++, this.calculateQualityScore(classification, entities, sentiment, input));
              terryCompatibility = (cov_2r6jebolsj().s[15]++, this.calculateTerryCompatibility(input, sentiment, entities));
              analysis = (cov_2r6jebolsj().s[16]++, {
                classification: classification,
                entities: entities,
                sentiment: sentiment,
                qualityScore: qualityScore,
                terryCompatibility: terryCompatibility,
                processingTime: Date.now() - startTime,
                aiModel: this.config.model
              }); // Cache the result
              cov_2r6jebolsj().s[17]++;
              if (this.config.enableCaching) {
                /* istanbul ignore next */
                cov_2r6jebolsj().b[2][0]++;
                cov_2r6jebolsj().s[18]++;
                this.cache.set(cacheKey, analysis);
              } else
              /* istanbul ignore next */
              {
                cov_2r6jebolsj().b[2][1]++;
              }
              cov_2r6jebolsj().s[19]++;
              return _context.a(2, analysis);
            case 5:
              _context.p = 5;
              _t = _context.v;
              cov_2r6jebolsj().s[20]++;
              throw new Error(
              /* istanbul ignore next */
              "AI analysis failed for tweet ".concat(input.id, ": ").concat(
              /* istanbul ignore next */
              _t instanceof Error ?
              /* istanbul ignore next */
              (cov_2r6jebolsj().b[3][0]++,
              /* istanbul ignore next */
              _t.message) :
              /* istanbul ignore next */
              (cov_2r6jebolsj().b[3][1]++, 'Unknown error')));
            case 6:
              return _context.a(2);
          }
        }, _callee, this, [[3, 5]]);
      }));
      function analyzeTweet(_x) {
        return _analyzeTweet.apply(this, arguments);
      }
      return analyzeTweet;
    }()
    /**
     * Classify tweet content using AI
     */
    )
  }, {
    key: "classifyContent",
    value: (function () {
      var _classifyContent = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2(input)
      /* istanbul ignore next */
      {
        var _response$choices$;
        var prompt, response, content, parsed, _t2;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              cov_2r6jebolsj().f[2]++;
              prompt = (cov_2r6jebolsj().s[21]++, this.buildClassificationPrompt(input));
              cov_2r6jebolsj().s[22]++;
              _context2.n = 1;
              return this.openai.chat.completions.create({
                model: this.config.model,
                messages: [{
                  role: 'system',
                  content:
                  /* istanbul ignore next */
                  "You are an expert football transfer journalist and content classifier. Analyze tweets for transfer relevance with high accuracy.\n\nYour task is to classify the following tweet and return a JSON response with these exact fields:\n- isTransferRelated: boolean\n- transferType: \"RUMOUR\" | \"TALKS\" | \"ADVANCED\" | \"MEDICAL\" | \"CONFIRMED\" | \"OFFICIAL\" (only if transfer related)\n- priority: \"LOW\" | \"MEDIUM\" | \"HIGH\" | \"URGENT\"  \n- confidence: number between 0 and 1\n- categories: array of relevant categories from [\"signing\", \"departure\", \"contract_extension\", \"loan\", \"medical\", \"negotiation\", \"rumour\", \"denial\", \"agent_talk\", \"fee_discussion\"]\n- keyPoints: array of key information points (max 5)\n- duplicateOf: optional tweet ID if this appears to be duplicate content\n\nFocus on transfer-related content only. Non-transfer football content should be classified as not transfer related."
                }, {
                  role: 'user',
                  content: prompt
                }],
                max_tokens: this.config.maxTokens,
                temperature: this.config.temperature,
                response_format: {
                  type: 'json_object'
                }
              });
            case 1:
              response = _context2.v;
              content = (cov_2r6jebolsj().s[23]++, (_response$choices$ = response.choices[0]) === null || _response$choices$ === void 0 || (_response$choices$ =
              /* istanbul ignore next */
              _response$choices$.message) === null || _response$choices$ === void 0 ? void 0 :
              /* istanbul ignore next */
              _response$choices$.content);
              cov_2r6jebolsj().s[24]++;
              if (content) {
                _context2.n = 2;
                break;
              }
              cov_2r6jebolsj().b[4][0]++;
              cov_2r6jebolsj().s[25]++;
              throw new Error('No response from AI classification');
            case 2:
              cov_2r6jebolsj().b[4][1]++;
            case 3:
              cov_2r6jebolsj().s[26]++;
              _context2.p = 4;
              parsed = (cov_2r6jebolsj().s[27]++, JSON.parse(content));
              cov_2r6jebolsj().s[28]++;
              return _context2.a(2, ContentClassificationSchema.parse(parsed));
            case 5:
              _context2.p = 5;
              _t2 = _context2.v;
              cov_2r6jebolsj().s[29]++;
              throw new Error(
              /* istanbul ignore next */
              "Invalid AI classification response: ".concat(
              /* istanbul ignore next */
              _t2 instanceof Error ?
              /* istanbul ignore next */
              (cov_2r6jebolsj().b[5][0]++,
              /* istanbul ignore next */
              _t2.message) :
              /* istanbul ignore next */
              (cov_2r6jebolsj().b[5][1]++, 'Parse error')));
            case 6:
              return _context2.a(2);
          }
        }, _callee2, this, [[4, 5]]);
      }));
      function classifyContent(_x2) {
        return _classifyContent.apply(this, arguments);
      }
      return classifyContent;
    }()
    /**
     * Extract entities using AI
     */
    )
  }, {
    key: "extractEntities",
    value: (function () {
      var _extractEntities = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3(input)
      /* istanbul ignore next */
      {
        var _response$choices$2;
        var prompt, response, content, parsed, _t3;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              cov_2r6jebolsj().f[3]++;
              prompt = (cov_2r6jebolsj().s[30]++, this.buildEntityExtractionPrompt(input));
              cov_2r6jebolsj().s[31]++;
              _context3.n = 1;
              return this.openai.chat.completions.create({
                model: this.config.model,
                messages: [{
                  role: 'system',
                  content:
                  /* istanbul ignore next */
                  "You are an expert in football knowledge and named entity recognition. Extract all football-related entities from tweets.\n\nReturn a JSON response with these exact fields:\n- players: array of {name, confidence, position?, currentClub?, nationality?}\n- clubs: array of {name, confidence, league?, country?}\n- transferDetails: array of {type, value, confidence} where type is one of: \"fee\", \"contract_length\", \"wage\", \"agent\", \"medical_date\"\n- agents: array of {name?, company?, confidence}\n\nBe precise with confidence scores (0-1). Only include entities you're confident about."
                }, {
                  role: 'user',
                  content: prompt
                }],
                max_tokens: this.config.maxTokens,
                temperature: this.config.temperature,
                response_format: {
                  type: 'json_object'
                }
              });
            case 1:
              response = _context3.v;
              content = (cov_2r6jebolsj().s[32]++, (_response$choices$2 = response.choices[0]) === null || _response$choices$2 === void 0 || (_response$choices$2 =
              /* istanbul ignore next */
              _response$choices$2.message) === null || _response$choices$2 === void 0 ? void 0 :
              /* istanbul ignore next */
              _response$choices$2.content);
              cov_2r6jebolsj().s[33]++;
              if (content) {
                _context3.n = 2;
                break;
              }
              cov_2r6jebolsj().b[6][0]++;
              cov_2r6jebolsj().s[34]++;
              throw new Error('No response from AI entity extraction');
            case 2:
              cov_2r6jebolsj().b[6][1]++;
            case 3:
              cov_2r6jebolsj().s[35]++;
              _context3.p = 4;
              parsed = (cov_2r6jebolsj().s[36]++, JSON.parse(content));
              cov_2r6jebolsj().s[37]++;
              return _context3.a(2, EntityExtractionSchema.parse(parsed));
            case 5:
              _context3.p = 5;
              _t3 = _context3.v;
              cov_2r6jebolsj().s[38]++;
              throw new Error(
              /* istanbul ignore next */
              "Invalid AI entity extraction response: ".concat(
              /* istanbul ignore next */
              _t3 instanceof Error ?
              /* istanbul ignore next */
              (cov_2r6jebolsj().b[7][0]++,
              /* istanbul ignore next */
              _t3.message) :
              /* istanbul ignore next */
              (cov_2r6jebolsj().b[7][1]++, 'Parse error')));
            case 6:
              return _context3.a(2);
          }
        }, _callee3, this, [[4, 5]]);
      }));
      function extractEntities(_x3) {
        return _extractEntities.apply(this, arguments);
      }
      return extractEntities;
    }()
    /**
     * Analyze sentiment and reliability
     */
    )
  }, {
    key: "analyzeSentiment",
    value: (function () {
      var _analyzeSentiment = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4(input)
      /* istanbul ignore next */
      {
        var _response$choices$3;
        var prompt, response, content, parsed, _t4;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_2r6jebolsj().f[4]++;
              prompt = (cov_2r6jebolsj().s[39]++, this.buildSentimentPrompt(input));
              cov_2r6jebolsj().s[40]++;
              _context4.n = 1;
              return this.openai.chat.completions.create({
                model: this.config.model,
                messages: [{
                  role: 'system',
                  content:
                  /* istanbul ignore next */
                  "You are a sentiment analysis expert specializing in football transfer news. Analyze the sentiment, reliability, and urgency of transfer-related content.\n\nReturn a JSON response with these exact fields:\n- sentiment: \"positive\" | \"negative\" | \"neutral\"\n- confidence: number between 0 and 1\n- emotions: array of emotions from [\"excitement\", \"disappointment\", \"skepticism\", \"optimism\", \"anxiety\"]\n- reliability: number between 0 and 1 (how reliable/credible the source seems)\n- urgency: number between 0 and 1 (how urgent/breaking the news appears)\n\nConsider the author's tier, verification status, and language used when assessing reliability."
                }, {
                  role: 'user',
                  content: prompt
                }],
                max_tokens: this.config.maxTokens,
                temperature: this.config.temperature,
                response_format: {
                  type: 'json_object'
                }
              });
            case 1:
              response = _context4.v;
              content = (cov_2r6jebolsj().s[41]++, (_response$choices$3 = response.choices[0]) === null || _response$choices$3 === void 0 || (_response$choices$3 =
              /* istanbul ignore next */
              _response$choices$3.message) === null || _response$choices$3 === void 0 ? void 0 :
              /* istanbul ignore next */
              _response$choices$3.content);
              cov_2r6jebolsj().s[42]++;
              if (content) {
                _context4.n = 2;
                break;
              }
              cov_2r6jebolsj().b[8][0]++;
              cov_2r6jebolsj().s[43]++;
              throw new Error('No response from AI sentiment analysis');
            case 2:
              cov_2r6jebolsj().b[8][1]++;
            case 3:
              cov_2r6jebolsj().s[44]++;
              _context4.p = 4;
              parsed = (cov_2r6jebolsj().s[45]++, JSON.parse(content));
              cov_2r6jebolsj().s[46]++;
              return _context4.a(2, SentimentAnalysisSchema.parse(parsed));
            case 5:
              _context4.p = 5;
              _t4 = _context4.v;
              cov_2r6jebolsj().s[47]++;
              throw new Error(
              /* istanbul ignore next */
              "Invalid AI sentiment analysis response: ".concat(
              /* istanbul ignore next */
              _t4 instanceof Error ?
              /* istanbul ignore next */
              (cov_2r6jebolsj().b[9][0]++,
              /* istanbul ignore next */
              _t4.message) :
              /* istanbul ignore next */
              (cov_2r6jebolsj().b[9][1]++, 'Parse error')));
            case 6:
              return _context4.a(2);
          }
        }, _callee4, this, [[4, 5]]);
      }));
      function analyzeSentiment(_x4) {
        return _analyzeSentiment.apply(this, arguments);
      }
      return analyzeSentiment;
    }()
    /**
     * Build classification prompt
     */
    )
  }, {
    key: "buildClassificationPrompt",
    value: function buildClassificationPrompt(input) {
      /* istanbul ignore next */
      var _input$context, _input$context2;
      cov_2r6jebolsj().f[5]++;
      cov_2r6jebolsj().s[48]++;
      return /* istanbul ignore next */"\nTweet Analysis Request:\n\nContent: \"".concat(input.text, "\"\nAuthor: @").concat(input.authorHandle, " (").concat(input.authorName, ")\nVerified: ").concat(input.authorVerified, "\nSource Tier: ").concat(input.authorTier, "\nEngagement: ").concat(input.metrics.retweets, " RTs, ").concat(input.metrics.likes, " likes, ").concat(input.metrics.replies, " replies\nPosted: ").concat(input.createdAt.toISOString(), "\n\nContext:\n").concat(
      /* istanbul ignore next */
      (_input$context = input.context) !== null && _input$context !== void 0 &&
      /* istanbul ignore next */
      _input$context.authorSpecialties ?
      /* istanbul ignore next */
      (cov_2r6jebolsj().b[10][0]++, "Author specializes in: ".concat(input.context.authorSpecialties.join(', '))) :
      /* istanbul ignore next */
      (cov_2r6jebolsj().b[10][1]++, ''), "\n").concat(
      /* istanbul ignore next */
      (_input$context2 = input.context) !== null && _input$context2 !== void 0 &&
      /* istanbul ignore next */
      _input$context2.recentTweets ?
      /* istanbul ignore next */
      (cov_2r6jebolsj().b[11][0]++, "Recent tweets: ".concat(input.context.recentTweets.join(' | '))) :
      /* istanbul ignore next */
      (cov_2r6jebolsj().b[11][1]++, ''), "\n\nPlease classify this tweet for transfer relevance and provide detailed analysis.\n    ").trim();
    }

    /**
     * Build entity extraction prompt
     */
  }, {
    key: "buildEntityExtractionPrompt",
    value: function buildEntityExtractionPrompt(input) {
      /* istanbul ignore next */
      cov_2r6jebolsj().f[6]++;
      cov_2r6jebolsj().s[49]++;
      return /* istanbul ignore next */"\nExtract Football Entities:\n\nTweet: \"".concat(input.text, "\"\nAuthor: @").concat(input.authorHandle, " (").concat(input.authorTier, " source)\n\nPlease extract all football-related entities including players, clubs, transfer details, and agents.\nBe specific about confidence levels and include relevant metadata where available.\n    ").trim();
    }

    /**
     * Build sentiment analysis prompt
     */
  }, {
    key: "buildSentimentPrompt",
    value: function buildSentimentPrompt(input) {
      /* istanbul ignore next */
      cov_2r6jebolsj().f[7]++;
      cov_2r6jebolsj().s[50]++;
      return /* istanbul ignore next */"\nSentiment Analysis Request:\n\nTweet: \"".concat(input.text, "\"\nAuthor: @").concat(input.authorHandle, " (").concat(input.authorName, ")\nVerified: ").concat(input.authorVerified, ", Tier: ").concat(input.authorTier, "\nEngagement: ").concat(input.metrics.likes, " likes, ").concat(input.metrics.retweets, " retweets\n\nAnalyze the sentiment, perceived reliability, and urgency of this transfer-related content.\nConsider the author's credibility and the language used.\n    ").trim();
    }

    /**
     * Calculate overall quality score
     */
  }, {
    key: "calculateQualityScore",
    value: function calculateQualityScore(classification, entities, sentiment, input) {
      /* istanbul ignore next */
      cov_2r6jebolsj().f[8]++;
      var score =
      /* istanbul ignore next */
      (cov_2r6jebolsj().s[51]++, 0);

      // Base score from classification confidence
      /* istanbul ignore next */
      cov_2r6jebolsj().s[52]++;
      score += classification.confidence * 30;

      // Entity quality (specific players/clubs mentioned)
      var entityCount =
      /* istanbul ignore next */
      (cov_2r6jebolsj().s[53]++, entities.players.length + entities.clubs.length);
      /* istanbul ignore next */
      cov_2r6jebolsj().s[54]++;
      score += Math.min(entityCount * 5, 20);

      // Source reliability
      /* istanbul ignore next */
      cov_2r6jebolsj().s[55]++;
      switch (input.authorTier) {
        case 'tier1':
          /* istanbul ignore next */
          cov_2r6jebolsj().b[12][0]++;
          cov_2r6jebolsj().s[56]++;
          score += 25;
          /* istanbul ignore next */
          cov_2r6jebolsj().s[57]++;
          break;
        case 'tier2':
          /* istanbul ignore next */
          cov_2r6jebolsj().b[12][1]++;
          cov_2r6jebolsj().s[58]++;
          score += 15;
          /* istanbul ignore next */
          cov_2r6jebolsj().s[59]++;
          break;
        case 'tier3':
          /* istanbul ignore next */
          cov_2r6jebolsj().b[12][2]++;
          cov_2r6jebolsj().s[60]++;
          score += 5;
          /* istanbul ignore next */
          cov_2r6jebolsj().s[61]++;
          break;
      }

      // Verification bonus
      /* istanbul ignore next */
      cov_2r6jebolsj().s[62]++;
      if (input.authorVerified) {
        /* istanbul ignore next */
        cov_2r6jebolsj().b[13][0]++;
        cov_2r6jebolsj().s[63]++;
        score += 10;
      } else
      /* istanbul ignore next */
      {
        cov_2r6jebolsj().b[13][1]++;
      }

      // Sentiment reliability
      cov_2r6jebolsj().s[64]++;
      score += sentiment.reliability * 15;
      /* istanbul ignore next */
      cov_2r6jebolsj().s[65]++;
      return Math.min(Math.round(score), 100);
    }

    /**
     * Calculate Terry compatibility score
     */
  }, {
    key: "calculateTerryCompatibility",
    value: function calculateTerryCompatibility(input, sentiment, entities) {
      /* istanbul ignore next */
      cov_2r6jebolsj().f[9]++;
      var score =
      /* istanbul ignore next */
      (cov_2r6jebolsj().s[66]++, 0);

      // Emotional content (Terry loves drama)
      /* istanbul ignore next */
      cov_2r6jebolsj().s[67]++;
      if (sentiment.emotions.includes('excitement')) {
        /* istanbul ignore next */
        cov_2r6jebolsj().b[14][0]++;
        cov_2r6jebolsj().s[68]++;
        score += 20;
      } else
      /* istanbul ignore next */
      {
        cov_2r6jebolsj().b[14][1]++;
      }
      cov_2r6jebolsj().s[69]++;
      if (sentiment.emotions.includes('skepticism')) {
        /* istanbul ignore next */
        cov_2r6jebolsj().b[15][0]++;
        cov_2r6jebolsj().s[70]++;
        score += 25;
      } else
      /* istanbul ignore next */
      {
        cov_2r6jebolsj().b[15][1]++;
      }
      cov_2r6jebolsj().s[71]++;
      if (sentiment.emotions.includes('anxiety')) {
        /* istanbul ignore next */
        cov_2r6jebolsj().b[16][0]++;
        cov_2r6jebolsj().s[72]++;
        score += 15;
      } else
      /* istanbul ignore next */
      {
        cov_2r6jebolsj().b[16][1]++;
      }

      // Specific details (Terry loves specificity)
      cov_2r6jebolsj().s[73]++;
      score += entities.transferDetails.length * 10;

      // Big fees (Terry loves financial absurdity)
      var hasBigFee =
      /* istanbul ignore next */
      (cov_2r6jebolsj().s[74]++, entities.transferDetails.some(function (detail) {
        /* istanbul ignore next */
        cov_2r6jebolsj().f[10]++;
        cov_2r6jebolsj().s[75]++;
        return /* istanbul ignore next */(cov_2r6jebolsj().b[17][0]++, detail.type === 'fee') &&
        /* istanbul ignore next */
        (cov_2r6jebolsj().b[17][1]++, /\d{3}/.test(detail.value));
      }));
      /* istanbul ignore next */
      cov_2r6jebolsj().s[76]++;
      if (hasBigFee) {
        /* istanbul ignore next */
        cov_2r6jebolsj().b[18][0]++;
        cov_2r6jebolsj().s[77]++;
        score += 20;
      } else
      /* istanbul ignore next */
      {
        cov_2r6jebolsj().b[18][1]++;
      }

      // Chaos potential
      cov_2r6jebolsj().s[78]++;
      if (input.text.toLowerCase().includes('chaos')) {
        /* istanbul ignore next */
        cov_2r6jebolsj().b[19][0]++;
        cov_2r6jebolsj().s[79]++;
        score += 10;
      } else
      /* istanbul ignore next */
      {
        cov_2r6jebolsj().b[19][1]++;
      }
      cov_2r6jebolsj().s[80]++;
      if (input.text.toLowerCase().includes('mental')) {
        /* istanbul ignore next */
        cov_2r6jebolsj().b[20][0]++;
        cov_2r6jebolsj().s[81]++;
        score += 15;
      } else
      /* istanbul ignore next */
      {
        cov_2r6jebolsj().b[20][1]++;
      }
      cov_2r6jebolsj().s[82]++;
      return Math.min(Math.round(score), 100);
    }

    /**
     * Generate cache key for analysis
     */
  }, {
    key: "generateCacheKey",
    value: function generateCacheKey(input) {
      /* istanbul ignore next */
      cov_2r6jebolsj().f[11]++;
      cov_2r6jebolsj().s[83]++;
      return /* istanbul ignore next */"".concat(input.id, "_").concat(input.text.length, "_").concat(input.authorHandle);
    }

    /**
     * Clear analysis cache
     */
  }, {
    key: "clearCache",
    value: function clearCache() {
      /* istanbul ignore next */
      cov_2r6jebolsj().f[12]++;
      cov_2r6jebolsj().s[84]++;
      this.cache.clear();
    }

    /**
     * Get cache statistics
     */
  }, {
    key: "getCacheStats",
    value: function getCacheStats() {
      /* istanbul ignore next */
      cov_2r6jebolsj().f[13]++;
      cov_2r6jebolsj().s[85]++;
      return {
        size: this.cache.size,
        hitRate: 0 // Would track this with proper metrics
      };
    }

    /**
     * Validate API configuration
     */
  }, {
    key: "validateConfiguration",
    value: (function () {
      var _validateConfiguration = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee5()
      /* istanbul ignore next */
      {
        var response, _t5;
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              cov_2r6jebolsj().f[14]++;
              cov_2r6jebolsj().s[86]++;
              _context5.p = 1;
              cov_2r6jebolsj().s[87]++;
              _context5.n = 2;
              return this.openai.chat.completions.create({
                model: this.config.model,
                messages: [{
                  role: 'user',
                  content: 'Test connection'
                }],
                max_tokens: 10
              });
            case 2:
              response = _context5.v;
              cov_2r6jebolsj().s[88]++;
              return _context5.a(2, {
                valid: true
              });
            case 3:
              _context5.p = 3;
              _t5 = _context5.v;
              cov_2r6jebolsj().s[89]++;
              return _context5.a(2, {
                valid: false,
                error:
                /* istanbul ignore next */
                "OpenAI API validation failed: ".concat(
                /* istanbul ignore next */
                _t5 instanceof Error ?
                /* istanbul ignore next */
                (cov_2r6jebolsj().b[21][0]++,
                /* istanbul ignore next */
                _t5.message) :
                /* istanbul ignore next */
                (cov_2r6jebolsj().b[21][1]++, 'Unknown error'))
              });
          }
        }, _callee5, this, [[1, 3]]);
      }));
      function validateConfiguration() {
        return _validateConfiguration.apply(this, arguments);
      }
      return validateConfiguration;
    }())
  }]);
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,