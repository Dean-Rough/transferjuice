1ed7fa58843f78fd8d562a0d95fc7aee
/* istanbul ignore next */
function cov_2j4qqaklaz() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/briefings/generator.ts";
  var hash = "bf32f90e51d0a4cc4633a281c7a36b9942dfab50";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/briefings/generator.ts",
    statementMap: {
      "0": {
        start: {
          line: 37,
          column: 67
        },
        end: {
          line: 37,
          column: 74
        }
      },
      "1": {
        start: {
          line: 39,
          column: 2
        },
        end: {
          line: 39,
          column: 71
        }
      },
      "2": {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 44,
          column: 3
        }
      },
      "3": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 78
        }
      },
      "4": {
        start: {
          line: 46,
          column: 2
        },
        end: {
          line: 121,
          column: 3
        }
      },
      "5": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 40
        }
      },
      "6": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 41
        }
      },
      "7": {
        start: {
          line: 52,
          column: 33
        },
        end: {
          line: 52,
          column: 70
        }
      },
      "8": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "9": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 55,
          column: 74
        }
      },
      "10": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 60,
          column: 76
        }
      },
      "11": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 72
        }
      },
      "12": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 53
        }
      },
      "13": {
        start: {
          line: 66,
          column: 25
        },
        end: {
          line: 66,
          column: 78
        }
      },
      "14": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 54
        }
      },
      "15": {
        start: {
          line: 70,
          column: 25
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "16": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 46
        }
      },
      "17": {
        start: {
          line: 78,
          column: 27
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "18": {
        start: {
          line: 84,
          column: 22
        },
        end: {
          line: 84,
          column: 54
        }
      },
      "19": {
        start: {
          line: 85,
          column: 21
        },
        end: {
          line: 85,
          column: 47
        }
      },
      "20": {
        start: {
          line: 88,
          column: 45
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "21": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 41
        }
      },
      "22": {
        start: {
          line: 97,
          column: 21
        },
        end: {
          line: 108,
          column: 6
        }
      },
      "23": {
        start: {
          line: 106,
          column: 48
        },
        end: {
          line: 106,
          column: 55
        }
      },
      "24": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "25": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 112,
          column: 41
        }
      },
      "26": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 71
        }
      },
      "27": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 117,
          column: 20
        }
      },
      "28": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 58
        }
      },
      "29": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 16
        }
      },
      "30": {
        start: {
          line: 128,
          column: 2
        },
        end: {
          line: 131,
          column: 8
        }
      },
      "31": {
        start: {
          line: 129,
          column: 18
        },
        end: {
          line: 129,
          column: 53
        }
      },
      "32": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 25
        }
      },
      "33": {
        start: {
          line: 138,
          column: 17
        },
        end: {
          line: 138,
          column: 34
        }
      },
      "34": {
        start: {
          line: 140,
          column: 2
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "35": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 149,
          column: 5
        }
      },
      "36": {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "37": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "38": {
        start: {
          line: 144,
          column: 10
        },
        end: {
          line: 144,
          column: 32
        }
      },
      "39": {
        start: {
          line: 145,
          column: 15
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "40": {
        start: {
          line: 146,
          column: 10
        },
        end: {
          line: 146,
          column: 33
        }
      },
      "41": {
        start: {
          line: 152,
          column: 2
        },
        end: {
          line: 152,
          column: 28
        }
      },
      "42": {
        start: {
          line: 159,
          column: 29
        },
        end: {
          line: 159,
          column: 69
        }
      },
      "43": {
        start: {
          line: 160,
          column: 2
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "44": {
        start: {
          line: 170,
          column: 2
        },
        end: {
          line: 209,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "generateBriefing",
        decl: {
          start: {
            line: 34,
            column: 22
          },
          end: {
            line: 34,
            column: 38
          }
        },
        loc: {
          start: {
            line: 36,
            column: 21
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 36
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 106,
            column: 38
          },
          end: {
            line: 106,
            column: 39
          }
        },
        loc: {
          start: {
            line: 106,
            column: 48
          },
          end: {
            line: 106,
            column: 55
          }
        },
        line: 106
      },
      "2": {
        name: "calculateWordCount",
        decl: {
          start: {
            line: 127,
            column: 9
          },
          end: {
            line: 127,
            column: 27
          }
        },
        loc: {
          start: {
            line: 127,
            column: 75
          },
          end: {
            line: 132,
            column: 1
          }
        },
        line: 127
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 128,
            column: 25
          },
          end: {
            line: 128,
            column: 26
          }
        },
        loc: {
          start: {
            line: 128,
            column: 45
          },
          end: {
            line: 131,
            column: 3
          }
        },
        line: 128
      },
      "4": {
        name: "extractTagIds",
        decl: {
          start: {
            line: 137,
            column: 9
          },
          end: {
            line: 137,
            column: 22
          }
        },
        loc: {
          start: {
            line: 137,
            column: 51
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 137
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 140,
            column: 20
          },
          end: {
            line: 140,
            column: 21
          }
        },
        loc: {
          start: {
            line: 140,
            column: 30
          },
          end: {
            line: 150,
            column: 3
          }
        },
        line: 140
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 142,
            column: 24
          },
          end: {
            line: 142,
            column: 25
          }
        },
        loc: {
          start: {
            line: 142,
            column: 38
          },
          end: {
            line: 148,
            column: 7
          }
        },
        line: 142
      },
      "7": {
        name: "publishBriefing",
        decl: {
          start: {
            line: 158,
            column: 15
          },
          end: {
            line: 158,
            column: 30
          }
        },
        loc: {
          start: {
            line: 158,
            column: 66
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 158
      },
      "8": {
        name: "createMockFeedItems",
        decl: {
          start: {
            line: 169,
            column: 9
          },
          end: {
            line: 169,
            column: 28
          }
        },
        loc: {
          start: {
            line: 169,
            column: 38
          },
          end: {
            line: 210,
            column: 1
          }
        },
        line: 169
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 21
          },
          end: {
            line: 37,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 37
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 39
          },
          end: {
            line: 37,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 57
          },
          end: {
            line: 37,
            column: 62
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 2
          },
          end: {
            line: 44,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 2
          },
          end: {
            line: 44,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 6
          },
          end: {
            line: 42,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 6
          },
          end: {
            line: 42,
            column: 22
          }
        }, {
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 42,
            column: 70
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 54,
            column: 30
          }
        }, {
          start: {
            line: 54,
            column: 34
          },
          end: {
            line: 54,
            column: 43
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 6
          },
          end: {
            line: 60,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 60,
            column: 43
          },
          end: {
            line: 60,
            column: 64
          }
        }, {
          start: {
            line: 60,
            column: 67
          },
          end: {
            line: 60,
            column: 76
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 60,
            column: 6
          },
          end: {
            line: 60,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 6
          },
          end: {
            line: 60,
            column: 14
          }
        }, {
          start: {
            line: 60,
            column: 18
          },
          end: {
            line: 60,
            column: 40
          }
        }],
        line: 60
      },
      "8": {
        loc: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "9": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 111,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 111,
            column: 17
          }
        }, {
          start: {
            line: 111,
            column: 21
          },
          end: {
            line: 111,
            column: 29
          }
        }],
        line: 111
      },
      "10": {
        loc: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "11": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: 145,
            column: 15
          },
          end: {
            line: 147,
            column: 9
          }
        }],
        line: 143
      },
      "12": {
        loc: {
          start: {
            line: 145,
            column: 15
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 15
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bf32f90e51d0a4cc4633a281c7a36b9942dfab50"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2j4qqaklaz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2j4qqaklaz();
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Core Briefing Generation Logic
 * Orchestrates the hourly briefing creation pipeline
 */

import { createBriefing, briefingExistsForTimestamp } from "@/lib/database/briefings";
import { getTweetsForBriefing, syncGlobalSourcesToDatabase } from "./twitter";
import { generateTerryContent } from "./terry";
import { generatePolaroids } from "./polaroids";
import { mixPartnerContent } from "./partner";
export
/* istanbul ignore next */
function generateBriefing(_x) {
  return _generateBriefing.apply(this, arguments);
}

/**
 * Calculate total word count
 */
/* istanbul ignore next */
function _generateBriefing() {
  _generateBriefing = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(options)
  /* istanbul ignore next */
  {
    var _ref, timestamp, _ref$testMode, testMode, _ref$forceRegenerate, forceRegenerate, _ref2, feedItems, stats, itemsToProcess, terryContent, mixedContent, visualTimeline, wordCount, readTime, briefingContent, briefing, _t, _t2;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_2j4qqaklaz().f[0]++;
          _ref = (cov_2j4qqaklaz().s[0]++, options), timestamp = _ref.timestamp, _ref$testMode = _ref.testMode, testMode = _ref$testMode === void 0 ? (cov_2j4qqaklaz().b[0][0]++, false) : _ref$testMode, _ref$forceRegenerate = _ref.forceRegenerate, forceRegenerate = _ref$forceRegenerate === void 0 ? (cov_2j4qqaklaz().b[1][0]++, false) : _ref$forceRegenerate;
          cov_2j4qqaklaz().s[1]++;
          console.log(
          /* istanbul ignore next */
          "\uD83D\uDE80 Generating briefing for ".concat(timestamp.toISOString()));

          // Check if briefing already exists
          cov_2j4qqaklaz().s[2]++;
          _t = (cov_2j4qqaklaz().b[3][0]++, !forceRegenerate);
          if (!_t) {
            _context.n = 2;
            break;
          }
          cov_2j4qqaklaz().b[3][1]++;
          _context.n = 1;
          return briefingExistsForTimestamp(timestamp);
        case 1:
          _t = _context.v;
        case 2:
          if (!_t) {
            _context.n = 3;
            break;
          }
          cov_2j4qqaklaz().b[2][0]++;
          cov_2j4qqaklaz().s[3]++;
          throw new Error(
          /* istanbul ignore next */
          "Briefing already exists for ".concat(timestamp.toISOString()));
        case 3:
          cov_2j4qqaklaz().b[2][1]++;
        case 4:
          cov_2j4qqaklaz().s[4]++;
          _context.p = 5;
          cov_2j4qqaklaz().s[5]++;
          _context.n = 6;
          return syncGlobalSourcesToDatabase();
        case 6:
          cov_2j4qqaklaz().s[6]++;
          // Step 2: Fetch tweets from ITK sources
          console.log("📡 Fetching tweets...");
          cov_2j4qqaklaz().s[7]++;
          _context.n = 7;
          return getTweetsForBriefing(timestamp);
        case 7:
          _ref2 = _context.v;
          feedItems = _ref2.feedItems;
          stats = _ref2.stats;
          cov_2j4qqaklaz().s[8]++;
          if (!(
          /* istanbul ignore next */
          (cov_2j4qqaklaz().b[5][0]++, feedItems.length === 0) &&
          /* istanbul ignore next */
          (cov_2j4qqaklaz().b[5][1]++, !testMode))) {
            _context.n = 8;
            break;
          }
          cov_2j4qqaklaz().b[4][0]++;
          cov_2j4qqaklaz().s[9]++;
          throw new Error("No relevant tweets found for briefing generation");
        case 8:
          cov_2j4qqaklaz().b[4][1]++;
        case 9:
          // For test mode, create mock feed items
          itemsToProcess = (cov_2j4qqaklaz().s[10]++,
          /* istanbul ignore next */
          (cov_2j4qqaklaz().b[7][0]++, testMode) &&
          /* istanbul ignore next */
          (cov_2j4qqaklaz().b[7][1]++, feedItems.length === 0) ?
          /* istanbul ignore next */
          (cov_2j4qqaklaz().b[6][0]++, createMockFeedItems()) :
          /* istanbul ignore next */
          (cov_2j4qqaklaz().b[6][1]++, feedItems));
          cov_2j4qqaklaz().s[11]++;
          console.log(
          /* istanbul ignore next */
          "\u2705 Found ".concat(itemsToProcess.length, " relevant feed items"));

          // Step 3: Generate Terry content
          cov_2j4qqaklaz().s[12]++;
          console.log("🎭 Generating Terry commentary...");
          cov_2j4qqaklaz().s[13]++;
          _context.n = 10;
          return generateTerryContent(itemsToProcess, timestamp);
        case 10:
          terryContent = _context.v;
          cov_2j4qqaklaz().s[14]++;
          // Step 4: Mix in partner content if needed
          console.log("🤝 Checking for partner content...");
          cov_2j4qqaklaz().s[15]++;
          _context.n = 11;
          return mixPartnerContent(terryContent.sections, itemsToProcess, timestamp);
        case 11:
          mixedContent = _context.v;
          cov_2j4qqaklaz().s[16]++;
          // Step 5: Generate visual timeline with polaroids
          console.log("📸 Generating polaroids...");
          cov_2j4qqaklaz().s[17]++;
          _context.n = 12;
          return generatePolaroids(itemsToProcess, terryContent.timelineItems);
        case 12:
          visualTimeline = _context.v;
          // Step 6: Calculate metadata
          wordCount = (cov_2j4qqaklaz().s[18]++, calculateWordCount(mixedContent));
          readTime = (cov_2j4qqaklaz().s[19]++, Math.ceil(wordCount / 200)); // 200 words per minute
          // Step 7: Create briefing content structure
          briefingContent = (cov_2j4qqaklaz().s[20]++, {
            title: terryContent.title,
            sections: mixedContent,
            visualTimeline: visualTimeline,
            sidebar: terryContent.sidebar
          }); // Step 8: Save to database
          cov_2j4qqaklaz().s[21]++;
          console.log("💾 Saving briefing...");
          cov_2j4qqaklaz().s[22]++;
          _context.n = 13;
          return createBriefing({
            timestamp: timestamp,
            title: briefingContent.title,
            content: briefingContent.sections,
            visualTimeline: briefingContent.visualTimeline,
            sidebarSections: briefingContent.sidebar,
            readTime: readTime,
            wordCount: wordCount,
            terryScore: terryContent.terryScore,
            feedItemIds: itemsToProcess.map(function (item) {
              /* istanbul ignore next */
              cov_2j4qqaklaz().f[1]++;
              cov_2j4qqaklaz().s[23]++;
              return item.id;
            }),
            tagIds: extractTagIds(itemsToProcess)
          });
        case 13:
          briefing = _context.v;
          cov_2j4qqaklaz().s[24]++;
          if (!(
          /* istanbul ignore next */
          (cov_2j4qqaklaz().b[9][0]++, !testMode) &&
          /* istanbul ignore next */
          (cov_2j4qqaklaz().b[9][1]++, briefing))) {
            _context.n = 15;
            break;
          }
          cov_2j4qqaklaz().b[8][0]++;
          cov_2j4qqaklaz().s[25]++;
          _context.n = 14;
          return publishBriefing(briefing.id);
        case 14:
          _context.n = 16;
          break;
        case 15:
          cov_2j4qqaklaz().b[8][1]++;
        case 16:
          cov_2j4qqaklaz().s[26]++;
          console.log(
          /* istanbul ignore next */
          "\u2705 Briefing generated successfully: ".concat(briefing.slug));
          cov_2j4qqaklaz().s[27]++;
          return _context.a(2, briefing);
        case 17:
          _context.p = 17;
          _t2 = _context.v;
          cov_2j4qqaklaz().s[28]++;
          console.error("❌ Briefing generation failed:",
          /* istanbul ignore next */
          _t2);
          cov_2j4qqaklaz().s[29]++;
          throw _t2;
        case 18:
          return _context.a(2);
      }
    }, _callee, null, [[5, 17]]);
  }));
  return _generateBriefing.apply(this, arguments);
}
function calculateWordCount(sections) {
  /* istanbul ignore next */
  cov_2j4qqaklaz().f[2]++;
  cov_2j4qqaklaz().s[30]++;
  return sections.reduce(function (total, section) {
    /* istanbul ignore next */
    cov_2j4qqaklaz().f[3]++;
    var words =
    /* istanbul ignore next */
    (cov_2j4qqaklaz().s[31]++, section.content.split(/\s+/).length);
    /* istanbul ignore next */
    cov_2j4qqaklaz().s[32]++;
    return total + words;
  }, 0);
}

/**
 * Extract unique tag IDs from feed items
 */
function extractTagIds(feedItems) {
  /* istanbul ignore next */
  cov_2j4qqaklaz().f[4]++;
  var tagIds =
  /* istanbul ignore next */
  (cov_2j4qqaklaz().s[33]++, new Set());
  /* istanbul ignore next */
  cov_2j4qqaklaz().s[34]++;
  feedItems.forEach(function (item) {
    /* istanbul ignore next */
    cov_2j4qqaklaz().f[5]++;
    cov_2j4qqaklaz().s[35]++;
    if (item.tags) {
      /* istanbul ignore next */
      cov_2j4qqaklaz().b[10][0]++;
      cov_2j4qqaklaz().s[36]++;
      item.tags.forEach(function (tag) {
        /* istanbul ignore next */
        cov_2j4qqaklaz().f[6]++;
        cov_2j4qqaklaz().s[37]++;
        if (tag.tagId) {
          /* istanbul ignore next */
          cov_2j4qqaklaz().b[11][0]++;
          cov_2j4qqaklaz().s[38]++;
          tagIds.add(tag.tagId);
        } else {
          /* istanbul ignore next */
          var _tag$tag;
          cov_2j4qqaklaz().b[11][1]++;
          cov_2j4qqaklaz().s[39]++;
          if (
          /* istanbul ignore next */
          (_tag$tag = tag.tag) !== null && _tag$tag !== void 0 &&
          /* istanbul ignore next */
          _tag$tag.id) {
            /* istanbul ignore next */
            cov_2j4qqaklaz().b[12][0]++;
            cov_2j4qqaklaz().s[40]++;
            tagIds.add(tag.tag.id);
          } else
          /* istanbul ignore next */
          {
            cov_2j4qqaklaz().b[12][1]++;
          }
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_2j4qqaklaz().b[10][1]++;
    }
  });
  /* istanbul ignore next */
  cov_2j4qqaklaz().s[41]++;
  return Array.from(tagIds);
}

/**
 * Publish briefing
 */
/* istanbul ignore next */
function publishBriefing(_x2) {
  return _publishBriefing.apply(this, arguments);
}
/**
 * Create mock feed items for testing
 */
/* istanbul ignore next */
function _publishBriefing() {
  _publishBriefing = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2(briefingId)
  /* istanbul ignore next */
  {
    var _ref3, updateBriefing;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_2j4qqaklaz().f[7]++;
          cov_2j4qqaklaz().s[42]++;
          _context2.n = 1;
          return import("@/lib/database/briefings");
        case 1:
          _ref3 = _context2.v;
          updateBriefing = _ref3.updateBriefing;
          cov_2j4qqaklaz().s[43]++;
          _context2.n = 2;
          return updateBriefing(briefingId, {
            isPublished: true,
            publishedAt: new Date()
          });
        case 2:
          return _context2.a(2);
      }
    }, _callee2);
  }));
  return _publishBriefing.apply(this, arguments);
}
function createMockFeedItems() {
  /* istanbul ignore next */
  cov_2j4qqaklaz().f[8]++;
  cov_2j4qqaklaz().s[44]++;
  return [{
    id: "mock-1",
    type: "ITK",
    content: "BREAKING: Arsenal preparing £100m bid for striker who reportedly struggles with basic motor functions. Medical team on standby. More to follow... 🔴⚪ #AFC",
    originalText: "BREAKING: Arsenal preparing £100m bid for striker...",
    sourceId: "source-1",
    source: {
      id: "source-1",
      name: "Fabrizio Romano",
      username: "FabrizioRomano",
      tier: 1,
      reliability: 0.95
    },
    publishedAt: new Date(),
    priority: "HIGH",
    relevanceScore: 0.9,
    tags: []
  }, {
    id: "mock-2",
    type: "ITK",
    content: "Chelsea considering move for 18-year-old wonderkid from Brazilian third division. Scouting department using advanced FIFA Career Mode analytics. #CFC",
    originalText: "Chelsea considering move for 18-year-old wonderkid...",
    sourceId: "source-2",
    source: {
      id: "source-2",
      name: "David Ornstein",
      username: "David_Ornstein",
      tier: 1,
      reliability: 0.92
    },
    publishedAt: new Date(),
    priority: "MEDIUM",
    relevanceScore: 0.8,
    tags: []
  }];
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,