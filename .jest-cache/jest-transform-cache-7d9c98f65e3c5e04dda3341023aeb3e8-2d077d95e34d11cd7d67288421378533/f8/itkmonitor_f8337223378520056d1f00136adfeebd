48af3d2ff078c96b6e4a9374b9120320
/* istanbul ignore next */
function cov_2ly4ffa9gb() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/twitter/itk-monitor.ts";
  var hash = "0a2ed02891cbbeefa19df2c764430fe7bdb8c928";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/twitter/itk-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 28,
          column: 42
        },
        end: {
          line: 109,
          column: 1
        }
      },
      "1": {
        start: {
          line: 135,
          column: 48
        },
        end: {
          line: 135,
          column: 57
        }
      },
      "2": {
        start: {
          line: 136,
          column: 48
        },
        end: {
          line: 136,
          column: 57
        }
      },
      "3": {
        start: {
          line: 137,
          column: 48
        },
        end: {
          line: 137,
          column: 57
        }
      },
      "4": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 39
        }
      },
      "5": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 151,
          column: 6
        }
      },
      "6": {
        start: {
          line: 153,
          column: 29
        },
        end: {
          line: 153,
          column: 31
        }
      },
      "7": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 182,
          column: 5
        }
      },
      "8": {
        start: {
          line: 156,
          column: 6
        },
        end: {
          line: 181,
          column: 7
        }
      },
      "9": {
        start: {
          line: 157,
          column: 21
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "10": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 51
        }
      },
      "11": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 170,
          column: 11
        }
      },
      "12": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 176,
          column: 10
        }
      },
      "13": {
        start: {
          line: 178,
          column: 25
        },
        end: {
          line: 178,
          column: 124
        }
      },
      "14": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 30
        }
      },
      "15": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 62
        }
      },
      "16": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 190,
          column: 5
        }
      },
      "17": {
        start: {
          line: 185,
          column: 6
        },
        end: {
          line: 189,
          column: 8
        }
      },
      "18": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 196,
          column: 6
        }
      },
      "19": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 205,
          column: 6
        }
      },
      "20": {
        start: {
          line: 207,
          column: 48
        },
        end: {
          line: 207,
          column: 50
        }
      },
      "21": {
        start: {
          line: 208,
          column: 29
        },
        end: {
          line: 208,
          column: 31
        }
      },
      "22": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 230,
          column: 5
        }
      },
      "23": {
        start: {
          line: 211,
          column: 6
        },
        end: {
          line: 226,
          column: 7
        }
      },
      "24": {
        start: {
          line: 212,
          column: 24
        },
        end: {
          line: 212,
          column: 58
        }
      },
      "25": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 36
        }
      },
      "26": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 219,
          column: 10
        }
      },
      "27": {
        start: {
          line: 218,
          column: 32
        },
        end: {
          line: 218,
          column: 51
        }
      },
      "28": {
        start: {
          line: 221,
          column: 25
        },
        end: {
          line: 221,
          column: 126
        }
      },
      "29": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 30
        }
      },
      "30": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 62
        }
      },
      "31": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 51
        }
      },
      "32": {
        start: {
          line: 229,
          column: 6
        },
        end: {
          line: 229,
          column: 64
        }
      },
      "33": {
        start: {
          line: 229,
          column: 37
        },
        end: {
          line: 229,
          column: 62
        }
      },
      "34": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 238,
          column: 5
        }
      },
      "35": {
        start: {
          line: 233,
          column: 6
        },
        end: {
          line: 237,
          column: 8
        }
      },
      "36": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 244,
          column: 6
        }
      },
      "37": {
        start: {
          line: 242,
          column: 96
        },
        end: {
          line: 242,
          column: 115
        }
      },
      "38": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 246,
          column: 22
        }
      },
      "39": {
        start: {
          line: 253,
          column: 17
        },
        end: {
          line: 253,
          column: 53
        }
      },
      "40": {
        start: {
          line: 254,
          column: 4
        },
        end: {
          line: 258,
          column: 5
        }
      },
      "41": {
        start: {
          line: 255,
          column: 6
        },
        end: {
          line: 257,
          column: 8
        }
      },
      "42": {
        start: {
          line: 260,
          column: 20
        },
        end: {
          line: 260,
          column: 61
        }
      },
      "43": {
        start: {
          line: 262,
          column: 21
        },
        end: {
          line: 265,
          column: 6
        }
      },
      "44": {
        start: {
          line: 267,
          column: 4
        },
        end: {
          line: 269,
          column: 5
        }
      },
      "45": {
        start: {
          line: 268,
          column: 6
        },
        end: {
          line: 268,
          column: 16
        }
      },
      "46": {
        start: {
          line: 272,
          column: 4
        },
        end: {
          line: 272,
          column: 72
        }
      },
      "47": {
        start: {
          line: 274,
          column: 45
        },
        end: {
          line: 274,
          column: 47
        }
      },
      "48": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 292,
          column: 5
        }
      },
      "49": {
        start: {
          line: 277,
          column: 6
        },
        end: {
          line: 291,
          column: 7
        }
      },
      "50": {
        start: {
          line: 278,
          column: 23
        },
        end: {
          line: 278,
          column: 68
        }
      },
      "51": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 29
        }
      },
      "52": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 284,
          column: 9
        }
      },
      "53": {
        start: {
          line: 283,
          column: 10
        },
        end: {
          line: 283,
          column: 40
        }
      },
      "54": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 290,
          column: 10
        }
      },
      "55": {
        start: {
          line: 294,
          column: 4
        },
        end: {
          line: 294,
          column: 19
        }
      },
      "56": {
        start: {
          line: 306,
          column: 27
        },
        end: {
          line: 311,
          column: 6
        }
      },
      "57": {
        start: {
          line: 314,
          column: 21
        },
        end: {
          line: 319,
          column: 5
        }
      },
      "58": {
        start: {
          line: 322,
          column: 21
        },
        end: {
          line: 324,
          column: 5
        }
      },
      "59": {
        start: {
          line: 327,
          column: 27
        },
        end: {
          line: 332,
          column: 5
        }
      },
      "60": {
        start: {
          line: 334,
          column: 4
        },
        end: {
          line: 345,
          column: 6
        }
      },
      "61": {
        start: {
          line: 357,
          column: 16
        },
        end: {
          line: 357,
          column: 17
        }
      },
      "62": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 370,
          column: 5
        }
      },
      "63": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 20
        }
      },
      "64": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 363,
          column: 14
        }
      },
      "65": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 20
        }
      },
      "66": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 14
        }
      },
      "67": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 20
        }
      },
      "68": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 369,
          column: 14
        }
      },
      "69": {
        start: {
          line: 373,
          column: 4
        },
        end: {
          line: 392,
          column: 5
        }
      },
      "70": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 20
        }
      },
      "71": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 14
        }
      },
      "72": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 378,
          column: 20
        }
      },
      "73": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 379,
          column: 14
        }
      },
      "74": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 20
        }
      },
      "75": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 382,
          column: 14
        }
      },
      "76": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 384,
          column: 20
        }
      },
      "77": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 14
        }
      },
      "78": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 20
        }
      },
      "79": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 14
        }
      },
      "80": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 19
        }
      },
      "81": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 14
        }
      },
      "82": {
        start: {
          line: 396,
          column: 6
        },
        end: {
          line: 398,
          column: 38
        }
      },
      "83": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 402,
          column: 47
        }
      },
      "84": {
        start: {
          line: 400,
          column: 32
        },
        end: {
          line: 400,
          column: 44
        }
      },
      "85": {
        start: {
          line: 401,
          column: 9
        },
        end: {
          line: 402,
          column: 47
        }
      },
      "86": {
        start: {
          line: 401,
          column: 36
        },
        end: {
          line: 401,
          column: 48
        }
      },
      "87": {
        start: {
          line: 402,
          column: 9
        },
        end: {
          line: 402,
          column: 47
        }
      },
      "88": {
        start: {
          line: 402,
          column: 36
        },
        end: {
          line: 402,
          column: 47
        }
      },
      "89": {
        start: {
          line: 405,
          column: 4
        },
        end: {
          line: 405,
          column: 43
        }
      },
      "90": {
        start: {
          line: 408,
          column: 4
        },
        end: {
          line: 408,
          column: 39
        }
      },
      "91": {
        start: {
          line: 408,
          column: 21
        },
        end: {
          line: 408,
          column: 39
        }
      },
      "92": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 409,
          column: 35
        }
      },
      "93": {
        start: {
          line: 409,
          column: 21
        },
        end: {
          line: 409,
          column: 35
        }
      },
      "94": {
        start: {
          line: 410,
          column: 4
        },
        end: {
          line: 410,
          column: 37
        }
      },
      "95": {
        start: {
          line: 410,
          column: 21
        },
        end: {
          line: 410,
          column: 37
        }
      },
      "96": {
        start: {
          line: 411,
          column: 4
        },
        end: {
          line: 411,
          column: 17
        }
      },
      "97": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 423,
          column: 52
        }
      },
      "98": {
        start: {
          line: 423,
          column: 43
        },
        end: {
          line: 423,
          column: 52
        }
      },
      "99": {
        start: {
          line: 425,
          column: 16
        },
        end: {
          line: 425,
          column: 47
        }
      },
      "100": {
        start: {
          line: 426,
          column: 4
        },
        end: {
          line: 426,
          column: 44
        }
      },
      "101": {
        start: {
          line: 427,
          column: 4
        },
        end: {
          line: 427,
          column: 60
        }
      },
      "102": {
        start: {
          line: 428,
          column: 4
        },
        end: {
          line: 428,
          column: 58
        }
      },
      "103": {
        start: {
          line: 431,
          column: 28
        },
        end: {
          line: 434,
          column: 5
        }
      },
      "104": {
        start: {
          line: 435,
          column: 4
        },
        end: {
          line: 435,
          column: 29
        }
      },
      "105": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 437,
          column: 32
        }
      },
      "106": {
        start: {
          line: 447,
          column: 4
        },
        end: {
          line: 447,
          column: 11
        }
      },
      "107": {
        start: {
          line: 514,
          column: 25
        },
        end: {
          line: 514,
          column: 32
        }
      },
      "108": {
        start: {
          line: 515,
          column: 20
        },
        end: {
          line: 515,
          column: 44
        }
      },
      "109": {
        start: {
          line: 516,
          column: 4
        },
        end: {
          line: 516,
          column: 65
        }
      },
      "110": {
        start: {
          line: 516,
          column: 42
        },
        end: {
          line: 516,
          column: 58
        }
      },
      "111": {
        start: {
          line: 523,
          column: 21
        },
        end: {
          line: 523,
          column: 38
        }
      },
      "112": {
        start: {
          line: 524,
          column: 20
        },
        end: {
          line: 524,
          column: 40
        }
      },
      "113": {
        start: {
          line: 525,
          column: 4
        },
        end: {
          line: 525,
          column: 25
        }
      },
      "114": {
        start: {
          line: 533,
          column: 4
        },
        end: {
          line: 533,
          column: 14
        }
      },
      "115": {
        start: {
          line: 544,
          column: 18
        },
        end: {
          line: 544,
          column: 42
        }
      },
      "116": {
        start: {
          line: 545,
          column: 4
        },
        end: {
          line: 558,
          column: 5
        }
      },
      "117": {
        start: {
          line: 546,
          column: 6
        },
        end: {
          line: 546,
          column: 39
        }
      },
      "118": {
        start: {
          line: 547,
          column: 6
        },
        end: {
          line: 547,
          column: 49
        }
      },
      "119": {
        start: {
          line: 548,
          column: 6
        },
        end: {
          line: 548,
          column: 35
        }
      },
      "120": {
        start: {
          line: 550,
          column: 6
        },
        end: {
          line: 552,
          column: 7
        }
      },
      "121": {
        start: {
          line: 551,
          column: 8
        },
        end: {
          line: 551,
          column: 47
        }
      },
      "122": {
        start: {
          line: 555,
          column: 28
        },
        end: {
          line: 555,
          column: 64
        }
      },
      "123": {
        start: {
          line: 556,
          column: 6
        },
        end: {
          line: 557,
          column: 68
        }
      },
      "124": {
        start: {
          line: 565,
          column: 18
        },
        end: {
          line: 565,
          column: 42
        }
      },
      "125": {
        start: {
          line: 566,
          column: 4
        },
        end: {
          line: 573,
          column: 5
        }
      },
      "126": {
        start: {
          line: 567,
          column: 6
        },
        end: {
          line: 567,
          column: 25
        }
      },
      "127": {
        start: {
          line: 570,
          column: 28
        },
        end: {
          line: 570,
          column: 64
        }
      },
      "128": {
        start: {
          line: 571,
          column: 6
        },
        end: {
          line: 572,
          column: 66
        }
      },
      "129": {
        start: {
          line: 580,
          column: 52
        },
        end: {
          line: 580,
          column: 54
        }
      },
      "130": {
        start: {
          line: 581,
          column: 4
        },
        end: {
          line: 583,
          column: 7
        }
      },
      "131": {
        start: {
          line: 582,
          column: 6
        },
        end: {
          line: 582,
          column: 38
        }
      },
      "132": {
        start: {
          line: 584,
          column: 4
        },
        end: {
          line: 584,
          column: 18
        }
      },
      "133": {
        start: {
          line: 591,
          column: 4
        },
        end: {
          line: 591,
          column: 51
        }
      },
      "134": {
        start: {
          line: 597,
          column: 22
        },
        end: {
          line: 599,
          column: 2
        }
      },
      "135": {
        start: {
          line: 600,
          column: 26
        },
        end: {
          line: 600,
          column: 55
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 139,
            column: 2
          },
          end: {
            line: 139,
            column: 3
          }
        },
        loc: {
          start: {
            line: 139,
            column: 44
          },
          end: {
            line: 141,
            column: 3
          }
        },
        line: 139
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 146,
            column: 2
          },
          end: {
            line: 146,
            column: 3
          }
        },
        loc: {
          start: {
            line: 146,
            column: 36
          },
          end: {
            line: 197,
            column: 3
          }
        },
        line: 146
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 202,
            column: 2
          },
          end: {
            line: 202,
            column: 3
          }
        },
        loc: {
          start: {
            line: 202,
            column: 63
          },
          end: {
            line: 247,
            column: 3
          }
        },
        line: 202
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 218,
            column: 25
          },
          end: {
            line: 218,
            column: 26
          }
        },
        loc: {
          start: {
            line: 218,
            column: 32
          },
          end: {
            line: 218,
            column: 51
          }
        },
        line: 218
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 229,
            column: 24
          },
          end: {
            line: 229,
            column: 25
          }
        },
        loc: {
          start: {
            line: 229,
            column: 37
          },
          end: {
            line: 229,
            column: 62
          }
        },
        line: 229
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 242,
            column: 89
          },
          end: {
            line: 242,
            column: 90
          }
        },
        loc: {
          start: {
            line: 242,
            column: 96
          },
          end: {
            line: 242,
            column: 115
          }
        },
        line: 242
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 252,
            column: 2
          },
          end: {
            line: 252,
            column: 3
          }
        },
        loc: {
          start: {
            line: 252,
            column: 78
          },
          end: {
            line: 295,
            column: 3
          }
        },
        line: 252
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 300,
            column: 2
          },
          end: {
            line: 300,
            column: 3
          }
        },
        loc: {
          start: {
            line: 304,
            column: 36
          },
          end: {
            line: 346,
            column: 3
          }
        },
        line: 304
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 351,
            column: 2
          },
          end: {
            line: 351,
            column: 3
          }
        },
        loc: {
          start: {
            line: 356,
            column: 14
          },
          end: {
            line: 412,
            column: 3
          }
        },
        line: 356
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 417,
            column: 2
          },
          end: {
            line: 417,
            column: 3
          }
        },
        loc: {
          start: {
            line: 422,
            column: 12
          },
          end: {
            line: 438,
            column: 3
          }
        },
        line: 422
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 444,
            column: 2
          },
          end: {
            line: 444,
            column: 3
          }
        },
        loc: {
          start: {
            line: 444,
            column: 73
          },
          end: {
            line: 508,
            column: 3
          }
        },
        line: 444
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 513,
            column: 2
          },
          end: {
            line: 513,
            column: 3
          }
        },
        loc: {
          start: {
            line: 513,
            column: 50
          },
          end: {
            line: 517,
            column: 3
          }
        },
        line: 513
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 516,
            column: 33
          },
          end: {
            line: 516,
            column: 34
          }
        },
        loc: {
          start: {
            line: 516,
            column: 42
          },
          end: {
            line: 516,
            column: 58
          }
        },
        line: 516
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 522,
            column: 2
          },
          end: {
            line: 522,
            column: 3
          }
        },
        loc: {
          start: {
            line: 522,
            column: 46
          },
          end: {
            line: 526,
            column: 3
          }
        },
        line: 522
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 531,
            column: 2
          },
          end: {
            line: 531,
            column: 3
          }
        },
        loc: {
          start: {
            line: 531,
            column: 58
          },
          end: {
            line: 534,
            column: 3
          }
        },
        line: 531
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 539,
            column: 2
          },
          end: {
            line: 539,
            column: 3
          }
        },
        loc: {
          start: {
            line: 543,
            column: 10
          },
          end: {
            line: 559,
            column: 3
          }
        },
        line: 543
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 564,
            column: 2
          },
          end: {
            line: 564,
            column: 3
          }
        },
        loc: {
          start: {
            line: 564,
            column: 54
          },
          end: {
            line: 574,
            column: 3
          }
        },
        line: 564
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 579,
            column: 2
          },
          end: {
            line: 579,
            column: 3
          }
        },
        loc: {
          start: {
            line: 579,
            column: 56
          },
          end: {
            line: 585,
            column: 3
          }
        },
        line: 579
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 581,
            column: 23
          },
          end: {
            line: 581,
            column: 24
          }
        },
        loc: {
          start: {
            line: 581,
            column: 44
          },
          end: {
            line: 583,
            column: 5
          }
        },
        line: 581
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 590,
            column: 2
          },
          end: {
            line: 590,
            column: 3
          }
        },
        loc: {
          start: {
            line: 590,
            column: 23
          },
          end: {
            line: 592,
            column: 3
          }
        },
        line: 590
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 178,
            column: 66
          },
          end: {
            line: 178,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 178,
            column: 91
          },
          end: {
            line: 178,
            column: 104
          }
        }, {
          start: {
            line: 178,
            column: 107
          },
          end: {
            line: 178,
            column: 122
          }
        }],
        line: 178
      },
      "1": {
        loc: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "2": {
        loc: {
          start: {
            line: 221,
            column: 68
          },
          end: {
            line: 221,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 221,
            column: 93
          },
          end: {
            line: 221,
            column: 106
          }
        }, {
          start: {
            line: 221,
            column: 109
          },
          end: {
            line: 221,
            column: 124
          }
        }],
        line: 221
      },
      "3": {
        loc: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 238,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 238,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "4": {
        loc: {
          start: {
            line: 254,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "5": {
        loc: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "6": {
        loc: {
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 267,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 267,
            column: 22
          }
        }, {
          start: {
            line: 267,
            column: 26
          },
          end: {
            line: 267,
            column: 52
          }
        }],
        line: 267
      },
      "7": {
        loc: {
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 284,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 284,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "8": {
        loc: {
          start: {
            line: 288,
            column: 52
          },
          end: {
            line: 288,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 288,
            column: 77
          },
          end: {
            line: 288,
            column: 90
          }
        }, {
          start: {
            line: 288,
            column: 93
          },
          end: {
            line: 288,
            column: 108
          }
        }],
        line: 288
      },
      "9": {
        loc: {
          start: {
            line: 308,
            column: 26
          },
          end: {
            line: 308,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 26
          },
          end: {
            line: 308,
            column: 51
          }
        }, {
          start: {
            line: 308,
            column: 55
          },
          end: {
            line: 308,
            column: 57
          }
        }],
        line: 308
      },
      "10": {
        loc: {
          start: {
            line: 360,
            column: 4
          },
          end: {
            line: 370,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 361,
            column: 6
          },
          end: {
            line: 363,
            column: 14
          }
        }, {
          start: {
            line: 364,
            column: 6
          },
          end: {
            line: 366,
            column: 14
          }
        }, {
          start: {
            line: 367,
            column: 6
          },
          end: {
            line: 369,
            column: 14
          }
        }],
        line: 360
      },
      "11": {
        loc: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 392,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 374,
            column: 6
          },
          end: {
            line: 376,
            column: 14
          }
        }, {
          start: {
            line: 377,
            column: 6
          },
          end: {
            line: 379,
            column: 14
          }
        }, {
          start: {
            line: 380,
            column: 6
          },
          end: {
            line: 382,
            column: 14
          }
        }, {
          start: {
            line: 383,
            column: 6
          },
          end: {
            line: 385,
            column: 14
          }
        }, {
          start: {
            line: 386,
            column: 6
          },
          end: {
            line: 388,
            column: 14
          }
        }, {
          start: {
            line: 389,
            column: 6
          },
          end: {
            line: 391,
            column: 14
          }
        }],
        line: 373
      },
      "12": {
        loc: {
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 402,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 402,
            column: 47
          }
        }, {
          start: {
            line: 401,
            column: 9
          },
          end: {
            line: 402,
            column: 47
          }
        }],
        line: 400
      },
      "13": {
        loc: {
          start: {
            line: 401,
            column: 9
          },
          end: {
            line: 402,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 9
          },
          end: {
            line: 402,
            column: 47
          }
        }, {
          start: {
            line: 402,
            column: 9
          },
          end: {
            line: 402,
            column: 47
          }
        }],
        line: 401
      },
      "14": {
        loc: {
          start: {
            line: 402,
            column: 9
          },
          end: {
            line: 402,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 402,
            column: 9
          },
          end: {
            line: 402,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 402
      },
      "15": {
        loc: {
          start: {
            line: 408,
            column: 4
          },
          end: {
            line: 408,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 4
          },
          end: {
            line: 408,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "16": {
        loc: {
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 409,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 409,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 409
      },
      "17": {
        loc: {
          start: {
            line: 410,
            column: 4
          },
          end: {
            line: 410,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 410,
            column: 4
          },
          end: {
            line: 410,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 410
      },
      "18": {
        loc: {
          start: {
            line: 423,
            column: 4
          },
          end: {
            line: 423,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 423,
            column: 4
          },
          end: {
            line: 423,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 423
      },
      "19": {
        loc: {
          start: {
            line: 516,
            column: 11
          },
          end: {
            line: 516,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 516,
            column: 21
          },
          end: {
            line: 516,
            column: 59
          }
        }, {
          start: {
            line: 516,
            column: 62
          },
          end: {
            line: 516,
            column: 64
          }
        }],
        line: 516
      },
      "20": {
        loc: {
          start: {
            line: 525,
            column: 11
          },
          end: {
            line: 525,
            column: 24
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 525,
            column: 11
          },
          end: {
            line: 525,
            column: 18
          }
        }, {
          start: {
            line: 525,
            column: 22
          },
          end: {
            line: 525,
            column: 24
          }
        }],
        line: 525
      },
      "21": {
        loc: {
          start: {
            line: 545,
            column: 4
          },
          end: {
            line: 558,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 545,
            column: 4
          },
          end: {
            line: 558,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 545
      },
      "22": {
        loc: {
          start: {
            line: 550,
            column: 6
          },
          end: {
            line: 552,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 550,
            column: 6
          },
          end: {
            line: 552,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 550
      },
      "23": {
        loc: {
          start: {
            line: 557,
            column: 8
          },
          end: {
            line: 557,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 557,
            column: 28
          },
          end: {
            line: 557,
            column: 61
          }
        }, {
          start: {
            line: 557,
            column: 64
          },
          end: {
            line: 557,
            column: 67
          }
        }],
        line: 557
      },
      "24": {
        loc: {
          start: {
            line: 566,
            column: 4
          },
          end: {
            line: 573,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 566,
            column: 4
          },
          end: {
            line: 573,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 566
      },
      "25": {
        loc: {
          start: {
            line: 572,
            column: 8
          },
          end: {
            line: 572,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 572,
            column: 28
          },
          end: {
            line: 572,
            column: 61
          }
        }, {
          start: {
            line: 572,
            column: 64
          },
          end: {
            line: 572,
            column: 65
          }
        }],
        line: 572
      },
      "26": {
        loc: {
          start: {
            line: 598,
            column: 15
          },
          end: {
            line: 598,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 598,
            column: 15
          },
          end: {
            line: 598,
            column: 47
          }
        }, {
          start: {
            line: 598,
            column: 51
          },
          end: {
            line: 598,
            column: 53
          }
        }],
        line: 598
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0, 0, 0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0a2ed02891cbbeefa19df2c764430fe7bdb8c928"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ly4ffa9gb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ly4ffa9gb();
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * ITK Account Monitor
 * Manages monitoring of trusted football transfer accounts with Terry-style commentary
 */

import { TwitterClient } from "./client";
import { applyTerryStyle } from "@/lib/terry-style";
import { transferKeywordClassifier } from "./transfer-classifier";

// ITK Account Configuration

// The holy grail of transfer accounts
export var ITK_ACCOUNTS =
/* istanbul ignore next */
(cov_2ly4ffa9gb().s[0]++, [{
  username: "FabrizioRomano",
  displayName: "Fabrizio Romano",
  tier: "tier1",
  specialties: ["Global", "Serie A", "Premier League"],
  averageDelay: 15,
  reliabilityScore: 0.95
}, {
  username: "David_Ornstein",
  displayName: "David Ornstein",
  tier: "tier1",
  specialties: ["Arsenal", "Premier League", "England"],
  averageDelay: 30,
  reliabilityScore: 0.98
}, {
  username: "JamesOlley",
  displayName: "James Olley",
  tier: "tier1",
  specialties: ["Arsenal", "Chelsea", "London clubs"],
  averageDelay: 45,
  reliabilityScore: 0.92
}, {
  username: "SkySports_Keith",
  displayName: "Keith Downie",
  tier: "tier2",
  specialties: ["Newcastle", "North East", "Premier League"],
  averageDelay: 20,
  reliabilityScore: 0.88
}, {
  username: "JPercyTelegraph",
  displayName: "John Percy",
  tier: "tier2",
  specialties: ["Leicester", "Championship", "Midlands"],
  averageDelay: 35,
  reliabilityScore: 0.89
}, {
  username: "City_Xtra",
  displayName: "City Xtra",
  tier: "tier2",
  specialties: ["Manchester City", "Premier League"],
  averageDelay: 10,
  reliabilityScore: 0.83
}, {
  username: "lequipe",
  displayName: "L'Équipe",
  tier: "tier2",
  specialties: ["Ligue 1", "French football", "PSG"],
  averageDelay: 25,
  reliabilityScore: 0.85
}, {
  username: "DiMarzio",
  displayName: "Gianluca Di Marzio",
  tier: "tier2",
  specialties: ["Serie A", "Italian football", "Juventus"],
  averageDelay: 20,
  reliabilityScore: 0.87
}, {
  username: "marca",
  displayName: "MARCA",
  tier: "tier3",
  specialties: ["La Liga", "Real Madrid", "Spanish football"],
  averageDelay: 15,
  reliabilityScore: 0.75
}, {
  username: "mundodeportivo",
  displayName: "Mundo Deportivo",
  tier: "tier3",
  specialties: ["La Liga", "Barcelona", "Spanish football"],
  averageDelay: 20,
  reliabilityScore: 0.72
}]);
export
/* istanbul ignore next */
var ITKMonitor = /*#__PURE__*/function () {
  function
  /* istanbul ignore next */
  ITKMonitor(twitterClient) {
    /* istanbul ignore next */
    _classCallCheck(this, ITKMonitor);
    _defineProperty(this, "userCache", (cov_2ly4ffa9gb().s[1]++, new Map()));
    /* istanbul ignore next */
    _defineProperty(this, "lastFetchTimes", (cov_2ly4ffa9gb().s[2]++, new Map()));
    /* istanbul ignore next */
    // username -> tweet ID
    _defineProperty(this, "stats", (cov_2ly4ffa9gb().s[3]++, new Map()));
    /* istanbul ignore next */
    cov_2ly4ffa9gb().f[0]++;
    cov_2ly4ffa9gb().s[4]++;
    this.twitterClient = twitterClient;
  }

  /**
   * Initialize monitoring by caching user information
   */
  return _createClass(ITKMonitor, [{
    key: "initialize",
    value: (function () {
      var _initialize = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee()
      /* istanbul ignore next */
      {
        var errors, _i, _ITK_ACCOUNTS, account, user, errorMsg, _t;
        return _regenerator().w(function (_context) {
          while (1) switch (_context.n) {
            case 0:
              cov_2ly4ffa9gb().f[1]++;
              cov_2ly4ffa9gb().s[5]++;
              console.log(applyTerryStyle.enhanceMessage("Initializing ITK monitoring - preparing for the chaos"));
              errors = (cov_2ly4ffa9gb().s[6]++, []);
              cov_2ly4ffa9gb().s[7]++;
              _i = 0, _ITK_ACCOUNTS = ITK_ACCOUNTS;
            case 1:
              if (!(_i < _ITK_ACCOUNTS.length)) {
                _context.n = 6;
                break;
              }
              account = _ITK_ACCOUNTS[_i];
              cov_2ly4ffa9gb().s[8]++;
              _context.p = 2;
              cov_2ly4ffa9gb().s[9]++;
              _context.n = 3;
              return this.twitterClient.getUserByUsername(account.username);
            case 3:
              user = _context.v;
              cov_2ly4ffa9gb().s[10]++;
              this.userCache.set(account.username, user);

              // Initialize stats
              cov_2ly4ffa9gb().s[11]++;
              this.stats.set(account.username, {
                totalTweets: 0,
                transferRelevant: 0,
                highPriority: 0,
                lastFetch: new Date(),
                errorCount: 0,
                successRate: 1.0
              });
              cov_2ly4ffa9gb().s[12]++;
              console.log(applyTerryStyle.enhanceMessage(
              /* istanbul ignore next */
              "Cached user info for @".concat(account.username, " (").concat(user.public_metrics.followers_count.toLocaleString(), " followers)")));
              _context.n = 5;
              break;
            case 4:
              _context.p = 4;
              _t = _context.v;
              errorMsg = (cov_2ly4ffa9gb().s[13]++, "Failed to cache @".concat(account.username, ": ").concat(
              /* istanbul ignore next */
              _t instanceof Error ?
              /* istanbul ignore next */
              (cov_2ly4ffa9gb().b[0][0]++,
              /* istanbul ignore next */
              _t.message) :
              /* istanbul ignore next */
              (cov_2ly4ffa9gb().b[0][1]++, "Unknown error")));
              cov_2ly4ffa9gb().s[14]++;
              errors.push(errorMsg);
              cov_2ly4ffa9gb().s[15]++;
              console.error(applyTerryStyle.enhanceError(errorMsg));
            case 5:
              _i++;
              _context.n = 1;
              break;
            case 6:
              cov_2ly4ffa9gb().s[16]++;
              if (!(errors.length > 0)) {
                _context.n = 7;
                break;
              }
              cov_2ly4ffa9gb().b[1][0]++;
              cov_2ly4ffa9gb().s[17]++;
              throw new Error(applyTerryStyle.enhanceError(
              /* istanbul ignore next */
              "Failed to initialize ".concat(errors.length, " ITK accounts: ").concat(errors.join(", "))));
            case 7:
              cov_2ly4ffa9gb().b[1][1]++;
            case 8:
              cov_2ly4ffa9gb().s[18]++;
              console.log(applyTerryStyle.enhanceMessage(
              /* istanbul ignore next */
              "Successfully initialized monitoring for ".concat(ITK_ACCOUNTS.length, " ITK accounts")));
            case 9:
              return _context.a(2);
          }
        }, _callee, this, [[2, 4]]);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
    /**
     * Monitor all ITK accounts for new tweets
     */
    )
  }, {
    key: "monitorAllAccounts",
    value: (function () {
      var _monitorAllAccounts = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee2()
      /* istanbul ignore next */
      {
        var allResults, errors, _i2, _ITK_ACCOUNTS2, account, results, errorMsg, _t2;
        return _regenerator().w(function (_context2) {
          while (1) switch (_context2.n) {
            case 0:
              cov_2ly4ffa9gb().f[2]++;
              cov_2ly4ffa9gb().s[19]++;
              console.log(applyTerryStyle.enhanceMessage("Starting ITK monitoring sweep"));
              allResults = (cov_2ly4ffa9gb().s[20]++, []);
              errors = (cov_2ly4ffa9gb().s[21]++, []);
              cov_2ly4ffa9gb().s[22]++;
              _i2 = 0, _ITK_ACCOUNTS2 = ITK_ACCOUNTS;
            case 1:
              if (!(_i2 < _ITK_ACCOUNTS2.length)) {
                _context2.n = 7;
                break;
              }
              account = _ITK_ACCOUNTS2[_i2];
              cov_2ly4ffa9gb().s[23]++;
              _context2.p = 2;
              cov_2ly4ffa9gb().s[24]++;
              _context2.n = 3;
              return this.monitorAccount(account);
            case 3:
              results = _context2.v;
              cov_2ly4ffa9gb().s[25]++;
              /* istanbul ignore next */
              allResults.push.apply(allResults,
              /* istanbul ignore next */
              _toConsumableArray(results));
              cov_2ly4ffa9gb().s[26]++;
              this.updateStats(account.username, results.length, results.filter(function (r) {
                /* istanbul ignore next */
                cov_2ly4ffa9gb().f[3]++;
                cov_2ly4ffa9gb().s[27]++;
                return r.isTransferRelated;
              }).length);
              _context2.n = 5;
              break;
            case 4:
              _context2.p = 4;
              _t2 = _context2.v;
              errorMsg = (cov_2ly4ffa9gb().s[28]++, "Failed to monitor @".concat(account.username, ": ").concat(
              /* istanbul ignore next */
              _t2 instanceof Error ?
              /* istanbul ignore next */
              (cov_2ly4ffa9gb().b[2][0]++,
              /* istanbul ignore next */
              _t2.message) :
              /* istanbul ignore next */
              (cov_2ly4ffa9gb().b[2][1]++, "Unknown error")));
              cov_2ly4ffa9gb().s[29]++;
              errors.push(errorMsg);
              cov_2ly4ffa9gb().s[30]++;
              console.error(applyTerryStyle.enhanceError(errorMsg));
              cov_2ly4ffa9gb().s[31]++;
              this.incrementErrorCount(account.username);
            case 5:
              cov_2ly4ffa9gb().s[32]++;
              _context2.n = 6;
              return new Promise(function (resolve) {
                /* istanbul ignore next */
                cov_2ly4ffa9gb().f[4]++;
                cov_2ly4ffa9gb().s[33]++;
                return setTimeout(resolve, 1000);
              });
            case 6:
              _i2++;
              _context2.n = 1;
              break;
            case 7:
              cov_2ly4ffa9gb().s[34]++;
              if (errors.length > 0) {
                /* istanbul ignore next */
                cov_2ly4ffa9gb().b[3][0]++;
                cov_2ly4ffa9gb().s[35]++;
                console.warn(applyTerryStyle.enhanceMessage(
                /* istanbul ignore next */
                "Completed monitoring with ".concat(errors.length, " errors: ").concat(errors.join(", "))));
              } else
              /* istanbul ignore next */
              {
                cov_2ly4ffa9gb().b[3][1]++;
              }
              cov_2ly4ffa9gb().s[36]++;
              console.log(applyTerryStyle.enhanceMessage(
              /* istanbul ignore next */
              "Monitoring complete: ".concat(allResults.length, " tweets processed, ").concat(allResults.filter(function (r) {
                /* istanbul ignore next */
                cov_2ly4ffa9gb().f[5]++;
                cov_2ly4ffa9gb().s[37]++;
                return r.isTransferRelated;
              }).length, " transfer-relevant")));
              cov_2ly4ffa9gb().s[38]++;
              return _context2.a(2, allResults);
          }
        }, _callee2, this, [[2, 4]]);
      }));
      function monitorAllAccounts() {
        return _monitorAllAccounts.apply(this, arguments);
      }
      return monitorAllAccounts;
    }()
    /**
     * Monitor a specific ITK account
     */
    )
  }, {
    key: "monitorAccount",
    value: (function () {
      var _monitorAccount = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee3(account)
      /* istanbul ignore next */
      {
        var user, sinceId, response, results, _iterator, _step, tweet, result, _t3, _t4;
        return _regenerator().w(function (_context3) {
          while (1) switch (_context3.n) {
            case 0:
              cov_2ly4ffa9gb().f[6]++;
              user = (cov_2ly4ffa9gb().s[39]++, this.userCache.get(account.username));
              cov_2ly4ffa9gb().s[40]++;
              if (user) {
                _context3.n = 1;
                break;
              }
              cov_2ly4ffa9gb().b[4][0]++;
              cov_2ly4ffa9gb().s[41]++;
              throw new Error(
              /* istanbul ignore next */
              "User @".concat(account.username, " not cached. Call initialize() first."));
            case 1:
              cov_2ly4ffa9gb().b[4][1]++;
            case 2:
              sinceId = (cov_2ly4ffa9gb().s[42]++, this.lastFetchTimes.get(account.username));
              cov_2ly4ffa9gb().s[43]++;
              _context3.n = 3;
              return this.twitterClient.getUserTimeline(user.id, {
                maxResults: 50,
                // Reasonable batch size
                sinceId: sinceId
              });
            case 3:
              response = _context3.v;
              cov_2ly4ffa9gb().s[44]++;
              if (!(
              /* istanbul ignore next */
              (cov_2ly4ffa9gb().b[6][0]++, !response.data) ||
              /* istanbul ignore next */
              (cov_2ly4ffa9gb().b[6][1]++, response.data.length === 0))) {
                _context3.n = 4;
                break;
              }
              cov_2ly4ffa9gb().b[5][0]++;
              cov_2ly4ffa9gb().s[45]++;
              return _context3.a(2, []);
            case 4:
              cov_2ly4ffa9gb().b[5][1]++;
            case 5:
              cov_2ly4ffa9gb().s[46]++;
              // Update last fetch time
              this.lastFetchTimes.set(account.username, response.meta.newest_id);
              results = (cov_2ly4ffa9gb().s[47]++, []);
              cov_2ly4ffa9gb().s[48]++;
              _iterator = _createForOfIteratorHelper(response.data);
              _context3.p = 6;
              _iterator.s();
            case 7:
              if ((_step = _iterator.n()).done) {
                _context3.n = 15;
                break;
              }
              tweet = _step.value;
              cov_2ly4ffa9gb().s[49]++;
              _context3.p = 8;
              cov_2ly4ffa9gb().s[50]++;
              _context3.n = 9;
              return this.processTweet(tweet, user, account);
            case 9:
              result = _context3.v;
              cov_2ly4ffa9gb().s[51]++;
              results.push(result);

              // Store in database if transfer-relevant
              cov_2ly4ffa9gb().s[52]++;
              if (!result.isTransferRelated) {
                _context3.n = 11;
                break;
              }
              cov_2ly4ffa9gb().b[7][0]++;
              cov_2ly4ffa9gb().s[53]++;
              _context3.n = 10;
              return this.storeTweet(result);
            case 10:
              _context3.n = 12;
              break;
            case 11:
              cov_2ly4ffa9gb().b[7][1]++;
            case 12:
              _context3.n = 14;
              break;
            case 13:
              _context3.p = 13;
              _t3 = _context3.v;
              cov_2ly4ffa9gb().s[54]++;
              console.error(applyTerryStyle.enhanceError(
              /* istanbul ignore next */
              "Failed to process tweet ".concat(tweet.id, ": ").concat(
              /* istanbul ignore next */
              _t3 instanceof Error ?
              /* istanbul ignore next */
              (cov_2ly4ffa9gb().b[8][0]++,
              /* istanbul ignore next */
              _t3.message) :
              /* istanbul ignore next */
              (cov_2ly4ffa9gb().b[8][1]++, "Unknown error"))));
            case 14:
              _context3.n = 7;
              break;
            case 15:
              _context3.n = 17;
              break;
            case 16:
              _context3.p = 16;
              _t4 = _context3.v;
              _iterator.e(_t4);
            case 17:
              _context3.p = 17;
              _iterator.f();
              return _context3.f(17);
            case 18:
              cov_2ly4ffa9gb().s[55]++;
              return _context3.a(2, results);
          }
        }, _callee3, this, [[8, 13], [6, 16, 17, 18]]);
      }));
      function monitorAccount(_x) {
        return _monitorAccount.apply(this, arguments);
      }
      return monitorAccount;
    }()
    /**
     * Process individual tweet for transfer relevance
     */
    )
  }, {
    key: "processTweet",
    value: (function () {
      var _processTweet = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee4(tweet, user, account)
      /* istanbul ignore next */
      {
        var classification, priority, entities, relevanceScore;
        return _regenerator().w(function (_context4) {
          while (1) switch (_context4.n) {
            case 0:
              cov_2ly4ffa9gb().f[7]++;
              cov_2ly4ffa9gb().s[56]++;
              _context4.n = 1;
              return transferKeywordClassifier.classifyTweet({
                text: tweet.text,
                contextAnnotations:
                /* istanbul ignore next */
                (cov_2ly4ffa9gb().b[9][0]++, tweet.context_annotations) ||
                /* istanbul ignore next */
                (cov_2ly4ffa9gb().b[9][1]++, []),
                authorTier: account.tier,
                authorSpecialties: account.specialties
              });
            case 1:
              classification = _context4.v;
              // Calculate priority based on multiple factors
              priority = (cov_2ly4ffa9gb().s[57]++, this.calculatePriority(tweet, user, account, classification)); // Extract entities (players, clubs, etc.)
              cov_2ly4ffa9gb().s[58]++;
              _context4.n = 2;
              return transferKeywordClassifier.extractEntities(tweet.text);
            case 2:
              entities = _context4.v;
              // Calculate overall relevance score
              relevanceScore = (cov_2ly4ffa9gb().s[59]++, this.calculateRelevanceScore(classification, account, tweet.public_metrics, entities));
              cov_2ly4ffa9gb().s[60]++;
              return _context4.a(2, {
                tweet: tweet,
                user: user,
                isTransferRelated: classification.isTransferRelated,
                confidence: classification.confidence,
                transferType: classification.transferType,
                priority: priority,
                keywords: classification.keywords,
                playersExtracted: entities.players,
                clubsExtracted: entities.clubs,
                relevanceScore: relevanceScore
              });
          }
        }, _callee4, this);
      }));
      function processTweet(_x2, _x3, _x4) {
        return _processTweet.apply(this, arguments);
      }
      return processTweet;
    }()
    /**
     * Calculate tweet priority based on multiple factors
     */
    )
  }, {
    key: "calculatePriority",
    value: function calculatePriority(tweet, user, account, classification) {
      /* istanbul ignore next */
      cov_2ly4ffa9gb().f[8]++;
      var score =
      /* istanbul ignore next */
      (cov_2ly4ffa9gb().s[61]++, 0);

      // Account tier influence
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[62]++;
      switch (account.tier) {
        case "tier1":
          /* istanbul ignore next */
          cov_2ly4ffa9gb().b[10][0]++;
          cov_2ly4ffa9gb().s[63]++;
          score += 40;
          /* istanbul ignore next */
          cov_2ly4ffa9gb().s[64]++;
          break;
        case "tier2":
          /* istanbul ignore next */
          cov_2ly4ffa9gb().b[10][1]++;
          cov_2ly4ffa9gb().s[65]++;
          score += 25;
          /* istanbul ignore next */
          cov_2ly4ffa9gb().s[66]++;
          break;
        case "tier3":
          /* istanbul ignore next */
          cov_2ly4ffa9gb().b[10][2]++;
          cov_2ly4ffa9gb().s[67]++;
          score += 10;
          /* istanbul ignore next */
          cov_2ly4ffa9gb().s[68]++;
          break;
      }

      // Transfer type influence
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[69]++;
      switch (classification.transferType) {
        case "OFFICIAL":
          /* istanbul ignore next */
          cov_2ly4ffa9gb().b[11][0]++;
          cov_2ly4ffa9gb().s[70]++;
          score += 30;
          /* istanbul ignore next */
          cov_2ly4ffa9gb().s[71]++;
          break;
        case "CONFIRMED":
          /* istanbul ignore next */
          cov_2ly4ffa9gb().b[11][1]++;
          cov_2ly4ffa9gb().s[72]++;
          score += 25;
          /* istanbul ignore next */
          cov_2ly4ffa9gb().s[73]++;
          break;
        case "MEDICAL":
          /* istanbul ignore next */
          cov_2ly4ffa9gb().b[11][2]++;
          cov_2ly4ffa9gb().s[74]++;
          score += 20;
          /* istanbul ignore next */
          cov_2ly4ffa9gb().s[75]++;
          break;
        case "ADVANCED":
          /* istanbul ignore next */
          cov_2ly4ffa9gb().b[11][3]++;
          cov_2ly4ffa9gb().s[76]++;
          score += 15;
          /* istanbul ignore next */
          cov_2ly4ffa9gb().s[77]++;
          break;
        case "TALKS":
          /* istanbul ignore next */
          cov_2ly4ffa9gb().b[11][4]++;
          cov_2ly4ffa9gb().s[78]++;
          score += 10;
          /* istanbul ignore next */
          cov_2ly4ffa9gb().s[79]++;
          break;
        case "RUMOUR":
          /* istanbul ignore next */
          cov_2ly4ffa9gb().b[11][5]++;
          cov_2ly4ffa9gb().s[80]++;
          score += 5;
          /* istanbul ignore next */
          cov_2ly4ffa9gb().s[81]++;
          break;
      }

      // Engagement influence
      var totalEngagement =
      /* istanbul ignore next */
      (cov_2ly4ffa9gb().s[82]++, tweet.public_metrics.retweet_count + tweet.public_metrics.like_count + tweet.public_metrics.reply_count);
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[83]++;
      if (totalEngagement > 1000) {
        /* istanbul ignore next */
        cov_2ly4ffa9gb().b[12][0]++;
        cov_2ly4ffa9gb().s[84]++;
        score += 15;
      } else {
        /* istanbul ignore next */
        cov_2ly4ffa9gb().b[12][1]++;
        cov_2ly4ffa9gb().s[85]++;
        if (totalEngagement > 500) {
          /* istanbul ignore next */
          cov_2ly4ffa9gb().b[13][0]++;
          cov_2ly4ffa9gb().s[86]++;
          score += 10;
        } else {
          /* istanbul ignore next */
          cov_2ly4ffa9gb().b[13][1]++;
          cov_2ly4ffa9gb().s[87]++;
          if (totalEngagement > 100) {
            /* istanbul ignore next */
            cov_2ly4ffa9gb().b[14][0]++;
            cov_2ly4ffa9gb().s[88]++;
            score += 5;
          } else
          /* istanbul ignore next */
          {
            cov_2ly4ffa9gb().b[14][1]++;
          }
        }
      }

      // Account reliability
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[89]++;
      score += account.reliabilityScore * 10;

      // Convert score to priority
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[90]++;
      if (score >= 80) {
        /* istanbul ignore next */
        cov_2ly4ffa9gb().b[15][0]++;
        cov_2ly4ffa9gb().s[91]++;
        return "BREAKING";
      } else
      /* istanbul ignore next */
      {
        cov_2ly4ffa9gb().b[15][1]++;
      }
      cov_2ly4ffa9gb().s[92]++;
      if (score >= 60) {
        /* istanbul ignore next */
        cov_2ly4ffa9gb().b[16][0]++;
        cov_2ly4ffa9gb().s[93]++;
        return "HIGH";
      } else
      /* istanbul ignore next */
      {
        cov_2ly4ffa9gb().b[16][1]++;
      }
      cov_2ly4ffa9gb().s[94]++;
      if (score >= 40) {
        /* istanbul ignore next */
        cov_2ly4ffa9gb().b[17][0]++;
        cov_2ly4ffa9gb().s[95]++;
        return "MEDIUM";
      } else
      /* istanbul ignore next */
      {
        cov_2ly4ffa9gb().b[17][1]++;
      }
      cov_2ly4ffa9gb().s[96]++;
      return "LOW";
    }

    /**
     * Calculate overall relevance score
     */
  }, {
    key: "calculateRelevanceScore",
    value: function calculateRelevanceScore(classification, account, metrics, entities) {
      /* istanbul ignore next */
      cov_2ly4ffa9gb().f[9]++;
      cov_2ly4ffa9gb().s[97]++;
      if (!classification.isTransferRelated) {
        /* istanbul ignore next */
        cov_2ly4ffa9gb().b[18][0]++;
        cov_2ly4ffa9gb().s[98]++;
        return 0;
      } else
      /* istanbul ignore next */
      {
        cov_2ly4ffa9gb().b[18][1]++;
      }
      var score =
      /* istanbul ignore next */
      (cov_2ly4ffa9gb().s[99]++, classification.confidence * 0.4); // Base confidence
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[100]++;
      score += account.reliabilityScore * 0.3; // Account reliability
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[101]++;
      score += Math.min(entities.players.length * 0.05, 0.15); // Player mentions
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[102]++;
      score += Math.min(entities.clubs.length * 0.05, 0.15); // Club mentions

      // Engagement boost
      var engagementScore =
      /* istanbul ignore next */
      (cov_2ly4ffa9gb().s[103]++, Math.min((metrics.retweet_count + metrics.like_count) / 1000, 0.1));
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[104]++;
      score += engagementScore;
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[105]++;
      return Math.min(score, 1.0);
    }

    /**
     * Store transfer-relevant tweet in database
     * TODO: Implement database storage with FeedItem model
     */
  }, {
    key: "storeTweet",
    value: (function () {
      var _storeTweet = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
      /* istanbul ignore next */
      _callee5(result)
      /* istanbul ignore next */
      {
        return _regenerator().w(function (_context5) {
          while (1) switch (_context5.n) {
            case 0:
              cov_2ly4ffa9gb().f[10]++;
              cov_2ly4ffa9gb().s[106]++;
              return _context5.a(2);
          }
        }, _callee5);
      }));
      function storeTweet(_x5) {
        return _storeTweet.apply(this, arguments);
      }
      return storeTweet;
    }()
    /**
     * Extract hashtags from tweet text
     */
    )
  }, {
    key: "extractHashtags",
    value: function extractHashtags(text) {
      /* istanbul ignore next */
      cov_2ly4ffa9gb().f[11]++;
      var hashtagRegex =
      /* istanbul ignore next */
      (cov_2ly4ffa9gb().s[107]++, /#\w+/g);
      var matches =
      /* istanbul ignore next */
      (cov_2ly4ffa9gb().s[108]++, text.match(hashtagRegex));
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[109]++;
      return matches ?
      /* istanbul ignore next */
      (cov_2ly4ffa9gb().b[19][0]++, matches.map(function (tag) {
        /* istanbul ignore next */
        cov_2ly4ffa9gb().f[12]++;
        cov_2ly4ffa9gb().s[110]++;
        return tag.substring(1);
      })) :
      /* istanbul ignore next */
      (cov_2ly4ffa9gb().b[19][1]++, []);
    }

    /**
     * Extract URLs from tweet text
     */
  }, {
    key: "extractUrls",
    value: function extractUrls(text) {
      /* istanbul ignore next */
      cov_2ly4ffa9gb().f[13]++;
      var urlRegex =
      /* istanbul ignore next */
      (cov_2ly4ffa9gb().s[111]++, /https?:\/\/\S+/g);
      var matches =
      /* istanbul ignore next */
      (cov_2ly4ffa9gb().s[112]++, text.match(urlRegex));
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[113]++;
      return /* istanbul ignore next */(cov_2ly4ffa9gb().b[20][0]++, matches) ||
      /* istanbul ignore next */
      (cov_2ly4ffa9gb().b[20][1]++, []);
    }

    /**
     * Extract media URLs from tweet attachments
     */
  }, {
    key: "extractMediaUrls",
    value: function extractMediaUrls(tweet) {
      /* istanbul ignore next */
      cov_2ly4ffa9gb().f[14]++;
      cov_2ly4ffa9gb().s[114]++;
      // This would be populated by the includes.media data in a real implementation
      return [];
    }

    /**
     * Update monitoring statistics
     */
  }, {
    key: "updateStats",
    value: function updateStats(username, totalTweets, transferRelevant) {
      /* istanbul ignore next */
      cov_2ly4ffa9gb().f[15]++;
      var stats =
      /* istanbul ignore next */
      (cov_2ly4ffa9gb().s[115]++, this.stats.get(username));
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[116]++;
      if (stats) {
        /* istanbul ignore next */
        cov_2ly4ffa9gb().b[21][0]++;
        cov_2ly4ffa9gb().s[117]++;
        stats.totalTweets += totalTweets;
        /* istanbul ignore next */
        cov_2ly4ffa9gb().s[118]++;
        stats.transferRelevant += transferRelevant;
        /* istanbul ignore next */
        cov_2ly4ffa9gb().s[119]++;
        stats.lastFetch = new Date();
        /* istanbul ignore next */
        cov_2ly4ffa9gb().s[120]++;
        if (transferRelevant > 0) {
          /* istanbul ignore next */
          cov_2ly4ffa9gb().b[22][0]++;
          cov_2ly4ffa9gb().s[121]++;
          stats.highPriority += transferRelevant;
        } else
        /* istanbul ignore next */
        {
          cov_2ly4ffa9gb().b[22][1]++;
        }

        // Update success rate (simple implementation)
        var totalAttempts =
        /* istanbul ignore next */
        (cov_2ly4ffa9gb().s[122]++, stats.totalTweets + stats.errorCount);
        /* istanbul ignore next */
        cov_2ly4ffa9gb().s[123]++;
        stats.successRate = totalAttempts > 0 ?
        /* istanbul ignore next */
        (cov_2ly4ffa9gb().b[23][0]++, stats.totalTweets / totalAttempts) :
        /* istanbul ignore next */
        (cov_2ly4ffa9gb().b[23][1]++, 1.0);
      } else
      /* istanbul ignore next */
      {
        cov_2ly4ffa9gb().b[21][1]++;
      }
    }

    /**
     * Increment error count for account
     */
  }, {
    key: "incrementErrorCount",
    value: function incrementErrorCount(username) {
      /* istanbul ignore next */
      cov_2ly4ffa9gb().f[16]++;
      var stats =
      /* istanbul ignore next */
      (cov_2ly4ffa9gb().s[124]++, this.stats.get(username));
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[125]++;
      if (stats) {
        /* istanbul ignore next */
        cov_2ly4ffa9gb().b[24][0]++;
        cov_2ly4ffa9gb().s[126]++;
        stats.errorCount++;

        // Update success rate
        var totalAttempts =
        /* istanbul ignore next */
        (cov_2ly4ffa9gb().s[127]++, stats.totalTweets + stats.errorCount);
        /* istanbul ignore next */
        cov_2ly4ffa9gb().s[128]++;
        stats.successRate = totalAttempts > 0 ?
        /* istanbul ignore next */
        (cov_2ly4ffa9gb().b[25][0]++, stats.totalTweets / totalAttempts) :
        /* istanbul ignore next */
        (cov_2ly4ffa9gb().b[25][1]++, 0);
      } else
      /* istanbul ignore next */
      {
        cov_2ly4ffa9gb().b[24][1]++;
      }
    }

    /**
     * Get monitoring statistics for all accounts
     */
  }, {
    key: "getMonitoringStats",
    value: function getMonitoringStats() {
      /* istanbul ignore next */
      cov_2ly4ffa9gb().f[17]++;
      var result =
      /* istanbul ignore next */
      (cov_2ly4ffa9gb().s[129]++, {});
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[130]++;
      this.stats.forEach(function (stats, username) {
        /* istanbul ignore next */
        cov_2ly4ffa9gb().f[18]++;
        cov_2ly4ffa9gb().s[131]++;
        result[username] =
        /* istanbul ignore next */
        _objectSpread({}, stats);
      });
      /* istanbul ignore next */
      cov_2ly4ffa9gb().s[132]++;
      return result;
    }

    /**
     * Get rate limit status for the Twitter client
     */
  }, {
    key: "getRateLimitStatus",
    value: function getRateLimitStatus() {
      /* istanbul ignore next */
      cov_2ly4ffa9gb().f[19]++;
      cov_2ly4ffa9gb().s[133]++;
      return this.twitterClient.getRateLimitStatus();
    }
  }]);
}();

// Export singleton instance
// Note: This requires TWITTER_BEARER_TOKEN to be set in environment variables
var twitterClient =
/* istanbul ignore next */
(cov_2ly4ffa9gb().s[134]++, new TwitterClient({
  bearerToken:
  /* istanbul ignore next */
  (cov_2ly4ffa9gb().b[26][0]++, process.env.TWITTER_BEARER_TOKEN) ||
  /* istanbul ignore next */
  (cov_2ly4ffa9gb().b[26][1]++, "")
}));
export var itkMonitor =
/* istanbul ignore next */
(cov_2ly4ffa9gb().s[135]++, new ITKMonitor(twitterClient));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,