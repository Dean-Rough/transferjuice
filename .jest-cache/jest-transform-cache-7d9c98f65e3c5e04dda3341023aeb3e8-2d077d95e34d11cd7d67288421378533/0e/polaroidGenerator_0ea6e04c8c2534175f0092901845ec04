2b957f0ef33b824937ef529cc728470a
/* istanbul ignore next */
function cov_1uvpgc68ga() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/lib/images/polaroidGenerator.ts";
  var hash = "fe081be6dbaa59cf6dd71077a1224a3bcd9f190d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/lib/images/polaroidGenerator.ts",
    statementMap: {
      "0": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 28,
          column: 4
        }
      },
      "1": {
        start: {
          line: 32,
          column: 2
        },
        end: {
          line: 32,
          column: 61
        }
      },
      "2": {
        start: {
          line: 41,
          column: 18
        },
        end: {
          line: 41,
          column: 43
        }
      },
      "3": {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 55,
          column: 4
        }
      },
      "4": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 53,
          column: 7
        }
      },
      "5": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 55
        }
      },
      "6": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 44
        }
      },
      "7": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "8": {
        start: {
          line: 57,
          column: 2
        },
        end: {
          line: 57,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "generatePolaroidFrame",
        decl: {
          start: {
            line: 17,
            column: 22
          },
          end: {
            line: 17,
            column: 43
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "generateBatchPolaroids",
        decl: {
          start: {
            line: 38,
            column: 22
          },
          end: {
            line: 38,
            column: 44
          }
        },
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 40
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        },
        loc: {
          start: {
            line: 44,
            column: 34
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 44
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 10
          },
          end: {
            line: 25,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 10
          },
          end: {
            line: 25,
            column: 26
          }
        }, {
          start: {
            line: 25,
            column: 30
          },
          end: {
            line: 25,
            column: 32
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 29
          }
        }, {
          start: {
            line: 26,
            column: 33
          },
          end: {
            line: 26,
            column: 42
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 24
          }
        }, {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 27,
            column: 37
          }
        }],
        line: 27
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fe081be6dbaa59cf6dd71077a1224a3bcd9f190d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1uvpgc68ga = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1uvpgc68ga();
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/**
 * Polaroid Frame Generator
 * Creates Instagram-style polaroid frames for player images
 */

/**
 * Generate polaroid frame for player image
 */
export
/* istanbul ignore next */
function generatePolaroidFrame(_x) {
  return _generatePolaroidFrame.apply(this, arguments);
}

/**
 * Generate batch of polaroids
 */
/* istanbul ignore next */
function _generatePolaroidFrame() {
  _generatePolaroidFrame = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(options)
  /* istanbul ignore next */
  {
    var params;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_1uvpgc68ga().f[0]++;
          // In production, this would use Canvas API or Sharp to generate actual images
          // For now, return the original image URL with query params for CSS styling
          params = (cov_1uvpgc68ga().s[0]++, new URLSearchParams({
            player: options.playerName,
            club:
            /* istanbul ignore next */
            (cov_1uvpgc68ga().b[0][0]++, options.clubName) ||
            /* istanbul ignore next */
            (cov_1uvpgc68ga().b[0][1]++, ""),
            frame:
            /* istanbul ignore next */
            (cov_1uvpgc68ga().b[1][0]++, options.frameColor) ||
            /* istanbul ignore next */
            (cov_1uvpgc68ga().b[1][1]++, "#FFFFFF"),
            style:
            /* istanbul ignore next */
            (cov_1uvpgc68ga().b[2][0]++, options.style) ||
            /* istanbul ignore next */
            (cov_1uvpgc68ga().b[2][1]++, "vintage")
          })); // In production, this would return a generated image URL
          // For now, we'll use the original image and apply CSS styling
          cov_1uvpgc68ga().s[1]++;
          return _context.a(2, "".concat(options.imageUrl, "?polaroid=").concat(params.toString()));
      }
    }, _callee);
  }));
  return _generatePolaroidFrame.apply(this, arguments);
}
export
/* istanbul ignore next */
function generateBatchPolaroids(_x2) {
  return _generateBatchPolaroids.apply(this, arguments);
}
/* istanbul ignore next */
function _generateBatchPolaroids() {
  _generateBatchPolaroids = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee3(players)
  /* istanbul ignore next */
  {
    var results;
    return _regenerator().w(function (_context3) {
      while (1) switch (_context3.n) {
        case 0:
          cov_1uvpgc68ga().f[1]++;
          results = (cov_1uvpgc68ga().s[2]++, new Map());
          cov_1uvpgc68ga().s[3]++;
          _context3.n = 1;
          return Promise.all(players.map(
          /* istanbul ignore next */
          /*#__PURE__*/function () {
            var _ref = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
            /* istanbul ignore next */
            _callee2(player)
            /* istanbul ignore next */
            {
              var url, _t;
              return _regenerator().w(function (_context2) {
                while (1) switch (_context2.n) {
                  case 0:
                    cov_1uvpgc68ga().f[2]++;
                    cov_1uvpgc68ga().s[4]++;
                    _context2.p = 1;
                    cov_1uvpgc68ga().s[5]++;
                    _context2.n = 2;
                    return generatePolaroidFrame(player);
                  case 2:
                    url = _context2.v;
                    cov_1uvpgc68ga().s[6]++;
                    results.set(player.playerName, url);
                    _context2.n = 4;
                    break;
                  case 3:
                    _context2.p = 3;
                    _t = _context2.v;
                    cov_1uvpgc68ga().s[7]++;
                    console.error(
                    /* istanbul ignore next */
                    "Failed to generate polaroid for ".concat(player.playerName, ":"),
                    /* istanbul ignore next */
                    _t);
                  case 4:
                    return _context2.a(2);
                }
              }, _callee2, null, [[1, 3]]);
            }));
            return function (_x3) {
              return _ref.apply(this, arguments);
            };
          }()));
        case 1:
          cov_1uvpgc68ga().s[8]++;
          return _context3.a(2, results);
      }
    }, _callee3);
  }));
  return _generateBatchPolaroids.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,