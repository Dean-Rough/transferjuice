a32bd3bb7cae0ced4cbb7788b63383d1
/* istanbul ignore next */
function cov_2g9tszq9pm() {
  var path = "/Users/deannewton/Documents/TransferJuice/src/app/api/briefings/generate/route.ts";
  var hash = "6287e7314dd0ec8e3aa917e6839575be21645e41";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/deannewton/Documents/TransferJuice/src/app/api/briefings/generate/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 30
        },
        end: {
          line: 10,
          column: 2
        }
      },
      "1": {
        start: {
          line: 13,
          column: 21
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "2": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 57
        }
      },
      "3": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 49
        }
      },
      "4": {
        start: {
          line: 20,
          column: 22
        },
        end: {
          line: 20,
          column: 61
        }
      },
      "5": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "6": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 16
        }
      },
      "7": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "8": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "9": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 59
        }
      },
      "10": {
        start: {
          line: 32,
          column: 2
        },
        end: {
          line: 32,
          column: 15
        }
      },
      "11": {
        start: {
          line: 36,
          column: 2
        },
        end: {
          line: 155,
          column: 3
        }
      },
      "12": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "13": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 39,
          column: 75
        }
      },
      "14": {
        start: {
          line: 43,
          column: 17
        },
        end: {
          line: 43,
          column: 37
        }
      },
      "15": {
        start: {
          line: 44,
          column: 32
        },
        end: {
          line: 44,
          column: 65
        }
      },
      "16": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 26
        }
      },
      "17": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "18": {
        start: {
          line: 55,
          column: 22
        },
        end: {
          line: 60,
          column: 15
        }
      },
      "19": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 65
        }
      },
      "20": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "21": {
        start: {
          line: 82,
          column: 23
        },
        end: {
          line: 85,
          column: 8
        }
      },
      "22": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 87,
          column: 69
        }
      },
      "23": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 111,
          column: 8
        }
      },
      "24": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 104,
          column: 45
        }
      },
      "25": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 113,
          column: 68
        }
      },
      "26": {
        start: {
          line: 116,
          column: 27
        },
        end: {
          line: 125,
          column: 7
        }
      },
      "27": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 137,
          column: 8
        }
      },
      "28": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "29": {
        start: {
          line: 141,
          column: 6
        },
        end: {
          line: 147,
          column: 8
        }
      },
      "30": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 150,
          column: 69
        }
      },
      "31": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 154,
          column: 6
        }
      },
      "32": {
        start: {
          line: 160,
          column: 2
        },
        end: {
          line: 223,
          column: 3
        }
      },
      "33": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "34": {
        start: {
          line: 163,
          column: 6
        },
        end: {
          line: 163,
          column: 75
        }
      },
      "35": {
        start: {
          line: 186,
          column: 24
        },
        end: {
          line: 208,
          column: 6
        }
      },
      "36": {
        start: {
          line: 187,
          column: 19
        },
        end: {
          line: 187,
          column: 29
        }
      },
      "37": {
        start: {
          line: 188,
          column: 6
        },
        end: {
          line: 188,
          column: 41
        }
      },
      "38": {
        start: {
          line: 190,
          column: 24
        },
        end: {
          line: 195,
          column: 17
        }
      },
      "39": {
        start: {
          line: 197,
          column: 6
        },
        end: {
          line: 207,
          column: 8
        }
      },
      "40": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 216,
          column: 7
        }
      },
      "41": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 218,
          column: 62
        }
      },
      "42": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 222,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 13,
            column: 22
          }
        },
        loc: {
          start: {
            line: 13,
            column: 56
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 35,
            column: 26
          }
        },
        loc: {
          start: {
            line: 35,
            column: 49
          },
          end: {
            line: 156,
            column: 1
          }
        },
        line: 35
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 104,
            column: 17
          }
        },
        loc: {
          start: {
            line: 104,
            column: 23
          },
          end: {
            line: 104,
            column: 45
          }
        },
        line: 104
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 159,
            column: 22
          },
          end: {
            line: 159,
            column: 25
          }
        },
        loc: {
          start: {
            line: 159,
            column: 48
          },
          end: {
            line: 224,
            column: 1
          }
        },
        line: 159
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 186,
            column: 51
          },
          end: {
            line: 186,
            column: 52
          }
        },
        loc: {
          start: {
            line: 186,
            column: 61
          },
          end: {
            line: 208,
            column: 5
          }
        },
        line: 186
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 24,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 24,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 22,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 22,
            column: 17
          }
        }, {
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 22,
            column: 43
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 6
          },
          end: {
            line: 26,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 6
          },
          end: {
            line: 26,
            column: 16
          }
        }, {
          start: {
            line: 26,
            column: 20
          },
          end: {
            line: 26,
            column: 52
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 45
          }
        }, {
          start: {
            line: 38,
            column: 49
          },
          end: {
            line: 38,
            column: 71
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 104,
            column: 23
          },
          end: {
            line: 104,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 23
          },
          end: {
            line: 104,
            column: 39
          }
        }, {
          start: {
            line: 104,
            column: 43
          },
          end: {
            line: 104,
            column: 45
          }
        }],
        line: 104
      },
      "7": {
        loc: {
          start: {
            line: 119,
            column: 10
          },
          end: {
            line: 121,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 120,
            column: 14
          },
          end: {
            line: 120,
            column: 37
          }
        }, {
          start: {
            line: 121,
            column: 14
          },
          end: {
            line: 121,
            column: 29
          }
        }],
        line: 119
      },
      "8": {
        loc: {
          start: {
            line: 123,
            column: 10
          },
          end: {
            line: 123,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 123,
            column: 45
          },
          end: {
            line: 123,
            column: 66
          }
        }, {
          start: {
            line: 123,
            column: 69
          },
          end: {
            line: 123,
            column: 78
          }
        }],
        line: 123
      },
      "9": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 134,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 134,
            column: 53
          },
          end: {
            line: 134,
            column: 65
          }
        }, {
          start: {
            line: 134,
            column: 68
          },
          end: {
            line: 134,
            column: 77
          }
        }],
        line: 134
      },
      "10": {
        loc: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "11": {
        loc: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "12": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 162,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 162,
            column: 45
          }
        }, {
          start: {
            line: 162,
            column: 49
          },
          end: {
            line: 162,
            column: 71
          }
        }],
        line: 162
      },
      "13": {
        loc: {
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 202,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 26
          },
          end: {
            line: 202,
            column: 38
          }
        }, {
          start: {
            line: 202,
            column: 41
          },
          end: {
            line: 202,
            column: 52
          }
        }],
        line: 202
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6287e7314dd0ec8e3aa917e6839575be21645e41"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2g9tszq9pm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2g9tszq9pm();
function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, "_invoke", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError("Generator is already running"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = "next"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError("iterator result is not an object"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i["return"]) && t.call(i), c < 2 && (u = TypeError("The iterator does not provide a '" + o + "' method"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, "GeneratorFunction")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, "toString", function () { return "[object Generator]"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }
function _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, "", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o("next", 0), o("throw", 1), o("return", 2); } }, _regeneratorDefine2(e, r, n, t); }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
import { NextResponse } from "next/server";
import { z } from "zod";
import { generateBriefing } from "@/lib/briefings/generator";
// Request body schema for manual generation
var generateRequestSchema =
/* istanbul ignore next */
(cov_2g9tszq9pm().s[0]++, z.object({
  force: z[
  /* istanbul ignore next */
  "boolean"]().optional()[
  /* istanbul ignore next */
  "default"](false),
  testMode: z[
  /* istanbul ignore next */
  "boolean"]().optional()[
  /* istanbul ignore next */
  "default"](false)
}));

// API authentication check
/* istanbul ignore next */
cov_2g9tszq9pm().s[1]++;
var isAuthorized = function isAuthorized(request) {
  /* istanbul ignore next */
  cov_2g9tszq9pm().f[0]++;
  // TODO: Implement proper API authentication
  // For now, check for a secret header or API key
  var authHeader =
  /* istanbul ignore next */
  (cov_2g9tszq9pm().s[2]++, request.headers.get("Authorization"));
  var apiKey =
  /* istanbul ignore next */
  (cov_2g9tszq9pm().s[3]++, request.headers.get("X-API-Key"));

  // In production, verify against environment variable
  var validApiKey =
  /* istanbul ignore next */
  (cov_2g9tszq9pm().s[4]++, process.env.BRIEFING_GENERATION_API_KEY);
  /* istanbul ignore next */
  cov_2g9tszq9pm().s[5]++;
  if (
  /* istanbul ignore next */
  (cov_2g9tszq9pm().b[1][0]++, validApiKey) &&
  /* istanbul ignore next */
  (cov_2g9tszq9pm().b[1][1]++, apiKey === validApiKey)) {
    /* istanbul ignore next */
    cov_2g9tszq9pm().b[0][0]++;
    cov_2g9tszq9pm().s[6]++;
    return true;
  } else
  /* istanbul ignore next */
  {
    cov_2g9tszq9pm().b[0][1]++;
  }
  cov_2g9tszq9pm().s[7]++;
  if (
  /* istanbul ignore next */
  (cov_2g9tszq9pm().b[3][0]++, authHeader) &&
  /* istanbul ignore next */
  (cov_2g9tszq9pm().b[3][1]++, authHeader.startsWith("Bearer "))) {
    /* istanbul ignore next */
    cov_2g9tszq9pm().b[2][0]++;
    var token =
    /* istanbul ignore next */
    (cov_2g9tszq9pm().s[8]++, authHeader.substring(7));
    // TODO: Verify JWT or other token mechanism
    /* istanbul ignore next */
    cov_2g9tszq9pm().s[9]++;
    return token === process.env.BRIEFING_GENERATION_TOKEN;
  } else
  /* istanbul ignore next */
  {
    cov_2g9tszq9pm().b[2][1]++;
  }
  cov_2g9tszq9pm().s[10]++;
  return false;
};
export
/* istanbul ignore next */
function POST(_x) {
  return _POST.apply(this, arguments);
}

// GET endpoint for checking generation status
/* istanbul ignore next */
function _POST() {
  _POST = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee(request)
  /* istanbul ignore next */
  {
    var body, _ref, force, testMode, now, currentHour, timestamp, briefing, errorDetails, _t, _t2;
    return _regenerator().w(function (_context) {
      while (1) switch (_context.n) {
        case 0:
          cov_2g9tszq9pm().f[1]++;
          cov_2g9tszq9pm().s[11]++;
          _context.p = 1;
          cov_2g9tszq9pm().s[12]++;
          if (!(
          /* istanbul ignore next */
          (cov_2g9tszq9pm().b[5][0]++, process.env.NODE_ENV === "production") &&
          /* istanbul ignore next */
          (cov_2g9tszq9pm().b[5][1]++, !isAuthorized(request)))) {
            _context.n = 2;
            break;
          }
          cov_2g9tszq9pm().b[4][0]++;
          cov_2g9tszq9pm().s[13]++;
          return _context.a(2, NextResponse.json({
            error: "Unauthorized"
          }, {
            status: 401
          }));
        case 2:
          cov_2g9tszq9pm().b[4][1]++;
        case 3:
          cov_2g9tszq9pm().s[14]++;
          _context.n = 4;
          return request.json();
        case 4:
          body = _context.v;
          _ref = (cov_2g9tszq9pm().s[15]++, generateRequestSchema.parse(body)), force = _ref.force, testMode = _ref.testMode; // Check if a briefing was already generated for this hour
          now = (cov_2g9tszq9pm().s[16]++, new Date());
          currentHour = (cov_2g9tszq9pm().s[17]++, new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours()));
          timestamp = (cov_2g9tszq9pm().s[18]++, [currentHour.getFullYear(), String(currentHour.getMonth() + 1).padStart(2, "0"), String(currentHour.getDate()).padStart(2, "0"), String(currentHour.getHours()).padStart(2, "0")].join("-")); // TODO: Check if briefing already exists
          // const existingBriefing = await prisma.briefing.findUnique({
          //   where: { slug: timestamp },
          // });
          // if (existingBriefing && !force) {
          //   return NextResponse.json(
          //     {
          //       error: 'Briefing already exists for this hour',
          //       briefingId: existingBriefing.id,
          //       timestamp,
          //     },
          //     { status: 409 }
          //   );
          // }
          // Generate the briefing
          cov_2g9tszq9pm().s[19]++;
          console.log(
          /* istanbul ignore next */
          "Starting briefing generation for ".concat(timestamp));
          cov_2g9tszq9pm().s[20]++;
          _context.p = 5;
          cov_2g9tszq9pm().s[21]++;
          _context.n = 6;
          return generateBriefing({
            timestamp: timestamp,
            testMode: testMode
          });
        case 6:
          briefing = _context.v;
          cov_2g9tszq9pm().s[22]++;
          console.log(
          /* istanbul ignore next */
          "Briefing generated successfully: ".concat(briefing.id));

          // Return generated briefing metadata
          cov_2g9tszq9pm().s[23]++;
          return _context.a(2, NextResponse.json({
            success: true,
            briefing: {
              id: briefing.id,
              slug: briefing.slug,
              timestamp: briefing.timestamp,
              title: briefing.title,
              metadata: {
                wordCount: briefing.metadata.wordCount,
                estimatedReadTime: briefing.metadata.estimatedReadTime,
                terryScore: briefing.metadata.terryScore,
                sectionsCount: briefing.sections.length,
                playerMentions: briefing.sections.flatMap(function (s) {
                  /* istanbul ignore next */
                  cov_2g9tszq9pm().f[2]++;
                  cov_2g9tszq9pm().s[24]++;
                  return /* istanbul ignore next */(cov_2g9tszq9pm().b[6][0]++, s.playerMentions) ||
                  /* istanbul ignore next */
                  (cov_2g9tszq9pm().b[6][1]++, []);
                }).length
              }
            },
            generatedAt: new Date().toISOString()
          }, {
            status: 201
          }));
        case 7:
          _context.p = 7;
          _t = _context.v;
          cov_2g9tszq9pm().s[25]++;
          console.error("Briefing generation failed:",
          /* istanbul ignore next */
          _t);

          // Log detailed error for monitoring
          errorDetails = (cov_2g9tszq9pm().s[26]++, {
            timestamp: timestamp,
            error:
            /* istanbul ignore next */
            _t instanceof Error ?
            /* istanbul ignore next */
            (cov_2g9tszq9pm().b[7][0]++,
            /* istanbul ignore next */
            _t.message) :
            /* istanbul ignore next */
            (cov_2g9tszq9pm().b[7][1]++, "Unknown error"),
            stack:
            /* istanbul ignore next */
            _t instanceof Error ?
            /* istanbul ignore next */
            (cov_2g9tszq9pm().b[8][0]++,
            /* istanbul ignore next */
            _t.stack) :
            /* istanbul ignore next */
            (cov_2g9tszq9pm().b[8][1]++, undefined),
            testMode: testMode
          }); // TODO: Send to monitoring service
          // await logToMonitoring('briefing.generation.failed', errorDetails);
          cov_2g9tszq9pm().s[27]++;
          return _context.a(2, NextResponse.json({
            error: "Briefing generation failed",
            details: process.env.NODE_ENV === "development" ?
            /* istanbul ignore next */
            (cov_2g9tszq9pm().b[9][0]++, errorDetails) :
            /* istanbul ignore next */
            (cov_2g9tszq9pm().b[9][1]++, undefined)
          }, {
            status: 500
          }));
        case 8:
          _context.p = 8;
          _t2 = _context.v;
          cov_2g9tszq9pm().s[28]++;
          if (!(
          /* istanbul ignore next */
          _t2 instanceof z.ZodError)) {
            _context.n = 9;
            break;
          }
          cov_2g9tszq9pm().b[10][0]++;
          cov_2g9tszq9pm().s[29]++;
          return _context.a(2, NextResponse.json({
            error: "Invalid request body",
            details:
            /* istanbul ignore next */
            _t2.errors
          }, {
            status: 400
          }));
        case 9:
          cov_2g9tszq9pm().b[10][1]++;
        case 10:
          cov_2g9tszq9pm().s[30]++;
          console.error("Unexpected error in briefing generation:",
          /* istanbul ignore next */
          _t2);
          cov_2g9tszq9pm().s[31]++;
          return _context.a(2, NextResponse.json({
            error: "Internal server error"
          }, {
            status: 500
          }));
        case 11:
          return _context.a(2);
      }
    }, _callee, null, [[5, 7], [1, 8]]);
  }));
  return _POST.apply(this, arguments);
}
export
/* istanbul ignore next */
function GET(_x2) {
  return _GET.apply(this, arguments);
}
/* istanbul ignore next */
function _GET() {
  _GET = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function
  /* istanbul ignore next */
  _callee2(request)
  /* istanbul ignore next */
  {
    var mockHistory, _t3;
    return _regenerator().w(function (_context2) {
      while (1) switch (_context2.n) {
        case 0:
          cov_2g9tszq9pm().f[3]++;
          cov_2g9tszq9pm().s[32]++;
          _context2.p = 1;
          cov_2g9tszq9pm().s[33]++;
          if (!(
          /* istanbul ignore next */
          (cov_2g9tszq9pm().b[12][0]++, process.env.NODE_ENV === "production") &&
          /* istanbul ignore next */
          (cov_2g9tszq9pm().b[12][1]++, !isAuthorized(request)))) {
            _context2.n = 2;
            break;
          }
          cov_2g9tszq9pm().b[11][0]++;
          cov_2g9tszq9pm().s[34]++;
          return _context2.a(2, NextResponse.json({
            error: "Unauthorized"
          }, {
            status: 401
          }));
        case 2:
          cov_2g9tszq9pm().b[11][1]++;
        case 3:
          // Get recent generation history
          // TODO: Replace with actual database query
          // const recentGenerations = await prisma.briefing.findMany({
          //   orderBy: { createdAt: 'desc' },
          //   take: 24, // Last 24 hours
          //   select: {
          //     id: true,
          //     slug: true,
          //     timestamp: true,
          //     createdAt: true,
          //     status: true,
          //     metadata: {
          //       select: {
          //         terryScore: true,
          //         wordCount: true,
          //       },
          //     },
          //   },
          // });
          mockHistory = (cov_2g9tszq9pm().s[35]++, Array.from({
            length: 24
          }, function (_, i) {
            /* istanbul ignore next */
            cov_2g9tszq9pm().f[4]++;
            var date =
            /* istanbul ignore next */
            (cov_2g9tszq9pm().s[36]++, new Date());
            /* istanbul ignore next */
            cov_2g9tszq9pm().s[37]++;
            date.setHours(date.getHours() - i);
            var timestamp =
            /* istanbul ignore next */
            (cov_2g9tszq9pm().s[38]++, [date.getFullYear(), String(date.getMonth() + 1).padStart(2, "0"), String(date.getDate()).padStart(2, "0"), String(date.getHours()).padStart(2, "0")].join("-"));
            /* istanbul ignore next */
            cov_2g9tszq9pm().s[39]++;
            return {
              id:
              /* istanbul ignore next */
              "briefing-".concat(timestamp),
              slug: timestamp,
              timestamp: date.toISOString(),
              createdAt: date.toISOString(),
              status: i === 0 ?
              /* istanbul ignore next */
              (cov_2g9tszq9pm().b[13][0]++, "generating") :
              /* istanbul ignore next */
              (cov_2g9tszq9pm().b[13][1]++, "published"),
              metadata: {
                terryScore: 85 + Math.floor(Math.random() * 15),
                wordCount: 1200 + Math.floor(Math.random() * 300)
              }
            };
          }));
          cov_2g9tszq9pm().s[40]++;
          return _context2.a(2, NextResponse.json({
            generationHistory: mockHistory,
            nextGenerationTime: new Date(new Date().setHours(new Date().getHours() + 1, 0, 0, 0)).toISOString(),
            systemStatus: "operational"
          }));
        case 4:
          _context2.p = 4;
          _t3 = _context2.v;
          cov_2g9tszq9pm().s[41]++;
          console.error("Error checking generation status:",
          /* istanbul ignore next */
          _t3);
          cov_2g9tszq9pm().s[42]++;
          return _context2.a(2, NextResponse.json({
            error: "Internal server error"
          }, {
            status: 500
          }));
      }
    }, _callee2, null, [[1, 4]]);
  }));
  return _GET.apply(this, arguments);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,