{"version":3,"names":["cov_692naicbe","actualCoverage","_regenerator","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","NextResponse","z","archiveQuerySchema","s","object","page","coerce","number","positive","limit","min","max","tags","string","optional","leagues","dateRange","search","generateMockBriefings","filters","total","offset","briefings","now","Date","b","hoursAgo","briefingDate","getTime","timestamp","getFullYear","String","getMonth","padStart","getDate","getHours","join","titles","funnyTitle","push","id","concat","slug","title","day","toLocaleDateString","weekday","hour","month","year","funny","full","summary","metaDescription","sections","polaroids","clubs","players","sources","metadata","estimatedReadTime","wordCount","terryScore","shareCount","twitter","Math","floor","random","facebook","whatsapp","email","viewCount","sharing","url","shortUrl","description","openGraph","image","status","publishedAt","createdAt","updatedAt","pagination","hasMore","GET","_x","_GET","_callee","request","_ref","searchParams","query","archive","_t","_context","URL","parse","get","json","headers","ZodError","error","details","errors","console","getDateRangeStart","range"],"sources":["route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { z } from \"zod\";\nimport { Briefing, BriefingArchive } from \"@/lib/types/briefing\";\n\n// Query parameters schema\nconst archiveQuerySchema = z.object({\n  page: z.coerce.number().int().positive().default(1),\n  limit: z.coerce.number().int().min(1).max(50).default(20),\n  tags: z.string().optional(),\n  leagues: z.string().optional(),\n  dateRange: z.enum([\"week\", \"month\", \"quarter\", \"year\", \"all\"]).optional(),\n  search: z.string().optional(),\n});\n\n// Generate mock briefings for archive\nconst generateMockBriefings = (\n  page: number,\n  limit: number,\n  filters?: {\n    tags?: string;\n    leagues?: string;\n    dateRange?: string;\n    search?: string;\n  }\n): BriefingArchive => {\n  const total = 247; // Mock total count\n  const offset = (page - 1) * limit;\n\n  // Generate briefings for the requested page\n  const briefings: Briefing[] = [];\n  const now = new Date();\n\n  for (let i = 0; i < limit && offset + i < total; i++) {\n    const hoursAgo = offset + i;\n    const briefingDate = new Date(now.getTime() - hoursAgo * 60 * 60 * 1000);\n\n    const timestamp = [\n      briefingDate.getFullYear(),\n      String(briefingDate.getMonth() + 1).padStart(2, \"0\"),\n      String(briefingDate.getDate()).padStart(2, \"0\"),\n      String(briefingDate.getHours()).padStart(2, \"0\"),\n    ].join(\"-\");\n\n    // Mock different titles for variety\n    const titles = [\n      \"Arsenal's Â£100m Gamble on a Man Who Can't Tie His Boots\",\n      \"Chelsea's Latest Striker Reportedly Allergic to Goals\",\n      \"Manchester United's Transfer Strategy: A Masterclass in Chaos\",\n      \"Liverpool's Scouting Team Discovers Football Exists Outside England\",\n      \"Real Madrid's Galactico Policy Now Includes Literal Galactic Beings\",\n    ];\n\n    const funnyTitle = titles[i % titles.length];\n\n    briefings.push({\n      id: `briefing-${timestamp}`,\n      slug: timestamp,\n      timestamp: briefingDate,\n      title: {\n        day: briefingDate.toLocaleDateString(\"en-US\", { weekday: \"long\" }),\n        hour: `${briefingDate.getHours()}:00`,\n        month: briefingDate.toLocaleDateString(\"en-US\", { month: \"short\" }),\n        year: String(briefingDate.getFullYear()),\n        funny: funnyTitle,\n        full: `${briefingDate.toLocaleDateString(\"en-US\", { weekday: \"long\" })} ${briefingDate.getHours()}:00 Briefing ${briefingDate.toLocaleDateString(\"en-US\", { month: \"short\" })} ${briefingDate.getFullYear()} - ${funnyTitle}`,\n      },\n      summary:\n        \"The Terry brings you the latest transfer chaos, questionable scouting decisions, and football's most ridiculous rumors.\",\n      metaDescription:\n        \"Transfer news, rumors, and Terry's ascerbic commentary on football's silly season.\",\n      sections: [], // Not needed for archive view\n      polaroids: [],\n      tags: {\n        clubs: [\"Arsenal\", \"Chelsea\", \"Manchester United\", \"Liverpool\"],\n        players: [\"Mystery Player\", \"Unknown Striker\"],\n        leagues: [\"Premier League\", \"La Liga\"],\n        sources: [\"FabrizioRomano\", \"David_Ornstein\"],\n      },\n      metadata: {\n        estimatedReadTime: 5 + (i % 3),\n        wordCount: 1200 + i * 47,\n        terryScore: 85 + (i % 15),\n        shareCount: {\n          twitter: Math.floor(Math.random() * 100),\n          facebook: Math.floor(Math.random() * 50),\n          whatsapp: Math.floor(Math.random() * 30),\n          email: Math.floor(Math.random() * 20),\n        },\n        viewCount: Math.floor(Math.random() * 1000),\n      },\n      sharing: {\n        url: `https://transferjuice.com/briefings/${timestamp}`,\n        shortUrl: `https://tjuice.co/b/${timestamp}`,\n        title: funnyTitle,\n        description: \"The Terry's latest transfer briefing\",\n        shareCount: {\n          twitter: 0,\n          facebook: 0,\n          whatsapp: 0,\n          email: 0,\n        },\n      },\n      openGraph: {\n        title: `${funnyTitle} - Transfer Juice`,\n        description: \"The Terry's latest transfer briefing\",\n        image: \"https://transferjuice.com/og/briefing-default.jpg\",\n        url: `https://transferjuice.com/briefings/${timestamp}`,\n      },\n      status: \"published\",\n      publishedAt: briefingDate,\n      createdAt: briefingDate,\n      updatedAt: briefingDate,\n    });\n  }\n\n  return {\n    briefings,\n    pagination: {\n      page,\n      limit,\n      total,\n      hasMore: offset + limit < total,\n    },\n    filters: {\n      tags: filters?.tags,\n      leagues: filters?.leagues,\n      dateRange: filters?.dateRange,\n      search: filters?.search,\n    },\n  };\n};\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n\n    // Parse and validate query parameters\n    const query = archiveQuerySchema.parse({\n      page: searchParams.get(\"page\"),\n      limit: searchParams.get(\"limit\"),\n      tags: searchParams.get(\"tags\"),\n      leagues: searchParams.get(\"leagues\"),\n      dateRange: searchParams.get(\"dateRange\"),\n      search: searchParams.get(\"search\"),\n    });\n\n    // TODO: Replace with actual database query\n    // const where = {\n    //   status: 'published',\n    //   ...(query.tags && {\n    //     tags: {\n    //       hasSome: query.tags.split(','),\n    //     },\n    //   }),\n    //   ...(query.leagues && {\n    //     leagues: {\n    //       hasSome: query.leagues.split(','),\n    //     },\n    //   }),\n    //   ...(query.search && {\n    //     OR: [\n    //       { title: { contains: query.search, mode: 'insensitive' } },\n    //       { summary: { contains: query.search, mode: 'insensitive' } },\n    //     ],\n    //   }),\n    //   ...(query.dateRange && {\n    //     publishedAt: {\n    //       gte: getDateRangeStart(query.dateRange),\n    //     },\n    //   }),\n    // };\n\n    // const [briefings, total] = await Promise.all([\n    //   prisma.briefing.findMany({\n    //     where,\n    //     orderBy: { publishedAt: 'desc' },\n    //     skip: (query.page - 1) * query.limit,\n    //     take: query.limit,\n    //   }),\n    //   prisma.briefing.count({ where }),\n    // ]);\n\n    const archive = generateMockBriefings(query.page, query.limit, {\n      tags: query.tags,\n      leagues: query.leagues,\n      dateRange: query.dateRange,\n      search: query.search,\n    });\n\n    return NextResponse.json(\n      { archive },\n      {\n        status: 200,\n        headers: {\n          \"Cache-Control\": \"public, s-maxage=300, stale-while-revalidate=600\",\n        },\n      }\n    );\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          error: \"Invalid query parameters\",\n          details: error.errors,\n        },\n        { status: 400 }\n      );\n    }\n\n    console.error(\"Error fetching briefing archive:\", error);\n    return NextResponse.json(\n      { error: \"Internal server error\" },\n      { status: 500 }\n    );\n  }\n}\n\n// Helper function to calculate date range start\nfunction getDateRangeStart(range: string): Date {\n  const now = new Date();\n  switch (range) {\n    case \"week\":\n      return new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n    case \"month\":\n      return new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n    case \"quarter\":\n      return new Date(now.getTime() - 90 * 24 * 60 * 60 * 1000);\n    case \"year\":\n      return new Date(now.getTime() - 365 * 24 * 60 * 60 * 1000);\n    default:\n      return new Date(0); // All time\n  }\n}\n"],"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","ignoreList":[]}